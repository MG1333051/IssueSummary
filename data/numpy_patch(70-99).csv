number,ncommit,hash,author,date,subject,nfiles,ninsertions,ndeletions,file,changes,insertions,deletions,locations,roots
3914,1,83fb19e, Marten van Kerkwijk <mhvk@astro.utoronto.ca>," Sun, 13 Oct 2013 22:39:40 -0400","ct: [PATCH] Ensure masked arrays are treated correctly for isclose(..,..,equal_nan=True)",2,8,0,numpy/core/numeric.py,[u'3'],2,1," -2216,7 +2216,8 ;","def within_tol(x, y, atol, rtol);"
3914,1,83fb19e, Marten van Kerkwijk <mhvk@astro.utoronto.ca>," Sun, 13 Oct 2013 22:39:40 -0400","ct: [PATCH] Ensure masked arrays are treated correctly for isclose(..,..,equal_nan=True)",2,8,0,numpy/core/tests/test_numeric.py,[u'6'],6,0," -1454,6 +1454,12 ;",def test_masked_arrays(self);
3913,2,53cafa0, Bernhard Spinnler <Bernhard.Spinnler@gmx.net>," Sun, 13 Oct 2013 21:35:30 +0200",ct: [PATCH 1/2] DOC: fixed correlate docstring.Replaced correlation formula with corrected version that matches thenumpy implementation. Added comment on possible further differentdefinitions of correlation. Added examples.,1,34,7,numpy/core/numeric.py,[u'41'],34,7," -820,13 +820,8 ; -841,10 +836,30 ; -854,6 +869,18 ;","def correlate(a, v, mode='valid', old_behavior=False);def correlate(a, v, mode='valid', old_behavior=False);def correlate(a, v, mode='valid', old_behavior=False);"
3913,2,f6492d9, Bernhard Spinnler <Bernhard.Spinnler@gmx.net>," Tue, 15 Oct 2013 21:21:33 +0200",ct: [PATCH 2/2] DOC: replaced typeset formulas by pure ASCII equivalents.Replaced typeset formulas by pure ASCII equivalents. Should now beeasier to read in source files.,1,12,13,numpy/core/numeric.py,[u'25'],12,13," -820,8 +820,13 ; -847,18 +852,12 ; -876,7 +875,7 ;","def correlate(a, v, mode='valid', old_behavior=False);def correlate(a, v, mode='valid', old_behavior=False);def correlate(a, v, mode='valid', old_behavior=False);"
3911,1,62b930c, Pauli Virtanen <pav@iki.fi>," Sun, 13 Oct 2013 21:50:21 +0300",ct: [PATCH] MAINT: update runtests.py from scipyThe additional chdir before starting the test allows tests that launchsubprocesses to run.Fixes gh-3909,1,112,28,runtests.py,[u'140'],48,12," -10,6 +10,7 ; -23,9 +24,17 ; -36,8 +45,12 ; -68,8 +81,10 ; -81,26 +96,40 ; -128,11 +157,28 ; -150,42 +196,64 ; -193,5 +261,21 ;",";;;def main(argv);def main(argv);def test(*a, **kw);def build_project(args);def build_project(args);"
3910,1,6dfe864, Pauli Virtanen <pav@iki.fi>," Sun, 13 Oct 2013 21:50:21 +0300",ct: [PATCH] MAINT: update runtests.py from scipyThe additional chdir before starting the test allows tests that launchsubprocesses to run.Fixes gh-3909,1,112,28,runtests.py,[u'140'],48,12," -10,6 +10,7 ; -23,9 +24,17 ; -36,8 +45,12 ; -68,8 +81,10 ; -81,26 +96,40 ; -128,11 +157,28 ; -150,42 +196,64 ; -193,5 +261,21 ;",";;;def main(argv);def main(argv);def test(*a, **kw);def build_project(args);def build_project(args);"
3908,2,eea1a9c, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 13 Oct 2013 12:34:43 +0200",ct: [PATCH 1/2] ENH: add extended axis and keepdims support to median and percentile,2,231,69,numpy/lib/function_base.py,[u'165'],23,11," -13,6 +13,7 ; -2694,7 +2695,7 ; -2704,9 +2705,10 ; -2719,6 +2721,13 ; -2769,55 +2778,79 ; -2829,9 +2862,10 ; -2857,6 +2891,12 ; -2913,8 +2953,22 ; -2922,10 +2976,17 ;",";def msort(a);def median(a, axis=None, out=None, overwrite_input=False);def median(a, axis=None, out=None, overwrite_input=False);def median(a, axis=None, out=None, overwrite_input=False);def percentile(a, q, axis=None, out=None;def percentile(a, q, axis=None, out=None;def percentile(a, q, axis=None, out=None;def percentile(a, q, axis=None, out=None;"
3908,2,eea1a9c, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 13 Oct 2013 12:34:43 +0200",ct: [PATCH 1/2] ENH: add extended axis and keepdims support to median and percentile,2,231,69,numpy/lib/tests/test_function_base.py,[u'135'],24,4," -1688,6 +1688,8 ; -1779,6 +1781,65 ; -1786,19 +1847,19 ; -1858,19 +1919,59 ;",def test_exception(self);def test_percentile_overwrite(self);def test_basic(self);def test_array_like(self);
3908,2,7d53c81, Julian Taylor <jtaylor.debian@googlemail.com>," Wed, 12 Mar 2014 20:44:14 +0100",ct: [PATCH 2/2] MAINT: revert back to separate median implementationMerging median and percentile make would break astropy and quantities aswe don't call mean anymore. These packages rely on overriding mean toadd their own median behavior.,2,126,66,numpy/lib/function_base.py,[u'178'],21,13," -2695,6 +2695,66 ; -2777,76 +2837,62 ;","def msort(a);def median(a, axis=None, out=None, overwrite_input=False, keepdims=False);"
3908,2,7d53c81, Julian Taylor <jtaylor.debian@googlemail.com>," Wed, 12 Mar 2014 20:44:14 +0100",ct: [PATCH 2/2] MAINT: revert back to separate median implementationMerging median and percentile make would break astropy and quantities aswe don't call mean anymore. These packages rely on overriding mean toadd their own median behavior.,2,126,66,numpy/lib/tests/test_function_base.py,[u'14'],3,0," -1919,6 +1919,20 ;",def test_array_like(self);
3907,1,3c6b6ba, Marten van Kerkwijk <mhvk@astro.utoronto.ca>," Sun, 13 Oct 2013 00:29:11 -0400",ct: [PATCH] BUG Allow subclasses in MaskedArray ufuncs -- for non-ndarray _data,3,147,104,numpy/ma/core.py,[u'188'],18,19," -880,14 +880,10 ; -928,8 +924,12 ; -940,12 +940,6 ; -953,28 +947,26 ; -982,24 +974,30 ; -1010,31 +1008,28 ; -1074,19 +1069,15 ; -1097,18 +1088,23 ; -1361,7 +1357,7 ; -3756,34 +3752,38 ; -3798,7 +3798,7 ; -3808,7 +3808,7 ; -3818,7 +3818,7 ;","def __call__ (self, a, *args, **kwargs);def __init__ (self, mbfunc, fillx=0, filly=0);def __call__ (self, a, b, *args, **kwargs);def __call__ (self, a, b, *args, **kwargs);def reduce(self, target, axis=0, dtype=None);def outer (self, a, b);def __init__ (self, dbfunc, domain, fillx=0, filly=0);def __call__(self, a, b, *args, **kwargs);def getmaskarray(arr);def __ne__(self, other);def __truediv__(self, other);def __floordiv__(self, other);def __pow__(self, other);"
3907,1,3c6b6ba, Marten van Kerkwijk <mhvk@astro.utoronto.ca>," Sun, 13 Oct 2013 00:29:11 -0400",ct: [PATCH] BUG Allow subclasses in MaskedArray ufuncs -- for non-ndarray _data,3,147,104,numpy/ma/tests/test_core.py,[u'23'],5,0," -1754,6 +1754,29 ;","def __rmul__(self, other);"
3907,1,3c6b6ba, Marten van Kerkwijk <mhvk@astro.utoronto.ca>," Sun, 13 Oct 2013 00:29:11 -0400",ct: [PATCH] BUG Allow subclasses in MaskedArray ufuncs -- for non-ndarray _data,3,147,104,numpy/ma/tests/test_subclassing.py,[u'40'],6,2," -24,18 +24,27 ; -47,11 +56,6 ; -82,8 +86,11 ; -150,6 +157,13 ; -218,6 +232,12 ;","class SubArray(np.ndarray);def __new__(cls, data, info={}, mask=nomask);def _get_series(self);def flat(self, value);def test_attributepropagation(self);"
3906,3,9f1c178, Marten van Kerkwijk <mhvk@astro.utoronto.ca>," Sat, 12 Oct 2013 22:02:19 -0400",ct: [PATCH 1/3] Convert docstrings to comments for nose; PEP8 cleanup (some tests activated),6,667,748,numpy/ma/tests/test_core.py,[u'802'],16,21," -15,7 +15,7 ; -26,11 +26,11 ; -43,9 +43,8 ; -55,9 +54,8 ; -68,7 +66,7 ; -85,9 +83,8 ; -107,7 +104,7 ; -116,7 +113,7 ; -137,23 +134,23 ; -161,7 +158,7 ; -172,7 +169,7 ; -194,7 +191,7 ; -203,7 +200,7 ; -216,7 +213,7 ; -228,17 +225,16 ; -278,9 +274,8 ; -297,7 +292,8 ; -341,7 +337,6 ; -359,9 +354,8 ; -371,7 +365,7 ; -379,8 +373,7 ; -388,7 +381,7 ; -396,25 +389,23 ; -433,9 +424,8 ; -462,9 +452,8 ; -477,18 +466,16 ; -501,7 +488,7 ; -514,9 +501,8 ; -528,18 +514,16 ; -547,9 +531,8 ; -557,9 +540,8 ; -593,10 +575,8 ; -610,9 +590,10 ; -626,16 +607,17 ; -647,14 +629,14 ; -672,8 +654,8 ; -707,7 +689,6 ; -726,24 +707,21 ; -752,18 +730,16 ; -774,15 +750,13 ; -791,9 +765,8 ; -820,9 +793,8 ; -841,14 +813,15 ; -865,7 +838,6 ; -884,15 +856,14 ; -914,9 +885,8 ; -937,9 +907,8 ; -959,9 +928,8 ; -996,9 +964,8 ; -1033,11 +1000,11 ; -1050,9 +1017,8 ; -1063,7 +1029,7 ; -1072,9 +1038,9 ; -1082,9 +1048,8 ; -1093,7 +1058,6 ; -1116,9 +1080,8 ; -1133,9 +1096,8 ; -1150,25 +1112,24 ; -1177,9 +1138,8 ; -1194,12 +1154,12 ; -1212,7 +1172,7 ; -1269,7 +1229,7 ; -1280,8 +1240,8 ; -1293,9 +1253,8 ; -1306,17 +1265,15 ; -1327,12 +1284,12 ; -1348,9 +1305,8 ; -1381,26 +1337,27 ; -1421,10 +1378,9 ; -1446,15 +1402,14 ; -1474,9 +1429,8 ; -1497,12 +1451,11 ; -1510,14 +1463,14 ; -1530,7 +1483,7 ; -1544,25 +1497,25 ; -1571,11 +1524,11 ; -1585,13 +1538,13 ; -1601,7 +1554,7 ; -1633,7 +1586,7 ; -1642,7 +1595,7 ; -1653,17 +1606,17 ; -1683,10 +1636,10 ; -1697,7 +1650,7 ; -1712,7 +1665,7 ; -1724,7 +1677,7 ; -1732,7 +1685,7 ; -1744,7 +1697,7 ; -1752,7 +1705,7 ; -1764,7 +1717,7 ; -1775,7 +1728,7 ; -1783,7 +1736,7 ; -1805,18 +1758,20 ; -1837,9 +1792,8 ; -1861,9 +1815,8 ; -1885,9 +1838,8 ; -1909,9 +1861,8 ; -1922,7 +1873,6 ; -1937,7 +1887,6 ; -1952,7 +1901,6 ; -1967,13 +1915,13 ; -2004,9 +1952,8 ; -2022,9 +1969,8 ; -2043,66 +1989,60 ; -2119,9 +2059,8 ; -2143,15 +2082,14 ; -2161,9 +2099,8 ; -2182,7 +2119,8 ; -2192,9 +2130,8 ; -2210,9 +2147,8 ; -2226,9 +2162,8 ; -2258,9 +2193,8 ; -2268,7 +2202,6 ; -2299,19 +2232,18 ; -2323,9 +2255,8 ; -2334,9 +2265,8 ; -2368,9 +2298,8 ; -2409,35 +2338,36 ; -2446,21 +2376,20 ; -2470,9 +2399,8 ; -2483,10 +2411,10 ; -2495,7 +2423,7 ; -2503,7 +2431,7 ; -2515,16 +2443,15 ; -2534,8 +2461,8 ; -2553,21 +2480,21 ; -2580,8 +2507,8 ; -2590,17 +2517,16 ; -2617,9 +2543,8 ; -2630,13 +2555,11 ; -2666,9 +2589,8 ; -2680,9 +2602,8 ; -2702,9 +2623,8 ; -2717,39 +2637,37 ; -2760,16 +2678,18 ; -2799,14 +2719,13 ; -2819,9 +2738,8 ; -2834,9 +2752,8 ; -2855,13 +2772,13 ; -2891,39 +2808,36 ; -2949,27 +2863,28 ; -2981,15 +2896,22 ; -3013,9 +2935,8 ; -3032,13 +2953,11 ; -3061,16 +2980,15 ; -3085,7 +3003,7 ; -3093,29 +3011,27 ; -3125,7 +3041,6 ; -3178,16 +3093,15 ; -3209,9 +3123,8 ; -3232,7 +3145,6 ; -3259,9 +3171,8 ; -3288,9 +3199,8 ; -3321,7 +3231,6 ; -3357,9 +3266,8 ; -3373,12 +3281,11 ; -3399,8 +3306,8 ; -3433,7 +3340,7 ; -3472,9 +3379,9 ; -3484,9 +3391,9 ; -3504,12 +3411,12 ; -3550,8 +3457,8 ; -3561,7 +3468,7 ; -3569,14 +3476,13 ; -3584,7 +3490,7 ; -3605,7 +3511,6 ; -3622,7 +3527,7 ; -3631,6 +3536,7 ;",";;def setUp (self);def test_basicattributes(self);def test_basic0d(self);def test_basic1d(self);def test_basic2d(self);def test_concatenate_basic(self);def test_concatenate_alongaxis(self);def test_creation_ndmin_from_maskedarray(self);def test_creation_maskcreation(self);def test_asarray(self);def test_fix_invalid(self);def test_maskedelement(self);def test_set_element_as_object(self);def test_indexing(self);def test_copy(self);def test_copy(self);def test_deepcopy(self);def test_pickling(self);def test_pickling_subbaseclass(self);def test_pickling_maskedconstant(self);def test_pickling_wstructured(self);def test_topython(self);def test_oddfeatures_1(self);def test_oddfeatures_2(self);def test_filled_w_flexible_dtype(self);def test_filled_w_mvoid(self);def test_filled_w_nested_dtype(self);def test_optinfo_propagation(self);def test_fancy_printoptions(self);def test_flatten_structured_array(self);def test_void0d(self);def test_mvoid_getitem(self);def test_mvoid_print(self);def setUp (self);def test_basic_arithmetic (self);def test_divide_on_different_shapes(self);def test_masked_singleton_arithmetic(self);def test_arithmetic_with_masked_singleton(self);def test_scalar_arithmetic(self);def test_basic_ufuncs (self);def test_count_func (self);def test_minmax_func (self);def test_minimummaximum_func(self);def test_minmax_funcs_with_output(self);def test_minmax_methods(self);def test_addsumprod (self);def test_binops_d2D(self);def test_domained_binops_d2D(self);def test_noshrinking(self);def test_mod(self);def test_TakeTransposeInnerOuter(self);def test_TakeTransposeInnerOuter(self);def test_imag_real(self);def test_methods_with_output(self);def test_eq_on_structured(self);def test_ne_on_structured(self);def test_eq_w_scalar(self);def test_numpyarithmetics(self);def test_keepmask(self);def test_hardmask(self);def test_hardmask_again(self);def test_hardmask_oncemore_yay(self);def test_smallmask(self);def test_flat(self);def test_check_on_scalar(self);def test_check_on_fields(self);def test_fillvalue_conversion(self);def test_fillvalue(self);def test_fillvalue_exotic_dtype(self);def test_extremum_fill_value(self);def test_fillvalue_individual_fields(self);def test_fillvalue_implicit_structured_array(self);def test_fillvalue_as_arguments(self);def test_fillvalue_in_view(self);def test_fillvalue_in_view(self);def tearDown(self);def test_testUfuncRegression(self);def test_reduce(self);def test_minmax(self);def __rmul__(self, other);def setUp(self);def test_inplace_addition_scalar(self);def test_inplace_addition_array(self);def test_inplace_subtraction_scalar(self);def test_inplace_subtraction_array(self);def test_inplace_multiplication_scalar(self);def test_inplace_multiplication_array(self);def test_inplace_division_scalar_int(self);def test_inplace_division_scalar_float(self);def test_inplace_division_misc(self);def test_datafriendly_add(self);def test_datafriendly_sub(self);def test_datafriendly_mul(self);def test_datafriendly_div(self);def test_datafriendly_pow(self);def test_datafriendly_add_arrays(self);def test_datafriendly_sub_arrays(self);def test_datafriendly_mul_arrays(self);def setUp(self);def test_generic_methods(self);def test_allclose(self);def test_allany_oddities(self);def test_argmax_argmin(self);def test_clip(self);def test_compress(self);def test_compress(self);def test_compressed(self);def test_empty(self);def test_put(self);def test_put_hardmask(self);def test_putmask(self);def test_ravel(self);def test_reshape(self);def test_sort(self);def test_sort_2d(self);def test_squeeze(self);def test_swapaxes(self);def test_take(self);def test_take_masked_indices(self);def test_take_masked_indices(self);def test_take_masked_indices(self);def test_tolist(self);def test_tolist(self);def test_toflex(self);def test_toflex(self);def test_fromflex(self);def test_arraymethod(self);def setUp(self);def test_cumsumprod(self);def test_cumsumprod_with_output(self);def test_ptp(self);def test_varstd(self);def test_varstd_specialcases(self);def test_varstd_ddof(self);def test_diag(self);def test_axis_methods_nomask(self);def setUp(self);def test_masked_equal_fill_value(self);def test_masked_where_shape_constraint(self);def test_round(self);def test_round_with_output(self);def test_power(self);def test_power_w_broadcasting(self);def test_power_w_broadcasting(self);def test_where(self);def test_where_with_masked_condition(self);def test_choose(self);def test_choose_with_out(self);def test_reshape(self);def test_make_mask_descr(self);def test_make_mask(self);def test_mask_or(self);def test_flatten_mask(self);def test_compress(self);def test_set_records_masks(self);def test_mask_element(self);def test_getmaskarray(self);def test_view(self);def test_element_len(self);def setUp(self);def test_view_to_nothing(self);def test_view_to_simple_dtype(self);def test_view_to_flexible_dtype(self);def test_view_to_subdtype(self);def test_view_to_dtype_and_type(self);"
3906,3,9f1c178, Marten van Kerkwijk <mhvk@astro.utoronto.ca>," Sat, 12 Oct 2013 22:02:19 -0400",ct: [PATCH 1/3] Convert docstrings to comments for nose; PEP8 cleanup (some tests activated),6,667,748,numpy/ma/tests/test_extras.py,[u'130'],3,3," -17,10 +17,11 ; -33,7 +34,7 ; -52,18 +53,18 ; -83,7 +84,7 ; -92,7 +93,7 ; -100,7 +101,7 ; -116,9 +117,9 ; -137,7 +138,7 ; -171,7 +172,7 ; -195,7 +196,7 ; -206,7 +207,7 ; -247,12 +248,10 ; -263,14 +262,15 ; -283,12 +283,10 ; -322,7 +320,7 ; -346,9 +344,9 ; -368,7 +366,7 ; -400,7 +398,7 ; -471,17 +469,19 ; -495,7 +495,7 ; -511,7 +511,7 ; -520,7 +520,7 ; -537,7 +537,7 ; -545,7 +545,7 ; -553,7 +553,7 ; -577,7 +577,7 ; -604,12 +604,12 ; -618,7 +618,7 ; -627,7 +627,7 ; -652,7 +652,7 ; -665,7 +665,7 ; -707,7 +707,7 ; -716,7 +716,7 ; -724,22 +724,22 ; -747,7 +747,7 ; -756,7 +756,7 ; -771,7 +771,7 ; -786,7 +786,7 ; -802,7 +802,7 ; -818,7 +818,7 ; -826,7 +826,7 ; -852,7 +852,7 ; -866,7 +866,7 ; -878,7 +878,7 ; -888,7 +888,7 ; -899,7 +899,7 ; -908,7 +908,7 ;",;;def test_masked_all(self);def test_masked_all_like(self);def test_clump_masked(self);def test_clump_unmasked(self);def test_flatnotmasked_contiguous(self);def test_testAverage1(self);def test_testAverage2(self);def test_testAverage3(self);def test_complex(self);def test_complex(self);def test_1d(self);def test_2d(self);def test_edges(self);def test_contiguous(self);def test_compress2d(self);def test_mask_rowcols(self);def test_dot(self);def test_basic(self);def test_2d(self);def test_2d_waxis(self);def setUp(self);def test_1d_wo_missing(self);def test_2d_wo_missing(self);def test_1d_w_missing(self);def setUp(self);def test_1d_wo_missing(self);def test_2d_wo_missing(self);def test_1d_w_missing(self);def test_2d_w_missing(self);def test_polyfit(self);def test_unique_onlist(self);def test_unique_onmaskedarray(self);def test_unique_allmasked(self);def test_ediff1d(self);def test_ediff1d_tobegin(self);def test_ediff1d_toend(self);def test_ediff1d_tobegin_toend(self);def test_ediff1d_ndarray(self);def test_intersect1d(self);def test_setxor1d(self);def test_in1d(self);def test_in1d_invert(self);def test_union1d(self);def test_setdiff1d(self);def test_setdiff1d_char_array(self);
3906,3,9f1c178, Marten van Kerkwijk <mhvk@astro.utoronto.ca>," Sat, 12 Oct 2013 22:02:19 -0400",ct: [PATCH 1/3] Convert docstrings to comments for nose; PEP8 cleanup (some tests activated),6,667,748,numpy/ma/tests/test_mrecords.py,[u'130'],3,3," -7,38 +7,36 ; -48,7 +46,7 ; -60,7 +58,7 ; -92,14 +90,15 ; -115,7 +114,11 ; -125,7 +128,11 ; -148,7 +155,7 ; -161,7 +168,7 ; -177,7 +184,7 ; -191,12 +198,13 ; -207,15 +215,16 ; -238,9 +247,9 ; -268,9 +277,8 ; -285,9 +293,9 ; -296,9 +304,9 ; -307,11 +315,13 ; -323,16 +333,14 ; -342,12 +350,12 ; -356,20 +364,18 ; -377,7 +383,7 ; -389,15 +395,15 ; -420,10 +426,8 ; -449,7 +453,7 ; -470,7 +474,7 ; -492,7 +496,7 ; -501,14 +505,12 ;",;def setup(self);def test_byview(self);def test_get(self);def test_set_fields(self);def test_set_fields(self);def test_set_fields(self);def test_set_fields_mask(self);def test_set_mask(self);def test_set_mask_fromarray(self);def test_set_mask_fromfields(self);def test_set_elements(self);def test_setslices_hardmask(self);def test_hardmask(self);def test_pickling(self);def test_filled(self);def test_tolist(self);def test_exotic_formats(self);def setUp(self);def test_view_simple_dtype(self);def test_view_flexible_type(self);def test_fromarrays(self);def test_fromrecords(self);def test_fromrecords_wmask(self);def test_fromtextfile(self);def test_addfield(self);
3906,3,9f1c178, Marten van Kerkwijk <mhvk@astro.utoronto.ca>," Sat, 12 Oct 2013 22:02:19 -0400",ct: [PATCH 1/3] Convert docstrings to comments for nose; PEP8 cleanup (some tests activated),6,667,748,numpy/ma/tests/test_old_ma.py,[u'294'],7,7," -9,8 +9,9 ; -20,9 +21,11 ; -37,7 +40,7 ; -51,7 +54,7 ; -65,20 +68,21 ; -109,46 +113,45 ; -156,53 +159,50 ; -251,7 +251,7 ; -290,7 +290,7 ; -317,8 +317,9 ; -369,7 +370,7 ; -377,15 +378,20 ; -412,7 +418,7 ; -425,7 +431,7 ; -434,9 +440,9 ; -445,7 +451,7 ; -495,7 +501,7 ; -505,7 +511,7 ; -518,7 +524,7 ; -537,7 +543,7 ; -548,12 +554,12 ; -566,10 +572,11 ; -585,7 +592,7 ; -620,12 +627,12 ; -637,12 +644,12 ; -651,35 +658,35 ; -722,34 +729,25 ; -758,7 +756,8 ; -787,7 +786,6 ;",";def eq(v, w, msg='');def setUp (self);def test_testBasic1d(self);def test_testBasic2d(self);def test_testArithmetic (self);def test_xtestCount (self);def test_testCI(self);def test_testCopySize(self);def test_testMaPut(self);def test_testOddFeatures(self);def test_testOddFeatures(self);def test_testOddFeatures(self);def test_testMinMax2(self);def test_testTakeTransposeInnerOuter(self);def test_testTakeTransposeInnerOuter(self);def test_testInplace(self);def test_testPickle(self);def test_testMasked(self);def test_testAverage1(self);def test_testAverage2(self);def test_testAverage2(self);def test_testAverage2(self);def test_testScalarArithmetic(self);def test_testArrayMethods(self);def test_testSingleElementSubscript(self);def test_nonzero(self);def test_trace(self);def test_swapaxes(self);"
3906,3,9f1c178, Marten van Kerkwijk <mhvk@astro.utoronto.ca>," Sat, 12 Oct 2013 22:02:19 -0400",ct: [PATCH 1/3] Convert docstrings to comments for nose; PEP8 cleanup (some tests activated),6,667,748,numpy/ma/tests/test_regression.py,[u'25'],1,1," -1,24 +1,25 ; -26,7 +27,7 ; -34,28 +35,28 ;",";def test_mem_masked_where(self,level=rlevel);def test_masked_array_multiply(self,level=rlevel);"
3906,3,9f1c178, Marten van Kerkwijk <mhvk@astro.utoronto.ca>," Sat, 12 Oct 2013 22:02:19 -0400",ct: [PATCH 1/3] Convert docstrings to comments for nose; PEP8 cleanup (some tests activated),6,667,748,numpy/ma/tests/test_subclassing.py,[u'34'],1,1," -11,23 +11,26 ; -35,16 +38,20 ; -53,15 +60,19 ; -70,8 +81,9 ; -79,7 +91,7 ; -89,19 +101,19 ; -114,7 +126,7 ; -149,7 +161,7 ; -176,6 +188,6 ;",";def __add__(self, other);def _get_series(self);def _get_series(self);def setUp(self);def test_data_subclassing(self);def test_masked_binary_operations(self);def test_attributepropagation(self);def test_subclasspreservation(self);"
3906,3,beb1911, Marten van Kerkwijk <mhvk@astro.utoronto.ca>," Sat, 12 Oct 2013 23:22:27 -0400","ct: [PATCH 2/3] Small further cleanups of ma.tests, plus correction for python3",2,8,7,numpy/ma/tests/test_core.py,[u'2'],1,1," -1338,7 +1338,7 ;",def test_check_on_fields(self);
3906,3,beb1911, Marten van Kerkwijk <mhvk@astro.utoronto.ca>," Sat, 12 Oct 2013 23:22:27 -0400","ct: [PATCH 2/3] Small further cleanups of ma.tests, plus correction for python3",2,8,7,numpy/ma/tests/test_mrecords.py,[u'13'],7,6," -13,14 +13,14 ; -354,8 +354,9 ;",;def test_exotic_formats(self);
3906,3,3d9d9aa, Marten van Kerkwijk <mhvk@astro.utoronto.ca>," Sat, 12 Oct 2013 23:39:32 -0400","ct: [PATCH 3/3] One revert (comparisons with None; not PEP8, but good to check); extra comments",2,13,10,numpy/ma/tests/test_core.py,[u'22'],12,10," -1113,23 +1113,25 ;",def test_ne_on_structured(self);
3906,3,3d9d9aa, Marten van Kerkwijk <mhvk@astro.utoronto.ca>," Sat, 12 Oct 2013 23:39:32 -0400","ct: [PATCH 3/3] One revert (comparisons with None; not PEP8, but good to check); extra comments",2,13,10,numpy/ma/tests/test_mrecords.py,[u'1'],1,0," -511,6 +511,7 ;",def test_record_array_with_object_field();
3905,3,203c1ac, Marten van Kerkwijk <mhvk@astro.utoronto.ca>," Sat, 12 Oct 2013 12:11:37 -0400",ct: [PATCH 1/3] Ensure NotImplemented is passed on in MaskedArray ufunc's,1,9,0,numpy/ma/core.py,[u'9'],9,0," -930,6 +930,9 ; -999,6 +1002,9 ; -1065,6 +1071,9 ;","def __call__ (self, a, b, *args, **kwargs);def outer (self, a, b);def __call__(self, a, b, *args, **kwargs);"
3905,3,a362059, Marten van Kerkwijk <mhvk@astro.utoronto.ca>," Sat, 12 Oct 2013 16:06:14 -0400",ct: [PATCH 2/3] Add test cases to ensure NotImplemented is passed on,1,20,0,numpy/ma/tests/test_core.py,[u'20'],20,0," -1662,6 +1662,26 ;",def test_ndarray_mask(self);
3905,3,7072af9, Marten van Kerkwijk <mhvk@astro.utoronto.ca>," Sat, 12 Oct 2013 19:50:43 -0400",ct: [PATCH 3/3] Small corrections to tests,1,9,8,numpy/ma/tests/test_core.py,[u'17'],9,8," -1663,14 +1663,15 ; -1679,8 +1680,8 ;","def test_ndarray_mask(self);def __rmul__(self, other);"
3904,3,72bb6ad, Marten van Kerkwijk <mhvk@astro.utoronto.ca>," Sat, 12 Oct 2013 12:11:37 -0400",ct: [PATCH 1/3] Ensure NotImplemented is passed on in MaskedArray ufunc's,1,9,0,numpy/ma/core.py,[u'9'],9,0," -936,6 +936,9 ; -1005,6 +1008,9 ; -1074,6 +1080,9 ;","def __call__ (self, a, b, *args, **kwargs);def outer (self, a, b);def __call__(self, a, b, *args, **kwargs);"
3904,3,1b283cf, Marten van Kerkwijk <mhvk@astro.utoronto.ca>," Sat, 12 Oct 2013 16:06:14 -0400",ct: [PATCH 2/3] Add test cases to ensure NotImplemented is passed on,1,20,0,numpy/ma/tests/test_core.py,[u'20'],20,0," -1631,6 +1631,26 ;",def test_ndarray_mask(self);
3904,3,bf4c6b2, Marten van Kerkwijk <mhvk@astro.utoronto.ca>," Sat, 12 Oct 2013 19:50:43 -0400",ct: [PATCH 3/3] Small corrections to tests,1,9,8,numpy/ma/tests/test_core.py,[u'17'],9,8," -1632,14 +1632,15 ; -1648,8 +1649,8 ;","def test_ndarray_mask(self);def __rmul__(self, other);"
3903,2,77861fe, Pauli Virtanen <pav@iki.fi>," Sat, 12 Oct 2013 22:57:22 +0300",ct: [PATCH 1/2] BUG: linalg: don't tell BLAS to use zero stridesAt least OSX Accelerate fails for this case.,2,52,6,numpy/linalg/tests/test_linalg.py,[u'32'],31,1," -105,6 +105,9 ; -150,6 +153,12 ; -177,7 +186,10 ; -247,6 +259,24 ;",def __repr__(self);def __repr__(self);def __repr__(self);def _stride_comb_iter(x);
3903,2,77861fe, Pauli Virtanen <pav@iki.fi>," Sat, 12 Oct 2013 22:57:22 +0300",ct: [PATCH 1/2] BUG: linalg: don't tell BLAS to use zero stridesAt least OSX Accelerate fails for this case.,2,52,6,numpy/linalg/umath_linalg.c.src,[u'26'],21,5," -812,24 +812,32 ; -855,17 +863,25 ;",linearize_@TYPE@_matrix(void *dst_in;delinearize_@TYPE@_matrix(void *dst_in;
3903,2,31a0d0e, Pauli Virtanen <pav@iki.fi>," Sat, 12 Oct 2013 23:25:12 +0300",ct: [PATCH 2/2] STY: linalg: fix C comment style,1,10,6,numpy/linalg/umath_linalg.c.src,[u'16'],10,6," -831,9 +831,11 ; -875,9 +877,11 ;",linearize_@TYPE@_matrix(void *dst_in;delinearize_@TYPE@_matrix(void *dst_in;
3902,2,984854a, Pauli Virtanen <pav@iki.fi>," Sat, 12 Oct 2013 22:57:22 +0300",ct: [PATCH 1/2] BUG: linalg: don't tell BLAS to use zero stridesAt least OSX Accelerate fails for this case.,2,52,6,numpy/linalg/tests/test_linalg.py,[u'32'],31,1," -105,6 +105,9 ; -150,6 +153,12 ; -177,7 +186,10 ; -247,6 +259,24 ;",def __repr__(self);def __repr__(self);def __repr__(self);def _stride_comb_iter(x);
3902,2,984854a, Pauli Virtanen <pav@iki.fi>," Sat, 12 Oct 2013 22:57:22 +0300",ct: [PATCH 1/2] BUG: linalg: don't tell BLAS to use zero stridesAt least OSX Accelerate fails for this case.,2,52,6,numpy/linalg/umath_linalg.c.src,[u'26'],21,5," -812,24 +812,32 ; -855,17 +863,25 ;",linearize_@TYPE@_matrix(void *dst_in;delinearize_@TYPE@_matrix(void *dst_in;
3902,2,6ec4380, Pauli Virtanen <pav@iki.fi>," Sat, 12 Oct 2013 23:25:12 +0300",ct: [PATCH 2/2] STY: linalg: fix C comment style,1,10,6,numpy/linalg/umath_linalg.c.src,[u'16'],10,6," -831,9 +831,11 ; -875,9 +877,11 ;",linearize_@TYPE@_matrix(void *dst_in;delinearize_@TYPE@_matrix(void *dst_in;
3900,3,405d4ae, Marten van Kerkwijk <mhvk@astro.utoronto.ca>," Sat, 12 Oct 2013 12:11:37 -0400",ct: [PATCH 1/3] Ensure NotImplemented is passed on in MaskedArray ufunc's,1,9,0,numpy/ma/core.py,[u'9'],9,0," -930,6 +930,9 ; -999,6 +1002,9 ; -1065,6 +1071,9 ;","def __call__ (self, a, b, *args, **kwargs);def outer (self, a, b);def __call__(self, a, b, *args, **kwargs);"
3900,3,301d075, Marten van Kerkwijk <mhvk@astro.utoronto.ca>," Sat, 12 Oct 2013 16:06:14 -0400",ct: [PATCH 2/3] Add test cases to ensure NotImplemented is passed on,1,20,0,numpy/ma/tests/test_core.py,[u'20'],20,0," -1662,6 +1662,26 ;",def test_ndarray_mask(self);
3900,3,50f33ad, Marten van Kerkwijk <mhvk@astro.utoronto.ca>," Sat, 12 Oct 2013 19:50:43 -0400",ct: [PATCH 3/3] Small corrections to tests,1,9,8,numpy/ma/tests/test_core.py,[u'17'],9,8," -1663,14 +1663,15 ; -1679,8 +1680,8 ;","def test_ndarray_mask(self);def __rmul__(self, other);"
3899,1,4a4e97b, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 12 Oct 2013 14:06:16 +0200",ct: [PATCH] BUG: Disable check for oldstyle classes in python3backport of #3885,2,20,0,numpy/lib/tests/test_regression.py,[u'16'],16,0," -1,6 +1,7 ; -226,6 +227,21 ;",;def test_nansum_with_boolean(self);
3899,1,4a4e97b, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 12 Oct 2013 14:06:16 +0200",ct: [PATCH] BUG: Disable check for oldstyle classes in python3backport of #3885,2,20,0,numpy/lib/utils.py,[u'5'],4,1," -588,7 +588,10 ;","def info(object=None,maxwidth=76,output=sys.stdout,toplevel='numpy');"
3898,3,4a68d29, Joseph Martinot-Lagarde <joseph.martinot-lagarde@onera.fr>," Wed, 9 Oct 2013 12:55:08 +0200",ct: [PATCH 1/3] BUG: Disable check for oldstyle classes in python3Fixes gh-2561,1,4,0,numpy/lib/utils.py,[u'5'],4,1," -553,7 +553,10 ;","def info(object=None,maxwidth=76,output=sys.stdout,toplevel='numpy');"
3898,3,e2da936, Joseph Martinot-Lagarde <joseph.martinot-lagarde@onera.fr>," Wed, 9 Oct 2013 12:56:10 +0200",ct: [PATCH 2/3] TST: Regression test for gh-2561,1,14,0,numpy/lib/tests/test_regression.py,[u'14'],14,0," -1,5 +1,6 ; -235,6 +236,19 ;",;def test_nansum_with_boolean(self);
3898,3,18c61a6, Joseph Martinot-Lagarde <contrebasse@gmail.com>," Thu, 10 Oct 2013 20:37:35 +0200",ct: [PATCH 3/3] TST: Raise AssertionError on failure,1,2,0,numpy/lib/tests/test_regression.py,[u'2'],2,0," -246,6 +246,8 ;",class C();
3896,1,04f819d, Sebastian Berg <sebastian@sipsolutions.net>," Tue, 21 Jan 2014 13:23:43 +0100",ct: [PATCH] WIP: loop complex dot blas and ravel vdot,1,130,25,numpy/core/blasdot/_dotblas.c,[u'155'],35,7," -117,7 +117,25 ; -132,21 +150,107 ; -157,10 +261,10 ; -790,7 +894,7 ; -1056,7 +1160,7 ; -1117,20 +1221,31 ; -1164,18 +1279,8 ;","CFLOAT_dot(void *a, npy_intp stridea, void *b, npy_intp strideb, void *res;CDOUBLE_dot(void *a, npy_intp stridea, void *b, npy_intp strideb, void *res;blas_dot(int typenum, npy_intp n;dotblas_matrixproduct(PyObject *NPY_UNUSED(dummy), PyObject *args, PyObject* kw;dotblas_innerproduct(PyObject *NPY_UNUSED(dummy), PyObject *args;static PyObject *dotblas_vdot(PyObject *NPY_UNUSED(dummy), PyObject *args) ;static PyObject *dotblas_vdot(PyObject *NPY_UNUSED(dummy), PyObject *args) ;"
3895,2,de9b44f, Lars Buitinck <larsmans@gmail.com>," Thu, 10 Oct 2013 23:32:32 +0200",ct: [PATCH 1/2] ENH: use dot (BLAS!) in linalg.norm,1,2,0,numpy/linalg/linalg.py,[u'3'],2,1," -2048,7 +2048,8 ;","def norm(x, ord=None, axis=None);"
3895,2,45ec18e, Lars Buitinck <larsmans@gmail.com>," Thu, 26 Dec 2013 13:23:02 +0100",ct: [PATCH 2/2] ENH: optimize complex vector normAlso used ravel(order='K') to prevent copies.,1,6,2,numpy/linalg/linalg.py,[u'8'],6,2," -2048,8 +2048,12 ;","def norm(x, ord=None, axis=None);"
3894,1,310c8c1, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 11 Oct 2013 00:07:11 +0200","ct: [PATCH] ENH: add faster boolean count by using wider data typesabout 3-5 times faster on 64 bit machines, about 2 times faster on i386.",2,77,2,numpy/core/src/multiarray/item_selection.c,[u'49'],28,2," -2395,6 +2395,44 ; -2425,9 +2463,16 ;","PyArray_Compress(PyArrayObject *self, PyObject *condition, int axis;count_boolean_trues(int ndim, char *data, npy_intp *ashape, npy_intp *astrides;"
3894,1,310c8c1, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 11 Oct 2013 00:07:11 +0200","ct: [PATCH] ENH: add faster boolean count by using wider data typesabout 3-5 times faster on 64 bit machines, about 2 times faster on i386.",2,77,2,numpy/core/tests/test_multiarray.py,[u'30'],18,0," -4,6 +4,11 ; -611,6 +616,31 ;",;def test_sum(self);
3893,1,8231e11, Lars Buitinck <larsmans@gmail.com>," Thu, 10 Oct 2013 23:32:32 +0200",ct: [PATCH] ENH: use einsum in linalg.norm,1,6,2,numpy/linalg/linalg.py,[u'8'],6,2," -23,7 +23,7 ; -2048,7 +2048,11 ;",";def norm(x, ord=None, axis=None);"
3891,1,22efec1, Charles Harris <charlesr.harris@gmail.com>," Wed, 9 Oct 2013 11:27:52 -0600",ct: [PATCH] DOC: Update 1.8.0 release notes.Order highlights by significance. This is a subjective judgement.Mention the linalg enhancements and illustrate with an example.,1,77,57,doc/release/1.8.0-notes.rst,[u'134'],25,19," -3,27 +3,34 ; -37,9 +44,11 ; -104,7 +113,6 ; -122,7 +130,6 ; -138,9 +145,68 ; -171,62 +237,20 ; -235,7 +259,6 ; -245,7 +268,6 ; -307,12 +329,13 ; -336,7 +359,6 ; -346,7 +368,6 ; -359,7 +380,6 ;","NumPy 1.8.0 Release Note;readonly view;section in the documentation;be partially sorted instead of fully sorted;E.g.:;than the 'raw' mode;argument with the correct output type;Improvement;For example, to set the reduce flag for a ufunc;Padded regions from np.pad are now correctly rounded, not truncated;Four new functions have been added to the array C-API;The 'full' and 'economic' modes of qr factorization are deprecated;"
3890,1,86f956a, Andreas Hilboll <andreas@hilboll.de>," Thu, 10 Oct 2013 15:15:34 +0200",ct: [PATCH] Update memmap.pyClarify `memmap` docstring to better reflect the meaning of *offset*.,1,3,0,numpy/core/memmap.py,[u'4'],3,1," -66,7 +66,9 ;",class memmap(ndarray);
3888,1,664d7db, Blake Griffith <blake.a.griffith@gmail.com>," Wed, 9 Oct 2013 15:35:43 -0500",ct: [PATCH] DOC: Notes on backporting.,2,62,0,doc/source/dev/gitwash/development_workflow.rst,[u'60'],24,1," -369,7 +369,7 ; -507,4 +507,62 ;",Rewriting commit histor;To see a linear list of commits for this branch:;
3888,1,664d7db, Blake Griffith <blake.a.griffith@gmail.com>," Wed, 9 Oct 2013 15:35:43 -0500",ct: [PATCH] DOC: Notes on backporting.,2,62,0,doc/source/dev/gitwash/git_links.inc,[u'3'],2,0," -77,6 +77,9 ;",;
3886,1,7d0c743, Charles Harris <charlesr.harris@gmail.com>," Wed, 9 Oct 2013 11:27:52 -0600",ct: [PATCH] DOC: Update 1.8.0 release notes.Order highlights by significance. This is a subjective judgement.Mention the linalg enhancements and illustrate with an example.,1,77,57,doc/release/1.8.0-notes.rst,[u'134'],25,19," -3,27 +3,34 ; -37,9 +44,11 ; -104,7 +113,6 ; -122,7 +130,6 ; -138,9 +145,68 ; -171,62 +237,20 ; -235,7 +259,6 ; -245,7 +268,6 ; -307,12 +329,13 ; -336,7 +359,6 ; -346,7 +368,6 ; -359,7 +380,6 ;","NumPy 1.8.0 Release Note;readonly view;section in the documentation;be partially sorted instead of fully sorted;E.g.:;than the 'raw' mode;argument with the correct output type;Improvement;For example, to set the reduce flag for a ufunc;Padded regions from np.pad are now correctly rounded, not truncated;Four new functions have been added to the array C-API;The 'full' and 'economic' modes of qr factorization are deprecated;"
3885,3,293b9e0, Joseph Martinot-Lagarde <joseph.martinot-lagarde@onera.fr>," Wed, 9 Oct 2013 12:55:08 +0200",ct: [PATCH 1/3] BUG: Disable check for oldstyle classes in python3Fixes gh-2561,1,4,0,numpy/lib/utils.py,[u'5'],4,1," -561,7 +561,10 ;","def info(object=None,maxwidth=76,output=sys.stdout,toplevel='numpy');"
3885,3,ba3697d, Joseph Martinot-Lagarde <joseph.martinot-lagarde@onera.fr>," Wed, 9 Oct 2013 12:56:10 +0200",ct: [PATCH 2/3] TST: Regression test for gh-2561,1,14,0,numpy/lib/tests/test_regression.py,[u'14'],14,0," -1,5 +1,6 ; -240,6 +241,19 ;",;def test_nansum_with_boolean(self);
3885,3,c3d111c, Joseph Martinot-Lagarde <contrebasse@gmail.com>," Thu, 10 Oct 2013 20:37:35 +0200",ct: [PATCH 3/3] TST: Raise AssertionError on failure,1,2,0,numpy/lib/tests/test_regression.py,[u'2'],2,0," -251,6 +251,8 ;",class C();
3883,1,28f2863, Joseph Martinot-Lagarde <joseph.martinot-lagarde@onera.fr>," Thu, 2 Apr 2015 16:33:50 +0200",ct: [PATCH] ENH: Add a norm keyword and tests for fft transforms,4,223,43,doc/release/1.10.0-notes.rst,[u'9'],3,0," -122,6 +122,15 ;",you will not be able to emit the warning or test it. The context manage;
3883,1,28f2863, Joseph Martinot-Lagarde <joseph.martinot-lagarde@onera.fr>," Thu, 2 Apr 2015 16:33:50 +0200",ct: [PATCH] ENH: Add a norm keyword and tests for fft transforms,4,223,43,numpy/fft/fftpack.py,[u'150'],29,11," -36,12 +36,13 ; -50,7 +51,8 ; -88,7 +90,14 ; -108,6 +117,9 ; -171,10 +183,16 ; -203,6 +221,9 ; -251,11 +272,13 ; -275,6 +298,9 ; -331,10 +357,14 ; -362,6 +392,9 ; -413,12 +446,14 ; -435,6 +470,9 ; -487,11 +525,12 ; -508,6 +547,9 ; -541,8 +583,10 ; -564,17 +608,17 ; -599,6 +643,9 ; -664,9 +711,10 ; -700,6 +748,9 ; -756,10 +807,10 ; -785,6 +836,9 ; -842,10 +896,10 ; -878,6 +932,9 ; -925,10 +982,10 ; -954,6 +1011,9 ; -1010,12 +1070,13 ; -1027,6 +1088,9 ; -1045,9 +1109,10 ; -1080,6 +1145,9 ; -1132,11 +1200,12 ; -1149,6 +1218,9 ; -1166,4 +1238,4 ;",";def _raw_fft(a, n=None, axis=-1, init_function=fftpack.cffti;def _raw_fft(a, n=None, axis=-1, init_function=fftpack.cffti;def fft(a, n=None, axis=-1);def fft(a, n=None, axis=-1);def ifft(a, n=None, axis=-1);def ifft(a, n=None, axis=-1);def rfft(a, n=None, axis=-1);def rfft(a, n=None, axis=-1);def irfft(a, n=None, axis=-1);def irfft(a, n=None, axis=-1);def hfft(a, n=None, axis=-1);def hfft(a, n=None, axis=-1);def ihfft(a, n=None, axis=-1);def ihfft(a, n=None, axis=-1);def _cook_nd_args(a, s=None, axes=None, invreal=0);def fftn(a, s=None, axes=None);def fftn(a, s=None, axes=None);def ifftn(a, s=None, axes=None);def ifftn(a, s=None, axes=None);def fft2(a, s=None, axes=(-2, -1));def fft2(a, s=None, axes=(-2, -1));def ifft2(a, s=None, axes=(-2, -1));def ifft2(a, s=None, axes=(-2, -1));def rfftn(a, s=None, axes=None);def rfftn(a, s=None, axes=None);def rfft2(a, s=None, axes=(-2, -1));def rfft2(a, s=None, axes=(-2, -1));def irfftn(a, s=None, axes=None);def irfftn(a, s=None, axes=None);def irfft2(a, s=None, axes=(-2, -1));def irfft2(a, s=None, axes=(-2, -1));"
3883,1,28f2863, Joseph Martinot-Lagarde <joseph.martinot-lagarde@onera.fr>," Thu, 2 Apr 2015 16:33:50 +0200",ct: [PATCH] ENH: Add a norm keyword and tests for fft transforms,4,223,43,numpy/fft/info.py,[u'10'],2,1," -116,7 +116,15 ;",;
3883,1,28f2863, Joseph Martinot-Lagarde <joseph.martinot-lagarde@onera.fr>," Thu, 2 Apr 2015 16:33:50 +0200",ct: [PATCH] ENH: Add a norm keyword and tests for fft transforms,4,223,43,numpy/fft/tests/test_fftpack.py,[u'97'],25,1," -1,6 +1,7 ; -26,10 +27,100 ;",;def test_fft_n(self);
3882,9,3e5dc27, Joseph Martinot-Lagarde <contrebasse@gmail.com>," Tue, 8 Oct 2013 23:33:26 +0200",ct: [PATCH 1/9] BUG: Fix for cov() with complex inputCloses #597 and #2680,2,9,0,numpy/lib/function_base.py,[u'6'],5,1," -30,6 +30,7 ; -1809,7 +1810,10 ;",";def cov(m, y=None, rowvar=1, bias=0, ddof=None);"
3882,9,3e5dc27, Joseph Martinot-Lagarde <contrebasse@gmail.com>," Tue, 8 Oct 2013 23:33:26 +0200",ct: [PATCH 1/9] BUG: Fix for cov() with complex inputCloses #597 and #2680,2,9,0,numpy/lib/tests/test_function_base.py,[u'4'],4,0," -1199,6 +1199,10 ;",def test_basic(self);
3882,9,136581c, Joseph Martinot-Lagarde <contrebasse@gmail.com>," Wed, 9 Oct 2013 01:26:55 +0200",ct: [PATCH 2/9] Manage y dtype in cov(),2,12,4,numpy/lib/function_base.py,[u'11'],7,4," -1810,10 +1810,13 ; -1827,7 +1830,7 ;","def cov(m, y=None, rowvar=1, bias=0, ddof=None);def cov(m, y=None, rowvar=1, bias=0, ddof=None);"
3882,9,136581c, Joseph Martinot-Lagarde <contrebasse@gmail.com>," Wed, 9 Oct 2013 01:26:55 +0200",ct: [PATCH 2/9] Manage y dtype in cov(),2,12,4,numpy/lib/tests/test_function_base.py,[u'5'],5,0," -1203,6 +1203,11 ;",def test_complex(self);
3882,9,7b1cbea, Joseph Martinot-Lagarde <joseph.martinot-lagarde@onera.fr>," Wed, 9 Oct 2013 09:35:04 +0200",ct: [PATCH 3/9] MAINT: Remove unused imports,1,0,2,numpy/lib/function_base.py,[u'3'],1,2," -23,14 +23,13 ;",;
3882,9,1d9edaa, Joseph Martinot-Lagarde <joseph.martinot-lagarde@onera.fr>," Wed, 9 Oct 2013 09:35:55 +0200",ct: [PATCH 4/9] STY: pep8 (indentation) for function_base.py,1,2,2,numpy/lib/function_base.py,[u'4'],2,2," -350,8 +350,8 ;","def histogramdd(sample, bins=10, range=None, normed=False, weights=None);"
3882,9,cf8a4a3, Joseph Martinot-Lagarde <joseph.martinot-lagarde@onera.fr>," Wed, 9 Oct 2013 16:52:01 +0200",ct: [PATCH 5/9] STY: pep8 for cov tests,1,2,2,numpy/lib/tests/test_function_base.py,[u'4'],2,2," -1201,12 +1201,12 ;",def test_basic(self);
3882,9,9017a3a, Joseph Martinot-Lagarde <joseph.martinot-lagarde@onera.fr>," Wed, 9 Oct 2013 16:56:35 +0200",ct: [PATCH 6/9] ENH: Manage degrees of freedom in cov like in stdAdd a warning and set value to 0,1,16,12,numpy/lib/function_base.py,[u'28'],16,12," -1822,29 +1822,33 ;","def cov(m, y=None, rowvar=1, bias=0, ddof=None);"
3882,9,ba70703, Joseph Martinot-Lagarde <contrebasse@gmail.com>," Wed, 9 Oct 2013 21:20:12 +0200",ct: [PATCH 7/9] Remove special case for empty arrays in cov,2,17,19,numpy/lib/function_base.py,[u'24'],9,15," -1816,15 +1816,16 ; -1837,13 +1838,6 ; -1903,14 +1897,14 ;","def cov(m, y=None, rowvar=1, bias=0, ddof=None);def cov(m, y=None, rowvar=1, bias=0, ddof=None);def corrcoef(x, y=None, rowvar=1, bias=0, ddof=None);"
3882,9,ba70703, Joseph Martinot-Lagarde <contrebasse@gmail.com>," Wed, 9 Oct 2013 21:20:12 +0200",ct: [PATCH 7/9] Remove special case for empty arrays in cov,2,17,19,numpy/lib/tests/test_function_base.py,[u'12'],8,4," -1190,8 +1190,10 ; -1209,8 +1211,10 ;",def test_ddof(self);def test_xy(self);
3882,9,8188caf, Joseph Martinot-Lagarde <contrebasse@gmail.com>," Wed, 9 Oct 2013 22:17:39 +0200","ct: [PATCH 8/9] Manage nan, Inf, 0 and standard scalars in corrcoef",1,2,4,numpy/lib/function_base.py,[u'6'],2,4," -1900,10 +1900,8 ;","def corrcoef(x, y=None, rowvar=1, bias=0, ddof=None);"
3882,9,896f029, Joseph Martinot-Lagarde <contrebasse@gmail.com>," Wed, 9 Oct 2013 22:33:27 +0200",ct: [PATCH 9/9] TST: Update tests with empty arrays and wrong ddof for cov and corrcoef,1,36,7,numpy/lib/tests/test_function_base.py,[u'43'],29,6," -1189,32 +1189,61 ;",def test_ddof(self);
3881,6,9f7a365, Pauli Virtanen <pav@iki.fi>," Mon, 7 Oct 2013 20:51:31 +0300","ct: [PATCH 1/6] TST: linalg: add more comprehensive test cases for linalg funcsAlso remove TestCase subclassing, so that generator tests work.  Alsofix bugs in the existing generator tests that were not actually runpreviously.",1,332,223,numpy/linalg/tests/test_linalg.py,[u'555'],23,15," -5,6 +5,8 ; -12,8 +14,9 ; -45,162 +48,287 ; -265,7 +393,7 ; -295,7 +423,7 ; -311,13 +439,12 ; -333,16 +460,15 ; -360,34 +486,34 ; -421,12 +547,15 ; -506,70 +635,38 ; -579,17 +676,29 ; -640,9 +749,9 ; -687,20 +796,20 ; -751,7 +860,7 ; -793,7 +902,7 ;",";;def get_complex_dtype(dtype);class ArraySubclass(np.ndarray);class ArraySubclass(np.ndarray);def check(dtype);def check(dtype);def check(dtype);def test_zero(self);def test_invert_noninvertible(self);def do(self, a, b);def test_matrix(self);def test_bad_args(self);def test_reduced_rank();def check_qr(self, a);"
3881,6,5d9f258, Pauli Virtanen <pav@iki.fi>," Mon, 7 Oct 2013 21:08:59 +0300",ct: [PATCH 2/6] BUG: linalg: use correct BLAS incx convention in xCOPY,1,22,6,numpy/linalg/umath_linalg.c.src,[u'28'],22,6," -819,9 +819,17 ; -847,9 +855,17 ;",linearize_@TYPE@_matrix(void *dst_in;delinearize_@TYPE@_matrix(void *dst_in;
3881,6,222f63f, Pauli Virtanen <pav@iki.fi>," Mon, 7 Oct 2013 21:22:34 +0300",ct: [PATCH 3/6] BUG: linalg: fix eigvalsh return type (always real-valued),1,0,0,numpy/linalg/linalg.py,[u'2'],1,1," -965,7 +965,7 ;","def eigvalsh(a, UPLO='L');"
3881,6,20ac68e, Pauli Virtanen <pav@iki.fi>," Mon, 7 Oct 2013 22:24:53 +0300","ct: [PATCH 4/6] MAINT: linalg: strip out unused gufuncs_linalg codeSome of the functions removed were untested, and apparently did notfunction correctly (cholesky_up, inner1d, maybe more).",3,4,3109,numpy/linalg/_gufuncs_linalg.py,[u'1454'],0,29," -1,1454 +0,0 ;",;
3881,6,20ac68e, Pauli Virtanen <pav@iki.fi>," Mon, 7 Oct 2013 22:24:53 +0300","ct: [PATCH 4/6] MAINT: linalg: strip out unused gufuncs_linalg codeSome of the functions removed were untested, and apparently did notfunction correctly (cholesky_up, inner1d, maybe more).",3,4,3109,numpy/linalg/tests/test_gufuncs_linalg.py,[u'500'],0,10," -1,500 +0,0 ;",;
3881,6,20ac68e, Pauli Virtanen <pav@iki.fi>," Mon, 7 Oct 2013 22:24:53 +0300","ct: [PATCH 4/6] MAINT: linalg: strip out unused gufuncs_linalg codeSome of the functions removed were untested, and apparently did notfunction correctly (cholesky_up, inner1d, maybe more).",3,4,3109,numpy/linalg/umath_linalg.c.src,[u'1159'],1,22," -893,45 +893,6 ; -963,19 +924,6 ; -992,337 +940,6 ; -2168,6 +1785,8 ; -2193,21 +1812,12 ; -2606,6 +2216,8 ; -3156,581 +2768,6 ; -3788,10 +2825,6 ; -3801,27 +2834,12 ; -3919,43 +2937,6 ; -4057,16 +3038,6 ; -4145,128 +3116,6 ;","nan_@TYPE@_matrix(void *dst_in, const LINEARIZE_DATA_t* data;identity_@TYPE@_matrix(void *ptr, size_t n;triu_@TYPE@_matrix(void *ptr, size_t n;static voi;static voi;static inline voi;static voi;static void *array_of_nulls[] = ;GUFUNC_FUNC_ARRAY_REAL_COMPLEX(eigvalshup);typedef struct gufunc_descriptor_struct ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;"
3881,6,4fe23f3, Pauli Virtanen <pav@iki.fi>," Tue, 8 Oct 2013 00:12:10 +0300",ct: [PATCH 5/6] TST: linalg: add slightly bigger test case + don't catch KeyboardInterrupt,1,9,0,numpy/linalg/tests/test_linalg.py,[u'10'],9,1," -73,6 +73,8 ; -96,6 +98,9 ; -138,6 +143,9 ; -260,7 +268,7 ;","def __repr__(self);def __repr__(self);def __repr__(self);def _check_cases(func, cases);"
3881,6,9c2b43e, Pauli Virtanen <pav@iki.fi>," Tue, 8 Oct 2013 00:16:48 +0300",ct: [PATCH 6/6] TST: linalg: better rtol choice,1,5,0,numpy/linalg/tests/test_linalg.py,[u'6'],5,1," -49,7 +49,11 ;",def get_complex_dtype(dtype);
3880,6,f2ce635, Pauli Virtanen <pav@iki.fi>," Mon, 7 Oct 2013 20:51:31 +0300","ct: [PATCH 1/6] TST: linalg: add more comprehensive test cases for linalg funcsAlso remove TestCase subclassing, so that generator tests work.  Alsofix bugs in the existing generator tests that were not actually runpreviously.",1,332,223,numpy/linalg/tests/test_linalg.py,[u'555'],23,15," -5,6 +5,8 ; -12,8 +14,9 ; -45,162 +48,287 ; -265,7 +393,7 ; -295,7 +423,7 ; -311,13 +439,12 ; -333,16 +460,15 ; -360,34 +486,34 ; -421,12 +547,15 ; -506,70 +635,38 ; -579,17 +676,29 ; -640,9 +749,9 ; -687,20 +796,20 ; -751,7 +860,7 ; -793,7 +902,7 ;",";;def get_complex_dtype(dtype);class ArraySubclass(np.ndarray);class ArraySubclass(np.ndarray);def check(dtype);def check(dtype);def check(dtype);def test_zero(self);def test_invert_noninvertible(self);def do(self, a, b);def test_matrix(self);def test_bad_args(self);def test_reduced_rank();def check_qr(self, a);"
3880,6,694ce0e, Pauli Virtanen <pav@iki.fi>," Mon, 7 Oct 2013 21:08:59 +0300",ct: [PATCH 2/6] BUG: linalg: use correct BLAS incx convention in xCOPY,1,22,6,numpy/linalg/umath_linalg.c.src,[u'28'],22,6," -819,9 +819,17 ; -847,9 +855,17 ;",linearize_@TYPE@_matrix(void *dst_in;delinearize_@TYPE@_matrix(void *dst_in;
3880,6,bbfe9a4, Pauli Virtanen <pav@iki.fi>," Mon, 7 Oct 2013 21:22:34 +0300",ct: [PATCH 3/6] BUG: linalg: fix eigvalsh return type (always real-valued),1,0,0,numpy/linalg/linalg.py,[u'2'],1,1," -965,7 +965,7 ;","def eigvalsh(a, UPLO='L');"
3880,6,0f51682, Pauli Virtanen <pav@iki.fi>," Mon, 7 Oct 2013 22:24:53 +0300","ct: [PATCH 4/6] MAINT: linalg: strip out unused gufuncs_linalg codeSome of the functions removed were untested, and apparently did notfunction correctly (cholesky_up, inner1d, maybe more).",3,4,3109,numpy/linalg/_gufuncs_linalg.py,[u'1454'],0,29," -1,1454 +0,0 ;",;
3880,6,0f51682, Pauli Virtanen <pav@iki.fi>," Mon, 7 Oct 2013 22:24:53 +0300","ct: [PATCH 4/6] MAINT: linalg: strip out unused gufuncs_linalg codeSome of the functions removed were untested, and apparently did notfunction correctly (cholesky_up, inner1d, maybe more).",3,4,3109,numpy/linalg/tests/test_gufuncs_linalg.py,[u'500'],0,10," -1,500 +0,0 ;",;
3880,6,0f51682, Pauli Virtanen <pav@iki.fi>," Mon, 7 Oct 2013 22:24:53 +0300","ct: [PATCH 4/6] MAINT: linalg: strip out unused gufuncs_linalg codeSome of the functions removed were untested, and apparently did notfunction correctly (cholesky_up, inner1d, maybe more).",3,4,3109,numpy/linalg/umath_linalg.c.src,[u'1159'],1,22," -893,45 +893,6 ; -963,19 +924,6 ; -992,337 +940,6 ; -2168,6 +1785,8 ; -2193,21 +1812,12 ; -2606,6 +2216,8 ; -3156,581 +2768,6 ; -3788,10 +2825,6 ; -3801,27 +2834,12 ; -3919,43 +2937,6 ; -4057,16 +3038,6 ; -4145,128 +3116,6 ;","nan_@TYPE@_matrix(void *dst_in, const LINEARIZE_DATA_t* data;identity_@TYPE@_matrix(void *ptr, size_t n;triu_@TYPE@_matrix(void *ptr, size_t n;static voi;static voi;static inline voi;static voi;static void *array_of_nulls[] = ;GUFUNC_FUNC_ARRAY_REAL_COMPLEX(eigvalshup);typedef struct gufunc_descriptor_struct ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;"
3880,6,727ed46, Pauli Virtanen <pav@iki.fi>," Tue, 8 Oct 2013 00:12:10 +0300",ct: [PATCH 5/6] TST: linalg: add slightly bigger test case + don't catch KeyboardInterrupt,1,9,0,numpy/linalg/tests/test_linalg.py,[u'10'],9,1," -73,6 +73,8 ; -96,6 +98,9 ; -138,6 +143,9 ; -260,7 +268,7 ;","def __repr__(self);def __repr__(self);def __repr__(self);def _check_cases(func, cases);"
3880,6,2fa1c9d, Pauli Virtanen <pav@iki.fi>," Tue, 8 Oct 2013 00:16:48 +0300",ct: [PATCH 6/6] TST: linalg: better rtol choice,1,5,0,numpy/linalg/tests/test_linalg.py,[u'6'],5,1," -49,7 +49,11 ;",def get_complex_dtype(dtype);
3875,1,921d9c7, Charles Harris <charlesr.harris@gmail.com>," Sun, 6 Oct 2013 11:14:24 -0600","ct: [PATCH] TST: Mark test_big_arrays as knownfail on Mac.The test was supposed to test a fix for reading big zip files on Mac,but creating the big test files fails.",1,0,0,numpy/lib/tests/test_io.py,[u'1'],1,0," -141,6 +141,7 ;","def roundtrip(self, *args, **kwargs);"
3874,1,e7ba3a6, Charles Harris <charlesr.harris@gmail.com>," Sun, 6 Oct 2013 09:54:48 -0600",ct: [PATCH] BUG: Include sunmath.h in npy_math.h when __SUNPRO_CC defined.The include is needed for isinf.Closes #3871.,1,4,0,numpy/core/include/numpy/npy_math.h,[u'4'],4,0," -6,11 +6,15 ;","extern ""C"" ;"
3873,1,d69cd4e, Charles Harris <charlesr.harris@gmail.com>," Sun, 6 Oct 2013 10:32:55 -0600",ct: [PATCH] BUG: Include sunmath.h in npy_math.h when __SUNPRO_CC defined.The include is needed for isinf.,1,3,0,numpy/core/include/numpy/npy_math.h,[u'3'],3,0," -2,6 +2,9 ;",;
3872,1,15bb858, Charles Harris <charlesr.harris@gmail.com>," Sun, 6 Oct 2013 09:54:48 -0600",ct: [PATCH] BUG: Include sunmath.h in npy_math.h when __SUNPRO_CC defined.The include is needed for isinf.Closes #3871.,1,4,0,numpy/core/include/numpy/npy_math.h,[u'4'],4,0," -6,11 +6,15 ;","extern ""C"" ;"
3870,1,958985a, Charles Harris <charlesr.harris@gmail.com>," Sat, 5 Oct 2013 12:51:48 -0600",ct: [PATCH] DOC: Tweak the 1.8.0 release notes.Add the new nan functions and linear algebra gufuncs to highlights.Tweak some rst formatting.,1,19,18,doc/release/1.8.0-notes.rst,[u'37'],19,18," -6,11 +6,12 ; -264,18 +265,15 ; -320,6 +318,7 ; -338,7 +337,8 ; -349,6 +349,7 ;","This release supports  Python 2.6 -2.7 and 3.2 - 3.3;Performance improvements via SSE2 vectorizatio;The function np.take now allows 0-d arrays as indices;Padded regions from np.pad are now correctly rounded, not truncated;C-API Ufunc Addition;"
3869,1,635181b, Charles Harris <charlesr.harris@gmail.com>," Sat, 5 Oct 2013 12:51:48 -0600",ct: [PATCH] DOC: Tweak the 1.8.0 release notes.Add the new nan functions and linear algebra gufuncs to highlights.Tweak some rst formatting.,1,19,18,doc/release/1.8.0-notes.rst,[u'37'],19,18," -6,11 +6,12 ; -264,18 +265,15 ; -320,6 +318,7 ; -338,7 +337,8 ; -349,6 +349,7 ;","This release supports  Python 2.6 -2.7 and 3.2 - 3.3;Performance improvements via SSE2 vectorizatio;The function np.take now allows 0-d arrays as indices;Padded regions from np.pad are now correctly rounded, not truncated;C-API Ufunc Addition;"
3868,2,e8f9d6d, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 3 Oct 2013 20:12:43 +0200",ct: [PATCH 1/2] DOC: fix signature of NpyIter_GetIterNext in capi doc,1,0,0,doc/source/reference/c-api.iterator.rst,[u'2'],1,1," -204,7 +204,7 ;","is used to control the memory layout of the allocated result, typicall;"
3868,2,488930a, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 3 Oct 2013 20:12:31 +0200","ct: [PATCH 2/2] DOC: add highlights to release notes and rewrite and move some sectionscloses gh-3842, gh-3843",1,35,34,doc/release/1.8.0-notes.rst,[u'69'],23,22," -3,14 +3,15 ; -178,7 +179,8 ; -191,11 +193,17 ; -285,6 +293,22 ; -327,8 +351,6 ; -342,24 +364,3 ;",NumPy 1.8.0 Release Note;Advanced indexing using `np.newaxis;New functions `partition` and `argpartition;reduces its time complexity from O(n log(n)) to O(n);One new function has been added to the ufunc C-API that allows to registe;deprecated. Previously float indices and function arguments such as axes o;
3867,2,6acb500, Charles Harris <charlesr.harris@gmail.com>," Fri, 4 Oct 2013 13:49:33 -0600","ct: [PATCH 1/2] BUG: Refactor nanfunctions to behave as agreed on for 1.8.    Deal with subclasses of ndarray, like pandas.Series and matrix.        Subclasses may not define the new keyword keepdims or deal        gracefully with ufuncs in all their forms. This is solved by        throwing the problem onto the np.sum, np.any, etc. functions        that have ugly hacks to deal with the problem.    Settle handling of all-nan slices.        nanmax, nanmin -- Raise warning, return NaN for slice.        nanargmax, nanargmin -- Raise ValueError.        nansum -- Return NaN for slice. Will change in 1.9.0.        nanmean, nanvar, nanstd -- Raise warning, return NaN for slice.    Make NaN functions work for scalar arguments.        This may seem silly, but it removes a check for special cases.    Update tests        Deal with new all-nan handling.        Test with matrix class as example of subclass without keepdims.        Test with scalar arguments.    Fix nanvar issue reported in #3860.",2,351,236,numpy/lib/nanfunctions.py,[u'318'],19,16," -13,23 +13,18 ; -103,7 +98,8 ; -140,37 +136,38 ; -193,8 +190,8 ; -216,32 +213,51 ; -273,8 +289,8 ; -296,15 +312,31 ; -336,23 +368,19 ; -385,21 +413,18 ; -410,19 +435,23 ; -444,17 +473,13 ; -480,10 +505,10 ; -498,7 +523,7 ; -512,17 +537,17 ; -542,11 +567,11 ; -561,7 +586,7 ; -573,28 +598,28 ; -647,9 +672,9 ; -673,7 +698,8 ; -686,30 +712,29 ; -721,11 +746,13 ; -738,12 +765,12 ; -770,26 +797,26 ; -802,7 +829,8 ;",";def _divide_by_count(a, b, out=None);def _divide_by_count(a, b, out=None);def nanmin(a, axis=None, out=None, keepdims=False);def nanmin(a, axis=None, out=None, keepdims=False);def nanmax(a, axis=None, out=None, keepdims=False);def nanmax(a, axis=None, out=None, keepdims=False);def nanargmin(a, axis=None);def nanargmax(a, axis=None);def nansum(a, axis=None, dtype=None, out=None, keepdims=0);def nansum(a, axis=None, dtype=None, out=None, keepdims=0);def nansum(a, axis=None, dtype=None, out=None, keepdims=0);def nanmean(a, axis=None, dtype=None, out=None, keepdims=False);def nanmean(a, axis=None, dtype=None, out=None, keepdims=False);def nanmean(a, axis=None, dtype=None, out=None, keepdims=False);def nanmean(a, axis=None, dtype=None, out=None, keepdims=False);def nanmean(a, axis=None, dtype=None, out=None, keepdims=False);def nanvar(a, axis=None, dtype=None, out=None, ddof=0;def nanvar(a, axis=None, dtype=None, out=None, ddof=0;def nanvar(a, axis=None, dtype=None, out=None, ddof=0;def nanstd(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);def nanstd(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);def nanstd(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);def nanstd(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);"
3867,2,6acb500, Charles Harris <charlesr.harris@gmail.com>," Fri, 4 Oct 2013 13:49:33 -0600","ct: [PATCH 1/2] BUG: Refactor nanfunctions to behave as agreed on for 1.8.    Deal with subclasses of ndarray, like pandas.Series and matrix.        Subclasses may not define the new keyword keepdims or deal        gracefully with ufuncs in all their forms. This is solved by        throwing the problem onto the np.sum, np.any, etc. functions        that have ugly hacks to deal with the problem.    Settle handling of all-nan slices.        nanmax, nanmin -- Raise warning, return NaN for slice.        nanargmax, nanargmin -- Raise ValueError.        nansum -- Return NaN for slice. Will change in 1.9.0.        nanmean, nanvar, nanstd -- Raise warning, return NaN for slice.    Make NaN functions work for scalar arguments.        This may seem silly, but it removes a check for special cases.    Update tests        Deal with new all-nan handling.        Test with matrix class as example of subclass without keepdims.        Test with scalar arguments.    Fix nanvar issue reported in #3860.",2,351,236,numpy/lib/tests/test_nanfunctions.py,[u'269'],19,10," -7,31 +7,25 ; -81,22 +75,50 ; -120,15 +142,10 ; -139,39 +156,83 ; -179,21 +240,21 ; -202,11 +263,11 ; -214,11 +275,11 ; -226,62 +287,66 ; -352,14 +417,14 ; -368,7 +433,7 ; -380,7 +445,7 ; -398,7 +463,11 ; -408,13 +477,31 ;",;def test_allnans(self);def test_result_values(self);def test_empty(self);class TestNanFunctions_Sum(TestCase);def test_dtype_from_dtype(self);def test_dtype_from_char(self);def test_dtype_from_input(self);def test_dtype_from_input(self);def test_ddof(self);def test_ddof_too_big(self);def test_allnans(self);def test_empty(self);
3867,2,d1296c8, Charles Harris <charlesr.harris@gmail.com>," Fri, 4 Oct 2013 12:48:24 -0600","ct: [PATCH 2/2] BUG: Make ndarray.{var, std} work for scalars.",2,11,2,numpy/core/_methods.py,[u'5'],3,2," -91,8 +91,9 ;","def _var(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);"
3867,2,d1296c8, Charles Harris <charlesr.harris@gmail.com>," Fri, 4 Oct 2013 12:48:24 -0600","ct: [PATCH 2/2] BUG: Make ndarray.{var, std} work for scalars.",2,11,2,numpy/core/tests/test_numeric.py,[u'8'],8,0," -1473,6 +1473,10 ; -1492,6 +1496,10 ;",def test_basic(self);def test_basic(self);
3866,2,9c7e6e3, Charles Harris <charlesr.harris@gmail.com>," Fri, 4 Oct 2013 13:49:33 -0600","ct: [PATCH 1/2] BUG: Refactor nanfunctions to behave as agreed on for 1.9.    Deal with subclasses of ndarray, like pandas.Series and matrix.        Subclasses may not define the new keyword keepdims or deal        gracefully with ufuncs in all their forms. This is solved by        throwing the problem onto the np.sum, np.any, etc. functions        that have ugly hacks to deal with the problem.    Settle handling of all-nan slices.        nanmax, nanmin -- Raise warning, return NaN for slice.        nanargmax, nanargmin -- Raise ValueError.        nansum -- Return 0 for slice.        nanmean, nanvar, nanstd -- Raise warning, return NaN for slice.    Make NaN functions work for scalar arguments.        This may seem silly, but it removes a check for special cases.    Update tests        Deal with new all-nan handling.        Test with matrix class as example of subclass without keepdims.        Test with scalar arguments.    Fix nanvar issue reported in #3860.    Closes #3860 #3850",2,343,210,numpy/lib/nanfunctions.py,[u'316'],19,16," -13,23 +13,18 ; -103,7 +98,8 ; -140,37 +136,38 ; -193,8 +190,8 ; -216,32 +213,51 ; -273,8 +289,8 ; -296,15 +312,31 ; -336,23 +368,19 ; -385,24 +413,21 ; -410,19 +435,23 ; -444,17 +473,13 ; -478,7 +503,7 ; -489,7 +514,7 ; -503,17 +528,17 ; -533,11 +558,11 ; -552,7 +577,7 ; -564,28 +589,28 ; -638,9 +663,9 ; -664,7 +689,8 ; -677,30 +703,29 ; -712,11 +737,13 ; -729,12 +756,12 ; -761,26 +788,26 ; -793,7 +820,8 ;",";def _divide_by_count(a, b, out=None);def _divide_by_count(a, b, out=None);def nanmin(a, axis=None, out=None, keepdims=False);def nanmin(a, axis=None, out=None, keepdims=False);def nanmax(a, axis=None, out=None, keepdims=False);def nanmax(a, axis=None, out=None, keepdims=False);def nanargmin(a, axis=None);def nanargmax(a, axis=None);def nansum(a, axis=None, dtype=None, out=None, keepdims=0);def nansum(a, axis=None, dtype=None, out=None, keepdims=0);def nansum(a, axis=None, dtype=None, out=None, keepdims=0);def nanmean(a, axis=None, dtype=None, out=None, keepdims=False);def nanmean(a, axis=None, dtype=None, out=None, keepdims=False);def nanmean(a, axis=None, dtype=None, out=None, keepdims=False);def nanmean(a, axis=None, dtype=None, out=None, keepdims=False);def nanmean(a, axis=None, dtype=None, out=None, keepdims=False);def nanvar(a, axis=None, dtype=None, out=None, ddof=0;def nanvar(a, axis=None, dtype=None, out=None, ddof=0;def nanvar(a, axis=None, dtype=None, out=None, ddof=0;def nanstd(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);def nanstd(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);def nanstd(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);def nanstd(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);"
3866,2,9c7e6e3, Charles Harris <charlesr.harris@gmail.com>," Fri, 4 Oct 2013 13:49:33 -0600","ct: [PATCH 1/2] BUG: Refactor nanfunctions to behave as agreed on for 1.9.    Deal with subclasses of ndarray, like pandas.Series and matrix.        Subclasses may not define the new keyword keepdims or deal        gracefully with ufuncs in all their forms. This is solved by        throwing the problem onto the np.sum, np.any, etc. functions        that have ugly hacks to deal with the problem.    Settle handling of all-nan slices.        nanmax, nanmin -- Raise warning, return NaN for slice.        nanargmax, nanargmin -- Raise ValueError.        nansum -- Return 0 for slice.        nanmean, nanvar, nanstd -- Raise warning, return NaN for slice.    Make NaN functions work for scalar arguments.        This may seem silly, but it removes a check for special cases.    Update tests        Deal with new all-nan handling.        Test with matrix class as example of subclass without keepdims.        Test with scalar arguments.    Fix nanvar issue reported in #3860.    Closes #3860 #3850",2,343,210,numpy/lib/tests/test_nanfunctions.py,[u'237'],18,8," -7,31 +7,25 ; -81,22 +75,50 ; -120,15 +142,10 ; -139,39 +156,83 ; -179,21 +240,21 ; -202,11 +263,11 ; -214,11 +275,11 ; -226,43 +287,65 ; -275,13 +358,13 ; -333,14 +416,14 ; -349,7 +432,7 ; -361,7 +444,7 ; -379,7 +462,11 ; -389,13 +476,31 ;",;def test_allnans(self);def test_result_values(self);def test_empty(self);class TestNanFunctions_Sum(TestCase);def test_dtype_from_dtype(self);def test_dtype_from_char(self);def test_dtype_from_input(self);def test_mutation(self);def test_dtype_from_input(self);def test_ddof(self);def test_ddof_too_big(self);def test_allnans(self);def test_empty(self);
3866,2,2f77e1e, Charles Harris <charlesr.harris@gmail.com>," Fri, 4 Oct 2013 12:48:24 -0600","ct: [PATCH 2/2] BUG: Make ndarray.{var, std} work for scalars.",2,11,2,numpy/core/_methods.py,[u'5'],3,2," -91,8 +91,9 ;","def _var(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);"
3866,2,2f77e1e, Charles Harris <charlesr.harris@gmail.com>," Fri, 4 Oct 2013 12:48:24 -0600","ct: [PATCH 2/2] BUG: Make ndarray.{var, std} work for scalars.",2,11,2,numpy/core/tests/test_numeric.py,[u'8'],8,0," -1473,6 +1473,10 ; -1492,6 +1496,10 ;",def test_basic(self);def test_basic(self);
3865,1,cc99961, Ralf Gommers <ralf.gommers@googlemail.com>," Fri, 4 Oct 2013 12:11:41 +0200","ct: [PATCH] DOC: make docstrings of matrix properties (.T, .H, .I, .A, .A1) work.Closes gh-1939.",1,6,6,numpy/matrixlib/defmatrix.py,[u'12'],6,6," -929,7 +929,7 ; -991,11 +991,11 ;",def getT(self);def getH(self);
3864,1,0278d8b, Noel Dawe <noel.dawe@gmail.com>," Thu, 3 Oct 2013 19:46:37 -0700",ct: [PATCH] cov and corrcoef: add weights support,1,55,11,numpy/lib/function_base.py,[u'66'],38,8," -20,7 +20,7 ; -1725,7 +1725,7 ; -1759,6 +1759,16 ; -1833,23 +1843,47 ; -1885,6 +1919,16 ; -1896,7 +1940,7 ;",";def _vectorize_call(self, func, args);def cov(m, y=None, rowvar=1, bias=0, ddof=None);def cov(m, y=None, rowvar=1, bias=0, ddof=None);def corrcoef(x, y=None, rowvar=1, bias=0, ddof=None);def corrcoef(x, y=None, rowvar=1, bias=0, ddof=None);"
3862,1,76db3ff, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 3 Oct 2013 23:01:27 +0200","ct: [PATCH] MAINT: accept NULL in NpyIter_Deallocate and remove redundant NULL checksDeallocation should just do nothing if provided a NULL pointer nditerdeletion broke this convention.Removed many redundant NULL checks for various deallocation functionsused in numpy, they all end up in standard C free or PyMem_Free whichare both NULL safe.",10,45,103,numpy/core/src/multiarray/arrayobject.c,[u'12'],2,4," -1627,19 +1627,13 ;","array_new(PyTypeObject *subtype, PyObject *args, PyObject *kwds;"
3862,1,76db3ff, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 3 Oct 2013 23:01:27 +0200","ct: [PATCH] MAINT: accept NULL in NpyIter_Deallocate and remove redundant NULL checksDeallocation should just do nothing if provided a NULL pointer nditerdeletion broke this convention.Removed many redundant NULL checks for various deallocation functionsused in numpy, they all end up in standard C free or PyMem_Free whichare both NULL safe.",10,45,103,numpy/core/src/multiarray/datetime.c,[u'8'],1,3," -3522,12 +3522,8 ;",find_string_array_datetime64_type(PyArrayObject *arr;
3862,1,76db3ff, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 3 Oct 2013 23:01:27 +0200","ct: [PATCH] MAINT: accept NULL in NpyIter_Deallocate and remove redundant NULL checksDeallocation should just do nothing if provided a NULL pointer nditerdeletion broke this convention.Removed many redundant NULL checks for various deallocation functionsused in numpy, they all end up in standard C free or PyMem_Free whichare both NULL safe.",10,45,103,numpy/core/src/multiarray/dtype_transfer.c,[u'8'],1,3," -719,9 +719,7 ; -2296,9 +2294,7 ;",typedef struct ;get_subarray_transfer_function(int aligned;
3862,1,76db3ff, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 3 Oct 2013 23:01:27 +0200","ct: [PATCH] MAINT: accept NULL in NpyIter_Deallocate and remove redundant NULL checksDeallocation should just do nothing if provided a NULL pointer nditerdeletion broke this convention.Removed many redundant NULL checks for various deallocation functionsused in numpy, they all end up in standard C free or PyMem_Free whichare both NULL safe.",10,45,103,numpy/core/src/multiarray/iterators.c,[u'4'],1,1," -2085,9 +2085,7 ;",static void neighiter_dealloc(PyArrayNeighborhoodIterObject* iter;
3862,1,76db3ff, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 3 Oct 2013 23:01:27 +0200","ct: [PATCH] MAINT: accept NULL in NpyIter_Deallocate and remove redundant NULL checksDeallocation should just do nothing if provided a NULL pointer nditerdeletion broke this convention.Removed many redundant NULL checks for various deallocation functionsused in numpy, they all end up in standard C free or PyMem_Free whichare both NULL safe.",10,45,103,numpy/core/src/multiarray/methods.c,[u'8'],1,3," -1692,9 +1692,7 ; -1781,9 +1779,7 ;","array_setstate(PyArrayObject *self, PyObject *args;array_setstate(PyArrayObject *self, PyObject *args;"
3862,1,76db3ff, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 3 Oct 2013 23:01:27 +0200","ct: [PATCH] MAINT: accept NULL in NpyIter_Deallocate and remove redundant NULL checksDeallocation should just do nothing if provided a NULL pointer nditerdeletion broke this convention.Removed many redundant NULL checks for various deallocation functionsused in numpy, they all end up in standard C free or PyMem_Free whichare both NULL safe.",10,45,103,numpy/core/src/multiarray/multiarraymodule.c,[u'8'],1,3," -2605,9 +2605,7 ; -2617,9 +2615,7 ;","array__reconstruct(PyObject *NPY_UNUSED(dummy), PyObject *args;array__reconstruct(PyObject *NPY_UNUSED(dummy), PyObject *args;"
3862,1,76db3ff, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 3 Oct 2013 23:01:27 +0200","ct: [PATCH] MAINT: accept NULL in NpyIter_Deallocate and remove redundant NULL checksDeallocation should just do nothing if provided a NULL pointer nditerdeletion broke this convention.Removed many redundant NULL checks for various deallocation functionsused in numpy, they all end up in standard C free or PyMem_Free whichare both NULL safe.",10,45,103,numpy/core/src/multiarray/nditer_constr.c,[u'16'],6,2," -639,12 +639,20 ;",NpyIter_Copy(NpyIter *iter;
3862,1,76db3ff, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 3 Oct 2013 23:01:27 +0200","ct: [PATCH] MAINT: accept NULL in NpyIter_Deallocate and remove redundant NULL checksDeallocation should just do nothing if provided a NULL pointer nditerdeletion broke this convention.Removed many redundant NULL checks for various deallocation functionsused in numpy, they all end up in standard C free or PyMem_Free whichare both NULL safe.",10,45,103,numpy/core/src/multiarray/nditer_pywrap.c,[u'12'],2,4," -742,9 +742,7 ; -816,9 +814,7 ; -829,9 +825,7 ;","npyiter_init(NewNpyArrayIterObject *self, PyObject *args, PyObject *kwds;npyiter_init(NewNpyArrayIterObject *self, PyObject *args, PyObject *kwds;npyiter_init(NewNpyArrayIterObject *self, PyObject *args, PyObject *kwds;"
3862,1,76db3ff, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 3 Oct 2013 23:01:27 +0200","ct: [PATCH] MAINT: accept NULL in NpyIter_Deallocate and remove redundant NULL checksDeallocation should just do nothing if provided a NULL pointer nditerdeletion broke this convention.Removed many redundant NULL checks for various deallocation functionsused in numpy, they all end up in standard C free or PyMem_Free whichare both NULL safe.",10,45,103,numpy/core/src/umath/ufunc_object.c,[u'56'],7,21," -2226,12 +2226,8 ; -3170,12 +3166,8 ; -3185,12 +3177,8 ; -3580,9 +3568,7 ; -3592,9 +3578,7 ; -4709,24 +4693,12 ;","PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;PyUFunc_Accumulate(PyUFuncObject *ufunc, PyArrayObject *arr, PyArrayObject *out;PyUFunc_Accumulate(PyUFuncObject *ufunc, PyArrayObject *arr, PyArrayObject *out;PyUFunc_Reduceat(PyUFuncObject *ufunc, PyArrayObject *arr, PyArrayObject *ind;PyUFunc_Reduceat(PyUFuncObject *ufunc, PyArrayObject *arr, PyArrayObject *ind;PyUFunc_RegisterLoopForType(PyUFuncObject *ufunc;"
3862,1,76db3ff, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 3 Oct 2013 23:01:27 +0200","ct: [PATCH] MAINT: accept NULL in NpyIter_Deallocate and remove redundant NULL checksDeallocation should just do nothing if provided a NULL pointer nditerdeletion broke this convention.Removed many redundant NULL checks for various deallocation functionsused in numpy, they all end up in standard C free or PyMem_Free whichare both NULL safe.",10,45,103,numpy/lib/src/_compiled_base.c,[u'16'],2,6," -980,12 +980,8 ; -1247,12 +1243,8 ;","arr_ravel_multi_index(PyObject *self, PyObject *args, PyObject *kwds;arr_unravel_index(PyObject *self, PyObject *args, PyObject *kwds;"
3859,2,c2fc934, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 3 Oct 2013 20:12:43 +0200",ct: [PATCH 1/2] DOC: fix signature of NpyIter_GetIterNext in capi doc,1,0,0,doc/source/reference/c-api.iterator.rst,[u'2'],1,1," -204,7 +204,7 ;","is used to control the memory layout of the allocated result, typicall;"
3859,2,7d9017a, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 3 Oct 2013 20:12:31 +0200","ct: [PATCH 2/2] DOC: add highlights to release notes and rewrite and move some sectionscloses gh-3842, gh-3843",1,35,34,doc/release/1.8.0-notes.rst,[u'69'],23,22," -3,14 +3,15 ; -178,7 +179,8 ; -191,11 +193,17 ; -285,6 +293,22 ; -327,8 +351,6 ; -342,24 +364,3 ;",NumPy 1.8.0 Release Note;Advanced indexing using `np.newaxis;New functions `partition` and `argpartition;reduces its time complexity from O(n log(n)) to O(n);One new function has been added to the ufunc C-API that allows to registe;deprecated. Previously float indices and function arguments such as axes o;
3856,1,fd5d308, Pauli Virtanen <pav@iki.fi>," Tue, 1 Oct 2013 22:30:09 +0300","ct: [PATCH] BUG: core: ensure __r*__ has precedence over __numpy_ufunc__Add a special case to the implementation of ndarray.__mul__ et al. thatrefuses to work on other objects that are not ndarray subclasses andimplement both __numpy_ufunc__ and __r*__.This way, execution passes first to the custom __r*__ method, whichmakes it possible to have e.g. __mul__ and np.multiply do differentthings.Additionally, disable one __array_priority__ special case handling whenalso __numpy_ufunc__ is defined.",6,405,3,doc/neps/ufunc-overrides.rst,[u'82'],14,0," -158,6 +158,88 ;","If none of the input arguments has a ``__numpy_ufunc__`` method, th;"
3856,1,fd5d308, Pauli Virtanen <pav@iki.fi>," Tue, 1 Oct 2013 22:30:09 +0300","ct: [PATCH] BUG: core: ensure __r*__ has precedence over __numpy_ufunc__Add a special case to the implementation of ndarray.__mul__ et al. thatrefuses to work on other objects that are not ndarray subclasses andimplement both __numpy_ufunc__ and __r*__.This way, execution passes first to the custom __r*__ method, whichmakes it possible to have e.g. __mul__ and np.multiply do differentthings.Additionally, disable one __array_priority__ special case handling whenalso __numpy_ufunc__ is defined.",6,405,3,doc/source/reference/arrays.classes.rst,[u'29'],5,0," -80,6 +80,35 ;",Numpy provides several hooks that classes can customize;
3856,1,fd5d308, Pauli Virtanen <pav@iki.fi>," Tue, 1 Oct 2013 22:30:09 +0300","ct: [PATCH] BUG: core: ensure __r*__ has precedence over __numpy_ufunc__Add a special case to the implementation of ndarray.__mul__ et al. thatrefuses to work on other objects that are not ndarray subclasses andimplement both __numpy_ufunc__ and __r*__.This way, execution passes first to the custom __r*__ method, whichmakes it possible to have e.g. __mul__ and np.multiply do differentthings.Additionally, disable one __array_priority__ special case handling whenalso __numpy_ufunc__ is defined.",6,405,3,numpy/core/src/multiarray/arrayobject.c,[u'25'],5,0," -1273,10 +1273,19 ; -1285,6 +1294,10 ; -1343,6 +1356,10 ; -1392,10 +1409,18 ;","array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;"
3856,1,fd5d308, Pauli Virtanen <pav@iki.fi>," Tue, 1 Oct 2013 22:30:09 +0300","ct: [PATCH] BUG: core: ensure __r*__ has precedence over __numpy_ufunc__Add a special case to the implementation of ndarray.__mul__ et al. thatrefuses to work on other objects that are not ndarray subclasses andimplement both __numpy_ufunc__ and __r*__.This way, execution passes first to the custom __r*__ method, whichmakes it possible to have e.g. __mul__ and np.multiply do differentthings.Additionally, disable one __array_priority__ special case handling whenalso __numpy_ufunc__ is defined.",6,405,3,numpy/core/src/multiarray/number.c,[u'85'],14,1," -85,6 +85,62 ; -210,7 +266,7 ; -266,18 +322,21 ; -285,6 +344,7 ; -292,6 +352,7 ; -446,6 +507,7 ; -475,48 +537,56 ; -524,6 +594,7 ; -531,6 +602,7 ; -539,6 +611,7 ; -549,48 +622,56 ; -598,6 +679,7 ; -629,6 +711,7 ;","PyArray_SetNumericOps(PyObject *dict;PyArray_GenericBinaryFunction(PyArrayObject *m1, PyObject *m2, PyObject *op;PyArray_GenericInplaceUnaryFunction(PyArrayObject *m1, PyObject *op;array_multiply(PyArrayObject *m1, PyObject *m2;array_divide(PyArrayObject *m1, PyObject *m2;array_power(PyArrayObject *a1, PyObject *o2, PyObject *NPY_UNUSED(modulo);array_invert(PyArrayObject *m1;array_inplace_multiply(PyArrayObject *m1, PyObject *m2;array_inplace_divide(PyArrayObject *m1, PyObject *m2;array_inplace_power(PyArrayObject *a1, PyObject *o2, PyObject *NPY_UNUSED(modul;array_inplace_power(PyArrayObject *a1, PyObject *o2, PyObject *NPY_UNUSED(modul;array_inplace_floor_divide(PyArrayObject *m1, PyObject *m2;static PyObject ;"
3856,1,fd5d308, Pauli Virtanen <pav@iki.fi>," Tue, 1 Oct 2013 22:30:09 +0300","ct: [PATCH] BUG: core: ensure __r*__ has precedence over __numpy_ufunc__Add a special case to the implementation of ndarray.__mul__ et al. thatrefuses to work on other objects that are not ndarray subclasses andimplement both __numpy_ufunc__ and __r*__.This way, execution passes first to the custom __r*__ method, whichmakes it possible to have e.g. __mul__ and np.multiply do differentthings.Additionally, disable one __array_priority__ special case handling whenalso __numpy_ufunc__ is defined.",6,405,3,numpy/core/src/multiarray/number.h,[u'4'],1,0," -69,4 +69,8 ;",NPY_NO_EXPORT PyObject ;
3856,1,fd5d308, Pauli Virtanen <pav@iki.fi>," Tue, 1 Oct 2013 22:30:09 +0300","ct: [PATCH] BUG: core: ensure __r*__ has precedence over __numpy_ufunc__Add a special case to the implementation of ndarray.__mul__ et al. thatrefuses to work on other objects that are not ndarray subclasses andimplement both __numpy_ufunc__ and __r*__.This way, execution passes first to the custom __r*__ method, whichmakes it possible to have e.g. __mul__ and np.multiply do differentthings.Additionally, disable one __array_priority__ special case handling whenalso __numpy_ufunc__ is defined.",6,405,3,numpy/core/tests/test_multiarray.py,[u'183'],31,1," -4,12 +4,12 ; -1460,7 +1460,7 ; -1547,6 +1547,185 ;",;def test_dot_override(self);def test_ravel(self);
3855,1,7b3bb81, Julian Taylor <jtaylor.debian@googlemail.com>," Tue, 1 Oct 2013 20:02:03 +0200",ct: [PATCH] BUG: preserve ndarray subclasses in mediancloses gh-3846,2,14,0,numpy/lib/function_base.py,[u'2'],1,1," -2670,7 +2670,7 ;","def median(a, axis=None, out=None, overwrite_input=False);"
3855,1,7b3bb81, Julian Taylor <jtaylor.debian@googlemail.com>," Tue, 1 Oct 2013 20:02:03 +0200",ct: [PATCH] BUG: preserve ndarray subclasses in mediancloses gh-3846,2,14,0,numpy/lib/tests/test_function_base.py,[u'13'],13,0," -1483,6 +1483,19 ;",def test_array_like(self);
3854,1,24a14aa, Sebastian Berg <sebastian@sipsolutions.net>," Tue, 1 Oct 2013 12:44:48 +0200","ct: [PATCH] BUG: Allos linalg.solve to handle zero equations.This was previously correct, but the special case was missingsince the gufunc code cannot handle it.",2,23,4,numpy/linalg/linalg.py,[u'9'],5,4," -368,10 +368,11 ;","def solve(a, b);"
3854,1,24a14aa, Sebastian Berg <sebastian@sipsolutions.net>," Tue, 1 Oct 2013 12:44:48 +0200","ct: [PATCH] BUG: Allos linalg.solve to handle zero equations.This was previously correct, but the special case was missingsince the gufunc code cannot handle it.",2,23,4,numpy/linalg/tests/test_linalg.py,[u'18'],18,0," -246,6 +246,24 ;",class ArraySubclass(np.ndarray);
3853,1,14da06c, Charles Harris <charlesr.harris@gmail.com>," Mon, 30 Sep 2013 17:02:43 -0600","ct: [PATCH] MAINT: Revert ""BUG: do a boolean check on casting bool to other types""This reverts commit cf13331897acb84d0a6a118c6ba4d700905d3e3e for the1.8.0 release. The scikit-image package makes unwarrented use of thenumpy boolean type that results in some bugs when boolean values of 0, 1are enforced. This reversion avoids exposing those bugs and provide theskimage developers some time to set things right.",2,0,12,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,[u'2'],1,1," -759,7 +759,7 ;",NPY_NO_EXPORT PyArray_StridedUnaryOp ;
3853,1,14da06c, Charles Harris <charlesr.harris@gmail.com>," Mon, 30 Sep 2013 17:02:43 -0600","ct: [PATCH] MAINT: Revert ""BUG: do a boolean check on casting bool to other types""This reverts commit cf13331897acb84d0a6a118c6ba4d700905d3e3e for the1.8.0 release. The scikit-image package makes unwarrented use of thenumpy boolean type that results in some bugs when boolean values of 0, 1are enforced. This reversion avoids exposing those bugs and provide theskimage developers some time to set things right.",2,0,12,numpy/core/tests/test_multiarray.py,[u'11'],0,11," -551,17 +551,6 ;",def test_test_interning(self);
3852,1,f25a654, Charles Harris <charlesr.harris@gmail.com>," Tue, 1 Oct 2013 10:39:16 -0600","ct: [PATCH] MAINT: Use a.sum(...) rather than np.add.reduce(a,...)  in nansum.Pandas has a work around for the first case, but not the second.Closes #3849.",1,0,0,numpy/lib/nanfunctions.py,[u'2'],1,1," -482,7 +482,7 ;","def nansum(a, axis=None, dtype=None, out=None, keepdims=0);"
3851,1,e6f0c90, Julian Taylor <jtaylor.debian@googlemail.com>," Tue, 1 Oct 2013 20:02:03 +0200",ct: [PATCH] BUG: preserve ndarray subclasses in mediancloses gh-3846,2,14,0,numpy/lib/function_base.py,[u'2'],1,1," -2764,7 +2764,7 ;","def median(a, axis=None, out=None, overwrite_input=False);"
3851,1,e6f0c90, Julian Taylor <jtaylor.debian@googlemail.com>," Tue, 1 Oct 2013 20:02:03 +0200",ct: [PATCH] BUG: preserve ndarray subclasses in mediancloses gh-3846,2,14,0,numpy/lib/tests/test_function_base.py,[u'13'],13,0," -1621,6 +1621,19 ;",def test_array_like(self);
3848,1,069ecae, Sebastian Berg <sebastian@sipsolutions.net>," Tue, 1 Oct 2013 12:44:48 +0200","ct: [PATCH] BUG: Allos linalg.solve to handle zero equations.This was previously correct, but the special case was missingsince the gufunc code cannot handle it.",2,23,4,numpy/linalg/linalg.py,[u'9'],5,4," -368,10 +368,11 ;","def solve(a, b);"
3848,1,069ecae, Sebastian Berg <sebastian@sipsolutions.net>," Tue, 1 Oct 2013 12:44:48 +0200","ct: [PATCH] BUG: Allos linalg.solve to handle zero equations.This was previously correct, but the special case was missingsince the gufunc code cannot handle it.",2,23,4,numpy/linalg/tests/test_linalg.py,[u'18'],18,0," -246,6 +246,24 ;",class ArraySubclass(np.ndarray);
3841,4,399db09, Julian Taylor <jtaylor.debian@googlemail.com>," Mon, 30 Sep 2013 20:25:03 +0200",ct: [PATCH 1/4] DOC: mention new comparison runtime warnings in release notes,1,8,0,doc/release/1.8.0-notes.rst,[u'8'],8,0," -132,6 +132,14 ;",fix changes the returned value. The mirr function called the npv function;
3841,4,80b9c20, Julian Taylor <jtaylor.debian@googlemail.com>," Mon, 30 Sep 2013 20:25:47 +0200",ct: [PATCH 2/4] DOC: move support for large files to featuresits nothing you should need to worry about when porting to 1.8,1,4,5,doc/release/1.8.0-notes.rst,[u'9'],4,5," -100,11 +100,6 ; -144,6 +139,10 ;","fact, it never was true in some corner cases). Instead, us;E.g.:;"
3841,4,6e22646, Julian Taylor <jtaylor.debian@googlemail.com>," Mon, 30 Sep 2013 21:05:36 +0200",ct: [PATCH 3/4] DOC: update percentile release notes and add np.array improvement,1,27,0,doc/release/1.9.0-notes.rst,[u'28'],27,1," -20,12 +20,26 ; -42,6 +56,18 ;",Future Change;can now be specificed using the dtype parameter;
3841,4,a1fe302, Julian Taylor <jtaylor.debian@googlemail.com>," Mon, 30 Sep 2013 21:08:52 +0200",ct: [PATCH 4/4] DOC: minor rewording of partition note,1,6,5,doc/release/1.8.0-notes.rst,[u'11'],6,5," -189,12 +189,13 ;",complementary to the existing `zeros` and `zeros_like` functions;
3839,3,36606ab, Julian Taylor <jtaylor.debian@googlemail.com>," Mon, 30 Sep 2013 20:25:03 +0200",ct: [PATCH 1/3] DOC: mention new comparison runtime warnings in release notes,1,8,0,doc/release/1.8.0-notes.rst,[u'8'],8,0," -132,6 +132,14 ;",fix changes the returned value. The mirr function called the npv function;
3839,3,9505e18, Julian Taylor <jtaylor.debian@googlemail.com>," Mon, 30 Sep 2013 20:25:47 +0200",ct: [PATCH 2/3] DOC: move support for large files to featuresits nothing you should need to worry about when porting to 1.8,1,4,5,doc/release/1.8.0-notes.rst,[u'9'],4,5," -100,11 +100,6 ; -144,6 +139,10 ;","fact, it never was true in some corner cases). Instead, us;E.g.:;"
3839,3,3e0f71a, Julian Taylor <jtaylor.debian@googlemail.com>," Mon, 30 Sep 2013 21:08:52 +0200",ct: [PATCH 3/3] DOC: minor rewording of partition note,1,6,5,doc/release/1.8.0-notes.rst,[u'11'],6,5," -189,12 +189,13 ;",complementary to the existing `zeros` and `zeros_like` functions;
3838,1,ebe4ce7, Julian Taylor <jtaylor.debian@googlemail.com>," Mon, 30 Sep 2013 18:37:47 +0200","ct: [PATCH] MAINT: fix another wrong NULL checksilences cppcheck error, not a bug as the only caller checks the pythonerror.",1,0,0,numpy/core/src/multiarray/ctors.c,[u'2'],1,1," -2960,7 +2960,7 ;","_calc_length(PyObject *start, PyObject *stop, PyObject *step, PyObject **next, ;"
3835,1,1376e1f, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 29 Sep 2013 20:09:24 +0200",ct: [PATCH] BUG: fix small issues found with cppcheckuninitialized use in _strided_to_strided_one_to_n_with_finishwrong error NULL checks in PyArray_MapIterNew and einsum_sub_op_from_strdouble free and memleak in umath_linalg.c.src init_@lapack_func@,4,6,6,numpy/core/src/multiarray/dtype_transfer.c,[u'2'],1,1," -1619,7 +1619,7 ;","_strided_to_strided_one_to_n_with_finish(char *dst, npy_intp dst_stride;"
3835,1,1376e1f, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 29 Sep 2013 20:09:24 +0200",ct: [PATCH] BUG: fix small issues found with cppcheckuninitialized use in _strided_to_strided_one_to_n_with_finishwrong error NULL checks in PyArray_MapIterNew and einsum_sub_op_from_strdouble free and memleak in umath_linalg.c.src init_@lapack_func@,4,6,6,numpy/core/src/multiarray/mapping.c,[u'6'],3,3," -1968,12 +1968,12 ;","PyArray_MapIterNew(PyObject *indexobj, int oned, int fancy;"
3835,1,1376e1f, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 29 Sep 2013 20:09:24 +0200",ct: [PATCH] BUG: fix small issues found with cppcheckuninitialized use in _strided_to_strided_one_to_n_with_finishwrong error NULL checks in PyArray_MapIterNew and einsum_sub_op_from_strdouble free and memleak in umath_linalg.c.src init_@lapack_func@,4,6,6,numpy/core/src/multiarray/multiarraymodule.c,[u'2'],1,1," -2126,7 +2126,7 ;","einsum_sub_op_from_str(PyObject *args, PyObject **str_obj, char **subscripts;"
3835,1,1376e1f, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 29 Sep 2013 20:09:24 +0200",ct: [PATCH] BUG: fix small issues found with cppcheckuninitialized use in _strided_to_strided_one_to_n_with_finishwrong error NULL checks in PyArray_MapIterNew and einsum_sub_op_from_strdouble free and memleak in umath_linalg.c.src init_@lapack_func@,4,6,6,numpy/linalg/umath_linalg.c.src,[u'2'],1,1," -2868,7 +2868,7 ;",init_@lapack_func@(GESDD_PARAMS_t *params;
3834,45,8e36c3a, Charles Harris <charlesr.harris@gmail.com>," Sat, 31 Aug 2013 14:10:42 -0600","ct: [PATCH 01/45] REL: Set raise_warnings to ""release"" in NoseTester constructor.",1,0,0,numpy/testing/nosetester.py,[u'2'],1,1," -137,7 +137,7 ;",class NoseTester(object);
3834,45,44c6f15, Charles Harris <charlesr.harris@gmail.com>," Sat, 31 Aug 2013 14:26:25 -0600",ct: [PATCH 02/45] REL: Update pavement.py.Point release notes to doc/release/1.8.0-notes.rstSet LOG_START to 'v1.6.0'Set LOG_END to 'maintenance/1.8.x'Set DEFAULT_PYTHON to '2.7'Remove Python 2.5 and 3.1 builds.,1,4,12,pavement.py,[u'16'],4,12," -99,17 +99,17 ; -134,10 +134,8 ; -152,10 +150,8 ; -164,10 +160,8 ; -177,10 +171,8 ;",;;;;;
3834,45,34ac69f, Charles Harris <charlesr.harris@gmail.com>," Sat, 31 Aug 2013 20:21:32 -0600","ct: [PATCH 03/45] BUG: Catch DeprecationWarning in numpy/core/tests/test_numeric.py.TestCreationFuncs.check_function was spewing Deprecation warnings inrelease mode. AFAICT, it did not raise errors during development becauseit was buried by a TypeError. The Deprecation in question is at line1141 in multiarray/conversion_utils.c. Hiding the deprecation shouldbe harmless here, but when the Deprecation is turned into an errorit will need to be caught in the test.",1,33,28,numpy/core/tests/test_numeric.py,[u'61'],22,18," -4,6 +4,7 ; -1493,8 +1494,7 ; -1502,36 +1502,41 ;",;def test_basic(self);def setUp(self);
3834,45,ad6351f, Charles Harris <charlesr.harris@gmail.com>," Sat, 31 Aug 2013 20:30:11 -0600",ct: [PATCH 04/45] MAINT: Make Warning handling cleaner in test_concatenate_sloppy0.The test in question is in numpy/core/tests/test_shape_base. The cleanupconsists of using warning.catch_warnings instead of setting and popping thewarnings filter.,1,4,11,numpy/core/tests/test_shape_base.py,[u'15'],4,11," -237,20 +237,13 ;",def test_concatenate_sloppy0();
3834,45,38c0fd9, Charles Harris <charlesr.harris@gmail.com>," Sat, 31 Aug 2013 20:17:52 -0600","ct: [PATCH 05/45] BUG: Make DeprecationWarning always raise error in test.The test_fancy in numpy/lib/tests/test_function_base.py failed inrelease because a DeprecationWarning was no longer raised, it hadbecome a warning.",1,5,3,numpy/lib/tests/test_function_base.py,[u'8'],5,3," -395,10 +395,12 ;",def test_slices(self);
3834,45,d57b8b3, Charles Harris <charlesr.harris@gmail.com>," Tue, 3 Sep 2013 19:26:17 -0600","ct: [PATCH 06/45] BUG: PyArray_PyIntAsIntp had variable size check wrong way around.This bug resulted in using a long type when a long long was required,resulting in numerous errors when numpy was compiled as 64 bits on64 bit windows.",1,2,2,numpy/core/src/multiarray/conversion_utils.c,[u'4'],2,2," -726,9 +726,9 ;",NPY_NO_EXPORT npy_int;
3834,45,631f9ed, Charles Harris <charlesr.harris@gmail.com>," Wed, 28 Aug 2013 13:04:59 -0600","ct: [PATCH 07/45] BUG: Set __hash__ = None for non-hashable classes.Because neither poly1d nor the Polynomial package polynomial classes areimmutable, hence not reliably hashable, they should signal that bysetting __hash__ = None. This also fixes the warningOverriding __eq__ blocks inheritance of __hash__ in 3.xthat is given when the command `python2.7 -3 -c""import numpy""` is run.",2,4,0,numpy/lib/polynomial.py,[u'2'],2,0," -1030,6 +1030,8 ;",class poly1d(object);
3834,45,631f9ed, Charles Harris <charlesr.harris@gmail.com>," Wed, 28 Aug 2013 13:04:59 -0600","ct: [PATCH 07/45] BUG: Set __hash__ = None for non-hashable classes.Because neither poly1d nor the Polynomial package polynomial classes areimmutable, hence not reliably hashable, they should signal that bysetting __hash__ = None. This also fixes the warningOverriding __eq__ blocks inheritance of __hash__ in 3.xthat is given when the command `python2.7 -3 -c""import numpy""` is run.",2,4,0,numpy/polynomial/polytemplate.py,[u'2'],2,0," -79,6 +79,8 ;",class $name(pu.PolyBase) ;
3834,45,8a0cdc6, Charles Harris <charlesr.harris@gmail.com>," Thu, 5 Sep 2013 14:53:50 -0600",ct: [PATCH 08/45] ENH: Add build support for openblas.Backport of gh-3642 and gh-3688.,3,94,61,doc/release/1.8.0-notes.rst,[u'4'],3,0," -136,6 +136,10 ;",of the mirr function remains unchanged;
3834,45,8a0cdc6, Charles Harris <charlesr.harris@gmail.com>," Thu, 5 Sep 2013 14:53:50 -0600",ct: [PATCH 08/45] ENH: Add build support for openblas.Backport of gh-3642 and gh-3688.,3,94,61,numpy/distutils/system_info.py,[u'70'],26,10," -12,6 +12,7 ; -119,7 +120,6 ; -298,6 +298,7 ; -1366,7 +1367,22 ; -1394,14 +1410,6 ; -1455,7 +1463,22 ; -1487,14 +1510,6 ; -1537,6 +1552,23 ;",";;def get_info(name, notfound_action=0);class lapack_opt_info(system_info);def calc_info(self);class blas_opt_info(system_info);def calc_info(self);def calc_info(self);"
3834,45,8a0cdc6, Charles Harris <charlesr.harris@gmail.com>," Thu, 5 Sep 2013 14:53:50 -0600",ct: [PATCH 08/45] ENH: Add build support for openblas.Backport of gh-3642 and gh-3688.,3,94,61,site.cfg.example,[u'81'],20,22," -63,33 +63,46 ; -110,7 +123,6 ; -128,18 +140,3 ;",;;;
3834,45,a29a063, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 6 Sep 2013 23:12:13 +0200",ct: [PATCH 09/45] BUG: fix windows fpu flag check for mixed x87 and sse instructionswindows enables sse intrinsics also on 32 bit by default so we need tocheck both the x87 and sse fpu flags.closes #3680,1,5,0,numpy/core/include/numpy/ufuncobject.h,[u'6'],5,1," -370,8 +370,12 ;",typedef struct _loop1d_info ;
3834,45,6272276, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 7 Sep 2013 09:45:04 +0200",ct: [PATCH 10/45] BUG: fix test_rational PyNumberMethods for python3wrong structure makes VC9 fail to compile under python3,1,12,0,numpy/core/src/umath/test_rational.c.src,[u'12'],12,0," -604,7 +604,9 ; -618,17 +620,27 ;",static PyNumberMethods pyrational_as_number = ;static PyNumberMethods pyrational_as_number = ;
3834,45,a82341e, Charles Harris <charlesr.harris@gmail.com>," Sat, 7 Sep 2013 14:54:41 -0600",ct: [PATCH 11/45] BUG: Fix UFUNC_CHECK_STATUS to work on both 32 and 64 bit Windows.Patch is due to Christolph Gohlke.,1,12,0,numpy/core/include/numpy/ufuncobject.h,[u'13'],12,1," -365,11 +365,21 ; -382,6 +392,7 ;",typedef struct _loop1d_info ;typedef struct _loop1d_info ;
3834,45,883ddee, Christoph Gohlke <cgohlke@uci.edu>," Sat, 7 Sep 2013 18:59:56 -0700",ct: [PATCH 12/45] ENH: export py3k.integer_types from numpy.compat,1,2,0,numpy/compat/py3k.py,[u'3'],2,1," -6,7 +6,8 ;",;
3834,45,b68ba30, Christoph Gohlke <cgohlke@uci.edu>," Sat, 7 Sep 2013 19:10:21 -0700","ct: [PATCH 13/45] BUG: check axes and window length input for all integer typesOn Python 2.7, the long type was excluded.",1,7,5,numpy/fft/helper.py,[u'12'],7,5," -4,7 +4,7 ; -13,6 +13,8 ; -62,7 +64,7 ; -110,7 +112,7 ; -157,7 +159,7 ; -213,7 +215,7 ;",";;def fftshift(x, axes=None);def ifftshift(x, axes=None);def fftfreq(n, d=1.0);def rfftfreq(n, d=1.0);"
3834,45,f99cbfc, Christoph Gohlke <cgohlke@uci.edu>," Sun, 8 Sep 2013 16:29:30 -0700",ct: [PATCH 14/45] ENH: add support for Python 3.4 ast.NameConstant,1,3,0,numpy/lib/utils.py,[u'3'],3,0," -1062,6 +1062,9 ;","def visitName(self, node);"
3834,45,f0c1131, Christoph Gohlke <cgohlke@uci.edu>," Sun, 8 Sep 2013 17:52:03 -0700",ct: [PATCH 15/45] TST: add test for Python 3.4 _ast.NameConstant,1,4,0,numpy/lib/tests/test_utils.py,[u'4'],4,0," -40,5 +40,9 ;",def test_deprecate_fn();
3834,45,a627dce, Charles Harris <charlesr.harris@gmail.com>," Mon, 9 Sep 2013 09:37:29 -0600","ct: [PATCH 16/45] BUG: PyArray_SelectkindConverter should be in conversion_utils.h.Also include numpy/ndarraytypes.h, although this seems not needed inpractice.",1,5,0,numpy/core/src/multiarray/conversion_utils.h,[u'5'],5,0," -1,6 +1,8 ; -37,6 +39,9 ;",";PyArray_TypestrConvert(int itemsize, int gentype);"
3834,45,0f9ee02, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 9 Sep 2013 22:41:03 +0200","ct: [PATCH 17/45] BUG: Fix 0-sized ndindexThe zerosize_ok flag to nditer was missing, so that it did notallow for 0-sized iteration.Closes gh-3714",2,6,0,numpy/lib/index_tricks.py,[u'3'],2,1," -540,7 +540,8 ;","def __init__(self, *shape);"
3834,45,0f9ee02, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 9 Sep 2013 22:41:03 +0200","ct: [PATCH 17/45] BUG: Fix 0-sized ndindexThe zerosize_ok flag to nditer was missing, so that it did notallow for 0-sized iteration.Closes gh-3714",2,6,0,numpy/lib/tests/test_index_tricks.py,[u'4'],4,0," -258,6 +258,10 ;",def test_ndindex();
3834,45,dc8b4be, Charles Harris <charlesr.harris@gmail.com>," Tue, 10 Sep 2013 12:21:52 -0600",ct: [PATCH 18/45] MAINT: Refactor test_xerbla to hide printed error messages.Combine the xerbla override tests with the previous _is_xerbla_safedecorator. The xerbla checks are then made in a forked process where theoutputs are closed so that if xerbla prints a message it does notappear.It would be nice to figure out a Windows version of this test.,1,25,36,numpy/linalg/tests/test_linalg.py,[u'61'],16,23," -1,4 +1,5 ; -868,64 +869,52 ;",;def test_generalized_raise_multiloop();
3834,45,ea237fc, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 12 Sep 2013 12:04:36 +0200",ct: [PATCH 19/45] BUG: ensure raising of invalid on bad complex powersput inf - inf into a volatile variable so it is not optimized away bycompilers.,2,9,7,numpy/core/src/umath/funcs.inc.src,[u'5'],3,2," -351,6 +351,7 ; -360,8 +361,8 ;","nc_pow@c@(@ctype@ *a, @ctype@ *b, @ctype@ *r;nc_pow@c@(@ctype@ *a, @ctype@ *b, @ctype@ *r;"
3834,45,ea237fc, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 12 Sep 2013 12:04:36 +0200",ct: [PATCH 19/45] BUG: ensure raising of invalid on bad complex powersput inf - inf into a volatile variable so it is not optimized away bycompilers.,2,9,7,numpy/core/tests/test_umath.py,[u'11'],6,5," -161,12 +161,13 ;","def assert_complex_equal(x, y);"
3834,45,cd35663, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 12 Sep 2013 12:05:54 +0200",ct: [PATCH 20/45] BUG: fix bad alignment assertsif the arrays are smaller than a vector they don't need to be aligned.,1,3,3,numpy/core/src/umath/simd.inc.src,[u'6'],3,3," -595,7 +595,7 ; -630,7 +630,7 ; -663,7 +663,7 ;","sse2_sqrt_@TYPE@(@type@ * op, @type@ * ip, const npy_intp n;sse2_absolute_@TYPE@(@type@ * op, @type@ * ip, const npy_intp n;sse2_@kind@_@TYPE@(@type@ * ip, @type@ * op, const npy_intp n;"
3834,45,84b69f8, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 12 Sep 2013 17:42:55 +0200","ct: [PATCH 21/45] BUG: f2py, fix decref on wrong objectmissing brackets causes decref on an wrong object.shows itself as abort with negative refcount in test_callback usingpython-dbg.",1,3,2,numpy/f2py/cfuncs.py,[u'5'],3,2," -1072,14 +1072,15 ;",;
3834,45,e8208b4, Charles Harris <charlesr.harris@gmail.com>," Wed, 11 Sep 2013 18:50:32 -0600","ct: [PATCH 22/45] MAINT: Make the qr raw mode test independent of the LAPACK library.The qr factorization is not unique and the values returned by the rawmode may differ between LAPACK versions. Consequently, the resultscannot be checked against known values.Closes #3703.",1,22,38,numpy/linalg/tests/test_linalg.py,[u'60'],14,25," -7,21 +7,27 ; -29,10 +35,12 ; -727,7 +735,6 ; -748,7 +755,6 ; -767,51 +773,32 ; -832,9 +819,6 ;",";def assert_almost_equal(a, b, **kw);def test_reduced_rank();def check_qr(self, a);def check_qr(self, a);def test_mode_all_but_economic(self);"
3834,45,4defe58, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 12 Sep 2013 11:28:36 +0200",ct: [PATCH 23/45] BUG: fix zero initialization with subarray dtypescloses #3724,2,42,27,numpy/core/src/multiarray/ctors.c,[u'58'],20,17," -826,15 +826,16 ; -853,9 +854,9 ; -989,7 +990,7 ; -1065,6 +1066,22 ; -2685,22 +2702,16 ; -2714,13 +2725,6 ;","discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;PyArray_NewFromDescr(PyTypeObject *subtype, PyArray_Descr *descr, int nd;PyArray_NewFromDescr(PyTypeObject *subtype, PyArray_Descr *descr, int nd;PyArray_NewFromDescr(PyTypeObject *subtype, PyArray_Descr *descr, int nd;NPY_NO_EXPORT PyObject ;PyArray_Zeros(int nd, npy_intp *dims, PyArray_Descr *type, int is_f_order;"
3834,45,4defe58, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 12 Sep 2013 11:28:36 +0200",ct: [PATCH 23/45] BUG: fix zero initialization with subarray dtypescloses #3724,2,42,27,numpy/core/tests/test_multiarray.py,[u'11'],7,0," -406,6 +406,17 ;",def test_zeros(self);
3834,45,2863c82, Charles Harris <charlesr.harris@gmail.com>," Fri, 13 Sep 2013 14:34:10 -0600",ct: [PATCH 24/45] DOC: Make savez_compressed show up in the documentation.Closes #3708.,1,0,0,doc/source/reference/routines.io.rst,[u'1'],1,0," -11,6 +11,7 ;",NPZ file;
3834,45,1816fa0, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 14 Sep 2013 14:53:26 +0200","ct: [PATCH 25/45] DOC: add isclose and partition to reference and link some docsalso drop sometrue/alltrue link, its equivalent to any/all.",5,10,0,doc/source/reference/routines.logic.rst,[u'1'],1,0," -50,6 +50,7 ;",Compariso;
3834,45,1816fa0, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 14 Sep 2013 14:53:26 +0200","ct: [PATCH 25/45] DOC: add isclose and partition to reference and link some docsalso drop sometrue/alltrue link, its equivalent to any/all.",5,10,0,doc/source/reference/routines.sort.rst,[u'2'],2,0," -14,6 +14,8 ;",Sortin;
3834,45,1816fa0, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 14 Sep 2013 14:53:26 +0200","ct: [PATCH 25/45] DOC: add isclose and partition to reference and link some docsalso drop sometrue/alltrue link, its equivalent to any/all.",5,10,0,numpy/add_newdocs.py,[u'2'],2,0," -4189,6 +4189,7 ; -4253,6 +4254,7 ;","def luf(lamdaexpr, *args, **kwargs);def luf(lamdaexpr, *args, **kwargs);"
3834,45,1816fa0, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 14 Sep 2013 14:53:26 +0200","ct: [PATCH 25/45] DOC: add isclose and partition to reference and link some docsalso drop sometrue/alltrue link, its equivalent to any/all.",5,10,0,numpy/core/fromnumeric.py,[u'4'],4,0," -576,6 +576,7 ; -659,6 +660,7 ; -707,6 +709,7 ; -819,6 +822,7 ;","def partition(a, kth, axis=-1, kind='introselect', order=None);def argpartition(a, kth, axis=-1, kind='introselect', order=None);def sort(a, axis=-1, kind='quicksort', order=None);def argsort(a, axis=-1, kind='quicksort', order=None);"
3834,45,1816fa0, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 14 Sep 2013 14:53:26 +0200","ct: [PATCH 25/45] DOC: add isclose and partition to reference and link some docsalso drop sometrue/alltrue link, its equivalent to any/all.",5,10,0,numpy/core/numeric.py,[u'2'],1,1," -2083,7 +2083,7 ;","def allclose(a, b, rtol=1.e-5, atol=1.e-8);"
3834,45,7206b1d, Charles Harris <charlesr.harris@gmail.com>," Sat, 14 Sep 2013 11:19:21 -0600",ct: [PATCH 26/45] MAINT: Move FutureWarning in nansum.Currently a FutureWarning about the sum of empty slices changing to zerois always raised. Instead make it depend on the actual occurrence of anempty slice.,1,2,4,numpy/lib/nanfunctions.py,[u'6'],2,4," -478,10 +478,6 ; -489,6 +485,8 ;","def nansum(a, axis=None, dtype=None, out=None, keepdims=0);def nansum(a, axis=None, dtype=None, out=None, keepdims=0);"
3834,45,0cdc9f1, Christoph Gohlke <cgohlke@uci.edu>," Sat, 14 Sep 2013 11:27:22 -0700",ct: [PATCH 27/45] BUG: use correct type for hash valuesAs of Python 3.2 hash values are of type Py_hash_t. Previous versions use C long.,4,47,34,numpy/core/include/numpy/npy_3kcompat.h,[u'13'],7,0," -397,6 +397,19 ;",simple_capsule_dtor(void *ptr;
3834,45,0cdc9f1, Christoph Gohlke <cgohlke@uci.edu>," Sat, 14 Sep 2013 11:27:22 -0700",ct: [PATCH 27/45] BUG: use correct type for hash valuesAs of Python 3.2 hash values are of type Py_hash_t. Previous versions use C long.,4,47,34,numpy/core/src/multiarray/hashdescr.c,[u'6'],1,2," -243,7 +243,7 ; -296,12 +296,12 ;","static int _array_descr_walk(PyArray_Descr* descr, PyObject *l;static int _PyArray_DescrHashImp(PyArray_Descr *descr, long *hash;"
3834,45,0cdc9f1, Christoph Gohlke <cgohlke@uci.edu>," Sat, 14 Sep 2013 11:27:22 -0700",ct: [PATCH 27/45] BUG: use correct type for hash valuesAs of Python 3.2 hash values are of type Py_hash_t. Previous versions use C long.,4,47,34,numpy/core/src/multiarray/hashdescr.h,[u'2'],1,1," -1,7 +1,7 ;",;
3834,45,0cdc9f1, Christoph Gohlke <cgohlke@uci.edu>," Sat, 14 Sep 2013 11:27:22 -0700",ct: [PATCH 27/45] BUG: use correct type for hash valuesAs of Python 3.2 hash values are of type Py_hash_t. Previous versions use C long.,4,47,34,numpy/core/src/multiarray/scalartypes.c.src,[u'60'],14,15," -2864,10 +2864,10 ; -2875,10 +2875,10 ; -2887,10 +2887,10 ; -2903,16 +2903,16 ; -2930,10 +2930,10 ; -2948,25 +2948,25 ; -2993,17 +2993,17 ; -3023,13 +3023,13 ; -3038,14 +3038,14 ; -3061,7 +3061,7 ;","void_arrtype_new(PyTypeObject *type, PyObject *args, PyObject *NPY_UNUSED(kwds);static lon;static lon;int_arrtype_hash(PyObject *obj;static lon;static lon;static lon;c@lname@_arrtype_hash(PyObject *obj;object_arrtype_hash(PyObject *obj;void_arrtype_hash(PyObject *obj;"
3834,45,13ccbb6, Charles Harris <charlesr.harris@gmail.com>," Sat, 14 Sep 2013 16:17:06 -0600",ct: [PATCH 28/45] TST: Test that FutureWarning is not raised by nansum if not all-nan.,1,3,0,numpy/lib/tests/test_nanfunctions.py,[u'3'],3,0," -248,6 +248,9 ;",def test_allnans(self);
3834,45,780cf38, Ralf Gommers <ralf.gommers@googlemail.com>," Mon, 16 Sep 2013 23:42:56 +0200",ct: [PATCH 29/45] MAINT: update release scripts for building OS X binaries.Works with Python 3.x now that bdist_mpkg is ported (thanks @matthew-brett).,3,4,12,pavement.py,[u'10'],3,7," -24,8 +24,7 ; -437,12 +436,9 ;",;def _build_mpkg(pyver);
3834,45,780cf38, Ralf Gommers <ralf.gommers@googlemail.com>," Mon, 16 Sep 2013 23:42:56 +0200",ct: [PATCH 29/45] MAINT: update release scripts for building OS X binaries.Works with Python 3.x now that bdist_mpkg is ported (thanks @matthew-brett).,3,4,12,release.sh,[u'4'],0,4," -51,7 +51,6 ; -60,8 +59,6 ; -70,7 +67,6 ;",paver bdist_superpack -p 3.;paver bdist_superpack -p 2.;paver write_release_and_lo;
3834,45,780cf38, Ralf Gommers <ralf.gommers@googlemail.com>," Mon, 16 Sep 2013 23:42:56 +0200",ct: [PATCH 29/45] MAINT: update release scripts for building OS X binaries.Works with Python 3.x now that bdist_mpkg is ported (thanks @matthew-brett).,3,4,12,tools/numpy-macosx-installer/new-create-dmg,[u'2'],1,1," -58,7 +58,7 ;","DMG_DIR=""$(cd $DMG_DIRNAME > /dev/null; pwd);"
3834,45,f200034, Jay Bourque <jay.bourque@continuum.io>," Wed, 18 Sep 2013 09:47:40 -0500","ct: [PATCH 30/45] BUG: Fix issue with PR #3491Don't convert unicode string to ascii string before getting byte length. Also, get length of non string type as ascii or unicode depending on output string type.",2,21,7,numpy/core/src/multiarray/ctors.c,[u'25'],18,7," -521,7 +521,7 ; -539,8 +539,19 ; -569,7 +580,7 ; -1547,12 +1558,12 ;","PyArray_AssignFromSequence(PyArrayObject *self, PyObject *v;discover_itemsize(PyObject *s, int nd, int *itemsize, int size_as_string;discover_itemsize(PyObject *s, int nd, int *itemsize, int size_as_string;PyArray_GetArrayParamsFromObject(PyObject *op;"
3834,45,f200034, Jay Bourque <jay.bourque@continuum.io>," Wed, 18 Sep 2013 09:47:40 -0500","ct: [PATCH 30/45] BUG: Fix issue with PR #3491Don't convert unicode string to ascii string before getting byte length. Also, get length of non string type as ascii or unicode depending on output string type.",2,21,7,numpy/core/tests/test_api.py,[u'3'],3,0," -274,6 +274,9 ;",def test_array_astype();
3834,45,0bac77e, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 21 Sep 2013 21:16:36 +0200",ct: [PATCH 31/45] BUG: make checking for sse intrinsics more robustcheck for two intrinsics from [ex]mmintrin.h instead of only checkingthe existance of the headers.E.g. mingw 4.2 emmintrin.h can be included even if SSE2 is disabled.closes #3760,6,38,20,numpy/core/include/numpy/npy_common.h,[u'8'],8,0," -18,6 +18,14 ;",;
3834,45,0bac77e, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 21 Sep 2013 21:16:36 +0200",ct: [PATCH 31/45] BUG: make checking for sse intrinsics more robustcheck for two intrinsics from [ex]mmintrin.h instead of only checkingthe existance of the headers.E.g. mingw 4.2 emmintrin.h can be included even if SSE2 is disabled.closes #3760,6,38,20,numpy/core/setup.py,[u'10'],8,2," -165,8 +165,14 ;",def check_funcs(funcs_name);
3834,45,0bac77e, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 21 Sep 2013 21:16:36 +0200",ct: [PATCH 31/45] BUG: make checking for sse intrinsics more robustcheck for two intrinsics from [ex]mmintrin.h instead of only checkingthe existance of the headers.E.g. mingw 4.2 emmintrin.h can be included even if SSE2 is disabled.closes #3760,6,38,20,numpy/core/setup_common.py,[u'5'],4,1," -107,7 +107,8 ; -115,6 +116,8 ;","def check_api_version(apiversion, codegen_dir);def check_api_version(apiversion, codegen_dir);"
3834,45,0bac77e, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 21 Sep 2013 21:16:36 +0200",ct: [PATCH 31/45] BUG: make checking for sse intrinsics more robustcheck for two intrinsics from [ex]mmintrin.h instead of only checkingthe existance of the headers.E.g. mingw 4.2 emmintrin.h can be included even if SSE2 is disabled.closes #3760,6,38,20,numpy/core/src/multiarray/einsum.c.src,[u'6'],3,3," -14,16 +14,16 ; -32,7 +32,7 ;",;;
3834,45,0bac77e, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 21 Sep 2013 21:16:36 +0200",ct: [PATCH 31/45] BUG: make checking for sse intrinsics more robustcheck for two intrinsics from [ex]mmintrin.h instead of only checkingthe existance of the headers.E.g. mingw 4.2 emmintrin.h can be included even if SSE2 is disabled.closes #3760,6,38,20,numpy/core/src/umath/loops.c.src,[u'3'],2,1," -10,6 +10,7 ; -564,7 +565,7 ;",;NPY_NO_EXPORT voi;
3834,45,0bac77e, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 21 Sep 2013 21:16:36 +0200",ct: [PATCH 31/45] BUG: make checking for sse intrinsics more robustcheck for two intrinsics from [ex]mmintrin.h instead of only checkingthe existance of the headers.E.g. mingw 4.2 emmintrin.h can be included even if SSE2 is disabled.closes #3760,6,38,20,numpy/core/src/umath/simd.inc.src,[u'26'],13,13," -16,10 +16,10 ; -140,7 +140,7 ; -151,7 +151,7 ; -167,7 +167,7 ; -185,7 +185,7 ; -216,7 +216,7 ; -234,7 +234,7 ; -278,7 +278,7 ; -295,7 +295,7 ; -317,7 +317,7 ; -328,7 +328,7 ; -843,6 +843,6 ;",";static const npy_int32 fanout_4[] = ;sse2_@func@_@TYPE@(@type@ *, @type@ *, const npy_intp n);run_@name@_simd_@func@_@TYPE@(char **args, npy_intp *dimensions, npy_intp *step;sse2_binary_scalar2_@kind@_@TYPE@(@type@ * op, @type@ * ip1, @type@ * ip2;run_binary_simd_@kind@_@TYPE@(char **args, npy_intp *dimensions, npy_intp *step;sse2_binary_scalar2_@kind@_@TYPE@(npy_bool * op, @type@ * ip1, @type@ * ip2;sse2_binary_@kind@_BOOL(npy_bool * op, npy_bool * ip1, npy_bool * ip2;sse2_reduce_@kind@_BOOL(npy_bool * op, npy_bool * ip, npy_intp n);sse2_@kind@_BOOL(npy_bool *, npy_bool *, const npy_intp n);run_unary_simd_@kind@_BOOL(char **args, npy_intp *dimensions, npy_intp *steps;sse2_@kind@_BOOL(@type@ * op, @type@ * ip, const npy_intp n;"
3834,45,eb93ee7, Charles Harris <charlesr.harris@gmail.com>," Mon, 23 Sep 2013 08:04:43 -0600","ct: [PATCH 32/45] BLD: Backport Ralf's gh-3766 fixes to the bento build scripts.The original PR included fixes for ufunc_override that are notneeded for 1.8, so I just copied the files numpy/core/bento.info andnumpy/core/bscript from master.",2,15,2,numpy/core/bento.info,[u'9'],9,0," -32,3 +32,12 ;",Library;
3834,45,eb93ee7, Charles Harris <charlesr.harris@gmail.com>," Mon, 23 Sep 2013 08:04:43 -0600","ct: [PATCH 32/45] BLD: Backport Ralf's gh-3766 fixes to the bento build scripts.The original PR included fixes for ufunc_override that are notneeded for 1.8, so I just copied the files numpy/core/bento.info andnumpy/core/bscript from master.",2,15,2,numpy/core/bscript,[u'8'],6,2," -234,6 +234,9 ; -502,7 +505,7 ; -525,5 +528,6 ;",def check_math_runtime(conf);def pre_build(context);def pre_build(context);
3834,45,80204cf, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 22 Sep 2013 22:22:21 +0200",ct: [PATCH 33/45] TST: wrong indent in multiarray tests,1,5,5,numpy/core/tests/test_multiarray.py,[u'10'],5,5," -3518,11 +3518,11 ;",def test_mapiter(self);
3834,45,ca98dac, Charles Harris <charlesr.harris@gmail.com>," Mon, 23 Sep 2013 08:40:02 -0600",ct: [PATCH 34/45] ENH: Add gfortran to travis.yml configuration to enable f2py.The f2py tests would not run without gfortran.,1,0,0,.travis.yml,[u'1'],1,0," -26,6 +26,7 ;",before_install;
3834,45,f030845, Julian Taylor <jtaylor.debian@googlemail.com>," Tue, 24 Sep 2013 00:59:06 +0200",ct: [PATCH 35/45] TST: mark gen_alignment_data privateit not very useful outside numpy and there might be changes required infuture e.g. to add min_size.,3,14,14,numpy/core/tests/test_scalarmath.py,[u'8'],4,4," -2,7 +2,7 ; -49,9 +49,9 ;",;class TestBaseMath(TestCase);
3834,45,f030845, Julian Taylor <jtaylor.debian@googlemail.com>," Tue, 24 Sep 2013 00:59:06 +0200",ct: [PATCH 35/45] TST: mark gen_alignment_data privateit not very useful outside numpy and there might be changes required infuture e.g. to add min_size.,3,14,14,numpy/core/tests/test_umath.py,[u'18'],9,9," -4,7 +4,7 ; -98,15 +98,15 ; -670,8 +670,8 ; -691,8 +691,8 ;",;def test_power_float(self);class TestMinMax(TestCase);class TestAbsolute(TestCase);
3834,45,f030845, Julian Taylor <jtaylor.debian@googlemail.com>," Tue, 24 Sep 2013 00:59:06 +0200",ct: [PATCH 35/45] TST: mark gen_alignment_data privateit not very useful outside numpy and there might be changes required infuture e.g. to add min_size.,3,14,14,numpy/testing/utils.py,[u'2'],1,1," -1512,7 +1512,7 ;","def assert_no_warnings(func, *args, **kw);"
3834,45,7bd52d9, Charles Harris <charlesr.harris@gmail.com>," Fri, 27 Sep 2013 11:04:16 -0600","ct: [PATCH 36/45] BUG: Fix failed import of mlab.Fix imports in the numpy/oldnumeric/mlab.py module.  The problem wasthat the module used imports of the formfrom . import compatwhich do not work as '.' is apparently undefined when the module importis attempted. The fix is ugly, but it works and the oldnumeric module isgoing away in 1.9.Closes #3803.",2,27,22,numpy/oldnumeric/mlab.py,[u'40'],14,17," -15,7 +15,8 ; -92,7 +93,6 ; -104,25 +104,21 ;",";def cov(m, y=None, rowvar=0, bias=0);def corrcoef(x, y=None);"
3834,45,7bd52d9, Charles Harris <charlesr.harris@gmail.com>," Fri, 27 Sep 2013 11:04:16 -0600","ct: [PATCH 36/45] BUG: Fix failed import of mlab.Fix imports in the numpy/oldnumeric/mlab.py module.  The problem wasthat the module used imports of the formfrom . import compatwhich do not work as '.' is apparently undefined when the module importis attempted. The fix is ugly, but it works and the oldnumeric module isgoing away in 1.9.Closes #3803.",2,27,22,numpy/oldnumeric/tests/test_regression.py,[u'9'],7,0," -9,3 +9,12 ;","def test_numeric_random(self, level=rlevel);"
3834,45,cf13331, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 26 Sep 2013 22:31:15 +0200",ct: [PATCH 37/45] BUG: do a boolean check on casting bool to other typesavoids some issues of booleans coming from external buffers that may notonly contain 0 or 1.closes #3801.,2,12,0,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,[u'2'],1,1," -759,7 +759,7 ;",NPY_NO_EXPORT PyArray_StridedUnaryOp ;
3834,45,cf13331, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 26 Sep 2013 22:31:15 +0200",ct: [PATCH 37/45] BUG: do a boolean check on casting bool to other typesavoids some issues of booleans coming from external buffers that may notonly contain 0 or 1.closes #3801.,2,12,0,numpy/core/tests/test_multiarray.py,[u'11'],11,0," -531,6 +531,17 ;",def test_test_interning(self);
3834,45,58cb65f, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 23 Sep 2013 19:38:20 +0200","ct: [PATCH 38/45] BUG: INCREF before DECREF when copying object arrays.Only the change in dtype_transfer actually seems to berelated to the simple np.copyto(a, a) bug, when a is a scalarobject array.It seemed however safer to me, to generally turn around thelogic, even if it may not be necessary and in one placerequires an extra temporary variable.Closes gh-3787",3,21,10,numpy/core/src/multiarray/arraytypes.c.src,[u'17'],10,7," -501,9 +501,10 ; -1158,9 +1159,11 ; -1866,10 +1869,10 ; -1894,10 +1897,10 ; -3222,8 +3225,8 ;","OBJECT_setitem(PyObject *op, char *ov, PyArrayObject *ap;static voi;OBJECT_copyswapn(PyObject **dst, npy_intp dstride, PyObject **src;OBJECT_copyswap(PyObject **dst, PyObject **src, int NPY_UNUSED(swap);OBJECT_fillwithscalar(PyObject **buffer, npy_intp length, PyObject **value;"
3834,45,58cb65f, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 23 Sep 2013 19:38:20 +0200","ct: [PATCH 38/45] BUG: INCREF before DECREF when copying object arrays.Only the change in dtype_transfer actually seems to berelated to the simple np.copyto(a, a) bug, when a is a scalarobject array.It seemed however safer to me, to generally turn around thelogic, even if it may not be necessary and in one placerequires an extra temporary variable.Closes gh-3787",3,21,10,numpy/core/src/multiarray/dtype_transfer.c,[u'6'],3,3," -127,14 +127,14 ;","_strided_to_strided_copy_references(char *dst, npy_intp dst_stride;"
3834,45,58cb65f, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 23 Sep 2013 19:38:20 +0200","ct: [PATCH 38/45] BUG: INCREF before DECREF when copying object arrays.Only the change in dtype_transfer actually seems to berelated to the simple np.copyto(a, a) bug, when a is a scalarobject array.It seemed however safer to me, to generally turn around thelogic, even if it may not be necessary and in one placerequires an extra temporary variable.Closes gh-3787",3,21,10,numpy/core/tests/test_regression.py,[u'8'],8,0," -1665,6 +1665,14 ;",def test_object_array_self_reference(self);
3834,45,2960056, Julian Taylor <jtaylor.debian@googlemail.com>," Wed, 25 Sep 2013 23:28:55 +0200",ct: [PATCH 39/45] BUG: fix hashing of long integers under python3python3 long_hash is more complex than int_hash so instead of copyinginto numpy call it via the Python capi.Same for long long for wich the numpy hash function is not correct withpython 2.7 on i386.Will be slower but doesn't need adapting each timy python changes.closes #3793,2,48,37,numpy/core/src/multiarray/scalartypes.c.src,[u'65'],13,16," -2872,8 +2872,8 ; -2886,6 +2886,15 ; -2898,49 +2907,31 ; -4079,7 +4070,7 ;",static npy_hash_;static npy_hash_;int_arrtype_hash(PyObject *obj;initialize_numeric_types(void;
3834,45,2960056, Julian Taylor <jtaylor.debian@googlemail.com>," Wed, 25 Sep 2013 23:28:55 +0200",ct: [PATCH 39/45] BUG: fix hashing of long integers under python3python3 long_hash is more complex than int_hash so instead of copyinginto numpy call it via the Python capi.Same for long long for wich the numpy hash function is not correct withpython 2.7 on i386.Will be slower but doesn't need adapting each timy python changes.closes #3793,2,48,37,numpy/core/tests/test_multiarray.py,[u'20'],9,0," -59,6 +59,26 ;",def test_otherflags(self);
3834,45,fdd9a2b," ""Nathaniel J. Smith"" <njs@pobox.com>"," Fri, 27 Sep 2013 18:12:52 +0100","ct: [PATCH 40/45] [fix] Check for errors in PyArray_CanCastTypeto DEPRECATEIf a user had set warnings to raise errors, then this DEPRECATE wouldleave us with an unpropagated exception and cause havoc downstream.Unfortunately there is no way to propagate an exception from here, sowe just have to throw it away :-(. But this is still better than thealternative...",2,20,3,numpy/core/src/multiarray/convert_datatype.c,[u'10'],7,3," -583,9 +583,13 ;","PyArray_CanCastTypeTo(PyArray_Descr *from, PyArray_Descr *to;"
3834,45,fdd9a2b," ""Nathaniel J. Smith"" <njs@pobox.com>"," Fri, 27 Sep 2013 18:12:52 +0100","ct: [PATCH 40/45] [fix] Check for errors in PyArray_CanCastTypeto DEPRECATEIf a user had set warnings to raise errors, then this DEPRECATE wouldleave us with an unpropagated exception and cause havoc downstream.Unfortunately there is no way to propagate an exception from here, sowe just have to throw it away :-(. But this is still better than thealternative...",2,20,3,numpy/core/tests/test_ufunc.py,[u'13'],13,0," -787,6 +787,19 ;","def add_inplace(a, b);"
3834,45,4505715," ""Nathaniel J. Smith"" <njs@pobox.com>"," Fri, 27 Sep 2013 20:29:14 +0100","ct: [PATCH 41/45] [fix] If we fail to raise an error, at least dump something to the console",2,25,8,numpy/core/src/multiarray/convert_datatype.c,[u'14'],10,4," -583,12 +583,18 ;","PyArray_CanCastTypeTo(PyArray_Descr *from, PyArray_Descr *to;"
3834,45,4505715," ""Nathaniel J. Smith"" <njs@pobox.com>"," Fri, 27 Sep 2013 20:29:14 +0100","ct: [PATCH 41/45] [fix] If we fail to raise an error, at least dump something to the console",2,25,8,numpy/core/tests/test_ufunc.py,[u'19'],15,4," -793,12 +793,23 ;","def add_inplace(a, b);"
3834,45,f48172e, Alex Barth <alex@developmentseed.org>," Sat, 28 Sep 2013 09:36:01 -0400","ct: [PATCH 42/45] Fix platform detection for intel platform where get_platform() returns a string ending in x86_64, for instance 'macosx-10.8-x86_64'.",1,2,0,numpy/distutils/system_info.py,[u'2'],2,0," -1386,6 +1386,7 ; -1482,6 +1483,7 ;",def calc_info(self);def calc_info(self);
3834,45,edef76e, Jason Madden <jamadden@gmail.com>," Sat, 28 Sep 2013 10:24:37 -0500",ct: [PATCH 43/45] Do not fail with NameError if SandboxViolation is raised,1,3,0,numpy/distutils/system_info.py,[u'4'],3,1," -217,6 +217,7 ; -234,7 +235,8 ;","def libpaths(paths, bits);def libpaths(paths, bits);"
3834,45,2d897e9, Pauli Virtanen <pav@iki.fi>," Sat, 28 Sep 2013 20:43:40 +0300",ct: [PATCH 44/45] BUG: core: consider both C and F order buffers as contiguous,2,35,5,numpy/core/src/multiarray/conversion_utils.c,[u'33'],23,5," -146,7 +146,11 ; -154,22 +158,41 ;","PyArray_IntpConverter(PyObject *obj, PyArray_Dims *seq;PyArray_BufferConverter(PyObject *obj, PyArray_Chunk *buf;"
3834,45,2d897e9, Pauli Virtanen <pav@iki.fi>," Sat, 28 Sep 2013 20:43:40 +0300",ct: [PATCH 44/45] BUG: core: consider both C and F order buffers as contiguous,2,35,5,numpy/core/tests/test_regression.py,[u'7'],6,0," -1912,6 +1912,13 ;",def test_copymodule_preserves_f_contiguity(self);
3834,45,1376e1f, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 29 Sep 2013 20:09:24 +0200",ct: [PATCH 45/45] BUG: fix small issues found with cppcheckuninitialized use in _strided_to_strided_one_to_n_with_finishwrong error NULL checks in PyArray_MapIterNew and einsum_sub_op_from_strdouble free and memleak in umath_linalg.c.src init_@lapack_func@,4,6,6,numpy/core/src/multiarray/dtype_transfer.c,[u'2'],1,1," -1619,7 +1619,7 ;","_strided_to_strided_one_to_n_with_finish(char *dst, npy_intp dst_stride;"
3834,45,1376e1f, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 29 Sep 2013 20:09:24 +0200",ct: [PATCH 45/45] BUG: fix small issues found with cppcheckuninitialized use in _strided_to_strided_one_to_n_with_finishwrong error NULL checks in PyArray_MapIterNew and einsum_sub_op_from_strdouble free and memleak in umath_linalg.c.src init_@lapack_func@,4,6,6,numpy/core/src/multiarray/mapping.c,[u'6'],3,3," -1968,12 +1968,12 ;","PyArray_MapIterNew(PyObject *indexobj, int oned, int fancy;"
3834,45,1376e1f, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 29 Sep 2013 20:09:24 +0200",ct: [PATCH 45/45] BUG: fix small issues found with cppcheckuninitialized use in _strided_to_strided_one_to_n_with_finishwrong error NULL checks in PyArray_MapIterNew and einsum_sub_op_from_strdouble free and memleak in umath_linalg.c.src init_@lapack_func@,4,6,6,numpy/core/src/multiarray/multiarraymodule.c,[u'2'],1,1," -2126,7 +2126,7 ;","einsum_sub_op_from_str(PyObject *args, PyObject **str_obj, char **subscripts;"
3834,45,1376e1f, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 29 Sep 2013 20:09:24 +0200",ct: [PATCH 45/45] BUG: fix small issues found with cppcheckuninitialized use in _strided_to_strided_one_to_n_with_finishwrong error NULL checks in PyArray_MapIterNew and einsum_sub_op_from_strdouble free and memleak in umath_linalg.c.src init_@lapack_func@,4,6,6,numpy/linalg/umath_linalg.c.src,[u'2'],1,1," -2868,7 +2868,7 ;",init_@lapack_func@(GESDD_PARAMS_t *params;
3832,1,34fc33e, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 29 Sep 2013 20:09:24 +0200",ct: [PATCH] BUG: fix small issues found with cppcheckuninitialized use in _strided_to_strided_one_to_n_with_finishwrong error NULL checks in PyArray_MapIterNew and einsum_sub_op_from_strdouble free and memleak in umath_linalg.c.src init_@lapack_func@,4,6,6,numpy/core/src/multiarray/dtype_transfer.c,[u'2'],1,1," -1619,7 +1619,7 ;","_strided_to_strided_one_to_n_with_finish(char *dst, npy_intp dst_stride;"
3832,1,34fc33e, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 29 Sep 2013 20:09:24 +0200",ct: [PATCH] BUG: fix small issues found with cppcheckuninitialized use in _strided_to_strided_one_to_n_with_finishwrong error NULL checks in PyArray_MapIterNew and einsum_sub_op_from_strdouble free and memleak in umath_linalg.c.src init_@lapack_func@,4,6,6,numpy/core/src/multiarray/mapping.c,[u'6'],3,3," -1970,12 +1970,12 ;","PyArray_MapIterNew(PyObject *indexobj, int oned, int fancy;"
3832,1,34fc33e, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 29 Sep 2013 20:09:24 +0200",ct: [PATCH] BUG: fix small issues found with cppcheckuninitialized use in _strided_to_strided_one_to_n_with_finishwrong error NULL checks in PyArray_MapIterNew and einsum_sub_op_from_strdouble free and memleak in umath_linalg.c.src init_@lapack_func@,4,6,6,numpy/core/src/multiarray/multiarraymodule.c,[u'2'],1,1," -2148,7 +2148,7 ;","einsum_sub_op_from_str(PyObject *args, PyObject **str_obj, char **subscripts;"
3832,1,34fc33e, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 29 Sep 2013 20:09:24 +0200",ct: [PATCH] BUG: fix small issues found with cppcheckuninitialized use in _strided_to_strided_one_to_n_with_finishwrong error NULL checks in PyArray_MapIterNew and einsum_sub_op_from_strdouble free and memleak in umath_linalg.c.src init_@lapack_func@,4,6,6,numpy/linalg/umath_linalg.c.src,[u'2'],1,1," -2868,7 +2868,7 ;",init_@lapack_func@(GESDD_PARAMS_t *params;
3830,4,803a75f, Yaron de Leeuw <jarondl@server.fake>," Sun, 29 Sep 2013 10:35:21 +0300","ct: [PATCH 1/4] MAINT (API?): organize npyio.recfromcsv defaultsOrganizes the default kwargs in recfromcsv. Changes two undocumentedkwargs behaviors:*  previously, if a user set `names=None`, it was ignored and replaced   with `names=True`*  the `dtype` kwarg was ignored. If `update` was given, it was used as   `dtype`, and if not, None was used. We can retain the `update` behavior by using `kwargs.setdefault(""dtype"",kwargs.get('update', None))`.  This Closes #311 .",1,12,10,numpy/lib/npyio.py,[u'22'],12,10," -1844,7 +1844,7 ; -1872,16 +1872,18 ;","def recfromtxt(fname, **kwargs);def recfromcsv(fname, **kwargs);"
3830,4,3b99f37, Yaron de Leeuw <jarondl@server.fake>," Mon, 25 Nov 2013 16:25:25 +0200","ct: [PATCH 2/4] TST: Added regression test for recfromcsv dtype error, as suggested by @hpaulj",1,8,0,numpy/lib/tests/test_io.py,[u'8'],8,0," -1572,6 +1572,14 ;",def test_recfromcsv(self);
3830,4,39f1133, Yaron de Leeuw <jarondl@server.fake>," Thu, 27 Feb 2014 20:13:03 +0200","ct: [PATCH 3/4] DOC: npyio.recfromcsv keyword argument changesAdded a note to recfromcsv about the `dtype` keyword,as suggested by @hpaulj. Also added a note to the release notes,about the change in the `update` keyword, as suggested by @charris.",2,11,0,doc/release/1.9.0-notes.rst,[u'6'],6,0," -207,6 +207,12 ;",is being casted. Previously the casting was allowed even if the result wa;
3830,4,39f1133, Yaron de Leeuw <jarondl@server.fake>," Thu, 27 Feb 2014 20:13:03 +0200","ct: [PATCH 3/4] DOC: npyio.recfromcsv keyword argument changesAdded a note to recfromcsv about the `dtype` keyword,as suggested by @hpaulj. Also added a note to the release notes,about the change in the `update` keyword, as suggested by @charris.",2,11,0,numpy/lib/npyio.py,[u'5'],5,0," -1871,6 +1871,11 ;","def recfromcsv(fname, **kwargs);"
3830,4,aff43c0, jarondl <jarondl@users.noreply.github.com>," Wed, 12 Mar 2014 08:57:54 +0200",ct: [PATCH 4/4] STY: change and delete some comments in recfromcsvRemoved two irrelevant comments about code history.P.S. my first try with Github's online editor.,1,0,5,numpy/lib/npyio.py,[u'6'],1,5," -1877,15 +1877,11 ;","def recfromcsv(fname, **kwargs);"
3829,3,e765197, Yaron de Leeuw <jarondl@server.fake>," Sun, 29 Sep 2013 09:51:18 +0300","ct: [PATCH 1/3] STY: pep8 for npyioVarious pep8 fixes for npyio.pyAlso reorganized the imports, and removed the unnecessary (I hope)`_string_like = _is_string_like` statement.",1,57,60,numpy/lib/npyio.py,[u'117'],26,27," -1,29 +1,26 ; -33,11 +30,11 ; -67,7 +64,6 ; -86,7 +82,6 ; -119,17 +114,20 ; -187,8 +185,8 ; -221,7 +219,7 ; -253,7 +251,6 ; -376,7 +373,7 ; -400,6 +397,7 ; -452,6 +450,7 ; -529,6 +528,7 ; -553,6 +553,7 ; -568,7 +569,8 ; -576,7 +578,7 ; -589,18 +591,18 ; -620,7 +622,6 ; -764,7 +765,7 ; -878,7 +879,7 ; -1036,7 +1037,7 ; -1067,6 +1068,7 ; -1150,14 +1152,11 ; -1321,9 +1320,10 ; -1334,8 +1334,9 ; -1346,9 +1347,9 ; -1403,7 +1404,6 ; -1422,7 +1422,6 ; -1440,7 +1439,7 ; -1478,9 +1477,9 ; -1499,7 +1498,7 ; -1532,9 +1531,11 ; -1571,7 +1572,6 ; -1713,15 +1713,14 ; -1729,9 +1728,8 ; -1783,7 +1781,6 ;",";;def seek(self, offset, whence=0);def tell(self);class BagObj(object);class NpzFile(object);def close(self);def __getitem__(self, key);def load(file, mmap_mode=None);def load(file, mmap_mode=None);def save(file, arr);def savez(file, *args, **kwds);def savez_compressed(file, *args, **kwds);def _savez(file, args, kwds, compress);def _savez(file, args, kwds, compress);def _savez(file, args, kwds, compress);def _getconv(dtype);def flatten_dtype(dt);def split_line(line);def savetxt(fname, X, fmt='%.18e', delimiter=' ', newline='\n', header='';def savetxt(fname, X, fmt='%.18e', delimiter=' ', newline='\n', header='';def fromregex(file, regexp, dtype);def genfromtxt(fname, dtype=float, comments='#', delimiter=None;def genfromtxt(fname, dtype=float, comments='#', delimiter=None;def genfromtxt(fname, dtype=float, comments='#', delimiter=None;def genfromtxt(fname, dtype=float, comments='#', delimiter=None;def genfromtxt(fname, dtype=float, comments='#', delimiter=None;def genfromtxt(fname, dtype=float, comments='#', delimiter=None;def genfromtxt(fname, dtype=float, comments='#', delimiter=None;def genfromtxt(fname, dtype=float, comments='#', delimiter=None;def genfromtxt(fname, dtype=float, comments='#', delimiter=None;def genfromtxt(fname, dtype=float, comments='#', delimiter=None;def genfromtxt(fname, dtype=float, comments='#', delimiter=None;def genfromtxt(fname, dtype=float, comments='#', delimiter=None;def genfromtxt(fname, dtype=float, comments='#', delimiter=None;"
3829,3,6c18991, Yaron de Leeuw <jarondl@server.fake>," Sun, 6 Oct 2013 09:15:39 +0300","ct: [PATCH 2/3] STY: pep8 for npyio continuedTwo slight style modifications in npyio, regarding line length.",1,4,7,numpy/lib/npyio.py,[u'11'],4,7," -1322,8 +1322,7 ; -1531,11 +1530,9 ;","def genfromtxt(fname, dtype=float, comments='#', delimiter=None;def genfromtxt(fname, dtype=float, comments='#', delimiter=None;"
3829,3,cc0dc43, Yaron de Leeuw <jarondl@server.fake>," Fri, 11 Oct 2013 02:28:55 +0300",ct: [PATCH 3/3] STY: pepe8 for npyio continued 2 (typo)fixing one typo in npyio.py,1,0,0,numpy/lib/npyio.py,[u'2'],1,1," -1334,7 +1334,7 ;","def genfromtxt(fname, dtype=float, comments='#', delimiter=None;"
3828,1,2d897e9, Pauli Virtanen <pav@iki.fi>," Sat, 28 Sep 2013 20:43:40 +0300",ct: [PATCH] BUG: core: consider both C and F order buffers as contiguous,2,35,5,numpy/core/src/multiarray/conversion_utils.c,[u'33'],23,5," -146,7 +146,11 ; -154,22 +158,41 ;","PyArray_IntpConverter(PyObject *obj, PyArray_Dims *seq;PyArray_BufferConverter(PyObject *obj, PyArray_Chunk *buf;"
3828,1,2d897e9, Pauli Virtanen <pav@iki.fi>," Sat, 28 Sep 2013 20:43:40 +0300",ct: [PATCH] BUG: core: consider both C and F order buffers as contiguous,2,35,5,numpy/core/tests/test_regression.py,[u'7'],6,0," -1912,6 +1912,13 ;",def test_copymodule_preserves_f_contiguity(self);
3827,1,3820f9e, Pauli Virtanen <pav@iki.fi>," Sat, 28 Sep 2013 20:43:40 +0300",ct: [PATCH] BUG: core: consider both C and F order buffers as contiguous,2,35,5,numpy/core/src/multiarray/conversion_utils.c,[u'33'],23,5," -146,7 +146,11 ; -154,22 +158,41 ;","PyArray_IntpConverter(PyObject *obj, PyArray_Dims *seq;PyArray_BufferConverter(PyObject *obj, PyArray_Chunk *buf;"
3827,1,3820f9e, Pauli Virtanen <pav@iki.fi>," Sat, 28 Sep 2013 20:43:40 +0300",ct: [PATCH] BUG: core: consider both C and F order buffers as contiguous,2,35,5,numpy/core/tests/test_regression.py,[u'7'],6,0," -1906,6 +1906,13 ;",def test_copymodule_preserves_f_contiguity(self);
3826,1,9b94699, Charles Harris <charlesr.harris@gmail.com>," Sat, 28 Sep 2013 11:31:16 -0600","ct: [PATCH] MAINT: Make useless imports of oldnumeric and numarray safe.The oldnumeric and numarray packages were removed in numpy 1.9, butsome packages, e.g. scipy, import them even though they are not used.This defines both to the string 'removed' in numpy/__init__.py, whichavoids an import error.",1,6,0,numpy/__init__.py,[u'6'],6,0," -121,6 +121,12 ;",class ModuleDeprecationWarning(DeprecationWarning);
3825,1,92adb80, Ralf Gommers <ralf.gommers@googlemail.com>," Sun, 19 May 2013 22:15:09 +0200","ct: [PATCH] BLD: fix setuptools-specific easy_install issue.  Closes gh-3160.An error is raised by setuptools when trying to write to /dev/null.  Was fixedin distribute, but not in setuptools.No multi-arch support with plain setuptools should be OK, because multi-arch isUbuntu specific (at least for now), and they ship distribute.",1,4,2,numpy/distutils/system_info.py,[u'6'],4,2," -221,8 +221,10 ;","def libpaths(paths, bits);"
3824,1,edef76e, Jason Madden <jamadden@gmail.com>," Sat, 28 Sep 2013 10:24:37 -0500",ct: [PATCH] Do not fail with NameError if SandboxViolation is raised,1,3,0,numpy/distutils/system_info.py,[u'4'],3,1," -217,6 +217,7 ; -234,7 +235,8 ;","def libpaths(paths, bits);def libpaths(paths, bits);"
3823,1,60f2eff, Jason Madden <jamadden@gmail.com>," Sat, 28 Sep 2013 10:24:37 -0500",ct: [PATCH] Do not fail with NameError if SandboxViolation is raised,1,3,0,numpy/distutils/system_info.py,[u'4'],3,1," -215,6 +215,7 ; -230,7 +231,8 ;","def libpaths(paths, bits);def libpaths(paths, bits);"
3822,1,cd3e35b, Charles Harris <charlesr.harris@gmail.com>," Sat, 28 Sep 2013 09:47:26 -0600","ct: [PATCH] TST: Remove Python 2.4 test from travis.yml.The tests always fails due to lack of Python 2.4 pip support in currentbots. It would be good to test with 2.4 if we could find a way to workaround the pip failure, but without that the test is just noise.",1,0,2,.travis.yml,[u'2'],0,2," -21,8 +21,6 ;",env;
3821,1,8015369, Jason Madden <jamadden@gmail.com>," Sat, 28 Sep 2013 10:24:37 -0500",ct: [PATCH] Do not fail with NameError if SandboxViolation is raised,1,3,0,numpy/distutils/system_info.py,[u'4'],3,1," -217,6 +217,7 ; -234,7 +235,8 ;","def libpaths(paths, bits);def libpaths(paths, bits);"
3820,3,1475cfa, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 28 Sep 2013 16:19:56 +0200","ct: [PATCH 1/3] ENH: speed up intp multiply overflow checkAvoid expensive division by checking against half size of the result first.Speeds up PyArray_NewFromDescr by a factor of two according to perf.Could still be further improved by making use of cpu overflow flags, e.g. viaclangs __builtin_mul_with_overflow or using gccs __int128 type.",3,26,11,numpy/core/src/multiarray/common.h,[u'23'],23,0," -84,6 +84,29 ;","npy_is_aligned(const void * p, const npy_uintp alignment;"
3820,3,1475cfa, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 28 Sep 2013 16:19:56 +0200","ct: [PATCH 1/3] ENH: speed up intp multiply overflow checkAvoid expensive division by checking against half size of the result first.Speeds up PyArray_NewFromDescr by a factor of two according to perf.Could still be further improved by making use of cpu overflow flags, e.g. viaclangs __builtin_mul_with_overflow or using gccs __int128 type.",3,26,11,numpy/core/src/multiarray/ctors.c,[u'9'],2,7," -888,7 +888,6 ; -937,7 +936,6 ; -960,17 +958,14 ;","PyArray_NewFromDescr_int(PyTypeObject *subtype, PyArray_Descr *descr, int nd;PyArray_NewFromDescr_int(PyTypeObject *subtype, PyArray_Descr *descr, int nd;PyArray_NewFromDescr_int(PyTypeObject *subtype, PyArray_Descr *descr, int nd;"
3820,3,1475cfa, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 28 Sep 2013 16:19:56 +0200","ct: [PATCH 1/3] ENH: speed up intp multiply overflow checkAvoid expensive division by checking against half size of the result first.Speeds up PyArray_NewFromDescr by a factor of two according to perf.Could still be further improved by making use of cpu overflow flags, e.g. viaclangs __builtin_mul_with_overflow or using gccs __int128 type.",3,26,11,numpy/core/src/multiarray/multiarraymodule.c,[u'5'],1,4," -115,7 +115,6 ; -124,11 +123,9 ;","NPY_NO_EXPORT npy_int;PyArray_OverflowMultiplyList(npy_intp *l1, int n;"
3820,3,58d7900, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 28 Sep 2013 16:30:37 +0200",ct: [PATCH 2/3] ENH: reduce calls to npy_is_aligned in _IsAlignedone can just bitwise_or the memory and all strides and call npy_is_aligned onthat to get the same result.,1,7,6,numpy/core/src/multiarray/common.c,[u'13'],7,6," -675,7 +675,8 ; -688,24 +689,24 ;",_zerofill(PyArrayObject *ret;_IsAligned(PyArrayObject *ap;
3820,3,19d344b, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 28 Sep 2013 16:54:04 +0200","ct: [PATCH 3/3] TST: improve test speedmove slow test_memmap_roundtrip to slow testsdecrease excessively large array size used in np.sin(x) compuationTestInterp.test_if_len_x_is_small, the code has no special path for thislarge size differences.",2,2,0,numpy/lib/tests/test_format.py,[u'1'],1,0," -429,6 +429,7 ;",def test_roundtrip();
3820,3,19d344b, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 28 Sep 2013 16:54:04 +0200","ct: [PATCH 3/3] TST: improve test speedmove slow test_memmap_roundtrip to slow testsdecrease excessively large array size used in np.sin(x) compuationTestInterp.test_if_len_x_is_small, the code has no special path for thislarge size differences.",2,2,0,numpy/lib/tests/test_function_base.py,[u'2'],1,1," -1430,7 +1430,7 ;",def test_zero_dimensional_interpolation_point(self);
3819,1,f48172e, Alex Barth <alex@developmentseed.org>," Sat, 28 Sep 2013 09:36:01 -0400","ct: [PATCH] Fix platform detection for intel platform where get_platform() returns a string ending in x86_64, for instance 'macosx-10.8-x86_64'.",1,2,0,numpy/distutils/system_info.py,[u'2'],2,0," -1386,6 +1386,7 ; -1482,6 +1483,7 ;",def calc_info(self);def calc_info(self);
3818,1,72accd2, Alex Barth <alex@developmentseed.org>," Sat, 28 Sep 2013 09:36:01 -0400","ct: [PATCH] Fix platform detection for intel platform where get_platform() returns a string ending in x86_64, for instance 'macosx-10.8-x86_64'.",1,2,0,numpy/distutils/system_info.py,[u'2'],2,0," -1386,6 +1386,7 ; -1482,6 +1483,7 ;",def calc_info(self);def calc_info(self);
3816,1,2998ce8, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 28 Sep 2013 02:19:43 +0200",ct: [PATCH] ENH: reduce the alignment requirement for complex arrays on x86x86 can deal with unaligned memory access so it does not need to aligncomplex types to 2 * sizeof(T) for the dtype transfers which work on thefull complex number.closes #3768Does not fix that new complex arrays are reported as aligned whenthe allocator does not provide the required alignment.,1,20,0,numpy/core/src/multiarray/arraytypes.c.src,[u'21'],20,1," -10,6 +10,7 ; -21,6 +22,9 ; -3821,8 +3825,15 ; -4164,7 +4175,15 ;",;;NPY_NO_EXPORT PyArray_Descr @from@_Descr = ;set_typeinfo(PyObject *dict;
3815,1,21f7a53, Charles Harris <charlesr.harris@gmail.com>," Fri, 27 Sep 2013 17:10:44 -0600",ct: [PATCH] MAINT: Get rid of a Python 3 resource warning.,1,6,0,numpy/distutils/system_info.py,[u'7'],6,1," -216,8 +216,11 ; -226,6 +229,8 ;","def libpaths(paths, bits);def libpaths(paths, bits);"
3814,2,fdd9a2b," ""Nathaniel J. Smith"" <njs@pobox.com>"," Fri, 27 Sep 2013 18:12:52 +0100","ct: [PATCH 1/2] [fix] Check for errors in PyArray_CanCastTypeto DEPRECATEIf a user had set warnings to raise errors, then this DEPRECATE wouldleave us with an unpropagated exception and cause havoc downstream.Unfortunately there is no way to propagate an exception from here, sowe just have to throw it away :-(. But this is still better than thealternative...",2,20,3,numpy/core/src/multiarray/convert_datatype.c,[u'10'],7,3," -583,9 +583,13 ;","PyArray_CanCastTypeTo(PyArray_Descr *from, PyArray_Descr *to;"
3814,2,fdd9a2b," ""Nathaniel J. Smith"" <njs@pobox.com>"," Fri, 27 Sep 2013 18:12:52 +0100","ct: [PATCH 1/2] [fix] Check for errors in PyArray_CanCastTypeto DEPRECATEIf a user had set warnings to raise errors, then this DEPRECATE wouldleave us with an unpropagated exception and cause havoc downstream.Unfortunately there is no way to propagate an exception from here, sowe just have to throw it away :-(. But this is still better than thealternative...",2,20,3,numpy/core/tests/test_ufunc.py,[u'13'],13,0," -787,6 +787,19 ;","def add_inplace(a, b);"
3814,2,4505715," ""Nathaniel J. Smith"" <njs@pobox.com>"," Fri, 27 Sep 2013 20:29:14 +0100","ct: [PATCH 2/2] [fix] If we fail to raise an error, at least dump something to the console",2,25,8,numpy/core/src/multiarray/convert_datatype.c,[u'14'],10,4," -583,12 +583,18 ;","PyArray_CanCastTypeTo(PyArray_Descr *from, PyArray_Descr *to;"
3814,2,4505715," ""Nathaniel J. Smith"" <njs@pobox.com>"," Fri, 27 Sep 2013 20:29:14 +0100","ct: [PATCH 2/2] [fix] If we fail to raise an error, at least dump something to the console",2,25,8,numpy/core/tests/test_ufunc.py,[u'19'],15,4," -793,12 +793,23 ;","def add_inplace(a, b);"
3813,3,25de8c5," ""Nathaniel J. Smith"" <njs@pobox.com>"," Fri, 27 Sep 2013 18:12:52 +0100","ct: [PATCH 1/3] [fix] Check for errors in PyArray_CanCastTypeto DEPRECATEIf a user had set warnings to raise errors, then this DEPRECATE wouldleave us with an unpropagated exception and cause havoc downstream.Unfortunately there is no way to propagate an exception from here, sowe just have to throw it away :-(. But this is still better than thealternative...Conflicts:	numpy/core/tests/test_ufunc.py",1,7,3,numpy/core/src/multiarray/convert_datatype.c,[u'10'],7,3," -564,9 +564,13 ;","PyArray_CanCastTypeTo(PyArray_Descr *from, PyArray_Descr *to;"
3813,3,52caf48," ""Nathaniel J. Smith"" <njs@pobox.com>"," Fri, 27 Sep 2013 20:29:14 +0100","ct: [PATCH 2/3] [fix] If we fail to raise an error, at least dump something to the consoleConflicts:	numpy/core/tests/test_ufunc.py",2,35,4,numpy/core/src/multiarray/convert_datatype.c,[u'14'],10,4," -564,12 +564,18 ;","PyArray_CanCastTypeTo(PyArray_Descr *from, PyArray_Descr *to;"
3813,3,52caf48," ""Nathaniel J. Smith"" <njs@pobox.com>"," Fri, 27 Sep 2013 20:29:14 +0100","ct: [PATCH 2/3] [fix] If we fail to raise an error, at least dump something to the consoleConflicts:	numpy/core/tests/test_ufunc.py",2,35,4,numpy/core/tests/test_ufunc.py,[u'25'],25,0," -760,5 +760,30 ;","def add_inplace(a, b);"
3813,3,5b5e01b, Charles Harris <charlesr.harris@gmail.com>," Fri, 27 Sep 2013 16:58:44 -0600","ct: [PATCH 3/3] BUG: Do not use python with statement.The python with statement is not available in Python 2.4, 2.5.",1,15,12,numpy/core/tests/test_ufunc.py,[u'27'],15,12," -1,9 +1,11 ; -765,24 +767,25 ;",";def add_inplace(a, b);"
3811,1,cf13331, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 26 Sep 2013 22:31:15 +0200",ct: [PATCH] BUG: do a boolean check on casting bool to other typesavoids some issues of booleans coming from external buffers that may notonly contain 0 or 1.closes #3801.,2,12,0,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,[u'2'],1,1," -759,7 +759,7 ;",NPY_NO_EXPORT PyArray_StridedUnaryOp ;
3811,1,cf13331, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 26 Sep 2013 22:31:15 +0200",ct: [PATCH] BUG: do a boolean check on casting bool to other typesavoids some issues of booleans coming from external buffers that may notonly contain 0 or 1.closes #3801.,2,12,0,numpy/core/tests/test_multiarray.py,[u'11'],11,0," -531,6 +531,17 ;",def test_test_interning(self);
3810,1,58cb65f, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 23 Sep 2013 19:38:20 +0200","ct: [PATCH] BUG: INCREF before DECREF when copying object arrays.Only the change in dtype_transfer actually seems to berelated to the simple np.copyto(a, a) bug, when a is a scalarobject array.It seemed however safer to me, to generally turn around thelogic, even if it may not be necessary and in one placerequires an extra temporary variable.Closes gh-3787",3,21,10,numpy/core/src/multiarray/arraytypes.c.src,[u'17'],10,7," -501,9 +501,10 ; -1158,9 +1159,11 ; -1866,10 +1869,10 ; -1894,10 +1897,10 ; -3222,8 +3225,8 ;","OBJECT_setitem(PyObject *op, char *ov, PyArrayObject *ap;static voi;OBJECT_copyswapn(PyObject **dst, npy_intp dstride, PyObject **src;OBJECT_copyswap(PyObject **dst, PyObject **src, int NPY_UNUSED(swap);OBJECT_fillwithscalar(PyObject **buffer, npy_intp length, PyObject **value;"
3810,1,58cb65f, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 23 Sep 2013 19:38:20 +0200","ct: [PATCH] BUG: INCREF before DECREF when copying object arrays.Only the change in dtype_transfer actually seems to berelated to the simple np.copyto(a, a) bug, when a is a scalarobject array.It seemed however safer to me, to generally turn around thelogic, even if it may not be necessary and in one placerequires an extra temporary variable.Closes gh-3787",3,21,10,numpy/core/src/multiarray/dtype_transfer.c,[u'6'],3,3," -127,14 +127,14 ;","_strided_to_strided_copy_references(char *dst, npy_intp dst_stride;"
3810,1,58cb65f, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 23 Sep 2013 19:38:20 +0200","ct: [PATCH] BUG: INCREF before DECREF when copying object arrays.Only the change in dtype_transfer actually seems to berelated to the simple np.copyto(a, a) bug, when a is a scalarobject array.It seemed however safer to me, to generally turn around thelogic, even if it may not be necessary and in one placerequires an extra temporary variable.Closes gh-3787",3,21,10,numpy/core/tests/test_regression.py,[u'8'],8,0," -1665,6 +1665,14 ;",def test_object_array_self_reference(self);
3809,1,2960056, Julian Taylor <jtaylor.debian@googlemail.com>," Wed, 25 Sep 2013 23:28:55 +0200",ct: [PATCH] BUG: fix hashing of long integers under python3python3 long_hash is more complex than int_hash so instead of copyinginto numpy call it via the Python capi.Same for long long for wich the numpy hash function is not correct withpython 2.7 on i386.Will be slower but doesn't need adapting each timy python changes.closes #3793,2,48,37,numpy/core/src/multiarray/scalartypes.c.src,[u'65'],13,16," -2872,8 +2872,8 ; -2886,6 +2886,15 ; -2898,49 +2907,31 ; -4079,7 +4070,7 ;",static npy_hash_;static npy_hash_;int_arrtype_hash(PyObject *obj;initialize_numeric_types(void;
3809,1,2960056, Julian Taylor <jtaylor.debian@googlemail.com>," Wed, 25 Sep 2013 23:28:55 +0200",ct: [PATCH] BUG: fix hashing of long integers under python3python3 long_hash is more complex than int_hash so instead of copyinginto numpy call it via the Python capi.Same for long long for wich the numpy hash function is not correct withpython 2.7 on i386.Will be slower but doesn't need adapting each timy python changes.closes #3793,2,48,37,numpy/core/tests/test_multiarray.py,[u'20'],9,0," -59,6 +59,26 ;",def test_otherflags(self);
3808,1,a81fd3f, Julian Taylor <jtaylor.debian@googlemail.com>," Wed, 25 Sep 2013 23:28:55 +0200",ct: [PATCH] BUG: fix hashing of long integers under python3python3 long_hash is more complex than int_hash so instead of copyinginto numpy call it via the Python capi.Same for long long for wich the numpy hash function is not correct withpython 2.7 on i386.Will be slower but doesn't need adapting each timy python changes.closes #3793,2,48,37,numpy/core/src/multiarray/scalartypes.c.src,[u'65'],13,16," -2907,8 +2907,8 ; -2921,6 +2921,15 ; -2933,49 +2942,31 ; -4127,7 +4118,7 ;",static npy_hash_;static npy_hash_;int_arrtype_hash(PyObject *obj;initialize_numeric_types(void;
3808,1,a81fd3f, Julian Taylor <jtaylor.debian@googlemail.com>," Wed, 25 Sep 2013 23:28:55 +0200",ct: [PATCH] BUG: fix hashing of long integers under python3python3 long_hash is more complex than int_hash so instead of copyinginto numpy call it via the Python capi.Same for long long for wich the numpy hash function is not correct withpython 2.7 on i386.Will be slower but doesn't need adapting each timy python changes.closes #3793,2,48,37,numpy/core/tests/test_multiarray.py,[u'20'],9,0," -56,6 +56,26 ;",def test_otherflags(self);
3807,1,247b450, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 27 Sep 2013 20:04:59 +0200","ct: [PATCH] BUG: fix wrong gcc version checkprobably irrelevant by now, but emits a warning during compilation.",1,2,2,numpy/distutils/command/autodist.py,[u'4'],2,2," -35,8 +35,8 ;",def check_compiler_gcc4(cmd);
3806,2,46fbdc5," ""Nathaniel J. Smith"" <njs@pobox.com>"," Fri, 27 Sep 2013 18:12:52 +0100","ct: [PATCH 1/2] [fix] Check for errors in PyArray_CanCastTypeto DEPRECATEIf a user had set warnings to raise errors, then this DEPRECATE wouldleave us with an unpropagated exception and cause havoc downstream.Unfortunately there is no way to propagate an exception from here, sowe just have to throw it away :-(. But this is still better than thealternative...",2,20,3,numpy/core/src/multiarray/convert_datatype.c,[u'10'],7,3," -583,9 +583,13 ;","PyArray_CanCastTypeTo(PyArray_Descr *from, PyArray_Descr *to;"
3806,2,46fbdc5," ""Nathaniel J. Smith"" <njs@pobox.com>"," Fri, 27 Sep 2013 18:12:52 +0100","ct: [PATCH 1/2] [fix] Check for errors in PyArray_CanCastTypeto DEPRECATEIf a user had set warnings to raise errors, then this DEPRECATE wouldleave us with an unpropagated exception and cause havoc downstream.Unfortunately there is no way to propagate an exception from here, sowe just have to throw it away :-(. But this is still better than thealternative...",2,20,3,numpy/core/tests/test_ufunc.py,[u'13'],13,0," -787,6 +787,19 ;","def add_inplace(a, b);"
3806,2,da8f1ff," ""Nathaniel J. Smith"" <njs@pobox.com>"," Fri, 27 Sep 2013 20:29:14 +0100","ct: [PATCH 2/2] [fix] If we fail to raise an error, at least dump something to the console",2,25,8,numpy/core/src/multiarray/convert_datatype.c,[u'14'],10,4," -583,12 +583,18 ;","PyArray_CanCastTypeTo(PyArray_Descr *from, PyArray_Descr *to;"
3806,2,da8f1ff," ""Nathaniel J. Smith"" <njs@pobox.com>"," Fri, 27 Sep 2013 20:29:14 +0100","ct: [PATCH 2/2] [fix] If we fail to raise an error, at least dump something to the console",2,25,8,numpy/core/tests/test_ufunc.py,[u'19'],15,4," -793,12 +793,23 ;","def add_inplace(a, b);"
3805,1,7bd52d9, Charles Harris <charlesr.harris@gmail.com>," Fri, 27 Sep 2013 11:04:16 -0600","ct: [PATCH] BUG: Fix failed import of mlab.Fix imports in the numpy/oldnumeric/mlab.py module.  The problem wasthat the module used imports of the formfrom . import compatwhich do not work as '.' is apparently undefined when the module importis attempted. The fix is ugly, but it works and the oldnumeric module isgoing away in 1.9.Closes #3803.",2,27,22,numpy/oldnumeric/mlab.py,[u'40'],14,17," -15,7 +15,8 ; -92,7 +93,6 ; -104,25 +104,21 ;",";def cov(m, y=None, rowvar=0, bias=0);def corrcoef(x, y=None);"
3805,1,7bd52d9, Charles Harris <charlesr.harris@gmail.com>," Fri, 27 Sep 2013 11:04:16 -0600","ct: [PATCH] BUG: Fix failed import of mlab.Fix imports in the numpy/oldnumeric/mlab.py module.  The problem wasthat the module used imports of the formfrom . import compatwhich do not work as '.' is apparently undefined when the module importis attempted. The fix is ugly, but it works and the oldnumeric module isgoing away in 1.9.Closes #3803.",2,27,22,numpy/oldnumeric/tests/test_regression.py,[u'9'],7,0," -9,3 +9,12 ;","def test_numeric_random(self, level=rlevel);"
3802,1,46072bd, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 26 Sep 2013 22:31:15 +0200",ct: [PATCH] BUG: do a boolean check on casting bool to other typesavoids some issues of booleans coming from external buffers that may notonly contain 0 or 1.closes #3801.,2,12,0,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,[u'2'],1,1," -759,7 +759,7 ;",NPY_NO_EXPORT PyArray_StridedUnaryOp ;
3802,1,46072bd, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 26 Sep 2013 22:31:15 +0200",ct: [PATCH] BUG: do a boolean check on casting bool to other typesavoids some issues of booleans coming from external buffers that may notonly contain 0 or 1.closes #3801.,2,12,0,numpy/core/tests/test_multiarray.py,[u'11'],11,0," -573,6 +573,17 ;",def test_test_interning(self);
3800,1,74eac4e, Julian Taylor <jtaylor.debian@googlemail.com>," Wed, 25 Sep 2013 23:28:55 +0200",ct: [PATCH] BUG: fix hashing of long integers under python3python3 long_hash is more complex than int_hash so instead of copyinginto numpy call it via the Python capi.Same for long long for wich the numpy hash function is not correct withpython 2.7 on i386.Will be slower but doesn't need adapting each timy python changes.closes #3793,2,48,37,numpy/core/src/multiarray/scalartypes.c.src,[u'65'],13,16," -2872,8 +2872,8 ; -2886,6 +2886,15 ; -2898,49 +2907,31 ; -4079,7 +4070,7 ;",static npy_hash_;static npy_hash_;int_arrtype_hash(PyObject *obj;initialize_numeric_types(void;
3800,1,74eac4e, Julian Taylor <jtaylor.debian@googlemail.com>," Wed, 25 Sep 2013 23:28:55 +0200",ct: [PATCH] BUG: fix hashing of long integers under python3python3 long_hash is more complex than int_hash so instead of copyinginto numpy call it via the Python capi.Same for long long for wich the numpy hash function is not correct withpython 2.7 on i386.Will be slower but doesn't need adapting each timy python changes.closes #3793,2,48,37,numpy/core/tests/test_multiarray.py,[u'20'],9,0," -59,6 +59,26 ;",def test_otherflags(self);
3799,1,3c18714, Valentin Haenel <valentin.haenel@gmx.de>," Thu, 26 Sep 2013 18:33:13 +0200",ct: [PATCH] fix two typos in npyio.py,1,2,2,numpy/lib/npyio.py,[u'4'],2,2," -328,7 +328,7 ; -934,7 +934,7 ;","def load(file, mmap_mode=None);def savetxt(fname, X, fmt='%.18e', delimiter=' ', newline='\n', header='';"
3798,57,607863d, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 14 Apr 2013 23:20:25 +0200",ct: [PATCH 01/57] ENH: Attempt to rewrite the index parsing.Some optimizations still missing.,6,1185,1149,numpy/core/include/numpy/ndarraytypes.h,[u'40'],1,1," -1255,8 +1255,25 ; -1271,29 +1288,30 ;",typedef struct ;typedef struct ;
3798,57,607863d, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 14 Apr 2013 23:20:25 +0200",ct: [PATCH 01/57] ENH: Attempt to rewrite the index parsing.Some optimizations still missing.,6,1185,1149,numpy/core/src/multiarray/mapping.c,[u'2245'],14,13," -18,14 +18,26 ; -122,52 +134,6 ; -225,7 +191,7 ; -280,6 +246,13 ; -290,29 +263,36 ; -389,267 +369,688 ; -901,111 +1302,6 ; -1014,45 +1310,20 ; -1121,209 +1392,117 ; -1334,21 +1513,6 ; -1378,121 +1542,167 ; -1513,9 +1723,11 ; -1533,15 +1745,8 ; -1562,13 +1767,9 ; -1578,7 +1779,6 ; -1606,90 +1806,62 ; -1697,63 +1869,27 ; -1761,148 +1897,101 ; -1919,185 +2008,92 ; -2110,47 +2106,72 ; -2164,7 +2185,7 ; -2223,7 +2244,9 ;",";array_item(PyArrayObject *self, Py_ssize_t _i;PyArray_MapIterSwapAxes(PyArrayMapIterObject *mit, PyArrayObject **ret, int get;PyArray_GetMap(PyArrayMapIterObject *mit;PyArray_GetMap(PyArrayMapIterObject *mit;PyArray_SetMap(PyArrayMapIterObject *mit, PyObject *op;array_ass_boolean_subscript(PyArrayObject *self;array_subscript_asarray(PyArrayObject *self, PyObject *op;array_subscript_fromobject(PyArrayObject *self, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;NPY_NO_EXPORT PyMappingMethods array_as_mapping = ;_nonzero_indices(PyObject *myBool, PyArrayIterObject **iters;_nonzero_indices(PyObject *myBool, PyArrayIterObject **iters;_nonzero_indices(PyObject *myBool, PyArrayIterObject **iters;_nonzero_indices(PyObject *myBool, PyArrayIterObject **iters;PyArray_MapIterReset(PyArrayMapIterObject *mit;PyArray_MapIterNext(PyArrayMapIterObject *mit;PyArray_MapIterBind(PyArrayMapIterObject *mit, PyArrayObject *arr;PyArray_MapIterNew(PyObject *indexobj, int oned, int fancy;arraymapiter_dealloc(PyArrayMapIterObject *mit;NPY_NO_EXPORT PyTypeObject PyArrayMapIter_Type = ;"
3798,57,607863d, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 14 Apr 2013 23:20:25 +0200",ct: [PATCH 01/57] ENH: Attempt to rewrite the index parsing.Some optimizations still missing.,6,1185,1149,numpy/core/src/multiarray/mapping.h,[u'5'],1,1," -45,9 +45,8 ;",NPY_NO_EXPORT voi;
3798,57,607863d, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 14 Apr 2013 23:20:25 +0200",ct: [PATCH 01/57] ENH: Attempt to rewrite the index parsing.Some optimizations still missing.,6,1185,1149,numpy/core/src/multiarray/scalartypes.c.src,[u'29'],1,1," -3356,31 +3356,14 ;","gen_arrtype_subscript(PyObject *self, PyObject *key;"
3798,57,607863d, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 14 Apr 2013 23:20:25 +0200",ct: [PATCH 01/57] ENH: Attempt to rewrite the index parsing.Some optimizations still missing.,6,1185,1149,numpy/core/tests/test_indexing.py,[u'13'],1,0," -315,6 +315,19 ;","def _get_multi_index(self, arr, indices);"
3798,57,607863d, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 14 Apr 2013 23:20:25 +0200",ct: [PATCH 01/57] ENH: Attempt to rewrite the index parsing.Some optimizations still missing.,6,1185,1149,numpy/lib/tests/test_function_base.py,[u'2'],1,1," -249,7 +249,7 ;",class SubClass(np.ndarray);
3798,57,3e35c31, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 25 Sep 2013 06:05:39 +0200",ct: [PATCH 02/57] WIP: Speed improvements by using EXTERNAL_LOOP,2,160,57,numpy/core/include/numpy/ndarraytypes.h,[u'4'],1,1," -1298,7 +1298,9 ;",typedef struct ;
3798,57,3e35c31, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 25 Sep 2013 06:05:39 +0200",ct: [PATCH 02/57] WIP: Speed improvements by using EXTERNAL_LOOP,2,160,57,numpy/core/src/multiarray/mapping.c,[u'213'],23,9," -215,6 +215,28 ; -222,9 +244,11 ; -263,27 +287,72 ; -1472,7 +1541,7 ; -1665,7 +1734,7 ; -1823,9 +1892,10 ; -1840,24 +1910,23 ; -1875,13 +1944,13 ; -1898,13 +1967,18 ; -2008,23 +2082,44 ; -2038,8 +2133,6 ; -2052,7 +2145,7 ; -2071,8 +2164,8 ; -2088,10 +2181,15 ; -2117,7 +2215,8 ; -2163,6 +2262,8 ;","PyArray_MapIterSwapAxes(PyArrayMapIterObject *mit, PyArrayObject **ret, int get;PyArray_GetMap(PyArrayMapIterObject *mit;PyArray_GetMap(PyArrayMapIterObject *mit;array_subscript(PyArrayObject *self, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;PyArray_MapIterReset(PyArrayMapIterObject *mit;PyArray_MapIterReset(PyArrayMapIterObject *mit;PyArray_MapIterNext(PyArrayMapIterObject *mit;PyArray_MapIterNext(PyArrayMapIterObject *mit;PyArray_MapIterBind(PyArrayMapIterObject *mit, PyArrayObject *subspace;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterArray(PyArrayObject * a, PyObject * index;PyArray_MapIterArray(PyArrayObject * a, PyObject * index;"
3798,57,fe61578, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 25 Sep 2013 06:06:21 +0200","ct: [PATCH 03/57] WIP,TST: Fix tests to match new behaviour",4,19,12,numpy/core/tests/test_indexing.py,[u'18'],11,7," -53,7 +53,7 ; -96,8 +96,15 ; -242,9 +249,7 ; -548,6 +553,5 ;","def test_ellipsis_index(self);def test_single_bool_index(self);def _get_multi_index(self, arr, indices);def test_1d(self);"
3798,57,fe61578, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 25 Sep 2013 06:06:21 +0200","ct: [PATCH 03/57] WIP,TST: Fix tests to match new behaviour",4,19,12,numpy/core/tests/test_multiarray.py,[u'4'],2,2," -294,8 +294,8 ;",def test_ellipsis_subscript(self);
3798,57,fe61578, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 25 Sep 2013 06:06:21 +0200","ct: [PATCH 03/57] WIP,TST: Fix tests to match new behaviour",4,19,12,numpy/core/tests/test_numerictypes.py,[u'2'],1,1," -365,7 +365,7 ;",def setUp(self);
3798,57,fe61578, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 25 Sep 2013 06:06:21 +0200","ct: [PATCH 03/57] WIP,TST: Fix tests to match new behaviour",4,19,12,numpy/core/tests/test_regression.py,[u'7'],5,2," -751,8 +751,11 ;","def test_bool_indexing_invalid_nr_elements(self, level=rlevel);"
3798,57,efdc9b0, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 25 Sep 2013 14:27:57 +0200",ct: [PATCH 04/57] WIP: use fast_take and fix Deprecations,2,268,135,numpy/core/src/multiarray/mapping.c,[u'401'],24,12," -216,38 +216,39 ; -278,6 +279,69 ; -292,13 +356,18 ; -309,7 +378,7 ; -328,7 +397,7 ; -339,7 +408,7 ; -360,6 +429,10 ; -476,7 +549,11 ; -488,6 +565,11 ; -518,7 +600,7 ; -614,6 +696,19 ; -652,19 +747,6 ; -709,31 +791,50 ; -745,6 +846,9 ; -878,7 +982,7 ; -1092,8 +1196,7 ; -1392,73 +1495,76 ; -1472,7 +1578,7 ; -1541,7 +1647,13 ; -1964,11 +2076,15 ; -2082,7 +2198,7 ; -2131,7 +2247,7 ; -2147,30 +2263,47 ; -2229,7 +2362,7 ; -2262,8 +2395,8 ;","PyArray_MapIterSwapAxes(PyArrayMapIterObject *mit, PyArrayObject **ret, int get;PyArray_GetMap(PyArrayMapIterObject *mit;PyArray_GetMap(PyArrayMapIterObject *mit;PyArray_GetMap(PyArrayMapIterObject *mit;PyArray_GetMap(PyArrayMapIterObject *mit;PyArray_GetMap(PyArrayMapIterObject *mit;PyArray_GetMap(PyArrayMapIterObject *mit;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;get_view_from_index(PyArrayObject *self, PyArrayObject **view;array_subscript(PyArrayObject *self, PyObject *op;array_subscript(PyArrayObject *self, PyObject *op;array_subscript(PyArrayObject *self, PyObject *op;PyArray_MapIterNext(PyArrayMapIterObject *mit;PyArray_MapIterBind(PyArrayMapIterObject *mit, PyArrayObject *subspace;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterArray(PyArrayObject * a, PyObject * index;PyArray_MapIterArray(PyArrayObject * a, PyObject * index;"
3798,57,efdc9b0, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 25 Sep 2013 14:27:57 +0200",ct: [PATCH 04/57] WIP: use fast_take and fix Deprecations,2,268,135,numpy/core/src/multiarray/mapping.h,[u'2'],1,1," -45,7 +45,7 ;",NPY_NO_EXPORT voi;
3798,57,a32709f, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 26 Sep 2013 00:48:29 +0200","ct: [PATCH 05/57] WIP,TST: Small fixes for the tests",1,2,3,numpy/core/tests/test_deprecations.py,[u'5'],2,3," -151,7 +151,7 ; -161,11 +161,10 ;","def assert_deprecated(*args, **kwargs);def assert_deprecated(*args, **kwargs);"
3798,57,1b35cb9, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 26 Sep 2013 01:31:20 +0200",ct: [PATCH 06/57] WIP: bug fixes and field oder access change,1,10,2,numpy/core/src/multiarray/mapping.c,[u'12'],10,2," -551,7 +551,11 ; -714,7 +718,11 ; -1695,8 +1703,8 ;","prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;"
3798,57,0851157, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 26 Sep 2013 01:40:55 +0200","ct: [PATCH 07/57] WIP,TST: Fixup python3 tests",1,2,2,numpy/core/tests/test_multiarray.py,[u'4'],2,2," -2708,8 +2708,8 ;",def test_field_names(self);
3798,57,631710b, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 26 Sep 2013 01:43:21 +0200",ct: [PATCH 08/57] WIP: fix field order; And MapIterNext iteration end,1,15,12,numpy/core/src/multiarray/mapping.c,[u'27'],15,12," -457,7 +457,7 ; -1718,17 +1718,17 ; -2036,6 +2036,14 ; -2044,10 +2052,6 ; -2365,14 +2369,13 ; -2437,7 +2440,7 ;","PyArray_SetMap(PyArrayMapIterObject *mit, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;mapiter_outernext(PyArrayMapIterObject *mit;mapiter_outernext(PyArrayMapIterObject *mit;PyArray_MapIterArray(PyArrayObject * a, PyObject * index;NPY_NO_EXPORT PyTypeObject PyArrayMapIter_Type = ;"
3798,57,23c3b30, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 26 Sep 2013 14:00:34 +0200","ct: [PATCH 09/57] WIP,TST,DOC: tiny fixmaybe triggers Travis too...",1,0,0,numpy/core/tests/test_indexing.py,[u'2'],1,1," -322,7 +322,7 ;","def _get_multi_index(self, arr, indices);"
3798,57,acafbff, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 26 Sep 2013 15:45:13 +0200",ct: [PATCH 10/57] WIP: Move Ellipsis setting check and clear warnings,1,51,62,numpy/core/src/multiarray/mapping.c,[u'113'],16,20," -243,7 +243,7 ; -255,9 +255,10 ; -275,7 +276,7 ; -430,7 +431,7 ; -765,8 +766,8 ; -776,11 +777,11 ; -792,7 +793,7 ; -812,7 +813,7 ; -825,7 +826,7 ; -839,15 +840,15 ; -855,7 +856,7 ; -916,7 +917,7 ; -937,7 +938,7 ; -980,7 +981,7 ; -1505,7 +1506,7 ; -1573,13 +1574,11 ; -1733,9 +1732,7 ; -1777,6 +1774,27 ; -1785,7 +1803,7 ; -1796,22 +1814,6 ; -2006,7 +2008,7 ; -2098,11 +2100,7 ; -2115,7 +2113,6 ; -2131,12 +2128,10 ; -2196,7 +2191,6 ; -2275,7 +2269,6 ; -2288,7 +2281,7 ; -2301,7 +2294,6 ; -2317,7 +2309,6 ; -2336,7 +2327,6 ; -2412,7 +2402,6 ;","static PyObject ;PyArray_GetMap(PyArrayMapIterObject *mit;PyArray_GetMap(PyArrayMapIterObject *mit;PyArray_GetMap(PyArrayMapIterObject *mit;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;array_subscript(PyArrayObject *self, PyObject *op;array_subscript(PyArrayObject *self, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;_nonzero_indices(PyObject *myBool, PyArrayObject **arrays;PyArray_MapIterBind(PyArrayMapIterObject *mit, PyArrayObject *subspace;PyArray_MapIterBind(PyArrayMapIterObject *mit, PyArrayObject *subspace;PyArray_MapIterBind(PyArrayMapIterObject *mit, PyArrayObject *subspace;PyArray_MapIterBind(PyArrayMapIterObject *mit, PyArrayObject *subspace;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterArray(PyArrayObject * a, PyObject * index;"
3798,57,4780be1, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 26 Sep 2013 18:32:53 +0200",ct: [PATCH 11/57] WIP: Restore binary compatibility of MapIterObject (hopefully),1,23,11,numpy/core/include/numpy/ndarraytypes.h,[u'34'],22,11," -1273,7 +1273,11 ; -1290,18 +1294,13 ; -1309,7 +1308,9 ; -1318,6 +1319,17 ;",typedef struct ;typedef struct ;typedef struct ;typedef struct ;
3798,57,a7f39ff, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 27 Sep 2013 13:02:19 +0200","ct: [PATCH 12/57] WIP,ENH: Already allow boolean scalars for 0-d arraysSince indexing into a 0-d array with an integer is impossible,we can disable any conversion/interpretation is integer codeto special case the 0-d array for now and fix this annoyingissue...",1,59,33,numpy/core/src/multiarray/mapping.c,[u'92'],24,13," -715,46 +715,58 ; -787,6 +799,17 ; -812,6 +835,9 ;","prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;"
3798,57,4b3f607, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 28 Sep 2013 15:44:46 +0200","ct: [PATCH 13/57] WIP,BUG: Fix outer iteration bug.",1,22,2,numpy/core/src/multiarray/mapping.c,[u'24'],22,2," -261,6 +261,11 ; -453,6 +458,13 ; -915,7 +927,7 ; -2065,8 +2077,16 ;","PyArray_GetMap(PyArrayMapIterObject *mit;PyArray_SetMap(PyArrayMapIterObject *mit, PyObject *op;prepare_index(PyArrayObject *self, PyObject *index;mapiter_outernext(PyArrayMapIterObject *mit;"
3798,57,28dab27, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 13 Oct 2013 22:26:25 +0200",ct: [PATCH 14/57] Attempt to start optimizing setmap,1,87,47,numpy/core/src/multiarray/mapping.c,[u'134'],23,13," -293,10 +293,9 ; -446,80 +445,121 ;",PyArray_GetMap(PyArrayMapIterObject *mit;static in;
3798,57,9f55b02, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 14 Oct 2013 16:10:05 +0200",ct: [PATCH 15/57] Followup stuff,1,49,31,numpy/core/src/multiarray/mapping.c,[u'80'],23,14," -452,7 +452,7 ; -461,33 +461,45 ; -503,10 +515,17 ; -516,7 +535,7 ; -571,9 +590,8 ; -591,7 +609,6 ; -952,6 +969,8 ; -1967,7 +1986,6 ;","PyArray_SetMap(PyArrayMapIterObject *mit, PyObject *op;PyArray_SetMap(PyArrayMapIterObject *mit, PyObject *op;PyArray_SetMap(PyArrayMapIterObject *mit, PyObject *op;PyArray_SetMap(PyArrayMapIterObject *mit, PyObject *op;PyArray_SetMap(PyArrayMapIterObject *mit, PyObject *op;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;NPY_NO_EXPORT in;"
3798,57,1bad2c3, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 14 Oct 2013 23:30:53 +0200",ct: [PATCH 16/57] Start trying to include operand into iterator,2,115,40,numpy/core/src/multiarray/mapping.c,[u'146'],26,10," -1746,7 +1746,8 ; -1949,7 +1950,8 ; -2206,8 +2208,14 ; -2312,52 +2320,85 ; -2373,11 +2414,26 ; -2398,7 +2454,16 ; -2408,6 +2473,10 ; -2455,7 +2524,8 ;","array_subscript(PyArrayObject *self, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;PyArray_MapIterBind(PyArrayMapIterObject *mit, PyArrayObject *subspace;PyArray_MapIterBind(PyArrayMapIterObject *mit, PyArrayObject *subspace;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterArray(PyArrayObject * a, PyObject * index;"
3798,57,1bad2c3, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 14 Oct 2013 23:30:53 +0200",ct: [PATCH 16/57] Start trying to include operand into iterator,2,115,40,numpy/core/src/multiarray/mapping.h,[u'9'],2,1," -45,8 +45,13 ;",NPY_NO_EXPORT voi;
3798,57,5b3d406, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 17 Oct 2013 23:19:08 +0200",ct: [PATCH 17/57] Working on a thourough rework of mapiter,2,191,139,numpy/core/include/numpy/ndarraytypes.h,[u'4'],1,1," -1294,7 +1294,9 ;",typedef struct ;
3798,57,5b3d406, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 17 Oct 2013 23:19:08 +0200",ct: [PATCH 17/57] Working on a thourough rework of mapiter,2,191,139,numpy/core/src/multiarray/mapping.c,[u'326'],18,14," -260,90 +260,14 ; -433,7 +357,8 ; -908,6 +833,12 ; -1731,7 +1662,7 ; -1745,9 +1676,10 ; -1950,8 +1882,8 ; -2108,10 +2040,11 ; -2119,11 +2052,13 ; -2133,6 +2068,7 ; -2210,12 +2146,6 ; -2226,36 +2156,64 ; -2302,7 +2260,27 ; -2310,15 +2288,6 ; -2331,7 +2300,7 ; -2382,7 +2351,7 ; -2397,7 +2366,7 ; -2416,7 +2385,7 ; -2455,9 +2424,83 ; -2466,10 +2509,10 ; -2500,9 +2543,15 ; -2523,23 +2572,21 ; -2552,6 +2599,7 ; -2578,6 +2626,8 ;","PyArray_GetMap(PyArrayMapIterObject *mit;PyArray_GetMap(PyArrayMapIterObject *mit;prepare_index(PyArrayObject *self, PyObject *index;array_subscript(PyArrayObject *self, PyObject *op;array_subscript(PyArrayObject *self, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;PyArray_MapIterReset(PyArrayMapIterObject *mit;PyArray_MapIterReset(PyArrayMapIterObject *mit;PyArray_MapIterReset(PyArrayMapIterObject *mit;PyArray_MapIterBind(PyArrayMapIterObject *mit, PyArrayObject *subspace;PyArray_MapIterBind(PyArrayMapIterObject *mit, PyArrayObject *subspace;PyArray_MapIterBind(PyArrayMapIterObject *mit, PyArrayObject *subspace;PyArray_MapIterBind(PyArrayMapIterObject *mit, PyArrayObject *subspace;PyArray_MapIterBind(PyArrayMapIterObject *mit, PyArrayObject *subspace;PyArray_MapIterBind(PyArrayMapIterObject *mit, PyArrayObject *subspace;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterArray(PyArrayObject * a, PyObject * index;PyArray_MapIterArray(PyArrayObject * a, PyObject * index;arraymapiter_dealloc(PyArrayMapIterObject *mit;"
3798,57,ef22bd4, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 19 Oct 2013 12:38:35 +0200","ct: [PATCH 18/57] Working mostly now, need to plug back in the exposed API",3,584,580,numpy/core/include/numpy/ndarraytypes.h,[u'34'],1,1," -1294,22 +1294,20 ; -1322,16 +1320,34 ;",typedef struct ;typedef struct ;
3798,57,ef22bd4, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 19 Oct 2013 12:38:35 +0200","ct: [PATCH 18/57] Working mostly now, need to plug back in the exposed API",3,584,580,numpy/core/src/multiarray/mapping.c,[u'1109'],15,16," -216,295 +216,163 ; -525,8 +393,9 ; -1101,6 +970,7 ; -1523,7 +1393,7 ; -1606,7 +1476,8 ; -1674,33 +1545,30 ; -1717,7 +1585,8 ; -1762,7 +1631,8 ; -1878,23 +1748,58 ; -2038,27 +1943,30 ; -2068,34 +1976,7 ; -2106,89 +1987,14 ; -2197,16 +2003,16 ; -2237,13 +2043,13 ; -2273,22 +2079,14 ; -2299,7 +2097,7 ; -2315,7 +2113,7 ; -2324,18 +2122,18 ; -2348,9 +2146,15 ; -2358,7 +2162,9 ; -2366,8 +2172,11 ; -2378,6 +2187,22 ; -2390,172 +2215,334 ; -2564,9 +2551,10 ; -2579,16 +2567,14 ; -2625,12 +2611,17 ;","PyArray_MapIterSwapAxes(PyArrayMapIterObject *mit, PyArrayObject **ret, int get;PyArray_SetMap(PyArrayMapIterObject *mit, PyObject *op;prepare_index(PyArrayObject *self, PyObject *index;array_subscript(PyArrayObject *self, PyObject *op;array_subscript(PyArrayObject *self, PyObject *op;array_subscript(PyArrayObject *self, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;_nonzero_indices(PyObject *myBool, PyArrayObject **arrays;PyArray_MapIterReset(PyArrayMapIterObject *mit;mapiter_outernext(PyArrayMapIterObject *mit;PyArray_MapIterBind(PyArrayMapIterObject *mit, PyArrayObject *subspace;mapiter_fill_info(PyArrayMapIterObject *mit, index_info *indices;PyArray_MapIterCheckIndices(PyArrayMapIterObject *mit;PyArray_MapIterCheckIndices(PyArrayMapIterObject *mit;PyArray_MapIterCheckIndices(PyArrayMapIterObject *mit;PyArray_MapIterCheckIndices(PyArrayMapIterObject *mit;PyArray_MapIterCheckIndices(PyArrayMapIterObject *mit;PyArray_MapIterCheckIndices(PyArrayMapIterObject *mit;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterArray(PyArrayObject * a, PyObject * index;PyArray_MapIterArray(PyArrayObject * a, PyObject * index;static voi;"
3798,57,ef22bd4, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 19 Oct 2013 12:38:35 +0200","ct: [PATCH 18/57] Working mostly now, need to plug back in the exposed API",3,584,580,numpy/core/src/multiarray/mapping.h,[u'21'],1,1," -28,12 +28,6 ; -45,13 +39,16 ;","array_subscript(PyArrayObject *self, PyObject *op);NPY_NO_EXPORT voi;"
3798,57,f4772b1, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 19 Oct 2013 18:41:16 +0200",ct: [PATCH 19/57] Further fixups,1,92,30,numpy/core/src/multiarray/mapping.c,[u'122'],27,9," -226,6 +226,25 ; -238,44 +257,72 ; -286,9 +333,9 ; -1566,7 +1613,9 ; -2177,6 +2226,7 ; -2382,8 +2432,9 ; -2441,7 +2492,7 ; -2508,11 +2559,22 ;","PyArray_GetMap(PyArrayMapIterObject *mit;PyArray_GetMap(PyArrayMapIterObject *mit;PyArray_GetMap(PyArrayMapIterObject *mit;array_subscript(PyArrayObject *self, PyObject *op;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;"
3798,57,8533c52, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 20 Oct 2013 01:25:47 +0200",ct: [PATCH 20/57] Fix bugs with old mapiter compatibility,3,208,78,numpy/core/include/numpy/ndarraytypes.h,[u'17'],1,1," -1295,12 +1295,14 ; -1339,15 +1341,18 ;",typedef struct ;typedef struct ;
3798,57,8533c52, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 20 Oct 2013 01:25:47 +0200",ct: [PATCH 20/57] Fix bugs with old mapiter compatibility,3,208,78,numpy/core/src/multiarray/mapping.c,[u'267'],23,9," -254,7 +254,7 ; -329,14 +329,14 ; -365,7 +365,7 ; -409,14 +409,14 ; -1596,7 +1596,7 ; -1611,13 +1611,42 ; -1819,13 +1848,27 ; -1835,7 +1878,6 ; -1847,6 +1889,11 ; -1993,50 +2040,118 ; -2171,8 +2286,8 ; -2197,7 +2312,11 ; -2213,7 +2332,7 ; -2226,7 +2345,6 ; -2237,6 +2355,8 ; -2282,7 +2402,6 ; -2329,10 +2448,10 ; -2425,16 +2544,23 ; -2488,6 +2614,7 ; -2528,7 +2655,6 ; -2559,43 +2685,29 ; -2630,13 +2742,25 ; -2673,13 +2797,14 ;","PyArray_GetMap(PyArrayMapIterObject *mit;PyArray_GetMap(PyArrayMapIterObject *mit;PyArray_SetMap(PyArrayMapIterObject *mit;PyArray_SetMap(PyArrayMapIterObject *mit;array_subscript(PyArrayObject *self, PyObject *op;array_subscript(PyArrayObject *self, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;NPY_NO_EXPORT voi;PyArray_MapIterCheckIndices(PyArrayMapIterObject *mit;PyArray_MapIterCheckIndices(PyArrayMapIterObject *mit;NPY_NO_EXPORT PyObject ;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterArray(PyArrayObject * a, PyObject * index;static voi;"
3798,57,8533c52, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 20 Oct 2013 01:25:47 +0200",ct: [PATCH 20/57] Fix bugs with old mapiter compatibility,3,208,78,numpy/core/src/multiarray/mapping.h,[u'2'],1,1," -48,7 +48,7 ;",NPY_NO_EXPORT PyObject;
3798,57,269b6da, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 20 Oct 2013 03:03:54 +0200",ct: [PATCH 21/57] readd mapping.c change lost in rebase,1,3,3,numpy/core/src/multiarray/mapping.c,[u'6'],3,3," -2348,12 +2348,12 ;","PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;"
3798,57,3ec6314, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 20 Oct 2013 17:11:12 +0200","ct: [PATCH 22/57] BUG: Abort iteration when dtype buffering erroredThis means that if the buffer is smaller then the array,a transfer may be done up until the first bad element isreached. This is in line with all other transfers.",2,160,45,numpy/core/include/numpy/ndarraytypes.h,[u'6'],1,1," -1294,7 +1294,8 ; -1324,6 +1325,9 ;",typedef struct ;typedef struct ;
3798,57,3ec6314, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 20 Oct 2013 17:11:12 +0200","ct: [PATCH 22/57] BUG: Abort iteration when dtype buffering erroredThis means that if the buffer is smaller then the array,a transfer may be done up until the first bad element isreached. This is in line with all other transfers.",2,160,45,numpy/core/src/multiarray/mapping.c,[u'199'],25,7," -228,6 +228,7 ; -249,8 +250,8 ; -328,8 +329,12 ; -346,7 +351,7 ; -356,71 +361,146 ; -1894,7 +1974,9 ; -1920,7 +2002,10 ; -2077,8 +2162,8 ; -2355,6 +2440,8 ; -2572,9 +2659,12 ; -2587,7 +2677,13 ; -2617,7 +2713,7 ; -2709,6 +2805,14 ; -2718,7 +2822,13 ; -2796,6 +2906,7 ;","PyArray_GetMap(PyArrayMapIterObject *mit;PyArray_GetMap(PyArrayMapIterObject *mit;PyArray_GetMap(PyArrayMapIterObject *mit;PyArray_GetMap(PyArrayMapIterObject *mit;PyArray_SetMap(PyArrayMapIterObject *mit;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;PyArray_MapIterReset(PyArrayMapIterObject *mit;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterArray(PyArrayObject * a, PyObject * index;"
3798,57,80d3bdd, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 20 Oct 2013 20:33:52 +0200",ct: [PATCH 23/57] GRRRRR: Scipy ndimage.measurement uses 1-D iteration order...... for assignments,1,2,0,numpy/core/src/multiarray/mapping.c,[u'3'],2,1," -2635,7 +2635,8 ;","PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;"
3798,57,2d82c05, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 20 Oct 2013 21:20:30 +0200","ct: [PATCH 24/57] GRR: Fully consider scalar arrays as array indicesThis will break matrix[:,np.array(1)] = vals (transposed lhsduring assignment)",1,9,0,numpy/core/src/multiarray/mapping.c,[u'10'],9,1," -1859,8 +1859,15 ; -2636,6 +2643,7 ;","array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;"
3798,57,308bf7a, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 21 Oct 2013 14:25:34 +0200","ct: [PATCH 25/57] ENH: Create meaningful broadcasting errorsAlso checks dimensions a bit stricter (not relavent currently),silence error (back to old behaviour...)When advanced indexes cannot be broadcast, an index error isnow raised. When the assignment values cannot be broadcasta ValueError is raised.Note shape printing in nditer is no changed so that it is (2,)and not (2).",6,309,145,numpy/core/src/multiarray/common.c,[u'55'],5,0," -782,3 +782,58 ;",_is_basic_python_type(PyObject * obj;
3798,57,308bf7a, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 21 Oct 2013 14:25:34 +0200","ct: [PATCH 25/57] ENH: Create meaningful broadcasting errorsAlso checks dimensions a bit stricter (not relavent currently),silence error (back to old behaviour...)When advanced indexes cannot be broadcast, an index error isnow raised. When the assignment values cannot be broadcasta ValueError is raised.Note shape printing in nditer is no changed so that it is (2,)and not (2).",6,309,145,numpy/core/src/multiarray/common.h,[u'3'],1,0," -60,6 +60,9 ;","offset_bounds_from_strides(const int itemsize, const int nd;"
3798,57,308bf7a, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 21 Oct 2013 14:25:34 +0200","ct: [PATCH 25/57] ENH: Create meaningful broadcasting errorsAlso checks dimensions a bit stricter (not relavent currently),silence error (back to old behaviour...)When advanced indexes cannot be broadcast, an index error isnow raised. When the assignment values cannot be broadcasta ValueError is raised.Note shape printing in nditer is no changed so that it is (2,)and not (2).",6,309,145,numpy/core/src/multiarray/mapping.c,[u'321'],22,8," -1703,7 +1703,7 ; -1861,7 +1861,7 ; -2011,7 +2011,7 ; -2263,8 +2263,10 ; -2274,6 +2276,13 ; -2302,6 +2311,25 ; -2322,6 +2350,46 ; -2415,6 +2483,7 ; -2431,10 +2500,11 ; -2462,7 +2532,9 ; -2491,7 +2563,8 ; -2513,19 +2586,35 ; -2535,7 +2624,6 ; -2550,7 +2638,6 ; -2567,15 +2654,11 ; -2592,8 +2675,8 ; -2601,21 +2684,58 ; -2629,35 +2749,26 ; -2667,13 +2778,6 ; -2694,8 +2798,8 ; -2713,10 +2817,7 ; -2741,9 +2842,6 ; -2754,7 +2852,7 ; -2779,10 +2877,7 ; -2816,15 +2911,75 ;","array_subscript(PyArrayObject *self, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;array_ass_item(PyArrayObject *self, Py_ssize_t i, PyObject *v;PyArray_MapIterNext(PyArrayMapIterObject *mit;mapiter_fill_info(PyArrayMapIterObject *mit, npy_index_info *indices;mapiter_fill_info(PyArrayMapIterObject *mit, npy_index_info *indices;mapiter_fill_info(PyArrayMapIterObject *mit, npy_index_info *indices;PyArray_MapIterCheckIndices(PyArrayMapIterObject *mit;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;"
3798,57,308bf7a, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 21 Oct 2013 14:25:34 +0200","ct: [PATCH 25/57] ENH: Create meaningful broadcasting errorsAlso checks dimensions a bit stricter (not relavent currently),silence error (back to old behaviour...)When advanced indexes cannot be broadcast, an index error isnow raised. When the assignment values cannot be broadcasta ValueError is raised.Note shape printing in nditer is no changed so that it is (2,)and not (2).",6,309,145,numpy/core/src/multiarray/nditer_constr.c,[u'64'],1,5," -1255,54 +1255,6 ; -1727,7 +1679,7 ; -1751,7 +1703,7 ; -1774,7 +1726,7 ; -1796,7 +1748,7 ; -1818,7 +1770,7 ; -1854,7 +1806,7 ; -1887,7 +1839,7 ; -1907,7 +1859,7 ;",npyiter_casting_to_string(NPY_CASTING casting;broadcast_error: ;broadcast_error: ;broadcast_error: ;broadcast_error: ;broadcast_error: ;operand_different_than_broadcast: ;operand_different_than_broadcast: ;operand_different_than_broadcast: ;
3798,57,308bf7a, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 21 Oct 2013 14:25:34 +0200","ct: [PATCH 25/57] ENH: Create meaningful broadcasting errorsAlso checks dimensions a bit stricter (not relavent currently),silence error (back to old behaviour...)When advanced indexes cannot be broadcast, an index error isnow raised. When the assignment values cannot be broadcasta ValueError is raised.Note shape printing in nditer is no changed so that it is (2,)and not (2).",6,309,145,numpy/core/tests/test_nditer.py,[u'4'],1,1," -657,9 +657,9 ;",def test_iter_broadcasting_errors();
3798,57,308bf7a, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 21 Oct 2013 14:25:34 +0200","ct: [PATCH 25/57] ENH: Create meaningful broadcasting errorsAlso checks dimensions a bit stricter (not relavent currently),silence error (back to old behaviour...)When advanced indexes cannot be broadcast, an index error isnow raised. When the assignment values cannot be broadcasta ValueError is raised.Note shape printing in nditer is no changed so that it is (2,)and not (2).",6,309,145,numpy/core/tests/test_regression.py,[u'7'],1,1," -751,10 +751,9 ;","def test_bool_indexing_invalid_nr_elements(self, level=rlevel);"
3798,57,13b44ee, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 21 Oct 2013 15:04:24 +0200",ct: [PATCH 26/57] BUG: Check if extra operand has too many dimensionsThis was *not* done for the 1-d special case previously.,1,85,57,numpy/core/src/multiarray/mapping.c,[u'142'],21,15," -1186,6 +1186,7 ; -1857,14 +1858,8 ; -2497,11 +2492,16 ; -2603,6 +2603,11 ; -2613,6 +2618,26 ; -2925,61 +2950,64 ; -3025,7 +3053,7 ;","get_view_from_index(PyArrayObject *self, PyArrayObject **view;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterArray(PyArrayObject * a, PyObject * index;"
3798,57,96dbf1b, Sebastian Berg <sebastian@sipsolutions.net>," Tue, 22 Oct 2013 20:08:54 +0200",ct: [PATCH 27/57] ENH: Use template for inner loops and use stransfer,3,297,294,.../src/multiarray/lowlevel_strided_loops.c.src,[u'252'],16,0," -1353,3 +1353,255 ;",PyArray_TransferMaskedStridedToNDim(npy_intp ndim;
3798,57,96dbf1b, Sebastian Berg <sebastian@sipsolutions.net>," Tue, 22 Oct 2013 20:08:54 +0200",ct: [PATCH 27/57] ENH: Use template for inner loops and use stransfer,3,297,294,numpy/core/src/multiarray/mapping.c,[u'333'],3,18," -216,294 +216,6 ; -1505,6 +1217,18 ; -1685,7 +1409,12 ; -1944,9 +1673,7 ; -1966,6 +1693,11 ; -1976,7 +1708,7 ; -2483,6 +2215,9 ; -2903,7 +2638,17 ;","PyArray_MapIterSwapAxes(PyArrayMapIterObject *mit, PyArrayObject **ret, int get;array_ass_boolean_subscript(PyArrayObject *self;array_subscript(PyArrayObject *self, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;PyArray_MapIterCheckIndices(PyArrayMapIterObject *mit;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;"
3798,57,96dbf1b, Sebastian Berg <sebastian@sipsolutions.net>," Tue, 22 Oct 2013 20:08:54 +0200",ct: [PATCH 27/57] ENH: Use template for inner loops and use stransfer,3,297,294,numpy/core/src/private/lowlevel_strided_loops.h,[u'6'],1,0," -326,6 +326,12 ;",PyArray_TransferMaskedStridedToNDim(npy_intp ndim;
3798,57,020ec96, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 23 Oct 2013 15:02:17 +0200",ct: [PATCH 28/57] BUG: Fix reference count issues,1,35,20,numpy/core/src/multiarray/mapping.c,[u'55'],23,14," -493,11 +493,11 ; -532,9 +532,10 ; -642,6 +643,7 ; -661,6 +663,8 ; -675,6 +679,8 ; -683,6 +689,9 ; -729,6 +738,7 ; -1661,9 +1671,6 ; -1716,20 +1723,20 ; -1862,6 +1869,10 ; -2175,6 +2186,8 ; -2268,6 +2281,7 ; -2753,6 +2767,7 ;","prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;PyArray_MapIterReset(PyArrayMapIterObject *mit;PyArray_MapIterCheckIndices(PyArrayMapIterObject *mit;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;"
3798,57,fa35a25, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 25 Oct 2013 03:40:49 +0200",ct: [PATCH 29/57] ENH: Add trivial loop special cases for fancy indexingThis optimizes simple contiguous loops for a single fancyindex into a 1-d array and also for general index checking,3,207,6,.../src/multiarray/lowlevel_strided_loops.c.src,[u'95'],18,0," -1365,6 +1365,100 ; -1487,6 +1581,7 ;",PyArray_TransferMaskedStridedToNDim(npy_intp ndim;mapiter_@name@(PyArrayMapIterObject *mit;
3798,57,fa35a25, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 25 Oct 2013 03:40:49 +0200",ct: [PATCH 29/57] ENH: Add trivial loop special cases for fancy indexingThis optimizes simple contiguous loops for a single fancyindex into a 1-d array and also for general index checking,3,207,6,numpy/core/src/multiarray/mapping.c,[u'110'],19,2," -1365,7 +1365,7 ; -1406,6 +1406,46 ; -1439,6 +1479,7 ; -1668,6 +1709,39 ; -2139,6 +2213,7 ; -2155,15 +2230,41 ; -2175,9 +2276,6 ;","array_subscript(PyArrayObject *self, PyObject *op;array_subscript(PyArrayObject *self, PyObject *op;array_subscript(PyArrayObject *self, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;mapiter_fill_info(PyArrayMapIterObject *mit, npy_index_info *indices;PyArray_MapIterCheckIndices(PyArrayMapIterObject *mit;PyArray_MapIterCheckIndices(PyArrayMapIterObject *mit;"
3798,57,fa35a25, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 25 Oct 2013 03:40:49 +0200",ct: [PATCH 29/57] ENH: Add trivial loop special cases for fancy indexingThis optimizes simple contiguous loops for a single fancyindex into a 1-d array and also for general index checking,3,207,6,numpy/core/src/private/lowlevel_strided_loops.h,[u'8'],2,0," -327,6 +327,14 ;",PyArray_TransferMaskedStridedToNDim(npy_intp ndim;
3798,57,059f7d4, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 25 Oct 2013 03:46:32 +0200",ct: [PATCH 30/57] ENH: Only check getitem index in inner loop if a single indexOtherwise they might be broadcasted which makes index checkingin the inner loop unnecessary expensive. The overhead itselfshould not be too high in that case.Also some cleanup,2,99,78,.../src/multiarray/lowlevel_strided_loops.c.src,[u'131'],11,10," -1510,12 +1510,14 ; -1542,7 +1544,8 ; -1601,7 +1604,7 ; -1627,76 +1630,86 ;",mapiter_@name@(PyArrayMapIterObject *mit;mapiter_@name@(PyArrayMapIterObject *mit;mapiter_@name@(PyArrayMapIterObject *mit;mapiter_@name@(PyArrayMapIterObject *mit;
3798,57,059f7d4, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 25 Oct 2013 03:46:32 +0200",ct: [PATCH 30/57] ENH: Only check getitem index in inner loop if a single indexOtherwise they might be broadcasted which makes index checkingin the inner loop unnecessary expensive. The overhead itselfshould not be too high in that case.Also some cleanup,2,99,78,numpy/core/src/multiarray/mapping.c,[u'46'],5,3," -1265,6 +1265,8 ; -1396,13 +1398,14 ; -1412,8 +1415,7 ; -1447,7 +1449,6 ; -1456,29 +1457,36 ; -1498,20 +1506,20 ; -1530,6 +1538,8 ; -1750,7 +1760,6 ; -1769,7 +1778,6 ; -1780,7 +1788,6 ; -1800,6 +1807,7 ;","array_subscript(PyArrayObject *self, PyObject *op;array_subscript(PyArrayObject *self, PyObject *op;array_subscript(PyArrayObject *self, PyObject *op;array_subscript(PyArrayObject *self, PyObject *op;array_subscript(PyArrayObject *self, PyObject *op;array_subscript(PyArrayObject *self, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;"
3798,57,b85dcf8, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 25 Oct 2013 12:17:43 +0200",ct: [PATCH 31/57] MAINT: Small cleanups,1,22,16,.../src/multiarray/lowlevel_strided_loops.c.src,[u'38'],13,9," -1356,7 +1356,7 ; -1472,7 +1472,7 ; -1480,10 +1480,10 ; -1510,11 +1510,15 ; -1545,9 +1549,9 ; -1567,7 +1571,6 ; -1584,7 +1587,6 ; -1631,20 +1633,24 ; -1706,10 +1712,10 ;",PyArray_TransferMaskedStridedToNDim(npy_intp ndim;mapiter_@name@(PyArrayMapIterObject *mit;mapiter_@name@(PyArrayMapIterObject *mit;mapiter_@name@(PyArrayMapIterObject *mit;mapiter_@name@(PyArrayMapIterObject *mit;mapiter_@name@(PyArrayMapIterObject *mit;mapiter_@name@(PyArrayMapIterObject *mit;mapiter_@name@(PyArrayMapIterObject *mit;mapiter_@name@(PyArrayMapIterObject *mit;
3798,57,009b17a, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 25 Oct 2013 18:58:08 +0200",ct: [PATCH 32/57] BUG: Fix native byteorder check for trivial loops,3,27,14,numpy/core/src/multiarray/mapping.c,[u'29'],18,7," -1421,8 +1421,11 ; -1740,9 +1743,11 ; -2247,8 +2252,11 ; -2499,6 +2507,11 ; -2514,7 +2527,7 ;","array_subscript(PyArrayObject *self, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;PyArray_MapIterCheckIndices(PyArrayMapIterObject *mit;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;"
3798,57,009b17a, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 25 Oct 2013 18:58:08 +0200",ct: [PATCH 32/57] BUG: Fix native byteorder check for trivial loops,3,27,14,numpy/core/src/private/lowlevel_strided_loops.h,[u'8'],3,4," -668,7 +668,7 ; -679,12 +679,12 ;",npy_bswap8_unaligned(char * x;npy_bswap8_unaligned(char * x;
3798,57,009b17a, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 25 Oct 2013 18:58:08 +0200",ct: [PATCH 32/57] BUG: Fix native byteorder check for trivial loops,3,27,14,numpy/core/tests/test_indexing.py,[u'4'],2,2," -182,8 +182,8 ;",def setUp(self);
3798,57,fe859f1, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 25 Oct 2013 22:58:49 +0200",ct: [PATCH 33/57] TST: Add some broadcasting assignment tests,1,43,0,numpy/core/tests/test_indexing.py,[u'43'],39,0," -147,6 +147,49 ;",def test_boolean_indexing_twodim(self);
3798,57,169926f, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 26 Oct 2013 02:26:13 +0200","ct: [PATCH 34/57] BUGS: Fix subspace casting and make fancy broadcasting consistentNormal CopyInto allows removal of 1s from the start, butbroadcasting never did (and did not here before). This allows thatcase, though by creating a view.",3,139,63,.../src/multiarray/lowlevel_strided_loops.c.src,[u'8'],1,1," -1614,13 +1614,15 ; -1710,10 +1712,10 ;",mapiter_@name@(PyArrayMapIterObject *mit;mapiter_@name@(PyArrayMapIterObject *mit;
3798,57,169926f, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 26 Oct 2013 02:26:13 +0200","ct: [PATCH 34/57] BUGS: Fix subspace casting and make fancy broadcasting consistentNormal CopyInto allows removal of 1s from the start, butbroadcasting never did (and did not here before). This allows thatcase, though by creating a view.",3,139,63,numpy/core/src/multiarray/mapping.c,[u'97'],13,9," -1817,6 +1817,7 ; -2355,6 +2356,8 ; -2467,8 +2470,25 ; -2630,7 +2650,7 ; -2695,19 +2715,17 ; -2751,6 +2769,7 ; -2789,17 +2808,17 ; -2820,72 +2839,74 ;","array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;"
3798,57,169926f, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 26 Oct 2013 02:26:13 +0200","ct: [PATCH 34/57] BUGS: Fix subspace casting and make fancy broadcasting consistentNormal CopyInto allows removal of 1s from the start, butbroadcasting never did (and did not here before). This allows thatcase, though by creating a view.",3,139,63,numpy/core/tests/test_indexing.py,[u'97'],17,5," -150,44 +150,97 ;",def test_boolean_indexing_twodim(self);
3798,57,52b4a94, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 27 Oct 2013 22:05:46 +0100","ct: [PATCH 35/57] ENH,TST: Add many tests and have boolean finalize at end.__array_finalize__ is now called in boolean indexing on theresult array, so that all numerical values are available.",2,137,44,numpy/core/src/multiarray/mapping.c,[u'66'],12,9," -523,7 +523,7 ; -562,7 +562,7 ; -576,9 +576,9 ; -984,8 +984,8 ; -1074,6 +1074,24 ; -1511,10 +1529,11 ; -1686,15 +1705,6 ; -1702,9 +1712,13 ; -2446,17 +2460,16 ; -2471,10 +2484,9 ;","prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;array_boolean_subscript(PyArrayObject *self;array_boolean_subscript(PyArrayObject *self;array_subscript(PyArrayObject *self, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;"
3798,57,52b4a94, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 27 Oct 2013 22:05:46 +0100","ct: [PATCH 35/57] ENH,TST: Add many tests and have boolean finalize at end.__array_finalize__ is now called in boolean indexing on theresult array, so that all numerical values are available.",2,137,44,numpy/core/tests/test_indexing.py,[u'115'],30,6," -147,11 +147,59 ; -189,27 +237,60 ;",def test_boolean_indexing_twodim(self);def test_simple_broadcasting_errors(self);
3798,57,628f60d, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 27 Oct 2013 22:24:17 +0100",ct: [PATCH 36/57] TST: Just one more small test,1,20,0,numpy/core/tests/test_indexing.py,[u'20'],20,0," -116,6 +116,7 ; -127,6 +128,7 ; -194,6 +196,24 ;","def test_boolean_indexing_onedim(self);def f(a, v);def test_everything_returns_views(self);"
3798,57,8544000, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 28 Oct 2013 14:44:42 +0100",ct: [PATCH 37/57] TST: Add deprecation tests,2,50,0,numpy/core/src/multiarray/mapping.c,[u'1'],1,0," -2094,6 +2094,7 ;",PyArray_MapIterNext(PyArrayMapIterObject *mit;
3798,57,8544000, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 28 Oct 2013 14:44:42 +0100",ct: [PATCH 37/57] TST: Add deprecation tests,2,50,0,numpy/core/tests/test_deprecations.py,[u'50'],34,1," -11,7 +11,8 ; -295,5 +296,52 ;",;def test_array_to_index_deprecation(self);
3798,57,753bcc4, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 28 Oct 2013 16:31:04 +0100",ct: [PATCH 38/57] BUG: Test and fix array converson before transposeWhen SwapAxes is called a base class array is needed or thesubclass might mess with the shape. Fixes the previouslynot-working test and code,2,24,0,numpy/core/src/multiarray/mapping.c,[u'3'],2,1," -2474,7 +2474,8 ;","PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;"
3798,57,753bcc4, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 28 Oct 2013 16:31:04 +0100",ct: [PATCH 38/57] BUG: Test and fix array converson before transposeWhen SwapAxes is called a base class array is needed or thesubclass might mess with the shape. Fixes the previouslynot-working test and code,2,24,0,numpy/core/tests/test_indexing.py,[u'22'],22,0," -214,6 +214,28 ;",def test_trivial_fancy_out_of_bounds(self);
3798,57,90421c6, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 8 Nov 2013 16:05:39 +0100",ct: [PATCH 39/57] DOC: Some doc fixes,1,12,6,numpy/core/src/multiarray/mapping.c,[u'18'],12,6," -227,7 +227,15 ; -908,7 +916,7 ; -1289,8 +1297,8 ; -2522,7 +2530,6 ; -2646,7 +2653,6 ;","PyArray_MapIterSwapAxes(PyArrayMapIterObject *mit, PyArrayObject **ret, int get;get_view_from_index(PyArrayObject *self, PyArrayObject **view;array_subscript(PyArrayObject *self, PyObject *op;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;"
3798,57,1e647c5, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 23 Nov 2013 23:37:31 +0100",ct: [PATCH 40/57] STY/DOC: minor fixes,1,2,2,numpy/core/src/multiarray/mapping.c,[u'4'],2,2," -2210,7 +2210,7 ; -2365,7 +2365,7 ;","mapiter_fill_info(PyArrayMapIterObject *mit, npy_index_info *indices;PyArray_MapIterCheckIndices(PyArrayMapIterObject *mit;"
3798,57,b1f8e29, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 24 Nov 2013 22:35:11 +0100",ct: [PATCH 41/57] STY: mapping.c minor style fixes,1,4,4,numpy/core/src/multiarray/mapping.c,[u'8'],4,4," -883,13 +883,14 ; -910,8 +911,7 ;","get_view_from_index(PyArrayObject *self, PyArrayObject **view;get_view_from_index(PyArrayObject *self, PyArrayObject **view;"
3798,57,44c1f7a, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 13 Dec 2013 14:15:23 +0100",ct: [PATCH 42/57] BUG: Memory order of indexing result should be flexibleMemory order of non-trivial indexing results should adept tothe input.,2,13,0,numpy/core/src/multiarray/mapping.c,[u'2'],1,1," -2691,7 +2691,7 ;","PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;"
3798,57,44c1f7a, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 13 Dec 2013 14:15:23 +0100",ct: [PATCH 42/57] BUG: Memory order of indexing result should be flexibleMemory order of non-trivial indexing results should adept tothe input.,2,13,0,numpy/core/tests/test_indexing.py,[u'12'],12,0," -236,6 +236,18 ;","def __array_finalize__(self, old);"
3798,57,4cc6066, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 14 Dec 2013 20:16:24 +0100",ct: [PATCH 43/57] STY|DOC: Small fixes,2,81,60,numpy/core/src/multiarray/mapping.c,[u'126'],19,17," -121,11 +121,8 ; -273,11 +270,9 ; -351,7 +346,8 ; -392,8 +388,9 ; -513,9 +510,10 ; -751,7 +749,7 ; -819,7 +817,7 ; -872,6 +870,8 ; -1411,6 +1411,7 ; -1678,8 +1679,8 ; -1779,10 +1780,10 ; -2183,7 +2184,8 ; -2255,8 +2257,7 ; -2289,7 +2290,7 ; -2317,18 +2318,19 ; -2392,7 +2394,7 ; -2409,7 +2411,13 ; -2426,7 +2434,7 ; -2449,6 +2457,7 ; -2463,24 +2472,28 ; -2497,7 +2510,6 ; -2514,7 +2526,7 ; -2546,6 +2558,10 ; -2630,18 +2646,14 ; -2651,8 +2663,7 ; -2731,7 +2742,7 ; -2798,7 +2809,6 ; -3002,7 +3012,6 ; -3015,6 +3024,7 ; -3042,9 +3052,9 ; -3107,5 +3117,3 ;","array_item_asarray(PyArrayObject *self, npy_intp i;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;get_item_pointer(PyArrayObject *self, char **ptr;array_subscript(PyArrayObject *self, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;mapiter_fill_info(PyArrayMapIterObject *mit, npy_index_info *indices;PyArray_MapIterCheckIndices(PyArrayMapIterObject *mit;PyArray_MapIterCheckIndices(PyArrayMapIterObject *mit;PyArray_MapIterCheckIndices(PyArrayMapIterObject *mit;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterArray(PyArrayObject * a, PyObject * index;PyArray_MapIterArray(PyArrayObject * a, PyObject * index;arraymapiter_dealloc(PyArrayMapIterObject *mit;NPY_NO_EXPORT PyTypeObject PyArrayMapIter_Type = ;"
3798,57,4cc6066, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 14 Dec 2013 20:16:24 +0100",ct: [PATCH 43/57] STY|DOC: Small fixes,2,81,60,numpy/core/tests/test_indexing.py,[u'15'],4,1," -237,7 +237,7 ; -248,6 +248,19 ;","def __array_finalize__(self, old);def test_memory_order(self);"
3798,57,4836b65, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 16 Dec 2013 12:21:18 +0100",ct: [PATCH 44/57] TST: Simple indexing subspace broadcasting test.,1,10,2,numpy/core/tests/test_indexing.py,[u'12'],10,2," -305,13 +305,21 ; -362,7 +370,7 ;","def test_simple_broadcasting_errors(self);def __array_finalize__(self, old);"
3798,57,b993968, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 16 Dec 2013 16:08:12 +0100",ct: [PATCH 45/57] DOC: Add indexing info to release notes,1,43,0,doc/release/1.9.0-notes.rst,[u'43'],43,0," -100,12 +100,55 ;",The `out` argument to `np.argmin` and `np.argmax` and their equivalen;
3798,57,4e92b2b, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 16 Dec 2013 16:50:35 +0100",ct: [PATCH 46/57] TST: Fix buggy ref-count test,1,4,2,numpy/core/tests/test_indexing.py,[u'6'],4,2," -253,10 +253,12 ;",def test_small_regressions(self);
3798,57,e0b28df, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 16 Dec 2013 17:42:17 +0100",ct: [PATCH 47/57] MAINT: move npy_index_info into mapping.h,2,20,18,numpy/core/include/numpy/ndarraytypes.h,[u'17'],0,17," -1257,23 +1257,6 ;",typedef struct ;
3798,57,e0b28df, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 16 Dec 2013 17:42:17 +0100",ct: [PATCH 47/57] MAINT: move npy_index_info into mapping.h,2,20,18,numpy/core/src/multiarray/mapping.h,[u'21'],20,1," -7,6 +7,25 ; -48,7 +67,7 ;",extern NPY_NO_EXPORT PyMappingMethods array_as_mapping;NPY_NO_EXPORT PyObject;
3798,57,628e0ef, Sebastian Berg <sebastian@sipsolutions.net>," Tue, 17 Dec 2013 15:45:42 +0100",ct: [PATCH 48/57] DOC|MINOR: minor fixes to release notes indexing part.,1,10,9,doc/release/1.9.0-notes.rst,[u'19'],10,9," -112,8 +112,8 ; -122,30 +122,31 ;",Indexin;indexing operations;
3798,57,d1cf905, Sebastian Berg <sebastian@sipsolutions.net>," Tue, 17 Dec 2013 16:10:42 +0100",ct: [PATCH 49/57] MAINT: Remove old undefs in mapping.c,1,0,3,numpy/core/src/multiarray/mapping.c,[u'3'],0,3," -3021,9 +3021,6 ;","PyArray_MapIterArray(PyArrayObject * a, PyObject * index;"
3798,57,97e9053, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 18 Dec 2013 13:34:55 +0100",ct: [PATCH 50/57] DOC: Minor release notes changes,1,2,3,doc/release/1.9.0-notes.rst,[u'5'],2,3," -131,8 +131,7 ; -145,7 +144,7 ;",indexing operations;indexing operations;
3798,57,9635b48, Sebastian Berg <sebastian@sipsolutions.net>," Tue, 24 Dec 2013 16:34:24 +0100",ct: [PATCH 51/57] BUG: Move 0-d array-is-scalar special case into array branchThis should also fix array-likes,3,84,32,doc/release/1.9.0-notes.rst,[u'4'],3,0," -141,6 +141,10 ;",indexing operations;
3798,57,9635b48, Sebastian Berg <sebastian@sipsolutions.net>," Tue, 24 Dec 2013 16:34:24 +0100",ct: [PATCH 51/57] BUG: Move 0-d array-is-scalar special case into array branchThis should also fix array-likes,3,84,32,numpy/core/src/multiarray/mapping.c,[u'58'],20,17," -453,36 +453,13 ; -607,7 +584,7 ; -658,6 +635,7 ; -702,6 +680,7 ; -719,6 +698,33 ;","prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;"
3798,57,9635b48, Sebastian Berg <sebastian@sipsolutions.net>," Tue, 24 Dec 2013 16:34:24 +0100",ct: [PATCH 51/57] BUG: Move 0-d array-is-scalar special case into array branchThis should also fix array-likes,3,84,32,numpy/core/tests/test_indexing.py,[u'54'],30,4," -96,12 +96,11 ; -248,6 +247,40 ; -263,6 +296,15 ;",def test_single_bool_index(self);def test_memory_order(self);def test_small_regressions(self);
3798,57,c3eb6c5, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 25 Jan 2014 16:03:42 +0100",ct: [PATCH 52/57] BUG: Skip must check SIZE and NDIM...Found by pandas tests...,2,13,0,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,[u'2'],1,1," -1630,7 +1630,7 ;",mapiter_@name@(PyArrayMapIterObject *mit;
3798,57,c3eb6c5, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 25 Jan 2014 16:03:42 +0100",ct: [PATCH 52/57] BUG: Skip must check SIZE and NDIM...Found by pandas tests...,2,13,0,numpy/core/tests/test_indexing.py,[u'12'],12,0," -166,6 +166,18 ;",def test_reverse_strides_and_subspace_bufferinit(self);
3798,57,98b1892, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 25 Jan 2014 20:26:21 +0100",ct: [PATCH 53/57] BUG: Fix statement before declaration in mapping.c,1,9,8,numpy/core/src/multiarray/mapping.c,[u'17'],9,8," -564,9 +564,9 ; -2571,6 +2571,12 ; -2578,11 +2584,6 ;","prepare_index(PyArrayObject *self, PyObject *index;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;"
3798,57,b292046, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 6 Feb 2014 17:18:02 +0100",ct: [PATCH 54/57] MAINT: Comments from charris and some extra documentation,4,97,57,numpy/core/src/multiarray/common.c,[u'16'],3,2," -784,8 +784,17 ; -795,10 +804,7 ;","_is_basic_python_type(PyObject * obj;get_shape_string(npy_intp n, npy_intp *vals, char *ending;"
3798,57,b292046, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 6 Feb 2014 17:18:02 +0100",ct: [PATCH 54/57] MAINT: Comments from charris and some extra documentation,4,97,57,.../src/multiarray/lowlevel_strided_loops.c.src,[u'42'],7,5," -1364,6 +1364,11 ; -1418,37 +1423,37 ; -1458,6 +1463,9 ; -1533,6 +1541,7 ; -1645,6 +1654,7 ;","PyArray_TransferMaskedStridedToNDim(npy_intp ndim;mapiter_trivial_@name@(PyArrayObject *self, PyArrayObject *ind;mapiter_trivial_@name@(PyArrayObject *self, PyArrayObject *ind;mapiter_@name@(PyArrayMapIterObject *mit;mapiter_@name@(PyArrayMapIterObject *mit;"
3798,57,b292046, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 6 Feb 2014 17:18:02 +0100",ct: [PATCH 54/57] MAINT: Comments from charris and some extra documentation,4,97,57,numpy/core/src/multiarray/mapping.c,[u'80'],14,8," -135,7 +135,7 ; -213,7 +213,9 ; -564,9 +566,9 ; -851,11 +853,20 ; -872,12 +883,23 ; -2102,16 +2124,11 ; -2121,6 +2138,13 ; -2232,9 +2256,10 ; -2351,6 +2376,9 ; -2374,9 +2402,6 ; -2571,12 +2596,6 ; -2584,6 +2603,11 ; -2914,8 +2938,8 ; -2931,7 +2955,7 ;","array_item(PyArrayObject *self, Py_ssize_t i;PyArray_MapIterSwapAxes(PyArrayMapIterObject *mit, PyArrayObject **ret, int get;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;get_item_pointer(PyArrayObject *self, char **ptr;PyArray_MapIterNext(PyArrayMapIterObject *mit;PyArray_MapIterNext(PyArrayMapIterObject *mit;mapiter_fill_info(PyArrayMapIterObject *mit, npy_index_info *indices;PyArray_MapIterCheckIndices(PyArrayMapIterObject *mit;PyArray_MapIterCheckIndices(PyArrayMapIterObject *mit;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;"
3798,57,b292046, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 6 Feb 2014 17:18:02 +0100",ct: [PATCH 54/57] MAINT: Comments from charris and some extra documentation,4,97,57,numpy/core/src/multiarray/nditer_constr.c,[u'16'],2,3," -1679,7 +1679,7 ; -1703,7 +1703,7 ; -1726,7 +1726,7 ; -1748,7 +1748,7 ; -1770,7 +1770,7 ; -1806,7 +1806,7 ; -1839,7 +1839,7 ; -1859,7 +1859,7 ;",broadcast_error: ;broadcast_error: ;broadcast_error: ;broadcast_error: ;broadcast_error: ;operand_different_than_broadcast: ;operand_different_than_broadcast: ;operand_different_than_broadcast: ;
3798,57,35a5639, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 6 Feb 2014 17:29:15 +0100",ct: [PATCH 55/57] DOC: Add some examples to the indexing change release notes,1,2,0,doc/release/1.9.0-notes.rst,[u'3'],2,1," -125,6 +125,7 ; -135,7 +136,7 ;",indexing operations;indexing operations;
3798,57,aba22aa, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 25 Jan 2014 20:26:21 +0100",ct: [PATCH 56/57] BUG: Fix statement before declaration in mapping.c (again...)Undid it by accident.,1,9,8,numpy/core/src/multiarray/mapping.c,[u'17'],9,8," -566,9 +566,9 ; -2596,6 +2596,12 ; -2603,11 +2609,6 ;","prepare_index(PyArrayObject *self, PyObject *index;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;"
3798,57,d554c29, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 7 Feb 2014 14:58:30 +0100",ct: [PATCH 57/57] BUG: Fix common.h convert_shape_to_string.,1,0,0,numpy/core/src/multiarray/common.h,[u'2'],1,1," -61,7 +61,7 ;","offset_bounds_from_strides(const int itemsize, const int nd;"
3795,1,a2b3ad1, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 25 Sep 2013 22:54:50 +0200",ct: [PATCH] BUG: ufunc_at needs_api requires init to 0as reported by valgrind...,1,0,0,numpy/core/src/umath/ufunc_object.c,[u'2'],1,1," -4930,7 +4930,7 ;","ufunc_at(PyUFuncObject *ufunc, PyObject *args;"
3794,1,0c71afc, CJ Carey <perimosocordiae@gmail.com>," Wed, 25 Sep 2013 16:29:09 -0400",ct: [PATCH] DOC: adding 'Returns' section to `empty` functionThis matches the format of related functions like `empty_like` and `zeros`.,1,6,0,numpy/add_newdocs.py,[u'6'],6,0," -748,6 +748,12 ;","def luf(lamdaexpr, *args, **kwargs);"
3792,1,44d8fe5, Julian Taylor <jtaylor.debian@googlemail.com>," Wed, 25 Sep 2013 18:27:04 +0200","ct: [PATCH] MAINT: remove a duplicated implementation of array alignment checkraw_array_is_aligned is the better implementation, the extra bits in_IsAligned likely make it slower for the common case (ndim small).",1,4,31,numpy/core/src/multiarray/common.c,[u'35'],4,31," -13,6 +13,7 ; -675,37 +676,9 ;",;_zerofill(PyArrayObject *ret;
3791,1,f030845, Julian Taylor <jtaylor.debian@googlemail.com>," Tue, 24 Sep 2013 00:59:06 +0200",ct: [PATCH] TST: mark gen_alignment_data privateit not very useful outside numpy and there might be changes required infuture e.g. to add min_size.,3,14,14,numpy/core/tests/test_scalarmath.py,[u'8'],4,4," -2,7 +2,7 ; -49,9 +49,9 ;",;class TestBaseMath(TestCase);
3791,1,f030845, Julian Taylor <jtaylor.debian@googlemail.com>," Tue, 24 Sep 2013 00:59:06 +0200",ct: [PATCH] TST: mark gen_alignment_data privateit not very useful outside numpy and there might be changes required infuture e.g. to add min_size.,3,14,14,numpy/core/tests/test_umath.py,[u'18'],9,9," -4,7 +4,7 ; -98,15 +98,15 ; -670,8 +670,8 ; -691,8 +691,8 ;",;def test_power_float(self);class TestMinMax(TestCase);class TestAbsolute(TestCase);
3791,1,f030845, Julian Taylor <jtaylor.debian@googlemail.com>," Tue, 24 Sep 2013 00:59:06 +0200",ct: [PATCH] TST: mark gen_alignment_data privateit not very useful outside numpy and there might be changes required infuture e.g. to add min_size.,3,14,14,numpy/testing/utils.py,[u'2'],1,1," -1512,7 +1512,7 ;","def assert_no_warnings(func, *args, **kw);"
3790,2,2657098, Julian Taylor <jtaylor.debian@googlemail.com>," Mon, 23 Sep 2013 23:50:38 +0200","ct: [PATCH 1/2] TST: speed up some very slow testsMinimize alignment combinations to useful set with SSE, might need tobe revisited if we add AVX support.Move large data test_zeros test to slow and drop the extremely slowcount_nonzero() call.Rename gen_alignment_data to _gen_alignment_data (private) to reserveright to change it, e.g. add min_size.",4,35,25,numpy/core/tests/test_multiarray.py,[u'15'],11,4," -443,22 +443,29 ;",def test_zeros(self);
3790,2,2657098, Julian Taylor <jtaylor.debian@googlemail.com>," Mon, 23 Sep 2013 23:50:38 +0200","ct: [PATCH 1/2] TST: speed up some very slow testsMinimize alignment combinations to useful set with SSE, might need tobe revisited if we add AVX support.Move large data test_zeros test to slow and drop the extremely slowcount_nonzero() call.Rename gen_alignment_data to _gen_alignment_data (private) to reserveright to change it, e.g. add min_size.",4,35,25,numpy/core/tests/test_scalarmath.py,[u'13'],7,6," -3,7 +3,7 ; -48,11 +48,12 ;",";def test_type_create(self, level=1);"
3790,2,2657098, Julian Taylor <jtaylor.debian@googlemail.com>," Mon, 23 Sep 2013 23:50:38 +0200","ct: [PATCH 1/2] TST: speed up some very slow testsMinimize alignment combinations to useful set with SSE, might need tobe revisited if we add AVX support.Move large data test_zeros test to slow and drop the extremely slowcount_nonzero() call.Rename gen_alignment_data to _gen_alignment_data (private) to reserveright to change it, e.g. add min_size.",4,35,25,numpy/core/tests/test_umath.py,[u'30'],16,14," -4,7 +4,7 ; -98,15 +98,17 ; -668,10 +670,11 ; -686,13 +689,12 ;",;def test_power_float(self);def test_sign(self);def test_minmax_blocked(self);
3790,2,2657098, Julian Taylor <jtaylor.debian@googlemail.com>," Mon, 23 Sep 2013 23:50:38 +0200","ct: [PATCH 1/2] TST: speed up some very slow testsMinimize alignment combinations to useful set with SSE, might need tobe revisited if we add AVX support.Move large data test_zeros test to slow and drop the extremely slowcount_nonzero() call.Rename gen_alignment_data to _gen_alignment_data (private) to reserveright to change it, e.g. add min_size.",4,35,25,numpy/testing/utils.py,[u'2'],1,1," -1512,7 +1512,7 ;","def assert_no_warnings(func, *args, **kw);"
3790,2,79d3a94, Julian Taylor <jtaylor.debian@googlemail.com>," Tue, 24 Sep 2013 00:50:16 +0200",ct: [PATCH 2/2] TST: delay error message building to failures in assert_almost_equalimproves test performance by about 15%,1,8,6,numpy/testing/utils.py,[u'14'],8,6," -427,8 +427,10 ; -447,7 +449,7 ; -459,15 +461,15 ;","def assert_almost_equal(actual,desired,decimal=7,err_msg='',verbose=True);def assert_almost_equal(actual,desired,decimal=7,err_msg='',verbose=True);def assert_almost_equal(actual,desired,decimal=7,err_msg='',verbose=True);"
3789,1,848949a, Julian Taylor <jtaylor.debian@googlemail.com>," Mon, 23 Sep 2013 21:16:54 +0200",ct: [PATCH] MAINT: check alignment of copy arguments in debug modeAllows catching unaligned access issues on x86.Triggers TestRegression.test_complex64_alignment if the fix is reverted.Also remove some dead code.,1,31,4,.../src/multiarray/lowlevel_strided_loops.c.src,[u'35'],19,3," -20,6 +20,17 ; -118,6 +129,11 ; -182,6 +198,11 ; -785,6 +806,16 ; -792,8 +823,6 ; -836,8 +865,6 ;",;static voi;static voi;static voi;static voi;static voi;
3788,1,ed7e9ab, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 23 Sep 2013 19:38:20 +0200","ct: [PATCH] BUG: INCREF before DECREF when copying object arrays.Only the change in dtype_transfer actually seems to berelated to the simple np.copyto(a, a) bug, when a is a scalarobject array.It seemed however safer to me, to generally turn around thelogic, even if it may not be necessary and in one placerequires an extra temporary variable.Closes gh-3787",3,21,10,numpy/core/src/multiarray/arraytypes.c.src,[u'17'],10,7," -501,9 +501,10 ; -1158,9 +1159,11 ; -1866,10 +1869,10 ; -1894,10 +1897,10 ; -3222,8 +3225,8 ;","OBJECT_setitem(PyObject *op, char *ov, PyArrayObject *ap;static voi;OBJECT_copyswapn(PyObject **dst, npy_intp dstride, PyObject **src;OBJECT_copyswap(PyObject **dst, PyObject **src, int NPY_UNUSED(swap);OBJECT_fillwithscalar(PyObject **buffer, npy_intp length, PyObject **value;"
3788,1,ed7e9ab, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 23 Sep 2013 19:38:20 +0200","ct: [PATCH] BUG: INCREF before DECREF when copying object arrays.Only the change in dtype_transfer actually seems to berelated to the simple np.copyto(a, a) bug, when a is a scalarobject array.It seemed however safer to me, to generally turn around thelogic, even if it may not be necessary and in one placerequires an extra temporary variable.Closes gh-3787",3,21,10,numpy/core/src/multiarray/dtype_transfer.c,[u'6'],3,3," -127,14 +127,14 ;","_strided_to_strided_copy_references(char *dst, npy_intp dst_stride;"
3788,1,ed7e9ab, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 23 Sep 2013 19:38:20 +0200","ct: [PATCH] BUG: INCREF before DECREF when copying object arrays.Only the change in dtype_transfer actually seems to berelated to the simple np.copyto(a, a) bug, when a is a scalarobject array.It seemed however safer to me, to generally turn around thelogic, even if it may not be necessary and in one placerequires an extra temporary variable.Closes gh-3787",3,21,10,numpy/core/tests/test_regression.py,[u'8'],8,0," -1665,6 +1665,14 ;",def test_object_array_self_reference(self);
3786,1,ca98dac, Charles Harris <charlesr.harris@gmail.com>," Mon, 23 Sep 2013 08:40:02 -0600",ct: [PATCH] ENH: Add gfortran to travis.yml configuration to enable f2py.The f2py tests would not run without gfortran.,1,0,0,.travis.yml,[u'1'],1,0," -26,6 +26,7 ;",before_install;
3785,1,80204cf, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 22 Sep 2013 22:22:21 +0200",ct: [PATCH] TST: wrong indent in multiarray tests,1,5,5,numpy/core/tests/test_multiarray.py,[u'10'],5,5," -3518,11 +3518,11 ;",def test_mapiter(self);
3784,1,eb93ee7, Charles Harris <charlesr.harris@gmail.com>," Mon, 23 Sep 2013 08:04:43 -0600","ct: [PATCH] BLD: Backport Ralf's gh-3766 fixes to the bento build scripts.The original PR included fixes for ufunc_override that are notneeded for 1.8, so I just copied the files numpy/core/bento.info andnumpy/core/bscript from master.",2,15,2,numpy/core/bento.info,[u'9'],9,0," -32,3 +32,12 ;",Library;
3784,1,eb93ee7, Charles Harris <charlesr.harris@gmail.com>," Mon, 23 Sep 2013 08:04:43 -0600","ct: [PATCH] BLD: Backport Ralf's gh-3766 fixes to the bento build scripts.The original PR included fixes for ufunc_override that are notneeded for 1.8, so I just copied the files numpy/core/bento.info andnumpy/core/bscript from master.",2,15,2,numpy/core/bscript,[u'8'],6,2," -234,6 +234,9 ; -502,7 +505,7 ; -525,5 +528,6 ;",def check_math_runtime(conf);def pre_build(context);def pre_build(context);
3782,24,7d00460, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 14 Apr 2013 23:20:25 +0200",ct: [PATCH 01/24] ENH: Attempt to rewrite the index parsing.Some optimizations still missing.,6,1127,1134,numpy/core/include/numpy/ndarraytypes.h,[u'39'],1,1," -1254,8 +1254,24 ; -1270,29 +1286,30 ;",typedef struct ;typedef struct ;
3782,24,7d00460, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 14 Apr 2013 23:20:25 +0200",ct: [PATCH 01/24] ENH: Attempt to rewrite the index parsing.Some optimizations still missing.,6,1127,1134,numpy/core/src/multiarray/mapping.c,[u'2173'],13,14," -18,14 +18,25 ; -122,52 +133,6 ; -225,7 +190,7 ; -280,6 +245,13 ; -290,29 +262,36 ; -389,267 +368,619 ; -806,7 +1137,8 ; -815,7 +1147,6 ; -913,111 +1244,6 ; -1026,45 +1252,20 ; -1133,209 +1334,117 ; -1346,21 +1455,6 ; -1390,121 +1484,167 ; -1525,9 +1665,11 ; -1545,15 +1687,8 ; -1574,13 +1709,9 ; -1590,7 +1721,6 ; -1618,7 +1748,7 ; -1635,23 +1765,19 ; -1660,48 +1786,51 ; -1709,63 +1838,27 ; -1773,148 +1866,101 ; -1931,44 +1977,39 ; -1976,140 +2017,52 ; -2122,47 +2075,73 ; -2176,7 +2155,7 ; -2235,7 +2214,9 ;",";array_item(PyArrayObject *self, Py_ssize_t _i;PyArray_MapIterSwapAxes(PyArrayMapIterObject *mit, PyArrayObject **ret, int get;PyArray_GetMap(PyArrayMapIterObject *mit;PyArray_GetMap(PyArrayMapIterObject *mit;PyArray_SetMap(PyArrayMapIterObject *mit, PyObject *op;array_ass_boolean_subscript(PyArrayObject *self;array_ass_boolean_subscript(PyArrayObject *self;array_ass_boolean_subscript(PyArrayObject *self;array_subscript_asarray(PyArrayObject *self, PyObject *op;array_subscript_fromobject(PyArrayObject *self, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;NPY_NO_EXPORT PyMappingMethods array_as_mapping = ;_nonzero_indices(PyObject *myBool, PyArrayIterObject **iters;_nonzero_indices(PyObject *myBool, PyArrayIterObject **iters;_nonzero_indices(PyObject *myBool, PyArrayIterObject **iters;_nonzero_indices(PyObject *myBool, PyArrayIterObject **iters;_convert_obj(PyObject *obj, PyArrayIterObject **iter;_convert_obj(PyObject *obj, PyArrayIterObject **iter;PyArray_MapIterReset(PyArrayMapIterObject *mit;PyArray_MapIterNext(PyArrayMapIterObject *mit;PyArray_MapIterBind(PyArrayMapIterObject *mit, PyArrayObject *arr;PyArray_MapIterNew(PyObject *indexobj, int oned, int fancy;PyArray_MapIterNew(PyObject *indexobj, int oned, int fancy;arraymapiter_dealloc(PyArrayMapIterObject *mit;NPY_NO_EXPORT PyTypeObject PyArrayMapIter_Type = ;"
3782,24,7d00460, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 14 Apr 2013 23:20:25 +0200",ct: [PATCH 01/24] ENH: Attempt to rewrite the index parsing.Some optimizations still missing.,6,1127,1134,numpy/core/src/multiarray/mapping.h,[u'5'],1,1," -54,9 +54,8 ;",NPY_NO_EXPORT voi;
3782,24,7d00460, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 14 Apr 2013 23:20:25 +0200",ct: [PATCH 01/24] ENH: Attempt to rewrite the index parsing.Some optimizations still missing.,6,1127,1134,numpy/core/src/multiarray/scalartypes.c.src,[u'29'],1,1," -3346,31 +3346,14 ;","gen_arrtype_subscript(PyObject *self, PyObject *key;"
3782,24,7d00460, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 14 Apr 2013 23:20:25 +0200",ct: [PATCH 01/24] ENH: Attempt to rewrite the index parsing.Some optimizations still missing.,6,1127,1134,numpy/core/tests/test_indexing.py,[u'13'],1,0," -304,6 +304,19 ;","def _get_multi_index(self, arr, indices);"
3782,24,7d00460, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 14 Apr 2013 23:20:25 +0200",ct: [PATCH 01/24] ENH: Attempt to rewrite the index parsing.Some optimizations still missing.,6,1127,1134,numpy/lib/tests/test_function_base.py,[u'2'],1,1," -242,7 +242,7 ;",class SubClass(np.ndarray);
3782,24,be28f71, Sebastian Berg <sebastian@sipsolutions.net>," Tue, 24 Sep 2013 11:01:12 +0200",ct: [PATCH 02/24] WIP: handle output dim calculation immidiatly,1,26,22,numpy/core/src/multiarray/mapping.c,[u'48'],20,17," -467,6 +467,8 ; -501,6 +503,7 ; -511,6 +514,7 ; -524,6 +528,7 ; -544,6 +549,7 ; -559,6 +565,7 ; -572,6 +579,7 ; -654,6 +662,9 ; -687,6 +698,9 ; -711,6 +725,10 ; -718,6 +736,9 ; -738,6 +759,7 ; -750,8 +772,9 ; -765,13 +788,11 ; -791,28 +812,11 ;","prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;"
3782,24,0e19a50, Sebastian Berg <sebastian@sipsolutions.net>," Tue, 24 Sep 2013 11:11:40 +0200",ct: [PATCH 03/24] WIP/BUG: Add missing index DECREF.,1,13,9,numpy/core/src/multiarray/mapping.c,[u'22'],13,9," -829,17 +829,21 ;","prepare_index(PyArrayObject *self, PyObject *index;"
3782,24,38e4b77, Sebastian Berg <sebastian@sipsolutions.net>," Tue, 24 Sep 2013 12:42:49 +0200",ct: [PATCH 04/24] WIP: Smaller fixes/moves,2,31,44,numpy/core/include/numpy/ndarraytypes.h,[u'16'],5,4," -1258,19 +1258,23 ;",typedef struct ;
3782,24,38e4b77, Sebastian Berg <sebastian@sipsolutions.net>," Tue, 24 Sep 2013 12:42:49 +0200",ct: [PATCH 04/24] WIP: Smaller fixes/moves,2,31,44,numpy/core/src/multiarray/mapping.c,[u'59'],12,21," -35,6 +35,7 ; -491,8 +492,18 ; -572,7 +583,7 ; -586,7 +597,7 ; -872,8 +883,6 ; -962,6 +971,7 ; -1375,9 +1385,12 ; -1762,33 +1775,6 ; -2083,8 +2069,6 ; -2103,7 +2087,6 ;",";prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;get_item_pointer(PyArrayObject *self, char **ptr;get_view_from_index(PyArrayObject *self, PyArrayObject **view;array_subscript(PyArrayObject *self, PyObject *op;_nonzero_indices(PyObject *myBool, PyArrayObject **arrays;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterArray(PyArrayObject * a, PyObject * index;"
3782,24,795ac2c, Sebastian Berg <sebastian@sipsolutions.net>," Tue, 24 Sep 2013 22:10:30 +0200",ct: [PATCH 05/24] WIP: Clean up the error messages,2,45,30,numpy/core/include/numpy/ndarraytypes.h,[u'5'],1,2," -1266,10 +1266,7 ;",typedef struct ;
3782,24,795ac2c, Sebastian Berg <sebastian@sipsolutions.net>," Tue, 24 Sep 2013 22:10:30 +0200",ct: [PATCH 05/24] WIP: Clean up the error messages,2,45,30,numpy/core/src/multiarray/mapping.c,[u'70'],21,12," -531,7 +531,7 ; -582,8 +582,8 ; -598,6 +598,7 ; -608,6 +609,19 ; -620,16 +634,22 ; -664,23 +684,16 ; -689,13 +702,13 ; -728,6 +741,7 ; -736,12 +750,14 ; -754,11 +770,13 ;","prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;"
3782,24,1e34863, Sebastian Berg <sebastian@sipsolutions.net>," Tue, 24 Sep 2013 23:07:21 +0200","ct: [PATCH 06/24] WIP: Always return a view, never self",1,17,11,numpy/core/src/multiarray/mapping.c,[u'28'],17,11," -522,7 +522,8 ; -646,9 +647,18 ; -742,7 +752,7 ; -773,7 +783,7 ; -1405,13 +1415,9 ;","prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;array_subscript(PyArrayObject *self, PyObject *op;"
3782,24,78b11d0, Sebastian Berg <sebastian@sipsolutions.net>," Tue, 24 Sep 2013 23:34:59 +0200",ct: [PATCH 07/24] WIP: Fix error returns up.,1,42,26,numpy/core/src/multiarray/mapping.c,[u'68'],23,14," -606,20 +606,10 ; -627,10 +617,15 ; -638,14 +633,15 ; -655,19 +651,22 ; -710,6 +709,15 ; -718,7 +726,7 ; -782,11 +790,19 ;","prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;"
3782,24,09caceb, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 25 Sep 2013 00:43:16 +0200",ct: [PATCH 08/24] MERGE: include old bug fix lost in merge conflict,1,13,5,numpy/core/src/multiarray/mapping.c,[u'18'],13,5," -651,9 +651,17 ; -1199,8 +1207,7 ; -1209,6 +1216,7 ;","prepare_index(PyArrayObject *self, PyObject *index;array_ass_boolean_subscript(PyArrayObject *self;array_ass_boolean_subscript(PyArrayObject *self;"
3782,24,12e17e0, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 25 Sep 2013 01:36:10 +0200",ct: [PATCH 09/24] WIP: Free view correctly for fancy indexing,1,9,6,numpy/core/src/multiarray/mapping.c,[u'15'],9,6," -1465,8 +1465,7 ; -1482,22 +1481,24 ; -2142,6 +2143,8 ;","array_subscript(PyArrayObject *self, PyObject *op;array_subscript(PyArrayObject *self, PyObject *op;PyArray_MapIterArray(PyArrayObject * a, PyObject * index;"
3782,24,be74d80, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 25 Sep 2013 06:05:39 +0200",ct: [PATCH 10/24] WIP: Speed improvements by using EXTERNAL_LOOP,2,160,57,numpy/core/include/numpy/ndarraytypes.h,[u'4'],1,1," -1297,7 +1297,9 ;",typedef struct ;
3782,24,be74d80, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 25 Sep 2013 06:05:39 +0200",ct: [PATCH 10/24] WIP: Speed improvements by using EXTERNAL_LOOP,2,160,57,numpy/core/src/multiarray/mapping.c,[u'213'],23,9," -215,6 +215,28 ; -222,9 +244,11 ; -263,27 +287,72 ; -1484,7 +1553,7 ; -1677,7 +1746,7 ; -1835,9 +1904,10 ; -1852,24 +1922,23 ; -1887,13 +1956,13 ; -1910,13 +1979,18 ; -2020,23 +2094,44 ; -2050,8 +2145,6 ; -2064,7 +2157,7 ; -2083,8 +2176,8 ; -2100,10 +2193,15 ; -2129,7 +2227,8 ; -2175,6 +2274,8 ;","PyArray_MapIterSwapAxes(PyArrayMapIterObject *mit, PyArrayObject **ret, int get;PyArray_GetMap(PyArrayMapIterObject *mit;PyArray_GetMap(PyArrayMapIterObject *mit;array_subscript(PyArrayObject *self, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;PyArray_MapIterReset(PyArrayMapIterObject *mit;PyArray_MapIterReset(PyArrayMapIterObject *mit;PyArray_MapIterNext(PyArrayMapIterObject *mit;PyArray_MapIterNext(PyArrayMapIterObject *mit;PyArray_MapIterBind(PyArrayMapIterObject *mit, PyArrayObject *subspace;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterArray(PyArrayObject * a, PyObject * index;PyArray_MapIterArray(PyArrayObject * a, PyObject * index;"
3782,24,b326a32, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 25 Sep 2013 06:06:21 +0200",ct: [PATCH 11/24] WIP: Test fixups<,4,19,12,numpy/core/tests/test_indexing.py,[u'18'],11,7," -42,7 +42,7 ; -85,8 +85,15 ; -231,9 +238,7 ; -537,6 +542,5 ;","def test_ellipsis_index(self);def test_single_bool_index(self);def _get_multi_index(self, arr, indices);def test_1d(self);"
3782,24,b326a32, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 25 Sep 2013 06:06:21 +0200",ct: [PATCH 11/24] WIP: Test fixups<,4,19,12,numpy/core/tests/test_multiarray.py,[u'4'],2,2," -258,8 +258,8 ;",def test_ellipsis_subscript(self);
3782,24,b326a32, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 25 Sep 2013 06:06:21 +0200",ct: [PATCH 11/24] WIP: Test fixups<,4,19,12,numpy/core/tests/test_numerictypes.py,[u'2'],1,1," -365,7 +365,7 ;",def setUp(self);
3782,24,b326a32, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 25 Sep 2013 06:06:21 +0200",ct: [PATCH 11/24] WIP: Test fixups<,4,19,12,numpy/core/tests/test_regression.py,[u'7'],5,2," -740,8 +740,11 ;","def test_bool_indexing_invalid_nr_elements(self, level=rlevel);"
3782,24,17c3021, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 25 Sep 2013 14:27:57 +0200",ct: [PATCH 12/24] WIP: Implement fast_take and some other speed things,2,109,36,numpy/core/src/multiarray/mapping.c,[u'143'],27,9," -216,38 +216,39 ; -278,6 +279,60 ; -292,13 +347,18 ; -309,7 +369,7 ; -328,7 +388,7 ; -339,7 +399,7 ; -360,6 +420,10 ; -1092,8 +1156,7 ; -1484,7 +1547,7 ; -1553,7 +1616,13 ; -1976,11 +2045,15 ; -2094,7 +2167,7 ; -2241,7 +2314,7 ; -2274,8 +2347,8 ;","PyArray_MapIterSwapAxes(PyArrayMapIterObject *mit, PyArrayObject **ret, int get;PyArray_GetMap(PyArrayMapIterObject *mit;PyArray_GetMap(PyArrayMapIterObject *mit;PyArray_GetMap(PyArrayMapIterObject *mit;PyArray_GetMap(PyArrayMapIterObject *mit;PyArray_GetMap(PyArrayMapIterObject *mit;PyArray_GetMap(PyArrayMapIterObject *mit;get_view_from_index(PyArrayObject *self, PyArrayObject **view;array_subscript(PyArrayObject *self, PyObject *op;array_subscript(PyArrayObject *self, PyObject *op;PyArray_MapIterNext(PyArrayMapIterObject *mit;PyArray_MapIterBind(PyArrayMapIterObject *mit, PyArrayObject *subspace;PyArray_MapIterArray(PyArrayObject * a, PyObject * index;PyArray_MapIterArray(PyArrayObject * a, PyObject * index;"
3782,24,17c3021, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 25 Sep 2013 14:27:57 +0200",ct: [PATCH 12/24] WIP: Implement fast_take and some other speed things,2,109,36,numpy/core/src/multiarray/mapping.h,[u'2'],1,1," -54,7 +54,7 ;",NPY_NO_EXPORT voi;
3782,24,b09ba44, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 25 Sep 2013 22:53:57 +0200","ct: [PATCH 13/24] WIP: Fixups, no-fancy indexes fancy iteration, probably more",1,141,108,numpy/core/src/multiarray/mapping.c,[u'249'],20,16," -280,17 +280,17 ; -298,14 +298,6 ; -314,22 +306,39 ; -540,7 +549,11 ; -552,6 +565,11 ; -582,7 +600,7 ; -678,6 +696,19 ; -716,19 +747,6 ; -1467,73 +1485,76 ; -2216,7 +2237,7 ; -2232,25 +2253,37 ;","PyArray_GetMap(PyArrayMapIterObject *mit;PyArray_GetMap(PyArrayMapIterObject *mit;PyArray_GetMap(PyArrayMapIterObject *mit;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;array_subscript(PyArrayObject *self, PyObject *op;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;"
3782,24,695f91a, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 26 Sep 2013 00:47:23 +0200","ct: [PATCH 14/24] WIP: Fixup DeprecationWarnings. Only issue remaining...... is that a single `False`/`True` give DeprecationWarnings,because the FutureWarning would be raised later on. I amwilling to ignore this though.",1,44,17,numpy/core/src/multiarray/mapping.c,[u'61'],26,11," -791,31 +791,50 ; -827,6 +846,9 ; -960,7 +982,7 ; -2237,7 +2259,7 ; -2265,6 +2287,7 ; -2289,6 +2312,10 ;","prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;"
3782,24,27bfd70, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 26 Sep 2013 00:48:29 +0200","ct: [PATCH 15/24] WIP,TST: Small fixes for the tests",1,2,3,numpy/core/tests/test_deprecations.py,[u'5'],2,3," -151,7 +151,7 ; -161,11 +161,10 ;","def assert_deprecated(*args, **kwargs);def assert_deprecated(*args, **kwargs);"
3782,24,48e7d10, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 26 Sep 2013 01:31:20 +0200",ct: [PATCH 16/24] WIP: Py3k fixes,1,8,0,numpy/core/src/multiarray/mapping.c,[u'8'],8,0," -551,7 +551,11 ; -714,7 +718,11 ;","prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;"
3782,24,e80b315, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 26 Sep 2013 01:40:34 +0200",ct: [PATCH 17/24] WIP: Change field check and string check order,1,2,2,numpy/core/src/multiarray/mapping.c,[u'4'],2,2," -1715,8 +1715,8 ;","array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;"
3782,24,7a15fa1, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 26 Sep 2013 01:40:55 +0200","ct: [PATCH 18/24] WIP,TST: Fixup python3 tests",1,2,2,numpy/core/tests/test_multiarray.py,[u'4'],2,2," -2345,8 +2345,8 ;",def test_field_names(self);
3782,24,b8c31e4, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 26 Sep 2013 01:43:21 +0200",ct: [PATCH 19/24] WIP: really fix the order of hasfields...,1,4,4,numpy/core/src/multiarray/mapping.c,[u'8'],4,4," -1730,17 +1730,17 ;","array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;"
3782,24,1ee0326, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 26 Sep 2013 12:56:35 +0200","ct: [PATCH 20/24] WIP,BUG: Do not go to far PyArray_MapIterNext, fix pyobj size... and some bad refcounting",1,11,8,numpy/core/src/multiarray/mapping.c,[u'19'],11,8," -457,7 +457,7 ; -2048,6 +2048,14 ; -2056,10 +2064,6 ; -2377,14 +2381,13 ; -2449,7 +2452,7 ;","PyArray_SetMap(PyArrayMapIterObject *mit, PyObject *op;mapiter_outernext(PyArrayMapIterObject *mit;mapiter_outernext(PyArrayMapIterObject *mit;PyArray_MapIterArray(PyArrayObject * a, PyObject * index;NPY_NO_EXPORT PyTypeObject PyArrayMapIter_Type = ;"
3782,24,d7c7a62, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 26 Sep 2013 14:00:34 +0200","ct: [PATCH 21/24] WIP,TST,DOC: tiny fixmaybe triggers Travis too...",1,0,0,numpy/core/tests/test_indexing.py,[u'2'],1,1," -311,7 +311,7 ;","def _get_multi_index(self, arr, indices);"
3782,24,783c836, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 26 Sep 2013 15:45:13 +0200",ct: [PATCH 22/24] WIP: Move Ellipsis check before subclass special case,1,21,16,numpy/core/src/multiarray/mapping.c,[u'37'],21,16," -1789,6 +1789,27 ; -1808,22 +1829,6 ;","array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;"
3782,24,20cd16a, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 26 Sep 2013 16:32:30 +0200",ct: [PATCH 23/24] WIP: Remove debug comments,1,0,9,numpy/core/src/multiarray/mapping.c,[u'9'],0,9," -1588,10 +1588,7 ; -1745,9 +1742,7 ; -2292,7 +2287,6 ; -2318,7 +2312,6 ; -2334,7 +2327,6 ; -2353,7 +2345,6 ;","array_subscript(PyArrayObject *self, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;"
3782,24,af1b587, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 26 Sep 2013 17:00:25 +0200",ct: [PATCH 24/24] WIP: Fix mapping.c warnings,1,31,38,numpy/core/src/multiarray/mapping.c,[u'69'],17,20," -243,7 +243,7 ; -255,9 +255,10 ; -275,7 +276,7 ; -430,7 +431,7 ; -765,8 +766,8 ; -776,11 +777,11 ; -792,7 +793,7 ; -812,7 +813,7 ; -825,7 +826,7 ; -839,15 +840,15 ; -855,7 +856,7 ; -916,7 +917,7 ; -937,7 +938,7 ; -980,7 +981,7 ; -1517,7 +1518,7 ; -1585,6 +1586,7 ; -1791,7 +1793,7 ; -1813,7 +1815,7 ; -2018,7 +2020,7 ; -2110,11 +2112,7 ; -2127,7 +2125,6 ; -2143,12 +2140,10 ; -2208,7 +2203,6 ; -2299,7 +2293,7 ; -2420,7 +2414,6 ;","static PyObject ;PyArray_GetMap(PyArrayMapIterObject *mit;PyArray_GetMap(PyArrayMapIterObject *mit;PyArray_GetMap(PyArrayMapIterObject *mit;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;prepare_index(PyArrayObject *self, PyObject *index;array_subscript(PyArrayObject *self, PyObject *op;array_subscript(PyArrayObject *self, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;_nonzero_indices(PyObject *myBool, PyArrayObject **arrays;PyArray_MapIterBind(PyArrayMapIterObject *mit, PyArrayObject *subspace;PyArray_MapIterBind(PyArrayMapIterObject *mit, PyArrayObject *subspace;PyArray_MapIterBind(PyArrayMapIterObject *mit, PyArrayObject *subspace;PyArray_MapIterBind(PyArrayMapIterObject *mit, PyArrayObject *subspace;PyArray_MapIterNew(npy_index_info *indices , int index_num, int index_type;PyArray_MapIterArray(PyArrayObject * a, PyObject * index;"
3781,1,c4b01c9, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 22 Sep 2013 22:22:21 +0200",ct: [PATCH] TST: wrong indent in multiarray tests,1,5,5,numpy/core/tests/test_multiarray.py,[u'10'],5,5," -3475,11 +3475,11 ;",def test_mapiter(self);
3780,1,0bac77e, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 21 Sep 2013 21:16:36 +0200",ct: [PATCH] BUG: make checking for sse intrinsics more robustcheck for two intrinsics from [ex]mmintrin.h instead of only checkingthe existance of the headers.E.g. mingw 4.2 emmintrin.h can be included even if SSE2 is disabled.closes #3760,6,38,20,numpy/core/include/numpy/npy_common.h,[u'8'],8,0," -18,6 +18,14 ;",;
3780,1,0bac77e, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 21 Sep 2013 21:16:36 +0200",ct: [PATCH] BUG: make checking for sse intrinsics more robustcheck for two intrinsics from [ex]mmintrin.h instead of only checkingthe existance of the headers.E.g. mingw 4.2 emmintrin.h can be included even if SSE2 is disabled.closes #3760,6,38,20,numpy/core/setup.py,[u'10'],8,2," -165,8 +165,14 ;",def check_funcs(funcs_name);
3780,1,0bac77e, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 21 Sep 2013 21:16:36 +0200",ct: [PATCH] BUG: make checking for sse intrinsics more robustcheck for two intrinsics from [ex]mmintrin.h instead of only checkingthe existance of the headers.E.g. mingw 4.2 emmintrin.h can be included even if SSE2 is disabled.closes #3760,6,38,20,numpy/core/setup_common.py,[u'5'],4,1," -107,7 +107,8 ; -115,6 +116,8 ;","def check_api_version(apiversion, codegen_dir);def check_api_version(apiversion, codegen_dir);"
3780,1,0bac77e, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 21 Sep 2013 21:16:36 +0200",ct: [PATCH] BUG: make checking for sse intrinsics more robustcheck for two intrinsics from [ex]mmintrin.h instead of only checkingthe existance of the headers.E.g. mingw 4.2 emmintrin.h can be included even if SSE2 is disabled.closes #3760,6,38,20,numpy/core/src/multiarray/einsum.c.src,[u'6'],3,3," -14,16 +14,16 ; -32,7 +32,7 ;",;;
3780,1,0bac77e, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 21 Sep 2013 21:16:36 +0200",ct: [PATCH] BUG: make checking for sse intrinsics more robustcheck for two intrinsics from [ex]mmintrin.h instead of only checkingthe existance of the headers.E.g. mingw 4.2 emmintrin.h can be included even if SSE2 is disabled.closes #3760,6,38,20,numpy/core/src/umath/loops.c.src,[u'3'],2,1," -10,6 +10,7 ; -564,7 +565,7 ;",;NPY_NO_EXPORT voi;
3780,1,0bac77e, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 21 Sep 2013 21:16:36 +0200",ct: [PATCH] BUG: make checking for sse intrinsics more robustcheck for two intrinsics from [ex]mmintrin.h instead of only checkingthe existance of the headers.E.g. mingw 4.2 emmintrin.h can be included even if SSE2 is disabled.closes #3760,6,38,20,numpy/core/src/umath/simd.inc.src,[u'26'],13,13," -16,10 +16,10 ; -140,7 +140,7 ; -151,7 +151,7 ; -167,7 +167,7 ; -185,7 +185,7 ; -216,7 +216,7 ; -234,7 +234,7 ; -278,7 +278,7 ; -295,7 +295,7 ; -317,7 +317,7 ; -328,7 +328,7 ; -843,6 +843,6 ;",";static const npy_int32 fanout_4[] = ;sse2_@func@_@TYPE@(@type@ *, @type@ *, const npy_intp n);run_@name@_simd_@func@_@TYPE@(char **args, npy_intp *dimensions, npy_intp *step;sse2_binary_scalar2_@kind@_@TYPE@(@type@ * op, @type@ * ip1, @type@ * ip2;run_binary_simd_@kind@_@TYPE@(char **args, npy_intp *dimensions, npy_intp *step;sse2_binary_scalar2_@kind@_@TYPE@(npy_bool * op, @type@ * ip1, @type@ * ip2;sse2_binary_@kind@_BOOL(npy_bool * op, npy_bool * ip1, npy_bool * ip2;sse2_reduce_@kind@_BOOL(npy_bool * op, npy_bool * ip, npy_intp n);sse2_@kind@_BOOL(npy_bool *, npy_bool *, const npy_intp n);run_unary_simd_@kind@_BOOL(char **args, npy_intp *dimensions, npy_intp *steps;sse2_@kind@_BOOL(@type@ * op, @type@ * ip, const npy_intp n;"
3779,1,b7aec60, Pauli Virtanen <pav@iki.fi>," Sun, 22 Sep 2013 20:47:38 +0300","ct: [PATCH] ENH: core: add a fast path for PEP3118 buffer string parsingThe call back to Python numpy.core._internal._dtype_from_pep3118 is anunnecessary large overhead for the most common case, when the bufferpassed in has a simple non-composite type.This commit adds a fast path for the simple case.",2,138,0,numpy/core/src/multiarray/buffer.c,[u'115'],36,0," -767,11 +767,18 ; -780,6 +787,12 ; -828,3 +841,105 ;",NPY_NO_EXPORT PyBufferProcs array_as_buffer = ;_descriptor_from_pep3118_format(char *s;_descriptor_from_pep3118_format(char *s;
3779,1,b7aec60, Pauli Virtanen <pav@iki.fi>," Sun, 22 Sep 2013 20:47:38 +0300","ct: [PATCH] ENH: core: add a fast path for PEP3118 buffer string parsingThe call back to Python numpy.core._internal._dtype_from_pep3118 is anunnecessary large overhead for the most common case, when the bufferpassed in has a simple non-composite type.This commit adds a fast path for the simple case.",2,138,0,numpy/core/tests/test_multiarray.py,[u'23'],8,0," -3239,6 +3239,29 ;",def test_roundtrip_half(self);
3777,2,acf72ea, Pauli Virtanen <pav@iki.fi>," Sun, 22 Sep 2013 17:13:37 +0300",ct: [PATCH 1/2] BUG: core: don't ignore raised exceptions in __numpy_ufunc__ handler,2,16,2,numpy/core/src/private/ufunc_override.h,[u'10'],8,2," -155,14 +155,20 ;","PyUFunc_CheckOverride(PyObject *ufunc, char *method;"
3777,2,acf72ea, Pauli Virtanen <pav@iki.fi>," Sun, 22 Sep 2013 17:13:37 +0300",ct: [PATCH 1/2] BUG: core: don't ignore raised exceptions in __numpy_ufunc__ handler,2,16,2,numpy/core/tests/test_umath.py,[u'8'],8,0," -1051,6 +1051,14 ;","def __numpy_ufunc__(self, ufunc, method, pos, inputs, **kwargs);"
3777,2,f42549f, Pauli Virtanen <pav@iki.fi>," Sun, 22 Sep 2013 17:25:35 +0300","ct: [PATCH 2/2] REF: core: clean up PyUFunc_CheckOverrideMove argument normalization out from the inner loop, reduce complexity.Add error checks.",1,91,89,numpy/core/src/private/ufunc_override.h,[u'180'],16,16," -11,6 +11,9 ; -21,31 +24,36 ; -63,12 +71,48 ; -78,10 +122,10 ; -93,109 +137,67 ;",";PyUFunc_CheckOverride(PyObject *ufunc, char *method;PyUFunc_CheckOverride(PyObject *ufunc, char *method;PyUFunc_CheckOverride(PyObject *ufunc, char *method;PyUFunc_CheckOverride(PyObject *ufunc, char *method;"
3776,1,9e6008b, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 22 Sep 2013 16:48:43 +0200",ct: [PATCH] BUG: Correctly surface reshape invalid axis errors.This was reported on the mailing list.,2,5,0,numpy/core/src/multiarray/shape.c,[u'2'],1,1," -294,7 +294,7 ;","PyArray_Reshape(PyArrayObject *self, PyObject *shape;"
3776,1,9e6008b, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 22 Sep 2013 16:48:43 +0200",ct: [PATCH] BUG: Correctly surface reshape invalid axis errors.This was reported on the mailing list.,2,5,0,numpy/core/tests/test_regression.py,[u'4'],4,0," -548,6 +548,10 ;","def test_reshape_zero_size(self, level=rlevel);"
3775,3,c1e38dd, Yaron de Leeuw <jarondl@server.fake>," Sun, 22 Sep 2013 08:54:19 +0300","ct: [PATCH 1/3] STY: make function_base.py pep8 compatibleThis makes function_base.py almost pep8 compatible.ALSO, removes the Set import which is unneeded since python 2.4,and organises the import statements.",1,204,175,numpy/lib/function_base.py,[u'379'],24,21," -11,18 +11,20 ; -30,14 +32,13 ; -62,11 +63,15 ; -154,16 +159,15 ; -182,8 +186,7 ; -196,8 +199,8 ; -206,9 +209,9 ; -297,9 +300,8 ; -332,7 +334,7 ; -343,7 +345,7 ; -363,8 +365,8 ; -410,8 +412,7 ; -489,38 +490,34 ; -530,6 +527,7 ; -592,10 +590,10 ; -679,9 +677,8 ; -692,8 +689,7 ; -723,6 +719,7 ; -763,8 +760,8 ; -774,7 +771,7 ; -784,6 +781,7 ; -832,6 +830,7 ; -885,8 +884,7 ; -904,10 +902,10 ; -922,7 +920,9 ; -986,6 +986,7 ; -1032,8 +1033,7 ; -1047,6 +1047,7 ; -1169,6 +1170,7 ; -1216,13 +1218,14 ; -1258,6 +1261,7 ; -1295,18 +1299,19 ; -1319,12 +1324,13 ; -1373,6 +1379,7 ; -1410,6 +1417,7 ; -1443,7 +1451,6 ; -1452,6 +1459,7 ; -1558,14 +1566,15 ; -1610,6 +1619,7 ; -1645,11 +1655,13 ; -1695,6 +1707,7 ; -1791,7 +1804,6 ; -1868,10 +1880,11 ; -1969,6 +1982,7 ; -2075,6 +2089,7 ; -2173,6 +2188,7 ; -2272,64 +2288,63 ; -2342,12 +2357,15 ; -2404,9 +2422,9 ; -2414,6 +2432,7 ; -2541,6 +2560,7 ; -2616,9 +2636,10 ; -2646,6 +2667,7 ; -3003,13 +3025,14 ; -3083,14 +3106,14 ; -3138,8 +3161,8 ; -3151,7 +3174,8 ; -3242,8 +3266,8 ; -3319,11 +3343,12 ; -3338,7 +3363,8 ; -3355,7 +3381,7 ; -3469,7 +3495,8 ; -3486,7 +3513,7 ; -3509,7 +3536,8 ; -3544,7 +3572,7 ; -3562,6 +3590,7 ;",";;def iterable(y);def histogram(a, bins=10, range=None, normed=False, weights=None, density=None);def histogram(a, bins=10, range=None, normed=False, weights=None, density=None);def histogram(a, bins=10, range=None, normed=False, weights=None, density=None);def histogram(a, bins=10, range=None, normed=False, weights=None, density=None);def histogramdd(sample, bins=10, range=None, normed=False, weights=None);def histogramdd(sample, bins=10, range=None, normed=False, weights=None);def histogramdd(sample, bins=10, range=None, normed=False, weights=None);def histogramdd(sample, bins=10, range=None, normed=False, weights=None);def histogramdd(sample, bins=10, range=None, normed=False, weights=None);def average(a, axis=None, weights=None, returned=False);def average(a, axis=None, weights=None, returned=False);class ndarray is returned;def piecewise(x, condlist, funclist, *args, **kw);def piecewise(x, condlist, funclist, *args, **kw);def piecewise(x, condlist, funclist, *args, **kw);def select(condlist, choicelist, default=0);def select(condlist, choicelist, default=0);def select(condlist, choicelist, default=0);def copy(a, order='K');def gradient(f, *varargs);def gradient(f, *varargs);def gradient(f, *varargs);def gradient(f, *varargs);def diff(a, n=1, axis=-1);def diff(a, n=1, axis=-1);def angle(z, deg=0);def unwrap(p, discont=pi, axis=-1);def sort_complex(a);def trim_zeros(filt, trim='fb');def unique(x);def extract(condition, arr);def place(arr, mask, vals);def disp(mesg, device=None, linefeed=True);def disp(mesg, device=None, linefeed=True);class vectorize(object);def __call__(self, *args, **kwargs);def _get_ufunc_and_otypes(self, func, args);def _vectorize_call(self, func, args);def cov(m, y=None, rowvar=1, bias=0, ddof=None);def corrcoef(x, y=None, rowvar=1, bias=0, ddof=None);def blackman(M);def bartlett(M);def hanning(M);def hamming(M);def _chbevl(x, vals);def i0(x);def i0(x);def kaiser(M, beta);def sinc(x);def msort(a);def trapz(y, x=None, dx=1.0, axis=-1);def meshgrid(*xi, **kwargs);def meshgrid(*xi, **kwargs);def meshgrid(*xi, **kwargs);def delete(arr, obj, axis=None);def delete(arr, obj, axis=None);def delete(arr, obj, axis=None);def delete(arr, obj, axis=None);def insert(arr, obj, values, axis=None);def insert(arr, obj, values, axis=None);def insert(arr, obj, values, axis=None);def insert(arr, obj, values, axis=None);def insert(arr, obj, values, axis=None);"
3775,3,a38fee9, Yaron de Leeuw <jarondl@server.fake>," Tue, 24 Sep 2013 09:40:09 +0300","ct: [PATCH 2/3] STY: Error and warning newline standardization in function_base.pyContinueing the pep8 effort, adds newline afer each `Error(`and tries to wrap correctly.",1,158,130,numpy/lib/function_base.py,[u'288'],25,20," -16,17 +16,20 ; -159,34 +162,37 ; -300,8 +306,9 ; -338,7 +345,7 ; -412,7 +419,8 ; -503,21 +511,23 ; -590,7 +600,8 ; -682,7 +693,7 ; -884,7 +895,8 ; -920,9 +932,9 ; -1033,7 +1045,8 ; -1217,7 +1230,7 ; -1789,7 +1802,8 ; -1980,7 +1994,7 ; -2087,7 +2101,7 ; -2186,7 +2200,7 ; -2284,66 +2298,70 ; -2744,7 +2762,8 ; -2886,7 +2905,8 ; -3026,7 +3046,8 ; -3267,7 +3288,7 ; -3336,16 +3357,17 ; -3362,23 +3384,25 ; -3490,17 +3514,18 ; -3519,9 +3544,10 ; -3529,13 +3555,15 ; -3564,9 +3592,9 ;",";def histogram(a, bins=10, range=None, normed=False, weights=None;def histogramdd(sample, bins=10, range=None, normed=False, weights=None);def histogramdd(sample, bins=10, range=None, normed=False, weights=None);def histogramdd(sample, bins=10, range=None, normed=False, weights=None);def average(a, axis=None, weights=None, returned=False);class ndarray is returned;def piecewise(x, condlist, funclist, *args, **kw);def gradient(f, *varargs);def gradient(f, *varargs);def diff(a, n=1, axis=-1);def unwrap(p, discont=pi, axis=-1);def cov(m, y=None, rowvar=1, bias=0, ddof=None);def blackman(M);def bartlett(M);def hanning(M);def hamming(M);def median(a, axis=None, out=None, overwrite_input=False);def percentile(a, q, interpolation='linear', axis=None, out=None;def trapz(y, x=None, dx=1.0, axis=-1);def delete(arr, obj, axis=None);def delete(arr, obj, axis=None);def delete(arr, obj, axis=None);def insert(arr, obj, values, axis=None);def insert(arr, obj, values, axis=None);def insert(arr, obj, values, axis=None);def insert(arr, obj, values, axis=None);"
3775,3,ec50fb1, Yaron de Leeuw <jarondl@server.fake>," Tue, 24 Sep 2013 09:49:06 +0300",ct: [PATCH 3/3] STY: error and warning formatting on 'function_base.py',1,25,18,numpy/lib/function_base.py,[u'43'],25,18," -339,8 +339,9 ; -348,9 +349,9 ; -700,7 +701,8 ; -771,8 +773,8 ; -1600,11 +1602,13 ; -2938,8 +2942,9 ; -3182,8 +3187,9 ; -3192,7 +3198,8 ; -3290,9 +3297,9 ;","def histogramdd(sample, bins=10, range=None, normed=False, weights=None);def histogramdd(sample, bins=10, range=None, normed=False, weights=None);def piecewise(x, condlist, funclist, *args, **kw);def select(condlist, choicelist, default=0);def __init__(self, pyfunc, otypes='', doc=None, excluded=None;def percentile(a, q, interpolation='linear', axis=None, out=None;def meshgrid(*xi, **kwargs);def meshgrid(*xi, **kwargs);def delete(arr, obj, axis=None);"
3773,1,be45f33, Charles Harris <charlesr.harris@gmail.com>," Sat, 21 Sep 2013 16:11:47 -0600",ct: [PATCH] ENH: Add gfortran to travis.yml configuration to enable f2py tests.,1,2,2,.travis.yml,[u'4'],2,2," -26,9 +26,9 ;",before_install;
3772,1,fd2e110, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 21 Sep 2013 21:16:36 +0200",ct: [PATCH] BUG: make checking for sse intrinsics more robustcheck for two intrinsics from [ex]mmintrin.h instead of only checkingthe existance of the headers.E.g. mingw 4.2 emmintrin.h can be included even if SSE2 is disabled.closes #3760,6,38,20,numpy/core/include/numpy/npy_common.h,[u'8'],8,0," -18,6 +18,14 ;",;
3772,1,fd2e110, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 21 Sep 2013 21:16:36 +0200",ct: [PATCH] BUG: make checking for sse intrinsics more robustcheck for two intrinsics from [ex]mmintrin.h instead of only checkingthe existance of the headers.E.g. mingw 4.2 emmintrin.h can be included even if SSE2 is disabled.closes #3760,6,38,20,numpy/core/setup.py,[u'10'],8,2," -165,8 +165,14 ;",def check_funcs(funcs_name);
3772,1,fd2e110, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 21 Sep 2013 21:16:36 +0200",ct: [PATCH] BUG: make checking for sse intrinsics more robustcheck for two intrinsics from [ex]mmintrin.h instead of only checkingthe existance of the headers.E.g. mingw 4.2 emmintrin.h can be included even if SSE2 is disabled.closes #3760,6,38,20,numpy/core/setup_common.py,[u'5'],4,1," -107,7 +107,8 ; -115,6 +116,8 ;","def check_api_version(apiversion, codegen_dir);def check_api_version(apiversion, codegen_dir);"
3772,1,fd2e110, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 21 Sep 2013 21:16:36 +0200",ct: [PATCH] BUG: make checking for sse intrinsics more robustcheck for two intrinsics from [ex]mmintrin.h instead of only checkingthe existance of the headers.E.g. mingw 4.2 emmintrin.h can be included even if SSE2 is disabled.closes #3760,6,38,20,numpy/core/src/multiarray/einsum.c.src,[u'6'],3,3," -14,16 +14,16 ; -32,7 +32,7 ;",;;
3772,1,fd2e110, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 21 Sep 2013 21:16:36 +0200",ct: [PATCH] BUG: make checking for sse intrinsics more robustcheck for two intrinsics from [ex]mmintrin.h instead of only checkingthe existance of the headers.E.g. mingw 4.2 emmintrin.h can be included even if SSE2 is disabled.closes #3760,6,38,20,numpy/core/src/umath/loops.c.src,[u'3'],2,1," -10,6 +10,7 ; -564,7 +565,7 ;",;NPY_NO_EXPORT voi;
3772,1,fd2e110, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 21 Sep 2013 21:16:36 +0200",ct: [PATCH] BUG: make checking for sse intrinsics more robustcheck for two intrinsics from [ex]mmintrin.h instead of only checkingthe existance of the headers.E.g. mingw 4.2 emmintrin.h can be included even if SSE2 is disabled.closes #3760,6,38,20,numpy/core/src/umath/simd.inc.src,[u'26'],13,13," -16,10 +16,10 ; -140,7 +140,7 ; -151,7 +151,7 ; -167,7 +167,7 ; -185,7 +185,7 ; -216,7 +216,7 ; -234,7 +234,7 ; -278,7 +278,7 ; -295,7 +295,7 ; -317,7 +317,7 ; -328,7 +328,7 ; -843,6 +843,6 ;",";static const npy_int32 fanout_4[] = ;sse2_@func@_@TYPE@(@type@ *, @type@ *, const npy_intp n);run_@name@_simd_@func@_@TYPE@(char **args, npy_intp *dimensions, npy_intp *step;sse2_binary_scalar2_@kind@_@TYPE@(@type@ * op, @type@ * ip1, @type@ * ip2;run_binary_simd_@kind@_@TYPE@(char **args, npy_intp *dimensions, npy_intp *step;sse2_binary_scalar2_@kind@_@TYPE@(npy_bool * op, @type@ * ip1, @type@ * ip2;sse2_binary_@kind@_BOOL(npy_bool * op, npy_bool * ip1, npy_bool * ip2;sse2_reduce_@kind@_BOOL(npy_bool * op, npy_bool * ip, npy_intp n);sse2_@kind@_BOOL(npy_bool *, npy_bool *, const npy_intp n);run_unary_simd_@kind@_BOOL(char **args, npy_intp *dimensions, npy_intp *steps;sse2_@kind@_BOOL(@type@ * op, @type@ * ip, const npy_intp n;"
3769,1,0950739, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 20 Sep 2013 21:11:20 +0200",ct: [PATCH] BUG: ensure percentile has same output structure as in 1.8percentile returned scalars and lists of arrays in 1.8adapt new percentile to return scalar and arrays with q dimension firstfor compatibility.,2,182,24,numpy/lib/function_base.py,[u'69'],11,6," -2812,8 +2812,8 ; -2825,15 +2825,6 ; -2851,15 +2842,28 ; -2906,7 +2910,14 ; -2948,7 +2959,13 ; -2966,10 +2983,20 ;","def median(a, axis=None, out=None, overwrite_input=False);def percentile(a, q, interpolation='linear', axis=None, out=None;def percentile(a, q, interpolation='linear', axis=None, out=None;def percentile(a, q, interpolation='linear', axis=None, out=None;def percentile(a, q, interpolation='linear', axis=None, out=None;def percentile(a, q, interpolation='linear', axis=None, out=None;"
3769,1,0950739, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 20 Sep 2013 21:11:20 +0200",ct: [PATCH] BUG: ensure percentile has same output structure as in 1.8percentile returned scalars and lists of arrays in 1.8adapt new percentile to return scalar and arrays with q dimension firstfor compatibility.,2,182,24,numpy/lib/tests/test_function_base.py,[u'137'],33,1," -1448,13 +1448,20 ; -1496,7 +1503,79 ; -1521,10 +1600,62 ;",def test_basic(self);def test_axis(self);def test_percentile_out(self);
3767,2,afd2e13, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 19 Sep 2013 22:14:10 +0200",ct: [PATCH 1/2] TST: exercise median of median of 5 code by using a median of 3 killer dataset,1,11,0,numpy/core/tests/test_multiarray.py,[u'11'],11,0," -1141,6 +1141,17 ;",def test_partition(self);
3767,2,eb8991e, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 19 Sep 2013 22:23:14 +0200",ct: [PATCH 2/2] ENH: remove an always true conditionalv[1] < v[2] is guaranteed by the swapping a few lines above,1,2,6,numpy/core/src/npysort/selection.c.src,[u'8'],2,6," -176,12 +176,8 ;",static npy_intp @name@median5_@suff@;
3766,3,6418925, Ralf Gommers <ralf.gommers@googlemail.com>," Thu, 19 Sep 2013 20:20:08 +0200","ct: [PATCH 1/3] BLD: fix Bento build.Issue was introduced with PR-3524, the ufunc override stuff.",4,6,5,numpy/core/blasdot/_dotblas.c,[u'2'],1,1," -9,7 +9,7 ;",;
3766,3,6418925, Ralf Gommers <ralf.gommers@googlemail.com>," Thu, 19 Sep 2013 20:20:08 +0200","ct: [PATCH 1/3] BLD: fix Bento build.Issue was introduced with PR-3524, the ufunc override stuff.",4,6,5,numpy/core/bscript,[u'5'],3,2," -502,7 +502,7 ; -525,5 +525,6 ;",def pre_build(context);def pre_build(context);
3766,3,6418925, Ralf Gommers <ralf.gommers@googlemail.com>," Thu, 19 Sep 2013 20:20:08 +0200","ct: [PATCH 1/3] BLD: fix Bento build.Issue was introduced with PR-3524, the ufunc override stuff.",4,6,5,numpy/core/src/multiarray/multiarraymodule.c,[u'2'],1,1," -53,7 +53,7 ;",NPY_NO_EXPORT int NPY_NUMUSERTYPES = 0;
3766,3,6418925, Ralf Gommers <ralf.gommers@googlemail.com>," Thu, 19 Sep 2013 20:20:08 +0200","ct: [PATCH 1/3] BLD: fix Bento build.Issue was introduced with PR-3524, the ufunc override stuff.",4,6,5,numpy/core/src/private/ufunc_override.h,[u'2'],1,1," -2,7 +2,7 ;",;
3766,3,fddf1e0, Ralf Gommers <ralf.gommers@googlemail.com>," Thu, 19 Sep 2013 21:11:10 +0200","ct: [PATCH 2/3] BLD: add new test extensions (rational, struct_ufunc, operand_flag) to Bento build.",1,9,0,numpy/core/bento.info,[u'9'],9,0," -32,3 +32,12 ;",Library;
3766,3,8707b0e, Ralf Gommers <ralf.gommers@googlemail.com>," Sun, 22 Sep 2013 13:19:43 +0200",ct: [PATCH 3/3] DOC: [bento] document that adding optional GCC performance improvements is TODO[ci skip],1,3,0,numpy/core/bscript,[u'3'],3,0," -234,6 +234,9 ;",def check_math_runtime(conf);
3765,1,b893154, Jay Bourque <jay.bourque@continuum.io>," Wed, 18 Sep 2013 09:47:40 -0500","ct: [PATCH] BUG: Fix issue with PR #3491Don't convert unicode string to ascii string before getting byte length.Also, get length of non string type as ascii or unicode depending onoutput string type.",2,21,7,numpy/core/src/multiarray/ctors.c,[u'25'],18,7," -558,7 +558,7 ; -576,8 +576,19 ; -606,7 +617,7 ; -1584,12 +1595,12 ;","PyArray_AssignFromSequence(PyArrayObject *self, PyObject *v;discover_itemsize(PyObject *s, int nd, int *itemsize, int size_as_string;discover_itemsize(PyObject *s, int nd, int *itemsize, int size_as_string;PyArray_GetArrayParamsFromObject(PyObject *op;"
3765,1,b893154, Jay Bourque <jay.bourque@continuum.io>," Wed, 18 Sep 2013 09:47:40 -0500","ct: [PATCH] BUG: Fix issue with PR #3491Don't convert unicode string to ascii string before getting byte length.Also, get length of non string type as ascii or unicode depending onoutput string type.",2,21,7,numpy/core/tests/test_api.py,[u'3'],3,0," -274,6 +274,9 ;",def test_array_astype();
3761,1,f200034, Jay Bourque <jay.bourque@continuum.io>," Wed, 18 Sep 2013 09:47:40 -0500","ct: [PATCH] BUG: Fix issue with PR #3491Don't convert unicode string to ascii string before getting byte length. Also, get length of non string type as ascii or unicode depending on output string type.",2,21,7,numpy/core/src/multiarray/ctors.c,[u'25'],18,7," -521,7 +521,7 ; -539,8 +539,19 ; -569,7 +580,7 ; -1547,12 +1558,12 ;","PyArray_AssignFromSequence(PyArrayObject *self, PyObject *v;discover_itemsize(PyObject *s, int nd, int *itemsize, int size_as_string;discover_itemsize(PyObject *s, int nd, int *itemsize, int size_as_string;PyArray_GetArrayParamsFromObject(PyObject *op;"
3761,1,f200034, Jay Bourque <jay.bourque@continuum.io>," Wed, 18 Sep 2013 09:47:40 -0500","ct: [PATCH] BUG: Fix issue with PR #3491Don't convert unicode string to ascii string before getting byte length. Also, get length of non string type as ascii or unicode depending on output string type.",2,21,7,numpy/core/tests/test_api.py,[u'3'],3,0," -274,6 +274,9 ;",def test_array_astype();
3757,2,61e0f2b, Dimas Abreu Dutra <dimasadutra@gmail.com>," Mon, 16 Sep 2013 23:59:47 -0300",ct: [PATCH 1/2] BUG: fix #3017 Inconsistency in indexing 0-d arrays with Ellipsis.,1,4,2,numpy/core/src/multiarray/mapping.c,[u'6'],4,2," -1391,7 +1391,9 ; -1408,7 +1410,7 ;","array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;"
3757,2,094ebf7, Dimas Abreu Dutra <dimasadutra@gmail.com>," Sun, 22 Sep 2013 16:19:42 -0300",ct: [PATCH 2/2] TST: added test for issue #3017.Also changed style to please numpy developers.,2,8,3,numpy/core/src/multiarray/mapping.c,[u'6'],3,3," -1391,9 +1391,9 ;","array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;"
3757,2,094ebf7, Dimas Abreu Dutra <dimasadutra@gmail.com>," Sun, 22 Sep 2013 16:19:42 -0300",ct: [PATCH 2/2] TST: added test for issue #3017.Also changed style to please numpy developers.,2,8,3,numpy/core/tests/test_indexing.py,[u'5'],5,0," -54,6 +54,11 ;",def test_ellipsis_index(self);
3754,4,466252f, Arink Verma <arinkverma@gmail.com>," Mon, 16 Sep 2013 00:31:33 +0530","ct: [PATCH 1/4] ENH: Added test cases for relation operation. To ensure behaviour of int. There is a need to add test case which ensure and maintain the behaviour of integer. As per pr #3567, which speed up integer scalar's operations by avoiding the conversion of integer to NumPy Scalar.",1,7,3,numpy/core/tests/test_scalarmath.py,[u'10'],7,3," -139,7 +139,6 ; -156,15 +155,20 ;",def test_int_from_long(self);def test_iinfo_long_values(self);
3754,4,66ddc60, Arink Verma <arinkverma@gmail.com>," Tue, 17 Sep 2013 05:44:56 +0530",ct: [PATCH 2/4] scalar relational operation,1,65,6,numpy/core/tests/test_scalarmath.py,[u'71'],33,4," -162,12 +162,71 ;",def Overflow_error_func(dtype);
3754,4,738da07, Arink Verma <arinkverma@gmail.com>," Tue, 17 Sep 2013 23:37:32 +0530",ct: [PATCH 3/4] Moved test_multiarra_relational_operators to test_multiarray.py,2,76,58,numpy/core/tests/test_multiarray.py,[u'42'],17,0," -3406,6 +3406,48 ;",def test_multiarray_flags_not_writable_attribute_deletion(self);
3754,4,738da07, Arink Verma <arinkverma@gmail.com>," Tue, 17 Sep 2013 23:37:32 +0530",ct: [PATCH 3/4] Moved test_multiarra_relational_operators to test_multiarray.py,2,76,58,numpy/core/tests/test_scalarmath.py,[u'92'],14,23," -162,71 +162,47 ;",def Overflow_error_func(dtype);
3754,4,111efb8, Arink Verma <arinkverma@gmail.com>," Thu, 19 Sep 2013 08:38:57 +0530",ct: [PATCH 4/4] fix indentation and nitpicks,2,69,67,numpy/core/tests/test_multiarray.py,[u'84'],19,18," -3408,47 +3408,6 ; -3671,5 +3630,48 ;",def test_multiarray_flags_not_writable_attribute_deletion(self);def test_ne(self);
3754,4,111efb8, Arink Verma <arinkverma@gmail.com>," Thu, 19 Sep 2013 08:38:57 +0530",ct: [PATCH 4/4] fix indentation and nitpicks,2,69,67,numpy/core/tests/test_scalarmath.py,[u'52'],11,12," -163,46 +163,46 ;",def Overflow_error_func(dtype);
3753,3,688df31, Yaron de Leeuw <jarondl@server.fake>," Sun, 15 Sep 2013 20:49:35 +0300","ct: [PATCH 1/3] Fixes in the npyio documentationFixes the ""see also"" section of savetxt, whichdescribed savez as compressing (closes #587 ). Alsoreplaces all occurences of .npy and .npz to use double backticks.Some had, some did not, and some had "" symbols.",1,12,11,numpy/lib/npyio.py,[u'23'],12,11," -138,19 +138,19 ; -270,7 +270,7 ; -283,7 +283,7 ; -301,7 +301,7 ; -457,7 +457,7 ; -484,7 +484,7 ; -540,7 +540,7 ; -548,7 +548,7 ; -923,7 +923,8 ;","class NpzFile(object);def iteritems(self);def __contains__(self, key);def load(file, mmap_mode=None);def savez(file, *args, **kwds);def savez(file, *args, **kwds);def savez_compressed(file, *args, **kwds);def savez_compressed(file, *args, **kwds);def savetxt(fname, X, fmt='%.18e', delimiter=' ', newline='\n', header='';"
3753,3,3a4fbed, Yaron de Leeuw <jarondl@server.fake>," Sun, 15 Sep 2013 21:03:53 +0300",ct: [PATCH 2/3] small typo,1,0,0,numpy/lib/npyio.py,[u'2'],1,1," -923,7 +923,7 ;","def savetxt(fname, X, fmt='%.18e', delimiter=' ', newline='\n', header='';"
3753,3,9b7beb6, Yaron de Leeuw <jarondl@server.fake>," Sat, 21 Sep 2013 19:09:44 +0300",ct: [PATCH 3/3] DOC STY: make npyio docstrings less than 80 chars,1,6,6,numpy/lib/npyio.py,[u'12'],6,6," -283,7 +283,7 ; -457,9 +457,9 ; -484,7 +484,7 ; -924,7 +924,7 ;","def __contains__(self, key);def savez(file, *args, **kwds);def savez(file, *args, **kwds);def savetxt(fname, X, fmt='%.18e', delimiter=' ', newline='\n', header='';"
3752,1,1840463, Pauli Virtanen <pav@iki.fi>," Sun, 15 Sep 2013 15:58:40 +0300",ct: [PATCH] DOC: improve __numpy_ufunc__ documentationCross-reference it from Ufunc documentation and mention the version itwas added.,2,33,13,doc/source/reference/arrays.classes.rst,[u'37'],21,12," -1,3 +1,5 ; -35,10 +37,11 ; -52,7 +55,8 ; -64,7 +68,7 ; -72,7 +76,11 ; -81,7 +89,7 ; -93,7 +101,7 ; -105,18 +113,21 ;",;Special attributes and method;customize;customize;customize;customize;customize;customize;
3752,1,1840463, Pauli Virtanen <pav@iki.fi>," Sun, 15 Sep 2013 15:58:40 +0300",ct: [PATCH] DOC: improve __numpy_ufunc__ documentationCross-reference it from Ufunc documentation and mention the version itwas added.,2,33,13,doc/source/reference/ufuncs.rst,[u'9'],8,0," -274,6 +274,15 ;","types, are interpreted accordingly in ufuncs) without worrying abou;"
3749,1,0cdc9f1, Christoph Gohlke <cgohlke@uci.edu>," Sat, 14 Sep 2013 11:27:22 -0700",ct: [PATCH] BUG: use correct type for hash valuesAs of Python 3.2 hash values are of type Py_hash_t. Previous versions use C long.,4,47,34,numpy/core/include/numpy/npy_3kcompat.h,[u'13'],7,0," -397,6 +397,19 ;",simple_capsule_dtor(void *ptr;
3749,1,0cdc9f1, Christoph Gohlke <cgohlke@uci.edu>," Sat, 14 Sep 2013 11:27:22 -0700",ct: [PATCH] BUG: use correct type for hash valuesAs of Python 3.2 hash values are of type Py_hash_t. Previous versions use C long.,4,47,34,numpy/core/src/multiarray/hashdescr.c,[u'6'],1,2," -243,7 +243,7 ; -296,12 +296,12 ;","static int _array_descr_walk(PyArray_Descr* descr, PyObject *l;static int _PyArray_DescrHashImp(PyArray_Descr *descr, long *hash;"
3749,1,0cdc9f1, Christoph Gohlke <cgohlke@uci.edu>," Sat, 14 Sep 2013 11:27:22 -0700",ct: [PATCH] BUG: use correct type for hash valuesAs of Python 3.2 hash values are of type Py_hash_t. Previous versions use C long.,4,47,34,numpy/core/src/multiarray/hashdescr.h,[u'2'],1,1," -1,7 +1,7 ;",;
3749,1,0cdc9f1, Christoph Gohlke <cgohlke@uci.edu>," Sat, 14 Sep 2013 11:27:22 -0700",ct: [PATCH] BUG: use correct type for hash valuesAs of Python 3.2 hash values are of type Py_hash_t. Previous versions use C long.,4,47,34,numpy/core/src/multiarray/scalartypes.c.src,[u'60'],14,15," -2864,10 +2864,10 ; -2875,10 +2875,10 ; -2887,10 +2887,10 ; -2903,16 +2903,16 ; -2930,10 +2930,10 ; -2948,25 +2948,25 ; -2993,17 +2993,17 ; -3023,13 +3023,13 ; -3038,14 +3038,14 ; -3061,7 +3061,7 ;","void_arrtype_new(PyTypeObject *type, PyObject *args, PyObject *NPY_UNUSED(kwds);static lon;static lon;int_arrtype_hash(PyObject *obj;static lon;static lon;static lon;c@lname@_arrtype_hash(PyObject *obj;object_arrtype_hash(PyObject *obj;void_arrtype_hash(PyObject *obj;"
3748,1,12498e6, Christoph Gohlke <cgohlke@uci.edu>," Sat, 14 Sep 2013 11:27:22 -0700",ct: [PATCH] BUG: use correct type for hash valuesAs of Python 3.2 hash values are of type Py_hash_t. Previous versions use C long.,4,41,28,numpy/core/include/numpy/npy_3kcompat.h,[u'13'],8,0," -397,6 +397,19 ;",simple_capsule_dtor(void *ptr;
3748,1,12498e6, Christoph Gohlke <cgohlke@uci.edu>," Sat, 14 Sep 2013 11:27:22 -0700",ct: [PATCH] BUG: use correct type for hash valuesAs of Python 3.2 hash values are of type Py_hash_t. Previous versions use C long.,4,41,28,numpy/core/src/multiarray/hashdescr.c,[u'6'],2,2," -243,7 +243,7 ; -296,12 +296,12 ;","static int _array_descr_walk(PyArray_Descr* descr, PyObject *l;static int _PyArray_DescrHashImp(PyArray_Descr *descr, long *hash;"
3748,1,12498e6, Christoph Gohlke <cgohlke@uci.edu>," Sat, 14 Sep 2013 11:27:22 -0700",ct: [PATCH] BUG: use correct type for hash valuesAs of Python 3.2 hash values are of type Py_hash_t. Previous versions use C long.,4,41,28,numpy/core/src/multiarray/hashdescr.h,[u'2'],1,1," -1,7 +1,7 ;",;
3748,1,12498e6, Christoph Gohlke <cgohlke@uci.edu>," Sat, 14 Sep 2013 11:27:22 -0700",ct: [PATCH] BUG: use correct type for hash valuesAs of Python 3.2 hash values are of type Py_hash_t. Previous versions use C long.,4,41,28,numpy/core/src/multiarray/scalartypes.c.src,[u'48'],14,15," -2899,10 +2899,10 ; -2910,10 +2910,10 ; -2922,10 +2922,10 ; -2938,16 +2938,16 ; -2965,10 +2965,10 ; -2983,25 +2983,25 ; -3028,17 +3028,17 ; -3058,20 +3058,20 ;","void_arrtype_new(PyTypeObject *type, PyObject *args, PyObject *NPY_UNUSED(kwds);static lon;static lon;int_arrtype_hash(PyObject *obj;static lon;static lon;static lon;c@lname@_arrtype_hash(PyObject *obj;"
3747,1,997fe5b, Christoph Gohlke <cgohlke@uci.edu>," Sat, 14 Sep 2013 11:27:22 -0700",ct: [PATCH] BUG: use correct type for hash valuesAs of Python 3.2 hash values are of type Py_hash_t. Previous versions use C long.,4,47,34,numpy/core/include/numpy/npy_3kcompat.h,[u'13'],7,0," -397,6 +397,19 ;",simple_capsule_dtor(void *ptr;
3747,1,997fe5b, Christoph Gohlke <cgohlke@uci.edu>," Sat, 14 Sep 2013 11:27:22 -0700",ct: [PATCH] BUG: use correct type for hash valuesAs of Python 3.2 hash values are of type Py_hash_t. Previous versions use C long.,4,47,34,numpy/core/src/multiarray/hashdescr.c,[u'6'],1,2," -243,7 +243,7 ; -296,12 +296,12 ;","static int _array_descr_walk(PyArray_Descr* descr, PyObject *l;static int _PyArray_DescrHashImp(PyArray_Descr *descr, long *hash;"
3747,1,997fe5b, Christoph Gohlke <cgohlke@uci.edu>," Sat, 14 Sep 2013 11:27:22 -0700",ct: [PATCH] BUG: use correct type for hash valuesAs of Python 3.2 hash values are of type Py_hash_t. Previous versions use C long.,4,47,34,numpy/core/src/multiarray/hashdescr.h,[u'2'],1,1," -1,7 +1,7 ;",;
3747,1,997fe5b, Christoph Gohlke <cgohlke@uci.edu>," Sat, 14 Sep 2013 11:27:22 -0700",ct: [PATCH] BUG: use correct type for hash valuesAs of Python 3.2 hash values are of type Py_hash_t. Previous versions use C long.,4,47,34,numpy/core/src/multiarray/scalartypes.c.src,[u'60'],14,15," -2864,10 +2864,10 ; -2875,10 +2875,10 ; -2887,10 +2887,10 ; -2903,16 +2903,16 ; -2930,10 +2930,10 ; -2948,25 +2948,25 ; -2993,17 +2993,17 ; -3023,13 +3023,13 ; -3038,14 +3038,14 ; -3061,7 +3061,7 ;","void_arrtype_new(PyTypeObject *type, PyObject *args, PyObject *NPY_UNUSED(kwds);static lon;static lon;int_arrtype_hash(PyObject *obj;static lon;static lon;static lon;c@lname@_arrtype_hash(PyObject *obj;object_arrtype_hash(PyObject *obj;void_arrtype_hash(PyObject *obj;"
3746,1,4f535ff, Charles Harris <charlesr.harris@gmail.com>," Sat, 14 Sep 2013 11:33:19 -0600",ct: [PATCH] DOC: Make documentation of nansum current with 1.9.Simply state that Numpy versions < 1.9 returned nan instead of zerofor the sum of empty slices.,1,2,2,numpy/lib/nanfunctions.py,[u'4'],2,2," -401,8 +401,8 ;","def nansum(a, axis=None, dtype=None, out=None, keepdims=0);"
3745,2,7206b1d, Charles Harris <charlesr.harris@gmail.com>," Sat, 14 Sep 2013 11:19:21 -0600",ct: [PATCH 1/2] MAINT: Move FutureWarning in nansum.Currently a FutureWarning about the sum of empty slices changing to zerois always raised. Instead make it depend on the actual occurrence of anempty slice.,1,2,4,numpy/lib/nanfunctions.py,[u'6'],2,4," -478,10 +478,6 ; -489,6 +485,8 ;","def nansum(a, axis=None, dtype=None, out=None, keepdims=0);def nansum(a, axis=None, dtype=None, out=None, keepdims=0);"
3745,2,13ccbb6, Charles Harris <charlesr.harris@gmail.com>," Sat, 14 Sep 2013 16:17:06 -0600",ct: [PATCH 2/2] TST: Test that FutureWarning is not raised by nansum if not all-nan.,1,3,0,numpy/lib/tests/test_nanfunctions.py,[u'3'],3,0," -248,6 +248,9 ;",def test_allnans(self);
3744,1,1816fa0, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 14 Sep 2013 14:53:26 +0200","ct: [PATCH] DOC: add isclose and partition to reference and link some docsalso drop sometrue/alltrue link, its equivalent to any/all.",5,10,0,doc/source/reference/routines.logic.rst,[u'1'],1,0," -50,6 +50,7 ;",Compariso;
3744,1,1816fa0, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 14 Sep 2013 14:53:26 +0200","ct: [PATCH] DOC: add isclose and partition to reference and link some docsalso drop sometrue/alltrue link, its equivalent to any/all.",5,10,0,doc/source/reference/routines.sort.rst,[u'2'],2,0," -14,6 +14,8 ;",Sortin;
3744,1,1816fa0, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 14 Sep 2013 14:53:26 +0200","ct: [PATCH] DOC: add isclose and partition to reference and link some docsalso drop sometrue/alltrue link, its equivalent to any/all.",5,10,0,numpy/add_newdocs.py,[u'2'],2,0," -4189,6 +4189,7 ; -4253,6 +4254,7 ;","def luf(lamdaexpr, *args, **kwargs);def luf(lamdaexpr, *args, **kwargs);"
3744,1,1816fa0, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 14 Sep 2013 14:53:26 +0200","ct: [PATCH] DOC: add isclose and partition to reference and link some docsalso drop sometrue/alltrue link, its equivalent to any/all.",5,10,0,numpy/core/fromnumeric.py,[u'4'],4,0," -576,6 +576,7 ; -659,6 +660,7 ; -707,6 +709,7 ; -819,6 +822,7 ;","def partition(a, kth, axis=-1, kind='introselect', order=None);def argpartition(a, kth, axis=-1, kind='introselect', order=None);def sort(a, axis=-1, kind='quicksort', order=None);def argsort(a, axis=-1, kind='quicksort', order=None);"
3744,1,1816fa0, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 14 Sep 2013 14:53:26 +0200","ct: [PATCH] DOC: add isclose and partition to reference and link some docsalso drop sometrue/alltrue link, its equivalent to any/all.",5,10,0,numpy/core/numeric.py,[u'2'],1,1," -2083,7 +2083,7 ;","def allclose(a, b, rtol=1.e-5, atol=1.e-8);"
3741,1,d4ef9b1, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 14 Sep 2013 14:53:26 +0200","ct: [PATCH] DOC: add isclose and partition to reference and link some docsalso drop sometrue/alltrue link, its equivalent to any/all.",5,10,0,doc/source/reference/routines.logic.rst,[u'1'],1,0," -50,6 +50,7 ;",Compariso;
3741,1,d4ef9b1, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 14 Sep 2013 14:53:26 +0200","ct: [PATCH] DOC: add isclose and partition to reference and link some docsalso drop sometrue/alltrue link, its equivalent to any/all.",5,10,0,doc/source/reference/routines.sort.rst,[u'2'],2,0," -14,6 +14,8 ;",Sortin;
3741,1,d4ef9b1, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 14 Sep 2013 14:53:26 +0200","ct: [PATCH] DOC: add isclose and partition to reference and link some docsalso drop sometrue/alltrue link, its equivalent to any/all.",5,10,0,numpy/add_newdocs.py,[u'2'],2,0," -4191,6 +4191,7 ; -4255,6 +4256,7 ;","def luf(lamdaexpr, *args, **kwargs);def luf(lamdaexpr, *args, **kwargs);"
3741,1,d4ef9b1, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 14 Sep 2013 14:53:26 +0200","ct: [PATCH] DOC: add isclose and partition to reference and link some docsalso drop sometrue/alltrue link, its equivalent to any/all.",5,10,0,numpy/core/fromnumeric.py,[u'4'],4,0," -576,6 +576,7 ; -659,6 +660,7 ; -707,6 +709,7 ; -819,6 +822,7 ;","def partition(a, kth, axis=-1, kind='introselect', order=None);def argpartition(a, kth, axis=-1, kind='introselect', order=None);def sort(a, axis=-1, kind='quicksort', order=None);def argsort(a, axis=-1, kind='quicksort', order=None);"
3741,1,d4ef9b1, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 14 Sep 2013 14:53:26 +0200","ct: [PATCH] DOC: add isclose and partition to reference and link some docsalso drop sometrue/alltrue link, its equivalent to any/all.",5,10,0,numpy/core/numeric.py,[u'2'],1,1," -2083,7 +2083,7 ;","def allclose(a, b, rtol=1.e-5, atol=1.e-8);"
3739,1,28f38e3, Arink Verma <arinkverma@gmail.com>," Sat, 14 Sep 2013 04:19:13 +0530","ct: [PATCH] ENH: Speedup UFUNC_CHECK_STATUS by avoding heavy clear opition UFUNC_CHECK_STATUS is just single macro which do both checking clearing the error flags. It clear error flags every time after checking. We should avoid clear operation if not needed, as it is a bit expensive and take significant amount of time.",2,115,49,numpy/core/include/numpy/ufuncobject.h,[u'135'],24,9," -348,36 +348,74 ; -387,16 +425,23 ; -409,15 +454,22 ; -425,15 +477,21 ; -443,6 +501,9 ;",typedef struct _loop1d_info ;typedef struct _loop1d_info ;typedef struct _loop1d_info ;typedef struct _loop1d_info ;typedef struct _loop1d_info ;
3739,1,28f38e3, Arink Verma <arinkverma@gmail.com>," Sat, 14 Sep 2013 04:19:13 +0530","ct: [PATCH] ENH: Speedup UFUNC_CHECK_STATUS by avoding heavy clear opition UFUNC_CHECK_STATUS is just single macro which do both checking clearing the error flags. It clear error flags every time after checking. We should avoid clear operation if not needed, as it is a bit expensive and take significant amount of time.",2,115,49,numpy/core/src/umath/ufunc_object.c,[u'29'],4,3," -169,16 +169,6 ; -203,13 +193,23 ; -221,9 +221,14 ;","_error_handler(int method, PyObject *errobj, char *errtype, int retstatus, int ;PyUFunc_handlefperr(int errmask, PyObject *errobj, int retstatus, int *first;PyUFunc_checkfperr(int errmask, PyObject *errobj, int *first;"
3738,1,2863c82, Charles Harris <charlesr.harris@gmail.com>," Fri, 13 Sep 2013 14:34:10 -0600",ct: [PATCH] DOC: Make savez_compressed show up in the documentation.Closes #3708.,1,0,0,doc/source/reference/routines.io.rst,[u'1'],1,0," -11,6 +11,7 ;",NPZ file;
3736,1,de29fcb, Charles Harris <charlesr.harris@gmail.com>," Fri, 13 Sep 2013 14:34:10 -0600",ct: [PATCH] DOC: Make savez_compressed show up in the documentation.Closes #3708.,1,0,0,doc/source/reference/routines.io.rst,[u'1'],1,0," -11,6 +11,7 ;",NPZ file;
3735,1,4defe58, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 12 Sep 2013 11:28:36 +0200",ct: [PATCH] BUG: fix zero initialization with subarray dtypescloses #3724,2,42,27,numpy/core/src/multiarray/ctors.c,[u'58'],20,17," -826,15 +826,16 ; -853,9 +854,9 ; -989,7 +990,7 ; -1065,6 +1066,22 ; -2685,22 +2702,16 ; -2714,13 +2725,6 ;","discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;PyArray_NewFromDescr(PyTypeObject *subtype, PyArray_Descr *descr, int nd;PyArray_NewFromDescr(PyTypeObject *subtype, PyArray_Descr *descr, int nd;PyArray_NewFromDescr(PyTypeObject *subtype, PyArray_Descr *descr, int nd;NPY_NO_EXPORT PyObject ;PyArray_Zeros(int nd, npy_intp *dims, PyArray_Descr *type, int is_f_order;"
3735,1,4defe58, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 12 Sep 2013 11:28:36 +0200",ct: [PATCH] BUG: fix zero initialization with subarray dtypescloses #3724,2,42,27,numpy/core/tests/test_multiarray.py,[u'11'],7,0," -406,6 +406,17 ;",def test_zeros(self);
3734,1,e8208b4, Charles Harris <charlesr.harris@gmail.com>," Wed, 11 Sep 2013 18:50:32 -0600","ct: [PATCH] MAINT: Make the qr raw mode test independent of the LAPACK library.The qr factorization is not unique and the values returned by the rawmode may differ between LAPACK versions. Consequently, the resultscannot be checked against known values.Closes #3703.",1,22,38,numpy/linalg/tests/test_linalg.py,[u'60'],14,25," -7,21 +7,27 ; -29,10 +35,12 ; -727,7 +735,6 ; -748,7 +755,6 ; -767,51 +773,32 ; -832,9 +819,6 ;",";def assert_almost_equal(a, b, **kw);def test_reduced_rank();def check_qr(self, a);def check_qr(self, a);def test_mode_all_but_economic(self);"
3731,1,1e2f9ba, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 12 Sep 2013 17:42:55 +0200","ct: [PATCH] BUG: f2py, fix decref on wrong objectmissing brackets causes decref on an wrong object.shows itself as abort with negative refcount in test_callback usingpython-dbg.",1,3,2,numpy/f2py/cfuncs.py,[u'5'],3,2," -1072,14 +1072,15 ;",;
3729,1,84b69f8, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 12 Sep 2013 17:42:55 +0200","ct: [PATCH] BUG: f2py, fix decref on wrong objectmissing brackets causes decref on an wrong object.shows itself as abort with negative refcount in test_callback usingpython-dbg.",1,3,2,numpy/f2py/cfuncs.py,[u'5'],3,2," -1072,14 +1072,15 ;",;
3728,1,26ade56, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 12 Sep 2013 17:42:55 +0200","ct: [PATCH] BUG: f2py, fix decref on wrong objectmissing brackets causes decref on an wrong object.shows itself as abort with negative refcount in test_callback usingpython-dbg.",1,3,2,numpy/f2py/cfuncs.py,[u'5'],3,2," -1072,14 +1072,15 ;",;
3727,2,ea237fc, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 12 Sep 2013 12:04:36 +0200",ct: [PATCH 1/2] BUG: ensure raising of invalid on bad complex powersput inf - inf into a volatile variable so it is not optimized away bycompilers.,2,9,7,numpy/core/src/umath/funcs.inc.src,[u'5'],3,2," -351,6 +351,7 ; -360,8 +361,8 ;","nc_pow@c@(@ctype@ *a, @ctype@ *b, @ctype@ *r;nc_pow@c@(@ctype@ *a, @ctype@ *b, @ctype@ *r;"
3727,2,ea237fc, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 12 Sep 2013 12:04:36 +0200",ct: [PATCH 1/2] BUG: ensure raising of invalid on bad complex powersput inf - inf into a volatile variable so it is not optimized away bycompilers.,2,9,7,numpy/core/tests/test_umath.py,[u'11'],6,5," -161,12 +161,13 ;","def assert_complex_equal(x, y);"
3727,2,cd35663, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 12 Sep 2013 12:05:54 +0200",ct: [PATCH 2/2] BUG: fix bad alignment assertsif the arrays are smaller than a vector they don't need to be aligned.,1,3,3,numpy/core/src/umath/simd.inc.src,[u'6'],3,3," -595,7 +595,7 ; -630,7 +630,7 ; -663,7 +663,7 ;","sse2_sqrt_@TYPE@(@type@ * op, @type@ * ip, const npy_intp n;sse2_absolute_@TYPE@(@type@ * op, @type@ * ip, const npy_intp n;sse2_@kind@_@TYPE@(@type@ * ip, @type@ * op, const npy_intp n;"
3726,2,1dd3778, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 12 Sep 2013 12:04:36 +0200",ct: [PATCH 1/2] BUG: ensure raising of invalid on bad complex powersput inf - inf into a volatile variable so it is not optimized away bycompilers.,2,9,7,numpy/core/src/umath/funcs.inc.src,[u'5'],3,2," -351,6 +351,7 ; -360,8 +361,8 ;","nc_pow@c@(@ctype@ *a, @ctype@ *b, @ctype@ *r;nc_pow@c@(@ctype@ *a, @ctype@ *b, @ctype@ *r;"
3726,2,1dd3778, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 12 Sep 2013 12:04:36 +0200",ct: [PATCH 1/2] BUG: ensure raising of invalid on bad complex powersput inf - inf into a volatile variable so it is not optimized away bycompilers.,2,9,7,numpy/core/tests/test_umath.py,[u'11'],6,5," -161,12 +161,13 ;","def assert_complex_equal(x, y);"
3726,2,5262478, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 12 Sep 2013 12:05:54 +0200",ct: [PATCH 2/2] BUG: fix bad alignment assertsif the arrays are smaller than a vector they don't need to be aligned.,1,3,3,numpy/core/src/umath/simd.inc.src,[u'6'],3,3," -595,7 +595,7 ; -630,7 +630,7 ; -663,7 +663,7 ;","sse2_sqrt_@TYPE@(@type@ * op, @type@ * ip, const npy_intp n;sse2_absolute_@TYPE@(@type@ * op, @type@ * ip, const npy_intp n;sse2_@kind@_@TYPE@(@type@ * ip, @type@ * op, const npy_intp n;"
3725,1,4d1c2d4, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 12 Sep 2013 11:28:36 +0200",ct: [PATCH] BUG: fix zero initialization with subarray dtypescloses #3724,2,42,27,numpy/core/src/multiarray/ctors.c,[u'58'],20,17," -863,15 +863,16 ; -890,9 +891,9 ; -1026,7 +1027,7 ; -1102,6 +1103,22 ; -2722,22 +2739,16 ; -2751,13 +2762,6 ;","discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;PyArray_NewFromDescr(PyTypeObject *subtype, PyArray_Descr *descr, int nd;PyArray_NewFromDescr(PyTypeObject *subtype, PyArray_Descr *descr, int nd;PyArray_NewFromDescr(PyTypeObject *subtype, PyArray_Descr *descr, int nd;NPY_NO_EXPORT PyObject ;PyArray_Zeros(int nd, npy_intp *dims, PyArray_Descr *type, int is_f_order;"
3725,1,4d1c2d4, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 12 Sep 2013 11:28:36 +0200",ct: [PATCH] BUG: fix zero initialization with subarray dtypescloses #3724,2,42,27,numpy/core/tests/test_multiarray.py,[u'11'],7,0," -448,6 +448,17 ;",def test_zeros(self);
3724,1,06c9572, Christoph Gohlke <cgohlke@uci.edu>," Wed, 11 Sep 2013 18:58:15 -0700",ct: [PATCH] TST: test dtype that fails with np.zeros on numpy 1.8.0b2,1,0,0,numpy/core/tests/test_multiarray.py,[u'1'],1,0," -438,6 +438,7 ;",def test_void(self);
3723,1,52f58ea, Charles Harris <charlesr.harris@gmail.com>," Wed, 11 Sep 2013 18:50:32 -0600","ct: [PATCH] MAINT: Make the qr raw mode test independent of the LAPACK library.The qr factorization is not unique and the values returned by the rawmode may differ between LAPACK versions. Consequently, the resultscannot be checked against known values.Closes #3703.",1,22,38,numpy/linalg/tests/test_linalg.py,[u'60'],14,25," -7,21 +7,27 ; -29,10 +35,12 ; -727,7 +735,6 ; -748,7 +755,6 ; -767,51 +773,32 ; -832,9 +819,6 ;",";def assert_almost_equal(a, b, **kw);def test_reduced_rank();def check_qr(self, a);def check_qr(self, a);def test_mode_all_but_economic(self);"
3721,1,dc8b4be, Charles Harris <charlesr.harris@gmail.com>," Tue, 10 Sep 2013 12:21:52 -0600",ct: [PATCH] MAINT: Refactor test_xerbla to hide printed error messages.Combine the xerbla override tests with the previous _is_xerbla_safedecorator. The xerbla checks are then made in a forked process where theoutputs are closed so that if xerbla prints a message it does notappear.It would be nice to figure out a Windows version of this test.,1,25,36,numpy/linalg/tests/test_linalg.py,[u'61'],16,23," -1,4 +1,5 ; -868,64 +869,52 ;",;def test_generalized_raise_multiloop();
3720,1,fa25cf7, Charles Harris <charlesr.harris@gmail.com>," Tue, 10 Sep 2013 12:21:52 -0600",ct: [PATCH] MAINT: Refactor test_xerbla to hide printed error messages.Combine the xerbla override tests with the previous _is_xerbla_safedecorator. The xerbla checks are then made in a forked process where theoutputs are closed so that if xerbla prints a message it does notappear.It would be nice to figure out a Windows version of this test.Closes #3704. Closes #3687.,1,25,36,numpy/linalg/tests/test_linalg.py,[u'61'],16,23," -1,4 +1,5 ; -868,64 +869,52 ;",;def test_generalized_raise_multiloop();
3717,1,0f9ee02, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 9 Sep 2013 22:41:03 +0200","ct: [PATCH] BUG: Fix 0-sized ndindexThe zerosize_ok flag to nditer was missing, so that it did notallow for 0-sized iteration.Closes gh-3714",2,6,0,numpy/lib/index_tricks.py,[u'3'],2,1," -540,7 +540,8 ;","def __init__(self, *shape);"
3717,1,0f9ee02, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 9 Sep 2013 22:41:03 +0200","ct: [PATCH] BUG: Fix 0-sized ndindexThe zerosize_ok flag to nditer was missing, so that it did notallow for 0-sized iteration.Closes gh-3714",2,6,0,numpy/lib/tests/test_index_tricks.py,[u'4'],4,0," -258,6 +258,10 ;",def test_ndindex();
3716,1,9980d06, Christoph Gohlke <cgohlke@uci.edu>," Sun, 9 Jun 2013 12:33:15 -0600",ct: [PATCH] MAINT: use PyOS_snprintf instead of snprintfPyOS_snprintf is portable and more secure than snprintf.,1,0,0,numpy/linalg/python_xerbla.c,[u'2'],1,1," -33,7 +33,7 ;","int xerbla_(char *srname, integer *info;"
3715,1,906a884, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 9 Sep 2013 22:41:03 +0200","ct: [PATCH] BUG: Fix 0-sized ndindexThe zerosize_ok flag to nditer was missing, so that it did notallow for 0-sized iteration.Closes gh-3714",2,6,0,numpy/lib/index_tricks.py,[u'3'],2,1," -540,7 +540,8 ;","def __init__(self, *shape);"
3715,1,906a884, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 9 Sep 2013 22:41:03 +0200","ct: [PATCH] BUG: Fix 0-sized ndindexThe zerosize_ok flag to nditer was missing, so that it did notallow for 0-sized iteration.Closes gh-3714",2,6,0,numpy/lib/tests/test_index_tricks.py,[u'4'],4,0," -274,6 +274,10 ;",def test_ndindex();
3712,2,0090a01, Pauli Virtanen <pav@iki.fi>," Sat, 13 Apr 2013 16:14:04 +0300","ct: [PATCH 1/2] BUG: linalg: do not assume that GIL is enabled in xerbla_With the new ufunc-based linalg, GIL is released in ufuncs, and needs tobe reacquired when raising errors in xerbla_.",1,4,0,numpy/linalg/python_xerbla.c,[u'4'],4,0," -26,12 +26,16 ;","int xerbla_(char *srname, integer *info;"
3712,2,8eba2aa, Pauli Virtanen <pav@iki.fi>," Sat, 13 Apr 2013 16:35:57 +0300","ct: [PATCH 2/2] BUG: linalg: fix LAPACK error handling in lapack_litemoduleIf an exception is pending (raised from xerbla), the routines mustreturn NULL.",1,54,0,numpy/linalg/lapack_litemodule.c,[u'54'],40,0," -171,6 +171,9 ; -254,6 +257,9 ; -341,6 +347,9 ; -380,6 +389,9 ; -407,6 +419,9 ; -446,6 +461,9 ; -496,6 +514,9 ; -516,6 +537,9 ; -540,6 +564,9 ; -562,6 +589,9 ; -601,6 +631,9 ; -641,6 +674,9 ; -667,6 +703,9 ; -708,6 +747,9 ; -732,6 +774,9 ; -751,6 +796,9 ; -774,6 +822,9 ; -797,6 +848,9 ;","lapack_lite_dgeev(PyObject *NPY_UNUSED(self), PyObject *args;lapack_lite_dsyevd(PyObject *NPY_UNUSED(self), PyObject *args;lapack_lite_zheevd(PyObject *NPY_UNUSED(self), PyObject *args;lapack_lite_dgelsd(PyObject *NPY_UNUSED(self), PyObject *args;lapack_lite_dgesv(PyObject *NPY_UNUSED(self), PyObject *args;lapack_lite_dgesdd(PyObject *NPY_UNUSED(self), PyObject *args;lapack_lite_dgetrf(PyObject *NPY_UNUSED(self), PyObject *args;lapack_lite_dpotrf(PyObject *NPY_UNUSED(self), PyObject *args;lapack_lite_dgeqrf(PyObject *NPY_UNUSED(self), PyObject *args;lapack_lite_dorgqr(PyObject *NPY_UNUSED(self), PyObject *args;lapack_lite_zgeev(PyObject *NPY_UNUSED(self), PyObject *args;lapack_lite_zgelsd(PyObject *NPY_UNUSED(self), PyObject *args;lapack_lite_zgesv(PyObject *NPY_UNUSED(self), PyObject *args;lapack_lite_zgesdd(PyObject *NPY_UNUSED(self), PyObject *args;lapack_lite_zgetrf(PyObject *NPY_UNUSED(self), PyObject *args;lapack_lite_zpotrf(PyObject *NPY_UNUSED(self), PyObject *args;lapack_lite_zgeqrf(PyObject *NPY_UNUSED(self), PyObject *args;lapack_lite_zungqr(PyObject *NPY_UNUSED(self), PyObject *args;"
3711,1,a627dce, Charles Harris <charlesr.harris@gmail.com>," Mon, 9 Sep 2013 09:37:29 -0600","ct: [PATCH] BUG: PyArray_SelectkindConverter should be in conversion_utils.h.Also include numpy/ndarraytypes.h, although this seems not needed inpractice.",1,5,0,numpy/core/src/multiarray/conversion_utils.h,[u'5'],5,0," -1,6 +1,8 ; -37,6 +39,9 ;",";PyArray_TypestrConvert(int itemsize, int gentype);"
3709,1,8233626, Charles Harris <charlesr.harris@gmail.com>," Mon, 9 Sep 2013 09:37:29 -0600","ct: [PATCH] BUG: PyArray_SelectkindConverter should be in conversion_utils.h.Also include numpy/ndarraytypes.h, although this seems not needed inpractice.",1,5,0,numpy/core/src/multiarray/conversion_utils.h,[u'5'],5,0," -1,6 +1,8 ; -37,6 +39,9 ;",";PyArray_TypestrConvert(int itemsize, int gentype);"
3706,2,f99cbfc, Christoph Gohlke <cgohlke@uci.edu>," Sun, 8 Sep 2013 16:29:30 -0700",ct: [PATCH 1/2] ENH: add support for Python 3.4 ast.NameConstant,1,3,0,numpy/lib/utils.py,[u'3'],3,0," -1062,6 +1062,9 ;","def visitName(self, node);"
3706,2,f0c1131, Christoph Gohlke <cgohlke@uci.edu>," Sun, 8 Sep 2013 17:52:03 -0700",ct: [PATCH 2/2] TST: add test for Python 3.4 _ast.NameConstant,1,4,0,numpy/lib/tests/test_utils.py,[u'4'],4,0," -40,5 +40,9 ;",def test_deprecate_fn();
3705,2,5116a00, Christoph Gohlke <cgohlke@uci.edu>," Sun, 8 Sep 2013 16:29:30 -0700",ct: [PATCH 1/2] ENH: add support for Python 3.4 ast.NameConstant,1,3,0,numpy/lib/utils.py,[u'3'],3,0," -1092,6 +1092,9 ;","def visitName(self, node);"
3705,2,dd266a3, Christoph Gohlke <cgohlke@uci.edu>," Sun, 8 Sep 2013 17:52:03 -0700",ct: [PATCH 2/2] TST: add test for Python 3.4 _ast.NameConstant,1,4,0,numpy/lib/tests/test_utils.py,[u'4'],4,0," -34,5 +34,9 ;",def test_deprecate_fn();
3701,2,0b71913, Christoph Gohlke <cgohlke@uci.edu>," Sun, 8 Sep 2013 16:29:30 -0700",ct: [PATCH 1/2] ENH: add support for Python 3.4 ast.NameConstant,1,3,0,numpy/lib/utils.py,[u'3'],3,0," -1062,6 +1062,9 ;","def visitName(self, node);"
3701,2,8edccea, Christoph Gohlke <cgohlke@uci.edu>," Sun, 8 Sep 2013 17:52:03 -0700",ct: [PATCH 2/2] TST: add test for Python 3.4 _ast.NameConstant,1,4,0,numpy/lib/tests/test_utils.py,[u'4'],4,0," -46,5 +46,9 ;",def test_deprecate_fn();
3700,1,d53d0b2, Lars Buitinck <l.buitinck@esciencecenter.nl>," Sun, 8 Sep 2013 16:33:31 +0200",ct: [PATCH] MAINT: make loggam static in random kit,1,4,3,numpy/random/mtrand/distributions.c,[u'7'],4,3," -53,12 +53,13 ;",;
3699,2,883ddee, Christoph Gohlke <cgohlke@uci.edu>," Sat, 7 Sep 2013 18:59:56 -0700",ct: [PATCH 1/2] ENH: export py3k.integer_types from numpy.compat,1,2,0,numpy/compat/py3k.py,[u'3'],2,1," -6,7 +6,8 ;",;
3699,2,b68ba30, Christoph Gohlke <cgohlke@uci.edu>," Sat, 7 Sep 2013 19:10:21 -0700","ct: [PATCH 2/2] BUG: check axes and window length input for all integer typesOn Python 2.7, the long type was excluded.",1,7,5,numpy/fft/helper.py,[u'12'],7,5," -4,7 +4,7 ; -13,6 +13,8 ; -62,7 +64,7 ; -110,7 +112,7 ; -157,7 +159,7 ; -213,7 +215,7 ;",";;def fftshift(x, axes=None);def ifftshift(x, axes=None);def fftfreq(n, d=1.0);def rfftfreq(n, d=1.0);"
3698,2,260433c, Christoph Gohlke <cgohlke@uci.edu>," Sat, 7 Sep 2013 18:59:56 -0700",ct: [PATCH 1/2] ENH: export py3k.integer_types from numpy.compat,1,2,0,numpy/compat/py3k.py,[u'3'],2,1," -6,7 +6,8 ;",;
3698,2,fe05eac, Christoph Gohlke <cgohlke@uci.edu>," Sat, 7 Sep 2013 19:10:21 -0700","ct: [PATCH 2/2] BUG: check axes and window length input for all integer typesOn Python 2.7, the long type was excluded.",1,7,5,numpy/fft/helper.py,[u'12'],7,5," -4,7 +4,7 ; -13,6 +13,8 ; -62,7 +64,7 ; -111,7 +113,7 ; -158,7 +160,7 ; -214,7 +216,7 ;",";;def fftshift(x, axes=None);def ifftshift(x, axes=None);def fftfreq(n, d=1.0);def rfftfreq(n, d=1.0);"
3697,1,e20a54b, Charles Harris <charlesr.harris@gmail.com>," Sat, 7 Sep 2013 14:54:41 -0600",ct: [PATCH] BUG: Fix UFUNC_CHECK_STATUS to work on both 32 and 64 bit Windows.Patch is due to Christolph Gohlke.,1,12,0,numpy/core/include/numpy/ufuncobject.h,[u'13'],12,1," -365,11 +365,21 ; -382,6 +392,7 ;",typedef struct _loop1d_info ;typedef struct _loop1d_info ;
3696,1,a486a6b, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 7 Sep 2013 11:59:19 +0200","ct: [PATCH] ENH: copy ndarrays if they are encountered in setArrayFromSequenceBy avoiding the elementwise copy array([a,b,c]) is now asfast as vstack([a,b,c])",2,96,20,numpy/core/src/multiarray/ctors.c,[u'74'],27,10," -24,6 +24,7 ; -396,14 +397,26 ; -412,17 +425,26 ; -458,17 +480,23 ; -480,17 +508,23 ; -515,7 +549,7 ;",";copy_and_swap(void *dst, void *src, int itemsize, npy_intp numitems;setArrayFromSequence(PyArrayObject *a, PyObject *s;setArrayFromSequence(PyArrayObject *a, PyObject *s;setArrayFromSequence(PyArrayObject *a, PyObject *s;PyArray_AssignFromSequence(PyArrayObject *self, PyObject *v;"
3696,1,a486a6b, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 7 Sep 2013 11:59:19 +0200","ct: [PATCH] ENH: copy ndarrays if they are encountered in setArrayFromSequenceBy avoiding the elementwise copy array([a,b,c]) is now asfast as vstack([a,b,c])",2,96,20,numpy/core/tests/test_multiarray.py,[u'42'],21,0," -176,6 +176,48 ;",def test_fill_struct_array(self);
3695,1,6272276, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 7 Sep 2013 09:45:04 +0200",ct: [PATCH] BUG: fix test_rational PyNumberMethods for python3wrong structure makes VC9 fail to compile under python3,1,12,0,numpy/core/src/umath/test_rational.c.src,[u'12'],12,0," -604,7 +604,9 ; -618,17 +620,27 ;",static PyNumberMethods pyrational_as_number = ;static PyNumberMethods pyrational_as_number = ;
3694,1,ba08629, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 7 Sep 2013 09:45:04 +0200",ct: [PATCH] BUG: fix test_rational PyNumberMethods for python3wrong structure makes VC9 fail to compile under python3,1,12,0,numpy/core/src/umath/test_rational.c.src,[u'12'],12,0," -604,7 +604,9 ; -618,17 +620,27 ;",static PyNumberMethods pyrational_as_number = ;static PyNumberMethods pyrational_as_number = ;
3693,1,acace4d, Charles Harris <charlesr.harris@gmail.com>," Fri, 6 Sep 2013 19:31:10 -0600",ct: [PATCH] MAINT: STY: Consolidate test_helper with test_fftpack.The tests in test_helper.py are moved to test_fftpack.py andtest_helper.py deleted. The test_fftpack.py file is made PEP8 compliant.,2,51,78,numpy/fft/tests/test_fftpack.py,[u'51'],27,0," -1,19 +1,48 ; -23,5 +52,27 ;",;def test_basic(self);
3693,1,acace4d, Charles Harris <charlesr.harris@gmail.com>," Fri, 6 Sep 2013 19:31:10 -0600",ct: [PATCH] MAINT: STY: Consolidate test_helper with test_fftpack.The tests in test_helper.py are moved to test_fftpack.py andtest_helper.py deleted. The test_fftpack.py file is made PEP8 compliant.,2,51,78,numpy/fft/tests/test_helper.py,[u'78'],0,41," -1,78 +0,0 ;",;
3692,2,a29a063, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 6 Sep 2013 23:12:13 +0200",ct: [PATCH 1/2] BUG: fix windows fpu flag check for mixed x87 and sse instructionswindows enables sse intrinsics also on 32 bit by default so we need tocheck both the x87 and sse fpu flags.closes #3680,1,5,0,numpy/core/include/numpy/ufuncobject.h,[u'6'],5,1," -370,8 +370,12 ;",typedef struct _loop1d_info ;
3692,2,a82341e, Charles Harris <charlesr.harris@gmail.com>," Sat, 7 Sep 2013 14:54:41 -0600",ct: [PATCH 2/2] BUG: Fix UFUNC_CHECK_STATUS to work on both 32 and 64 bit Windows.Patch is due to Christolph Gohlke.,1,12,0,numpy/core/include/numpy/ufuncobject.h,[u'13'],12,1," -365,11 +365,21 ; -382,6 +392,7 ;",typedef struct _loop1d_info ;typedef struct _loop1d_info ;
3691,1,554ee09, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 6 Sep 2013 23:12:13 +0200",ct: [PATCH] BUG: fix windows fpu flag check for mixed x87 and sse instructionswindows enables sse intrinsics also on 32 bit by default so we need tocheck both the x87 and sse fpu flags.closes #3680,1,5,0,numpy/core/include/numpy/ufuncobject.h,[u'6'],5,1," -370,8 +370,12 ;",typedef struct _loop1d_info ;
3690,1,8a0cdc6, Charles Harris <charlesr.harris@gmail.com>," Thu, 5 Sep 2013 14:53:50 -0600",ct: [PATCH] ENH: Add build support for openblas.Backport of gh-3642 and gh-3688.,3,94,61,doc/release/1.8.0-notes.rst,[u'4'],3,0," -136,6 +136,10 ;",of the mirr function remains unchanged;
3690,1,8a0cdc6, Charles Harris <charlesr.harris@gmail.com>," Thu, 5 Sep 2013 14:53:50 -0600",ct: [PATCH] ENH: Add build support for openblas.Backport of gh-3642 and gh-3688.,3,94,61,numpy/distutils/system_info.py,[u'70'],26,10," -12,6 +12,7 ; -119,7 +120,6 ; -298,6 +298,7 ; -1366,7 +1367,22 ; -1394,14 +1410,6 ; -1455,7 +1463,22 ; -1487,14 +1510,6 ; -1537,6 +1552,23 ;",";;def get_info(name, notfound_action=0);class lapack_opt_info(system_info);def calc_info(self);class blas_opt_info(system_info);def calc_info(self);def calc_info(self);"
3690,1,8a0cdc6, Charles Harris <charlesr.harris@gmail.com>," Thu, 5 Sep 2013 14:53:50 -0600",ct: [PATCH] ENH: Add build support for openblas.Backport of gh-3642 and gh-3688.,3,94,61,site.cfg.example,[u'81'],20,22," -63,33 +63,46 ; -110,7 +123,6 ; -128,18 +140,3 ;",;;;
3689,1,7386f6d, Charles Harris <charlesr.harris@gmail.com>," Thu, 5 Sep 2013 15:06:15 -0600",ct: [PATCH] BUG: .gitignore ignores all release directories.It should only ignore the one in the root directory. The fix is toprepend a '/' to the directory name.,1,0,0,.gitignore,[u'2'],1,1," -62,7 +62,7 ;",MANIFES;
3688,1,92ed1b2, Skipper Seabold <jsseabold@gmail.com>," Thu, 5 Sep 2013 16:36:31 -0400",ct: [PATCH] DOC: Update release notes for openblas build.,1,4,0,doc/release/1.8.0-notes.rst,[u'4'],4,0," -136,6 +136,10 ;",of the mirr function remains unchanged;
3686,1,20a3349, Arink Verma <arinkverma@gmail.com>," Thu, 5 Sep 2013 04:23:08 +0530","ct: [PATCH] ENH: High time consumption by PyUFunc_GetPyValues in ufunc_object.c For every single operation calls, numpy has to extract value of buffersize, errormask  and name to pack and build error object. These two functions, _extract_pyvals and PyUFunc_GetPyValues together use >12% of time.",1,86,56,numpy/core/src/umath/ufunc_object.c,[u'142'],22,14," -383,56 +383,62 ; -1715,6 +1721,37 ; -1740,7 +1777,6 ; -1944,17 +1980,17 ; -2203,8 +2239,7 ; -2216,7 +2251,6 ; -2238,7 +2272,6 ; -2267,7 +2300,6 ; -2330,17 +2362,17 ; -2453,18 +2485,17 ; -2481,7 +2512,6 ;","_extract_pyvals(PyObject *ref, char *name, int *bufsize;make_arr_prep_args(npy_intp nin, PyObject *args, PyObject *kwds;PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;PyUFunc_GenericFunction(PyUFuncObject *ufunc;PyUFunc_GenericFunction(PyUFuncObject *ufunc;PyUFunc_GenericFunction(PyUFuncObject *ufunc;PyUFunc_GenericFunction(PyUFuncObject *ufunc;"
3685,4,1e624fa, Julian Taylor <jtaylor.debian@googlemail.com>," Wed, 4 Sep 2013 21:15:31 +0200","ct: [PATCH 1/4] ENH: implement pairwise summationpairwise summation has an average error of O(log(n)) instead of O(n) ofthe regular summation.It is implemented as summing pairs of small blocks of regulary summedvalues in order to archive the same performance as the old sum.An example of data which profits greatly isd = np.ones(500000)(d / 10.).sum() - d.size / 10.An alternative to pairwise summation is kahan summation but in order tohave a low performance penalty one must unroll and vectorize it,while pairwise summation has the same speed without any vectorization.The better error bound of O(1) is negligible in many cases.",1,69,0,numpy/core/src/umath/loops.c.src,[u'69'],40,0," -1357,20 +1357,89 ;",NPY_NO_EXPORT voi;
3685,4,f57b255, Lars Buitinck <larsmans@gmail.com>," Tue, 15 Oct 2013 18:17:35 +0200",ct: [PATCH 2/4] ENH: umath: simplify pairwise sumSimple recursive implementation with unrolled base case. Also fixedsigned/unsigned issues by making all indices signed.Added a unit test based on @juliantaylor's example.Performance seems unchanged: still about a third faster than before.,2,28,51,numpy/core/src/umath/loops.c.src,[u'73'],12,28," -1358,64 +1358,35 ;",NPY_NO_EXPORT voi;
3685,4,f57b255, Lars Buitinck <larsmans@gmail.com>," Tue, 15 Oct 2013 18:17:35 +0200",ct: [PATCH 2/4] ENH: umath: simplify pairwise sumSimple recursive implementation with unrolled base case. Also fixedsigned/unsigned issues by making all indices signed.Added a unit test based on @juliantaylor's example.Performance seems unchanged: still about a third faster than before.,2,28,51,numpy/core/tests/test_ufunc.py,[u'6'],4,0," -315,6 +315,12 ;",def test_forced_sig(self);
3685,4,b0bc012, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 30 Nov 2013 20:52:19 +0100",ct: [PATCH 3/4] ENH: fix stride issue and unroll 8 times to improve accuracyFix missing stride accounting in calling recursive function.Unroll 8 times to improve accuracy and allowing vectorizing with avxwithout changing summation order.Add tests.,2,59,9,numpy/core/src/umath/loops.c.src,[u'51'],33,7," -1366,26 +1366,59 ;",NPY_NO_EXPORT voi;
3685,4,b0bc012, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 30 Nov 2013 20:52:19 +0100",ct: [PATCH 3/4] ENH: fix stride issue and unroll 8 times to improve accuracyFix missing stride accounting in calling recursive function.Unroll 8 times to improve accuracy and allowing vectorizing with avxwithout changing summation order.Add tests.,2,59,9,numpy/core/tests/test_ufunc.py,[u'17'],14,0," -322,6 +322,23 ;",def test_sum_stability(self);
3685,4,c0a0cd7, Julian Taylor <jtaylor.debian@googlemail.com>," Mon, 2 Dec 2013 18:25:45 +0100",ct: [PATCH 4/4] ENH: also use pairwise summation for half and complex types,2,182,48,numpy/core/src/umath/loops.c.src,[u'181'],31,8," -23,6 +23,13 ; -1351,26 +1358,27 ; -1383,24 +1391,24 ; -1409,7 +1417,7 ; -1417,11 +1425,21 ; -1436,7 +1454,7 ; -1766,17 +1784,26 ; -2087,21 +2114,105 ;",";NPY_NO_EXPORT voi;pairwise_add_@TYPE@(@type@ *a, npy_uintp n, npy_intp stride;pairwise_add_@TYPE@(@type@ *a, npy_uintp n, npy_intp stride;pairwise_add_@TYPE@(@type@ *a, npy_uintp n, npy_intp stride;NPY_NO_EXPORT voi;NPY_NO_EXPORT voi;HALF_ldexp_long(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY_U;"
3685,4,c0a0cd7, Julian Taylor <jtaylor.debian@googlemail.com>," Mon, 2 Dec 2013 18:25:45 +0100",ct: [PATCH 4/4] ENH: also use pairwise summation for half and complex types,2,182,48,numpy/core/tests/test_ufunc.py,[u'49'],8,3," -323,21 +323,44 ;",def test_sum_stability(self);
3684,1,631f9ed, Charles Harris <charlesr.harris@gmail.com>," Wed, 28 Aug 2013 13:04:59 -0600","ct: [PATCH] BUG: Set __hash__ = None for non-hashable classes.Because neither poly1d nor the Polynomial package polynomial classes areimmutable, hence not reliably hashable, they should signal that bysetting __hash__ = None. This also fixes the warningOverriding __eq__ blocks inheritance of __hash__ in 3.xthat is given when the command `python2.7 -3 -c""import numpy""` is run.",2,4,0,numpy/lib/polynomial.py,[u'2'],2,0," -1030,6 +1030,8 ;",class poly1d(object);
3684,1,631f9ed, Charles Harris <charlesr.harris@gmail.com>," Wed, 28 Aug 2013 13:04:59 -0600","ct: [PATCH] BUG: Set __hash__ = None for non-hashable classes.Because neither poly1d nor the Polynomial package polynomial classes areimmutable, hence not reliably hashable, they should signal that bysetting __hash__ = None. This also fixes the warningOverriding __eq__ blocks inheritance of __hash__ in 3.xthat is given when the command `python2.7 -3 -c""import numpy""` is run.",2,4,0,numpy/polynomial/polytemplate.py,[u'2'],2,0," -79,6 +79,8 ;",class $name(pu.PolyBase) ;
3679,1,d57b8b3, Charles Harris <charlesr.harris@gmail.com>," Tue, 3 Sep 2013 19:26:17 -0600","ct: [PATCH] BUG: PyArray_PyIntAsIntp had variable size check wrong way around.This bug resulted in using a long type when a long long was required,resulting in numerous errors when numpy was compiled as 64 bits on64 bit windows.",1,2,2,numpy/core/src/multiarray/conversion_utils.c,[u'4'],2,2," -726,9 +726,9 ;",NPY_NO_EXPORT npy_int;
3678,1,3c8eb4e, Charles Harris <charlesr.harris@gmail.com>," Tue, 3 Sep 2013 19:26:17 -0600","ct: [PATCH] BUG: PyArray_PyIntAsIntp had variable size check wrong way around.This bug resulted in using a long type when a long long was required,resulting in numerous errors when numpy was compiled as 64 bits on64 bit windows.",1,2,2,numpy/core/src/multiarray/conversion_utils.c,[u'4'],2,2," -726,9 +726,9 ;",NPY_NO_EXPORT npy_int;
3676,1,8255df3, Charles Harris <charlesr.harris@gmail.com>," Tue, 3 Sep 2013 05:55:28 -0600",ct: [PATCH] STY: Make numpy/polynomial/tests/*.py PEP8 compliant.Run autopep8 on the tests and fixup the results.,9,504,523,numpy/polynomial/tests/test_chebyshev.py,[u'167'],15,15," -7,63 +7,64 ; -71,9 +72,9 ; -89,9 +90,9 ; -99,9 +100,9 ; -121,22 +122,21 ; -206,9 +206,9 ; -221,7 +221,7 ; -231,7 +231,7 ; -239,7 +239,7 ; -249,41 +249,41 ; -305,29 +305,29 ; -349,13 +349,12 ; -363,11 +362,11 ; -380,8 +379,7 ; -397,8 +395,8 ; -475,26 +473,26 ; -505,15 +503,15 ; -537,7 +535,6 ;",;def test_chebadd(self) ;def test_chebmulx(self);def test_chebmul(self) ;class TestEvaluation(TestCase);def test_chebgrid3d(self);def test_chebint(self) ;def test_chebint(self) ;def test_chebint(self) ;def test_chebint(self) ;def test_chebint_axis(self);class TestVander(TestCase);def test_chebvander(self) ;def test_chebvander2d(self) ;def test_chebvander3d(self) ;def test_100(self);def test_chebtrim(self) ;def test_chebpts1(self);
3676,1,8255df3, Charles Harris <charlesr.harris@gmail.com>," Tue, 3 Sep 2013 05:55:28 -0600",ct: [PATCH] STY: Make numpy/polynomial/tests/*.py PEP8 compliant.Run autopep8 on the tests and fixup the results.,9,504,523,numpy/polynomial/tests/test_classes.py,[u'60'],5,6," -7,17 +7,17 ; -52,13 +52,12 ; -113,7 +112,7 ; -151,9 +150,9 ; -186,7 +185,7 ; -197,7 +196,7 ; -208,7 +207,7 ; -230,8 +229,7 ; -253,7 +251,7 ; -276,7 +274,7 ; -294,15 +292,17 ; -329,7 +329,7 ; -397,7 +397,7 ; -456,19 +456,19 ; -480,7 +480,7 ; -490,7 +490,7 ; -500,7 +500,7 ; -508,7 +508,7 ;",";def test_class_methods();def check_cast(Poly1, Poly2);def check_fromroots(Poly);def f(x) ;def check_equal(Poly) ;def check_not_equal(Poly) ;def check_add(Poly) ;def check_sub(Poly) ;def check_mul(Poly) ;def check_floordiv(Poly) ;def check_mod(Poly) ;def check_copy(Poly);def check_linspace(Poly);def check_call(Poly) ;def check_cutdeg(Poly) ;def check_truncate(Poly) ;def check_trim(Poly) ;"
3676,1,8255df3, Charles Harris <charlesr.harris@gmail.com>," Tue, 3 Sep 2013 05:55:28 -0600",ct: [PATCH] STY: Make numpy/polynomial/tests/*.py PEP8 compliant.Run autopep8 on the tests and fixup the results.,9,504,523,numpy/polynomial/tests/test_hermite.py,[u'155'],14,13," -7,48 +7,48 ; -56,9 +56,9 ; -74,12 +74,12 ; -88,9 +88,9 ; -100,7 +100,7 ; -110,15 +110,14 ; -126,7 +125,7 ; -196,9 +195,9 ; -211,7 +210,7 ; -221,7 +220,7 ; -229,7 +228,7 ; -239,41 +238,41 ; -295,29 +294,29 ; -339,13 +338,12 ; -353,11 +351,11 ; -370,8 +368,7 ; -387,8 +384,8 ; -465,12 +462,12 ; -479,15 +476,15 ; -498,15 +495,15 ;",;def test_hermadd(self) ;def test_hermmulx(self);def test_hermmul(self) ;def test_hermdiv(self) ;class TestEvaluation(TestCase) ;def test_hermval(self) ;def test_hermgrid3d(self);def test_hermint(self) ;def test_hermint(self) ;def test_hermint(self) ;def test_hermint(self) ;def test_hermint_axis(self);class TestVander(TestCase);def test_hermvander(self) ;def test_hermvander2d(self) ;def test_hermvander3d(self) ;def test_100(self);def test_hermfromroots(self) ;def test_hermtrim(self) ;
3676,1,8255df3, Charles Harris <charlesr.harris@gmail.com>," Tue, 3 Sep 2013 05:55:28 -0600",ct: [PATCH] STY: Make numpy/polynomial/tests/*.py PEP8 compliant.Run autopep8 on the tests and fixup the results.,9,504,523,numpy/polynomial/tests/test_hermite_e.py,[u'155'],14,13," -8,44 +8,45 ; -53,9 +54,9 ; -71,12 +72,12 ; -85,9 +86,9 ; -97,7 +98,7 ; -107,15 +108,14 ; -123,7 +123,7 ; -195,7 +195,7 ; -208,7 +208,7 ; -218,7 +218,7 ; -226,7 +226,7 ; -236,41 +236,41 ; -292,31 +292,32 ; -336,13 +337,12 ; -350,11 +350,11 ; -367,8 +367,7 ; -384,8 +383,8 ; -462,12 +461,12 ; -476,15 +475,15 ; -495,15 +494,15 ;",;def test_hermeadd(self) ;def test_hermemulx(self);def test_hermemul(self) ;def test_hermediv(self) ;class TestEvaluation(TestCase) ;def test_hermeval(self) ;def test_hermegrid3d(self);def test_hermeint(self) ;def test_hermeint(self) ;def test_hermeint(self) ;def test_hermeint(self) ;def test_hermeint_axis(self);class TestVander(TestCase);def test_hermevander(self) ;def test_hermevander2d(self) ;def test_hermevander3d(self) ;def test_100(self);def test_hermefromroots(self) ;def test_hermetrim(self) ;
3676,1,8255df3, Charles Harris <charlesr.harris@gmail.com>," Tue, 3 Sep 2013 05:55:28 -0600",ct: [PATCH] STY: Make numpy/polynomial/tests/*.py PEP8 compliant.Run autopep8 on the tests and fixup the results.,9,504,523,numpy/polynomial/tests/test_laguerre.py,[u'151'],14,13," -7,44 +7,45 ; -52,9 +53,9 ; -70,12 +71,12 ; -84,9 +85,9 ; -96,7 +97,7 ; -106,14 +107,14 ; -121,7 +122,7 ; -191,9 +192,9 ; -206,7 +207,7 ; -216,7 +217,7 ; -224,7 +225,7 ; -234,41 +235,41 ; -290,29 +291,29 ; -334,13 +335,12 ; -348,11 +348,11 ; -365,8 +365,7 ; -382,8 +381,8 ; -460,12 +459,12 ; -474,15 +473,15 ; -493,15 +492,15 ;",;def test_lagadd(self) ;def test_lagmulx(self);def test_lagmul(self) ;def test_lagdiv(self) ;class TestEvaluation(TestCase) ;def test_lagval(self) ;def test_laggrid3d(self);def test_lagint(self) ;def test_lagint(self) ;def test_lagint(self) ;def test_lagint(self) ;def test_lagint_axis(self);class TestVander(TestCase);def test_lagvander(self) ;def test_lagvander2d(self) ;def test_lagvander3d(self) ;def test_100(self);def test_lagfromroots(self) ;def test_lagtrim(self) ;
3676,1,8255df3, Charles Harris <charlesr.harris@gmail.com>," Tue, 3 Sep 2013 05:55:28 -0600",ct: [PATCH] STY: Make numpy/polynomial/tests/*.py PEP8 compliant.Run autopep8 on the tests and fixup the results.,9,504,523,numpy/polynomial/tests/test_legendre.py,[u'158'],14,14," -7,47 +7,48 ; -55,9 +56,9 ; -74,12 +75,12 ; -88,9 +89,9 ; -100,7 +101,7 ; -110,14 +111,14 ; -125,7 +126,7 ; -195,9 +196,9 ; -210,7 +211,7 ; -220,7 +221,7 ; -228,7 +229,7 ; -238,41 +239,41 ; -294,29 +295,29 ; -338,13 +339,12 ; -352,11 +352,11 ; -369,7 +369,7 ; -385,8 +385,8 ; -463,12 +463,12 ; -477,15 +477,15 ; -496,15 +496,15 ;",;def test_legadd(self) ;def test_legmulx(self);def test_legmul(self) ;def test_legdiv(self) ;class TestEvaluation(TestCase) ;def test_legval(self) ;def test_leggrid3d(self);def test_legint(self) ;def test_legint(self) ;def test_legint(self) ;def test_legint(self) ;def test_legint_axis(self);class TestVander(TestCase);def test_legvander(self) ;def test_legvander2d(self) ;def test_legvander3d(self) ;def test_100(self);def test_legfromroots(self) ;def test_legtrim(self) ;
3676,1,8255df3, Charles Harris <charlesr.harris@gmail.com>," Tue, 3 Sep 2013 05:55:28 -0600",ct: [PATCH] STY: Make numpy/polynomial/tests/*.py PEP8 compliant.Run autopep8 on the tests and fixup the results.,9,504,523,numpy/polynomial/tests/test_polynomial.py,[u'147'],13,13," -6,46 +6,47 ; -53,9 +54,9 ; -71,16 +72,16 ; -91,8 +92,8 ; -112,15 +113,14 ; -129,7 +129,7 ; -201,7 +201,7 ; -214,7 +214,7 ; -222,14 +222,14 ; -237,41 +237,41 ; -293,29 +293,29 ; -337,13 +337,12 ; -351,11 +350,11 ; -368,8 +367,7 ; -398,27 +396,27 ; -460,8 +458,7 ; -472,7 +469,7 ;",;def test_polyadd(self) ;def test_polymulx(self);def test_polydiv(self) ;class TestEvaluation(TestCase);def test_polyval(self) ;def test_polygrid3d(self);def test_polyint(self) ;def test_polyint(self) ;def test_polyint(self) ;def test_polyint_axis(self);class TestVander(TestCase);def test_polyvander(self) ;def test_polyvander2d(self) ;def test_linear_root(self);def f(x) ;def test_polytrim(self) ;
3676,1,8255df3, Charles Harris <charlesr.harris@gmail.com>," Tue, 3 Sep 2013 05:55:28 -0600",ct: [PATCH] STY: Make numpy/polynomial/tests/*.py PEP8 compliant.Run autopep8 on the tests and fixup the results.,9,504,523,numpy/polynomial/tests/test_polyutils.py,[u'23'],2,2," -7,30 +7,31 ; -40,9 +41,9 ; -55,7 +56,7 ; -86,7 +87,7 ;",;def test_trimcoef(self) ;def test_getdomain(self) ;def test_mapdomain(self) ;
3676,1,8255df3, Charles Harris <charlesr.harris@gmail.com>," Tue, 3 Sep 2013 05:55:28 -0600",ct: [PATCH] STY: Make numpy/polynomial/tests/*.py PEP8 compliant.Run autopep8 on the tests and fixup the results.,9,504,523,numpy/polynomial/tests/test_printing.py,[u'11'],1,1," -3,37 +3,33 ; -46,31 +42,26 ;",;def test_polynomial_str(self);
3675,1,b35728d, Charles Harris <charlesr.harris@gmail.com>," Tue, 3 Sep 2013 06:41:28 -0600","ct: [PATCH] Revert ""Merge pull request #3567 from arinkverma/avoid_conversion""This reverts commit de9f1c92d3ca0920bce915438f0406f587aa98db, reversingchanges made to d958dec676beeac218a118fac084fa8b14bc9171.There is a change of behavior in conversion of signed to unsignedPyLong that shows up on my machine. For some reason this did not showup in the travisbot tests. This reverts the merge that led to thisproblem until it can be sorted out. Error shows up asnumpy/core/arrayprint.py"",line 653, in __call__    if _MININT < x < _MAXINT:OverflowError: can't convert negative int to unsigned",1,12,214,numpy/core/src/scalarmathmodule.c.src,[u'226'],2,32," -661,13 +661,21 ; -770,216 +778,6 ;","static voi;_@name@_convert_to_ctype(PyObject *a, @type@ *arg1;"
3674,1,2aa5197, Charles Harris <charlesr.harris@gmail.com>," Mon, 2 Sep 2013 20:48:45 -0600",ct: [PATCH] ENH: Add paver generated release directory to .gitignore.,1,4,0,.gitignore,[u'4'],4,0," -60,6 +60,10 ;",doc/cdoc/buil;
3673,1,d2c44c5, Charles Harris <charlesr.harris@gmail.com>," Mon, 2 Sep 2013 13:21:48 -0600",ct: [PATCH] STY: Make numpy/lib/test/*.py PEP8 compliant.Run autopep8 over the test files in numpy/lib/test and make fixesto the result.Also remove Python5 workaround.,19,1246,1086,numpy/lib/tests/test__datasource.py,[u'14'],1,1," -17,6 +17,7 ; -28,12 +29,14 ; -57,6 +60,7 ; -64,24 +68,31 ; -259,7 +270,7 ; -313,6 +324,7 ;",";def urlopen_stub(url, data=None);def valid_textfile(filedir);def invalid_textfile(filedir);def tearDown(self);def test_CachedHTTPFile(self);"
3673,1,d2c44c5, Charles Harris <charlesr.harris@gmail.com>," Mon, 2 Sep 2013 13:21:48 -0600",ct: [PATCH] STY: Make numpy/lib/test/*.py PEP8 compliant.Run autopep8 over the test files in numpy/lib/test and make fixesto the result.Also remove Python5 workaround.,19,1246,1086,numpy/lib/tests/test__iotools.py,[u'59'],1,2," -5,14 +5,17 ; -71,11 +74,11 ; -87,14 +90,14 ; -106,7 +109,7 ; -114,7 +117,7 ; -122,26 +125,25 ; -154,7 +156,7 ; -168,7 +170,7 ; -180,37 +182,39 ; -226,10 +230,9 ; -292,9 +295,9 ;",;def test_variable_fixed_width(self);def test_case_sensitivity(self);def test_missing_names(self);def test_validate_nb_names(self);def test_validate_wo_names(self);def test_upgrade(self);def test_missing(self);def test_upgrademapper(self);def test_uint64_dtype(self);def test_easy_dtype(self);
3673,1,d2c44c5, Charles Harris <charlesr.harris@gmail.com>," Mon, 2 Sep 2013 13:21:48 -0600",ct: [PATCH] STY: Make numpy/lib/test/*.py PEP8 compliant.Run autopep8 over the test files in numpy/lib/test and make fixesto the result.Also remove Python5 workaround.,19,1246,1086,numpy/lib/tests/test_arraypad.py,[u'705'],17,17," -13,209 +13,219 ; -223,23 +233,25 ; -247,24 +259,25 ; -272,67 +285,70 ; -355,83 +371,85 ; -450,19 +468,21 ; -470,19 +490,20 ; -500,21 +521,21 ; -523,7 +544,7 ; -532,7 +553,7 ;",class TestStatistic(TestCase);class TestConstant(TestCase);class TestLinearRamp(TestCase);class TestReflect(TestCase);class TestWrap(TestCase);def test_check_simple(self);class TestEdge(TestCase);def test_check_simple(self);def test_check_simple(self);def test_check_simple(self);
3673,1,d2c44c5, Charles Harris <charlesr.harris@gmail.com>," Mon, 2 Sep 2013 13:21:48 -0600",ct: [PATCH] STY: Make numpy/lib/test/*.py PEP8 compliant.Run autopep8 over the test files in numpy/lib/test and make fixesto the result.Also remove Python5 workaround.,19,1246,1086,numpy/lib/tests/test_arraysetops.py,[u'111'],3,3," -9,10 +9,10 ; -65,47 +65,46 ; -181,7 +180,7 ; -212,29 +211,29 ; -243,15 +242,15 ;",";def check_all(a, b, i1, i2, dt);def test_in1d(self);def test_in1d_ravel(self);def test_setdiff1d_char_array(self);"
3673,1,d2c44c5, Charles Harris <charlesr.harris@gmail.com>," Mon, 2 Sep 2013 13:21:48 -0600",ct: [PATCH] STY: Make numpy/lib/test/*.py PEP8 compliant.Run autopep8 over the test files in numpy/lib/test and make fixesto the result.Also remove Python5 workaround.,19,1246,1086,numpy/lib/tests/test_financial.py,[u'10'],1,1," -3,6 +3,7 ; -40,8 +41,9 ; -122,7 +124,7 ; -133,7 +135,7 ;",;def test_nper2(self);def test_when(self);def test_broadcast(self);
3673,1,d2c44c5, Charles Harris <charlesr.harris@gmail.com>," Mon, 2 Sep 2013 13:21:48 -0600",ct: [PATCH] STY: Make numpy/lib/test/*.py PEP8 compliant.Run autopep8 over the test files in numpy/lib/test and make fixesto the result.Also remove Python5 workaround.,19,1246,1086,numpy/lib/tests/test_format.py,[u'38'],1,1," -291,10 +291,13 ; -394,8 +397,10 ; -405,6 +410,7 ; -412,6 +418,7 ; -421,6 +428,7 ; -437,9 +445,10 ; -501,31 +510,36 ; -538,16 +552,16 ;",;def teardown_module();def teardown_module();def roundtrip(arr);def test_roundtrip();def test_memmap_roundtrip();def test_write_version_1_0();def test_bad_header();
3673,1,d2c44c5, Charles Harris <charlesr.harris@gmail.com>," Mon, 2 Sep 2013 13:21:48 -0600",ct: [PATCH] STY: Make numpy/lib/test/*.py PEP8 compliant.Run autopep8 over the test files in numpy/lib/test and make fixesto the result.Also remove Python5 workaround.,19,1246,1086,numpy/lib/tests/test_function_base.py,[u'319'],8,7," -1,6 +1,7 ; -71,6 +72,7 ; -185,7 +187,8 ; -199,8 +202,9 ; -209,18 +213,18 ; -248,6 +252,7 ; -278,7 +283,7 ; -286,17 +291,19 ; -315,9 +322,9 ; -325,7 +332,7 ; -333,14 +340,17 ; -355,10 +365,10 ; -378,10 +388,10 ; -428,6 +438,7 ; -450,17 +461,24 ; -468,10 +486,12 ; -555,6 +575,7 ; -579,6 +600,7 ; -640,6 +662,7 ; -660,7 +683,7 ; -669,6 +692,7 ; -678,6 +702,7 ; -778,18 +803,18 ; -807,7 +832,7 ; -842,6 +867,7 ; -863,7 +889,7 ; -909,7 +935,8 ; -970,12 +997,14 ; -986,30 +1015,35 ; -1020,7 +1054,7 ; -1029,11 +1063,11 ; -1058,19 +1092,20 ; -1114,27 +1149,25 ; -1152,7 +1185,7 ; -1161,34 +1194,42 ; -1196,26 +1237,27 ; -1268,7 +1310,6 ; -1390,6 +1431,7 ; -1459,9 +1501,12 ;",";def test_order(self);def test_basic(self);def test_multidim(self);def test_multidim(self);def test_index_array_copied(self);def test_basic(self);def test_basic(self);def test_basic(self);def test_basic(self);def test_basic(self);def test_basic(self);def _check_inverse_of_slicing(self, indices);class SubClass(np.ndarray);def test_masked(self);def test_timedelta64(self);def test_ufunc(self);def test_keywords_no_func_code(self);def test_UnboundMethod_ticket_1156(self);def test_execution_order_ticket_1487(self);def test_string_ticket_1892(self);def f(x);def test_ndim(self);def test_masked(self);def test_array_like(self);def test_simple(self);def test_density(self);def test_weights(self);def test_empty(self);def test_simple(self);def test_shape_3d(self);def test_identical_samples(self);def test_dtype_order(self);def test_empty(self);def test_empty(self);def test_int_beta(self);def test_simple(self);def compare_results(res, desired);def test_overwrite_keyword(self);"
3673,1,d2c44c5, Charles Harris <charlesr.harris@gmail.com>," Mon, 2 Sep 2013 13:21:48 -0600",ct: [PATCH] STY: Make numpy/lib/test/*.py PEP8 compliant.Run autopep8 over the test files in numpy/lib/test and make fixesto the result.Also remove Python5 workaround.,19,1246,1086,numpy/lib/tests/test_index_tricks.py,[u'82'],2,2," -2,9 +2,10 ; -22,53 +23,65 ; -93,12 +106,12 ; -125,8 +138,8 ; -149,10 +162,12 ; -208,16 +223,16 ; -230,7 +245,8 ;",;def test_basic(self);def test_nd(self);def test_2d(self);def test_simple_1(self);def test_fill_diagonal();def test_diag_indices();
3673,1,d2c44c5, Charles Harris <charlesr.harris@gmail.com>," Mon, 2 Sep 2013 13:21:48 -0600",ct: [PATCH] STY: Make numpy/lib/test/*.py PEP8 compliant.Run autopep8 over the test files in numpy/lib/test and make fixesto the result.Also remove Python5 workaround.,19,1246,1086,numpy/lib/tests/test_io.py,[u'239'],6,6," -13,12 +13,12 ; -55,6 +55,7 ; -129,11 +130,13 ; -210,7 +213,8 ; -270,8 +274,8 ; -334,29 +338,29 ; -376,30 +380,36 ; -414,26 +424,6 ; -447,8 +437,7 ; -459,7 +448,7 ; -487,8 +476,8 ; -496,9 +485,9 ; -506,8 +495,8 ; -515,16 +504,16 ; -583,14 +572,14 ; -598,7 +587,6 ; -622,9 +610,10 ; -658,22 +647,22 ; -714,7 +703,7 ; -727,6 +716,7 ; -853,16 +843,19 ; -889,7 +882,6 ; -897,7 +889,6 ; -906,7 +897,6 ; -919,7 +909,6 ; -931,7 +920,7 ; -943,7 +932,6 ; -953,12 +941,11 ; -967,14 +954,15 ; -984,7 +972,8 ; -1004,42 +993,39 ; -1051,8 +1037,9 ; -1065,7 +1052,6 ; -1075,13 +1061,12 ; -1091,15 +1076,13 ; -1110,7 +1093,6 ; -1145,7 +1127,8 ; -1182,7 +1165,6 ; -1210,7 +1192,6 ; -1220,26 +1201,26 ; -1249,8 +1230,8 ; -1260,7 +1241,6 ; -1271,7 +1251,6 ; -1290,7 +1269,6 ; -1303,6 +1281,7 ; -1326,6 +1305,7 ; -1340,18 +1320,16 ; -1493,7 +1471,7 ; -1618,6 +1596,7 ; -1628,6 +1607,7 ; -1654,6 +1634,7 ;",";def strptime(s, fmt=None);def test_record(self);def test_not_closing_opened_fid(self);def test_array(self);def test_header_footer(self);def test_complex_arrays(self);def write(self, text);def test_record(self);def test_array(self);def test_missing(self);def test_converters_with_usecols(self);def test_comments(self);def test_skiprows(self);def test_3d_shaped_dtype(self);def test_empty_file(self);def test_dtype_with_object(self);def test_empty_field_after_tab(self);def test_ndmin_keyword(self);def count();def test_skip_footer_with_invalid(self);def test_auto_dtype(self);def test_auto_dtype_uniform(self);def test_fancy_dtype(self);def test_names_overwrite(self);def test_commented_header(self);def test_commented_header(self);def test_autonames_and_usecols(self);def test_converters_with_usecols_and_names(self);def test_converters_cornercases(self);def test_unused_converter(self);def test_dtype_with_object(self);def test_dtype_with_object(self);def test_userconverters_with_explicit_dtype(self);def test_integer_delimiter(self);def test_missing_with_tabs(self);def test_usecols_with_structured_dtype(self);def test_fancy_dtype_alt(self);def test_withmissing(self);def test_user_missing_values(self);def test_user_filling_values(self);def test_user_filling_values(self);def test_withmissing_float(self);def test_with_masked_column_various(self);def test_invalid_raise(self);def test_invalid_raise_with_usecols(self);def f(_ret={});def test_fixed_width_names(self);def test_gzip_loadtxt();def test_gzip_loadtxt_from_string();def test_npzfile_dict();"
3673,1,d2c44c5, Charles Harris <charlesr.harris@gmail.com>," Mon, 2 Sep 2013 13:21:48 -0600",ct: [PATCH] STY: Make numpy/lib/test/*.py PEP8 compliant.Run autopep8 over the test files in numpy/lib/test and make fixesto the result.Also remove Python5 workaround.,19,1246,1086,numpy/lib/tests/test_nanfunctions.py,[u'28'],1,1," -14,19 +14,19 ; -143,8 +143,8 ; -275,13 +275,13 ;",;def test_empty(self);def test_mutation(self);
3673,1,d2c44c5, Charles Harris <charlesr.harris@gmail.com>," Mon, 2 Sep 2013 13:21:48 -0600",ct: [PATCH] STY: Make numpy/lib/test/*.py PEP8 compliant.Run autopep8 over the test files in numpy/lib/test and make fixesto the result.Also remove Python5 workaround.,19,1246,1086,numpy/lib/tests/test_polynomial.py,[u'14'],1,1," -81,6 +81,7 ; -100,7 +101,7 ; -118,9 +119,9 ; -135,8 +136,8 ; -160,7 +161,8 ;",;def test_str_leading_zeros(self);def test_polyfit(self) ;def test_polyfit(self) ;def test_complex(self);
3673,1,d2c44c5, Charles Harris <charlesr.harris@gmail.com>," Mon, 2 Sep 2013 13:21:48 -0600",ct: [PATCH] STY: Make numpy/lib/test/*.py PEP8 compliant.Run autopep8 over the test files in numpy/lib/test and make fixesto the result.Also remove Python5 workaround.,19,1246,1086,numpy/lib/tests/test_recfunctions.py,[u'381'],9,9," -13,24 +13,23 ; -38,6 +37,7 ; -46,6 +46,7 ; -58,78 +59,80 ; -140,48 +143,48 ; -189,20 +192,18 ; -211,96 +212,95 ; -311,23 +311,23 ; -338,179 +338,177 ; -527,9 +525,8 ; -544,16 +541,16 ; -564,7 +561,7 ; -574,7 +571,7 ; -586,52 +583,53 ; -641,15 +639,16 ; -661,25 +660,25 ;",;def test_zip_descr(self);def test_zip_descr(self);def test_zip_descr(self);def test_get_fieldstructure(self);def test_find_duplicates_ignoremask(self);def test_masked_flexible(self);def test_wmasked_arrays(self);def test_singlerecord(self);def test_autoconversion(self);def test_checktitles(self);def test_inner_join(self);def test_join(self);def test_outer_join(self);def test_no_r1postfix(self);def test_no_r2postfix(self);
3673,1,d2c44c5, Charles Harris <charlesr.harris@gmail.com>," Mon, 2 Sep 2013 13:21:48 -0600",ct: [PATCH] STY: Make numpy/lib/test/*.py PEP8 compliant.Run autopep8 over the test files in numpy/lib/test and make fixesto the result.Also remove Python5 workaround.,19,1246,1086,numpy/lib/tests/test_regression.py,[u'33'],1,1," -9,13 +9,14 ; -23,13 +24,13 ; -37,7 +38,8 ; -46,7 +48,8 ; -85,7 +88,7 ; -103,8 +106,7 ; -115,11 +117,11 ; -141,11 +143,13 ; -159,15 +163,16 ;",";def test_cov_parameters(self,level=rlevel);def test_mem_vectorise(self, level=rlevel);def test_mgrid_single_element(self, level=rlevel);def test_mem_insert(self, level=rlevel);def test_polyfit_build(self);def test_polydiv_type(self) ;def test_large_fancy_indexing(self, level=rlevel);def test_void_coercion(self, level=rlevel);"
3673,1,d2c44c5, Charles Harris <charlesr.harris@gmail.com>," Mon, 2 Sep 2013 13:21:48 -0600",ct: [PATCH] STY: Make numpy/lib/test/*.py PEP8 compliant.Run autopep8 over the test files in numpy/lib/test and make fixesto the result.Also remove Python5 workaround.,19,1246,1086,numpy/lib/tests/test_shape_base.py,[u'81'],2,2," -5,14 +5,17 ; -32,7 +35,7 ; -55,27 +58,32 ; -151,44 +159,50 ; -196,13 +210,13 ; -213,7 +227,7 ; -221,7 +235,7 ; -232,7 +246,7 ; -241,7 +255,7 ; -276,6 +290,7 ; -295,7 +310,7 ; -304,8 +319,8 ;",;def test_integer_0_split(self);def test_integer_split(self);def test_unequal_split(self);def test_0D_array(self);class TestVsplit(TestCase);def test_1D_array(self);class TestDsplit(TestCase);def test_2D_array(self);def test_return_type(self);def test_basic(self);def test_empty(self);
3673,1,d2c44c5, Charles Harris <charlesr.harris@gmail.com>," Mon, 2 Sep 2013 13:21:48 -0600",ct: [PATCH] STY: Make numpy/lib/test/*.py PEP8 compliant.Run autopep8 over the test files in numpy/lib/test and make fixesto the result.Also remove Python5 workaround.,19,1246,1086,numpy/lib/tests/test_stride_tricks.py,[u'10'],1,1," -15,6 +15,7 ; -22,6 +23,7 ; -51,6 +53,7 ; -60,6 +63,7 ; -86,6 +90,7 ; -110,6 +115,7 ; -141,6 +147,7 ; -155,6 +162,7 ; -195,7 +203,7 ;","def assert_shapes_correct(input_shapes, expected_shape);def assert_incompatible_shapes_raise(input_shapes);def test_same();def test_one_off();def test_same_input_shapes();def test_two_compatible_by_ones_input_shapes();def test_two_compatible_by_prepending_ones_input_shapes();def test_incompatible_shapes_raise_valueerror();def test_same_as_ufunc();"
3673,1,d2c44c5, Charles Harris <charlesr.harris@gmail.com>," Mon, 2 Sep 2013 13:21:48 -0600",ct: [PATCH] STY: Make numpy/lib/test/*.py PEP8 compliant.Run autopep8 over the test files in numpy/lib/test and make fixesto the result.Also remove Python5 workaround.,19,1246,1086,numpy/lib/tests/test_twodim_base.py,[u'192'],5,4," -5,55 +5,73 ; -73,6 +91,7 ; -119,6 +138,7 ; -131,10 +151,11 ; -142,6 +163,7 ; -172,22 +194,26 ; -199,23 +225,27 ; -225,7 +255,7 ; -267,30 +297,30 ; -298,9 +328,9 ; -311,17 +341,17 ;",;def test_strings(self);def test_diag_bounds(self);def test_basic(self);def test_basic(self);def test_axes(self);def test_simple(self);def test_all_outliers(self);def test_tril_indices();def test_triu_indices(self);def test_triu_indices(self);
3673,1,d2c44c5, Charles Harris <charlesr.harris@gmail.com>," Mon, 2 Sep 2013 13:21:48 -0600",ct: [PATCH] STY: Make numpy/lib/test/*.py PEP8 compliant.Run autopep8 over the test files in numpy/lib/test and make fixesto the result.Also remove Python5 workaround.,19,1246,1086,numpy/lib/tests/test_type_check.py,[u'6'],1,1," -5,7 +5,7 ; -31,7 +31,6 ; -121,6 +120,7 ; -133,6 +133,7 ; -148,7 +149,6 ;",;def test_basic(self);def test_fail(self);def test_pass(self);def test_basic(self);
3673,1,d2c44c5, Charles Harris <charlesr.harris@gmail.com>," Mon, 2 Sep 2013 13:21:48 -0600",ct: [PATCH] STY: Make numpy/lib/test/*.py PEP8 compliant.Run autopep8 over the test files in numpy/lib/test and make fixesto the result.Also remove Python5 workaround.,19,1246,1086,numpy/lib/tests/test_ufunclike.py,[u'4'],1,1," -5,6 +5,7 ; -32,7 +33,7 ; -47,6 +48,7 ;",";def test_isneginf(self);def __new__(cls, data, metadata=None);"
3673,1,d2c44c5, Charles Harris <charlesr.harris@gmail.com>," Mon, 2 Sep 2013 13:21:48 -0600",ct: [PATCH] STY: Make numpy/lib/test/*.py PEP8 compliant.Run autopep8 over the test files in numpy/lib/test and make fixesto the result.Also remove Python5 workaround.,19,1246,1086,numpy/lib/tests/test_utils.py,[u'6'],1,0," -10,6 +10,7 ; -22,20 +23,25 ;",;def test_lookfor();
3672,1,e4d9030, Charles Harris <charlesr.harris@gmail.com>," Sun, 1 Sep 2013 09:30:27 -0600",ct: [PATCH] MAINT: Update pavement.py script.Remove builds for Python 2.6 and 3.1Update release notes path to doc/release/1.9.0-notes.rst.Set LOG_START to 'branch-1.8.x',1,3,11,pavement.py,[u'14'],3,11," -99,17 +99,17 ; -134,10 +134,8 ; -152,10 +150,8 ; -164,10 +160,8 ; -177,10 +171,8 ;",;;;;;
3670,3,34ac69f, Charles Harris <charlesr.harris@gmail.com>," Sat, 31 Aug 2013 20:21:32 -0600","ct: [PATCH 1/3] BUG: Catch DeprecationWarning in numpy/core/tests/test_numeric.py.TestCreationFuncs.check_function was spewing Deprecation warnings inrelease mode. AFAICT, it did not raise errors during development becauseit was buried by a TypeError. The Deprecation in question is at line1141 in multiarray/conversion_utils.c. Hiding the deprecation shouldbe harmless here, but when the Deprecation is turned into an errorit will need to be caught in the test.",1,33,28,numpy/core/tests/test_numeric.py,[u'61'],22,18," -4,6 +4,7 ; -1493,8 +1494,7 ; -1502,36 +1502,41 ;",;def test_basic(self);def setUp(self);
3670,3,ad6351f, Charles Harris <charlesr.harris@gmail.com>," Sat, 31 Aug 2013 20:30:11 -0600",ct: [PATCH 2/3] MAINT: Make Warning handling cleaner in test_concatenate_sloppy0.The test in question is in numpy/core/tests/test_shape_base. The cleanupconsists of using warning.catch_warnings instead of setting and popping thewarnings filter.,1,4,11,numpy/core/tests/test_shape_base.py,[u'15'],4,11," -237,20 +237,13 ;",def test_concatenate_sloppy0();
3670,3,38c0fd9, Charles Harris <charlesr.harris@gmail.com>," Sat, 31 Aug 2013 20:17:52 -0600","ct: [PATCH 3/3] BUG: Make DeprecationWarning always raise error in test.The test_fancy in numpy/lib/tests/test_function_base.py failed inrelease because a DeprecationWarning was no longer raised, it hadbecome a warning.",1,5,3,numpy/lib/tests/test_function_base.py,[u'8'],5,3," -395,10 +395,12 ;",def test_slices(self);
3668,3,03371cd, Charles Harris <charlesr.harris@gmail.com>," Sat, 31 Aug 2013 20:17:52 -0600","ct: [PATCH 1/3] BUG: Make DeprecationWarning always raise error in test.The test_fancy in numpy/lib/tests/test_function_base.py failed inrelease because a DeprecationWarning was no longer raised, it hadbecome a warning.",1,5,3,numpy/lib/tests/test_function_base.py,[u'8'],5,3," -395,10 +395,12 ;",def test_slices(self);
3668,3,d4413a3, Charles Harris <charlesr.harris@gmail.com>," Sat, 31 Aug 2013 20:21:32 -0600","ct: [PATCH 2/3] BUG: Catch DeprecationWarning in numpy/core/tests/test_numeric.py.TestCreationFuncs.check_function was spewing Deprecation warnings inrelease mode. AFAICT, it did not raise errors during development becauseit was buried by a TypeError. The Deprecation in question is at line1141 in multiarray/conversion_utils.c. Hiding the deprecation shouldbe harmless here, but when the Deprecation is turned into an errorit will need to be caught in the test.",1,33,28,numpy/core/tests/test_numeric.py,[u'61'],22,18," -4,6 +4,7 ; -1493,8 +1494,7 ; -1502,36 +1502,41 ;",;def test_basic(self);def setUp(self);
3668,3,57245e4, Charles Harris <charlesr.harris@gmail.com>," Sat, 31 Aug 2013 20:30:11 -0600",ct: [PATCH 3/3] MAINT: Make Warning handling cleaner in test_concatenate_sloppy0.The test in question is in numpy/core/tests/test_shape_base. The cleanupconsists of using warning.catch_warnings instead of setting and popping thewarnings filter.,1,4,11,numpy/core/tests/test_shape_base.py,[u'15'],4,11," -237,20 +237,13 ;",def test_concatenate_sloppy0();
3665,2,421bdcd, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 30 Aug 2013 20:22:33 +0200",ct: [PATCH 1/2] ENH: support extended axis argument in np.medianmakes it more compatible with the np.mean ufunc,2,59,2,numpy/lib/function_base.py,[u'23'],19,2," -2671,8 +2671,27 ;","def median(a, axis=None, out=None, overwrite_input=False);"
3665,2,421bdcd, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 30 Aug 2013 20:22:33 +0200",ct: [PATCH 1/2] ENH: support extended axis argument in np.medianmakes it more compatible with the np.mean ufunc,2,59,2,numpy/lib/tests/test_function_base.py,[u'38'],35,0," -1528,6 +1528,44 ;",def test_array_like(self);
3665,2,93cd381, Julian Taylor <jtaylor.debian@googlemail.com>," Tue, 3 Sep 2013 23:17:23 +0200",ct: [PATCH 2/2] ENH: support ufunc keepdims argument in np.median,2,35,4,numpy/lib/function_base.py,[u'23'],19,4," -2596,7 +2596,7 ; -2621,6 +2621,12 ; -2672,18 +2678,21 ; -2692,6 +2701,8 ; -2733,7 +2744,11 ;","def msort(a);def median(a, axis=None, out=None, overwrite_input=False);def median(a, axis=None, out=None, overwrite_input=False);def median(a, axis=None, out=None, overwrite_input=False);def median(a, axis=None, out=None, overwrite_input=False);"
3665,2,93cd381, Julian Taylor <jtaylor.debian@googlemail.com>," Tue, 3 Sep 2013 23:17:23 +0200",ct: [PATCH 2/2] ENH: support ufunc keepdims argument in np.median,2,35,4,numpy/lib/tests/test_function_base.py,[u'16'],16,0," -1460,6 +1460,7 ; -1566,6 +1567,21 ;",def test_basic(self);def test_extended_axis_invalid(self);
3664,1,c53b0e4, Michael Droettboom <mdboom@gmail.com>," Fri, 28 Mar 2014 15:31:55 -0400",ct: [PATCH] BUG: Compare struct arrays with different endian.Fixes two places where dtypes with fields are compared for *exact*equality where they should be compared for *equivalency*.,3,50,28,numpy/core/src/multiarray/arrayobject.c,[u'28'],9,9," -1325,16 +1325,16 ; -1386,16 +1386,16 ;","array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;"
3664,1,c53b0e4, Michael Droettboom <mdboom@gmail.com>," Fri, 28 Mar 2014 15:31:55 -0400",ct: [PATCH] BUG: Compare struct arrays with different endian.Fixes two places where dtypes with fields are compared for *exact*equality where they should be compared for *equivalency*.,3,50,28,numpy/core/src/multiarray/multiarraymodule.c,[u'44'],19,9," -1400,7 +1400,10 ; -1408,20 +1411,33 ; -2097,7 +2113,7 ;","array_putmask(PyObject *NPY_UNUSED(module), PyObject *args, PyObject *kwds;_equivalent_fields(PyObject *field1, PyObject *field2) ;array_matrixproduct(PyObject *NPY_UNUSED(dummy), PyObject *args, PyObject* kwds;"
3664,1,c53b0e4, Michael Droettboom <mdboom@gmail.com>," Fri, 28 Mar 2014 15:31:55 -0400",ct: [PATCH] BUG: Compare struct arrays with different endian.Fixes two places where dtypes with fields are compared for *exact*equality where they should be compared for *equivalency*.,3,50,28,numpy/core/tests/test_multiarray.py,[u'6'],4,0," -623,6 +623,12 ;",def test_subarray_comparison(self);
3661,1,6111039, Warren Weckesser <warren.weckesser@gmail.com>," Tue, 4 Jun 2013 14:42:05 -0400",ct: [PATCH] TST: linalg: loosen the requirements of some tests in test_blasdot.py.  Addresses part of gh-3399.Closes #3656.,1,9,9,numpy/core/tests/test_blasdot.py,[u'18'],9,9," -109,15 +109,15 ; -133,10 +133,10 ; -145,7 +145,7 ;",def test_dot_array_order();def test_dot_array_order();def test_dot_array_order();
3658,6,07cbe99, Jonathan Helmus <jjhelmus@gmail.com>," Wed, 28 Aug 2013 20:40:17 -0500",ct: [PATCH 1/6] ENH: percentile function with additional parameters and vecorizationThe percentile function was enhanced by adding limit and interpolationparameters to give it similar functionality to SciPy's stats.scoreatpercentilefunction.  In addition the function was vecorized along q and rewritten touse the partition method for better performance.,3,209,86,doc/release/1.9.0-notes.rst,[u'2'],1,0," -19,6 +19,8 ;",Future Change;
3658,6,07cbe99, Jonathan Helmus <jjhelmus@gmail.com>," Wed, 28 Aug 2013 20:40:17 -0500",ct: [PATCH 1/6] ENH: percentile function with additional parameters and vecorizationThe percentile function was enhanced by adding limit and interpolationparameters to give it similar functionality to SciPy's stats.scoreatpercentilefunction.  In addition the function was vecorized along q and rewritten touse the partition method for better performance.,3,209,86,numpy/lib/function_base.py,[u'156'],20,14," -16,7 +16,8 ; -2765,7 +2766,9 ; -2777,29 +2780,40 ; -2809,7 +2823,7 ; -2818,87 +2832,97 ;",";def median(a, axis=None, out=None, overwrite_input=False);def percentile(a, q, axis=None, out=None, overwrite_input=False);def percentile(a, q, axis=None, out=None, overwrite_input=False);def percentile(a, q, axis=None, out=None, overwrite_input=False);"
3658,6,07cbe99, Jonathan Helmus <jjhelmus@gmail.com>," Wed, 28 Aug 2013 20:40:17 -0500",ct: [PATCH 1/6] ENH: percentile function with additional parameters and vecorizationThe percentile function was enhanced by adding limit and interpolationparameters to give it similar functionality to SciPy's stats.scoreatpercentilefunction.  In addition the function was vecorized along q and rewritten touse the partition method for better performance.,3,209,86,numpy/lib/tests/test_function_base.py,[u'137'],24,5," -1440,27 +1440,124 ;","def compare_results(res, desired);"
3658,6,4a084a0, Jonathan Helmus <jjhelmus@gmail.com>," Thu, 5 Sep 2013 11:20:56 -0500",ct: [PATCH 2/6] MAINT: cleaning up percentile function.,2,21,52,numpy/lib/function_base.py,[u'24'],8,9," -2767,8 +2767,8 ; -2780,17 +2780,15 ; -2860,10 +2858,6 ; -2892,14 +2886,18 ;","def median(a, axis=None, out=None, overwrite_input=False);def percentile(a, q, limit=None, interpolation='linear', axis=None;def percentile(a, q, limit=None, interpolation='linear', axis=None;def percentile(a, q, limit=None, interpolation='linear', axis=None;"
3658,6,4a084a0, Jonathan Helmus <jjhelmus@gmail.com>," Thu, 5 Sep 2013 11:20:56 -0500",ct: [PATCH 2/6] MAINT: cleaning up percentile function.,2,21,52,numpy/lib/tests/test_function_base.py,[u'49'],7,28," -1456,37 +1456,14 ; -1495,22 +1472,16 ;",def test_2D(self);def test_lower_higher(self);
3658,6,a7fc781, Jonathan Helmus <jjhelmus@gmail.com>," Fri, 13 Sep 2013 16:57:17 -0500","ct: [PATCH 3/6] DOC: changes to scoreatpercentile docstring, doc test now passes",1,20,18,numpy/lib/function_base.py,[u'38'],20,18," -2800,10 +2800,11 ; -2821,40 +2822,41 ;","def percentile(a, q, interpolation='linear', axis=None, out=None;def percentile(a, q, interpolation='linear', axis=None, out=None;"
3658,6,9aed31a, Jonathan Helmus <jjhelmus@gmail.com>," Fri, 13 Sep 2013 17:00:27 -0500",ct: [PATCH 4/6] TST: additional test for percentile,1,3,0,numpy/lib/tests/test_function_base.py,[u'3'],3,0," -1530,6 +1530,9 ;",def test_percentile_no_overwrite(self);
3658,6,9dd212c, Jonathan Helmus <jjhelmus@gmail.com>," Mon, 16 Sep 2013 10:32:25 -0600",ct: [PATCH 5/6] MAINT: changed 'closest' interpolation to 'nearest',2,7,7,numpy/lib/function_base.py,[u'8'],4,4," -2780,14 +2780,14 ; -2890,13 +2890,13 ;","def percentile(a, q, interpolation='linear', axis=None, out=None;def percentile(a, q, interpolation='linear', axis=None, out=None;"
3658,6,9dd212c, Jonathan Helmus <jjhelmus@gmail.com>," Mon, 16 Sep 2013 10:32:25 -0600",ct: [PATCH 5/6] MAINT: changed 'closest' interpolation to 'nearest',2,7,7,numpy/lib/tests/test_function_base.py,[u'6'],3,3," -1477,11 +1477,11 ;",def test_midpoint(self);
3658,6,9316110, Jonathan Helmus <jjhelmus@gmail.com>," Mon, 16 Sep 2013 10:44:26 -0600",ct: [PATCH 6/6] TST: note on overwrite_input parameter in percentile* added note that `overwrite_input` has not effect when `a` is not  an array in the percentile function.* added unit test to verify that no error is raised when `a` is not  an array and `overwrite_input` is True.,2,13,2,numpy/lib/function_base.py,[u'5'],3,2," -2803,8 +2803,9 ;","def percentile(a, q, interpolation='linear', axis=None, out=None;"
3658,6,9316110, Jonathan Helmus <jjhelmus@gmail.com>," Mon, 16 Sep 2013 10:44:26 -0600",ct: [PATCH 6/6] TST: note on overwrite_input parameter in percentile* added note that `overwrite_input` has not effect when `a` is not  an array in the percentile function.* added unit test to verify that no error is raised when `a` is not  an array and `overwrite_input` is True.,2,13,2,numpy/lib/tests/test_function_base.py,[u'10'],10,0," -1530,9 +1530,19 ;",def test_percentile_no_overwrite(self);
3657,1,e2675e3, Charles Harris <charlesr.harris@gmail.com>," Wed, 28 Aug 2013 13:04:59 -0600","ct: [PATCH] BUG: Set __hash__ = None for non-hashable classes.Because neither poly1d nor the Polynomial package polynomial classes areimmutable, hence not reliably hashable, they should signal that bysetting __hash__ = None. This also fixes the warningOverriding __eq__ blocks inheritance of __hash__ in 3.xthat is given when the command `python2.7 -3 -c""import numpy""` is run.",2,4,0,numpy/lib/polynomial.py,[u'2'],2,0," -1030,6 +1030,8 ;",class poly1d(object);
3657,1,e2675e3, Charles Harris <charlesr.harris@gmail.com>," Wed, 28 Aug 2013 13:04:59 -0600","ct: [PATCH] BUG: Set __hash__ = None for non-hashable classes.Because neither poly1d nor the Polynomial package polynomial classes areimmutable, hence not reliably hashable, they should signal that bysetting __hash__ = None. This also fixes the warningOverriding __eq__ blocks inheritance of __hash__ in 3.xthat is given when the command `python2.7 -3 -c""import numpy""` is run.",2,4,0,numpy/polynomial/polytemplate.py,[u'2'],2,0," -79,6 +79,8 ;",class $name(pu.PolyBase) ;
3655,4,0b062a8, Lars Buitinck <L.J.Buitinck@uva.nl>," Tue, 27 Aug 2013 15:31:22 +0200","ct: [PATCH 1/4] FIX: unchecked mallocs and Python operationsRewrote _tmp_string_t handling in buffer.c to use the fact thatrealloc(NULL, n) is equivalent to malloc(n). There are still someunchecked cases in this file.Also changed some arguments to const and removed casts on mallocreturn values; malloc returns void*, which is converted to anyother pointer automatically. Casting the return value of mallocis more likely to hide bugs than to fix anything.",3,70,25,numpy/core/src/multiarray/arrayobject.c,[u'9'],3,1," -221,8 +221,13 ;","PyArray_CopyObject(PyArrayObject *dest, PyObject *src_object;"
3655,4,0b062a8, Lars Buitinck <L.J.Buitinck@uva.nl>," Tue, 27 Aug 2013 15:31:22 +0200","ct: [PATCH 1/4] FIX: unchecked mallocs and Python operationsRewrote _tmp_string_t handling in buffer.c to use the fact thatrealloc(NULL, n) is equivalent to malloc(n). There are still someunchecked cases in this file.Also changed some arguments to const and removed casts on mallocreturn values; malloc returns void*, which is converted to anyother pointer automatically. Casting the return value of mallocis more likely to hide bugs than to fix anything.",3,70,25,numpy/core/src/multiarray/buffer.c,[u'74'],23,10," -102,27 +102,26 ; -130,11 +129,12 ; -446,12 +446,14 ; -464,8 +466,10 ; -474,6 +478,10 ; -515,7 +523,7 ; -533,6 +541,9 ; -549,12 +560,20 ; -562,6 +581,14 ; -754,7 +781,10 ;","array_getcharbuf(PyArrayObject *self, Py_ssize_t segment, constchar **ptrptr;_append_char(_tmp_string_t *s, char c;_buffer_info_new(PyArrayObject *arr;_buffer_info_new(PyArrayObject *arr;_buffer_info_new(PyArrayObject *arr;_buffer_info_free(_buffer_info_t *info;_buffer_get_info(PyObject *arr;_buffer_get_info(PyObject *arr;_buffer_get_info(PyObject *arr;_descriptor_from_pep3118_format(char *s;"
3655,4,0b062a8, Lars Buitinck <L.J.Buitinck@uva.nl>," Tue, 27 Aug 2013 15:31:22 +0200","ct: [PATCH 1/4] FIX: unchecked mallocs and Python operationsRewrote _tmp_string_t handling in buffer.c to use the fact thatrealloc(NULL, n) is equivalent to malloc(n). There are still someunchecked cases in this file.Also changed some arguments to const and removed casts on mallocreturn values; malloc returns void*, which is converted to anyother pointer automatically. Casting the return value of mallocis more likely to hide bugs than to fix anything.",3,70,25,numpy/core/src/multiarray/ctors.c,[u'12'],5,1," -60,12 +60,15 ; -3146,6 +3149,11 ; -3183,6 +3191,8 ;","fromfile_next_element(FILE **fp, void *dptr, PyArray_Descr *dtype;array_from_text(PyArray_Descr *dtype, npy_intp num, char *sep, size_t *nread;array_from_text(PyArray_Descr *dtype, npy_intp num, char *sep, size_t *nread;"
3655,4,b76cb5b, Lars Buitinck <L.J.Buitinck@uva.nl>," Tue, 27 Aug 2013 17:02:24 +0200",ct: [PATCH 2/4] MAINT: remove unused goto label and useless casts,2,3,4,numpy/core/src/multiarray/array_assign_array.c,[u'1'],0,1," -381,7 +381,6 ;","PyArray_AssignArray(PyArrayObject *dst, PyArrayObject *src;"
3655,4,b76cb5b, Lars Buitinck <L.J.Buitinck@uva.nl>," Tue, 27 Aug 2013 17:02:24 +0200",ct: [PATCH 2/4] MAINT: remove unused goto label and useless casts,2,3,4,numpy/core/src/multiarray/multiarraymodule.c,[u'6'],3,3," -3496,7 +3496,7 ; -3516,7 +3516,7 ; -3553,7 +3553,7 ;","PyDataMem_NEW(size_t size;PyDataMem_NEW_ZEROED(size_t size, size_t elsize;PyDataMem_RENEW(void *ptr, size_t size;"
3655,4,ee1ec3f, Lars Buitinck <L.J.Buitinck@uva.nl>," Tue, 27 Aug 2013 17:03:59 +0200",ct: [PATCH 3/4] FIX: some more casts in ufunc_objectIntroduced a helper function to get rid of repetitive code.,1,17,22,numpy/core/src/umath/ufunc_object.c,[u'39'],16,21," -4849,6 +4849,17 ; -4872,7 +4883,6 ; -4912,9 +4922,9 ; -4987,31 +4997,16 ;","ufunc_reduceat(PyUFuncObject *ufunc, PyObject *args, PyObject *kwds;ufunc_at(PyUFuncObject *ufunc, PyObject *args;ufunc_at(PyUFuncObject *ufunc, PyObject *args;ufunc_at(PyUFuncObject *ufunc, PyObject *args;"
3655,4,0167ac1, Lars Buitinck <L.J.Buitinck@uva.nl>," Fri, 30 Aug 2013 11:56:25 +0200",ct: [PATCH 4/4] FIX don't explicitly cast void* when final type is known,3,11,12,numpy/core/src/multiarray/arrayobject.c,[u'5'],2,3," -557,7 +557,7 ; -1658,9 +1658,8 ;","array_repr_builtin(PyArrayObject *self, int repr;array_iter(PyArrayObject *arr;"
3655,4,0167ac1, Lars Buitinck <L.J.Buitinck@uva.nl>," Fri, 30 Aug 2013 11:56:25 +0200",ct: [PATCH 4/4] FIX don't explicitly cast void* when final type is known,3,11,12,numpy/core/src/npysort/heapsort.c.src,[u'2'],1,1," -292,7 +292,7 ;","aheapsort_@suff@(@type@ *v, npy_intp *tosort, npy_intp n, PyArrayObject *arr;"
3655,4,0167ac1, Lars Buitinck <L.J.Buitinck@uva.nl>," Fri, 30 Aug 2013 11:56:25 +0200",ct: [PATCH 4/4] FIX don't explicitly cast void* when final type is known,3,11,12,numpy/core/src/npysort/mergesort.c.src,[u'16'],8,8," -110,7 +110,7 ; -173,7 +173,7 ; -255,12 +255,12 ; -329,7 +329,7 ; -406,14 +406,14 ;","mergesort_@suff@(@type@ *start, npy_intp num, void *NOT_USED;amergesort_@suff@(@type@ *v, npy_intp *tosort, npy_intp num, void *NOT_USED;mergesort_@suff@(@type@ *start, npy_intp num, PyArrayObject *arr;amergesort_@suff@(@type@ *v, npy_intp *tosort, npy_intp num, PyArrayObject *arr;npy_mergesort(void *base, size_t num, size_t size, npy_comparator cmp;"
3654,1,20d7d51, danieljfarrell <danieljfarrel@me.com>," Mon, 12 Aug 2013 14:33:11 +0900","ct: [PATCH] ENH: Improve accuracy of numpy.gradient at edges* numpy.gradient has been enhanced to use a second order accurate  one-sided finite difference stencil at boundary elements of the  array. Second order accurate central difference are still used for  the interior elements. The result is a fully second order accurate  approximation of the gradient over the full domain.* The one-sided stencil uses 3 elements each with a different weight. A  forward difference is used for the first element,     dy/dx ~ -(3.0*y[0] - 4.0*y[1] + y[2]) / (2.0*dx)  and backwards difference is used for the last element,     dy/dx ~ (3.0*y[-1] - 4.0*y[-2] + y[-3]) / (2.0*dx)* Because the datetime64 datatype cannot be multiplied a view is taken  of datetime64 arrays and cast to int64. The gradient algorithm is  then applied to the view rather than the input array.* Previously no dimension checks were performed on the input array. Now  if the array size along the differentiation axis is less than 2, a  ValueError is raised which explains that more elements are needed. If  the size is exactly two the function falls back to using a 2 point  stencil (the old behaviour). If the size is 3 and above then the  higher accuracy methods are used.* A new test has been added which validates the higher accuracy. Old  tests have been updated to pass. Note, this should be expected  because the boundary elements now return different (more accurate)  values.",2,181,89,numpy/lib/function_base.py,[u'105'],16,6," -835,9 +835,10 ; -847,7 +848,6 ; -867,7 +867,12 ; -882,7 +887,8 ; -890,6 +896,7 ; -902,40 +909,82 ;","def gradient(f, *varargs);def gradient(f, *varargs);def gradient(f, *varargs);def gradient(f, *varargs);def gradient(f, *varargs);def gradient(f, *varargs);"
3654,1,20d7d51, danieljfarrell <danieljfarrel@me.com>," Mon, 12 Aug 2013 14:33:11 +0900","ct: [PATCH] ENH: Improve accuracy of numpy.gradient at edges* numpy.gradient has been enhanced to use a second order accurate  one-sided finite difference stencil at boundary elements of the  array. Second order accurate central difference are still used for  the interior elements. The result is a fully second order accurate  approximation of the gradient over the full domain.* The one-sided stencil uses 3 elements each with a different weight. A  forward difference is used for the first element,     dy/dx ~ -(3.0*y[0] - 4.0*y[1] + y[2]) / (2.0*dx)  and backwards difference is used for the last element,     dy/dx ~ (3.0*y[-1] - 4.0*y[-2] + y[-3]) / (2.0*dx)* Because the datetime64 datatype cannot be multiplied a view is taken  of datetime64 arrays and cast to int64. The gradient algorithm is  then applied to the view rather than the input array.* Previously no dimension checks were performed on the input array. Now  if the array size along the differentiation axis is less than 2, a  ValueError is raised which explains that more elements are needed. If  the size is exactly two the function falls back to using a 2 point  stencil (the old behaviour). If the size is 3 and above then the  higher accuracy methods are used.* A new test has been added which validates the higher accuracy. Old  tests have been updated to pass. Note, this should be expected  because the boundary elements now return different (more accurate)  values.",2,181,89,numpy/lib/tests/test_function_base.py,[u'165'],21,13," -14,6 +14,7 ; -30,6 +31,7 ; -47,6 +49,7 ; -58,7 +61,7 ; -74,6 +77,7 ; -99,7 +103,7 ; -150,6 +154,7 ; -171,6 +176,7 ; -188,7 +194,7 ; -213,18 +219,18 ; -254,6 +260,7 ; -265,6 +272,7 ; -276,6 +284,7 ; -287,6 +296,7 ; -308,6 +318,7 ; -328,6 +339,7 ; -354,6 +366,7 ; -365,10 +378,10 ; -376,6 +389,7 ; -390,8 +404,8 ; -440,6 +454,7 ; -461,29 +476,35 ; -499,8 +520,10 ; -518,6 +541,7 ; -539,6 +563,7 ; -568,7 +593,7 ; -620,7 +645,7 ; -664,11 +689,11 ; -684,7 +709,7 ; -696,14 +721,15 ; -744,48 +770,51 ; -803,18 +832,18 ; -826,8 +855,8 ; -842,7 +871,7 ; -853,10 +882,11 ; -869,6 +899,7 ; -879,9 +910,9 ; -924,7 +955,7 ; -1014,6 +1045,7 ; -1122,6 +1154,7 ; -1133,6 +1166,7 ; -1183,6 +1217,7 ; -1193,6 +1228,7 ; -1218,6 +1254,7 ; -1236,6 +1273,7 ; -1248,6 +1286,7 ; -1289,6 +1328,7 ; -1333,6 +1373,7 ; -1381,6 +1422,7 ; -1452,6 +1494,7 ;",";def test_nd(self);def test_nd(self);def test_basic(self);def test_order(self);def test_weights(self);def test_returned(self);def test_basic(self);def test_basic(self);def test_multidim(self);def test_index_array_copied(self);def test_basic(self);def test_basic(self);def test_basic(self);def test_basic(self);def test_basic(self);def test_basic(self);def test_basic(self);def test_nd(self);def _check_inverse_of_slicing(self, indices);class SubClass(np.ndarray);def test_masked(self);def test_basic(self);def test_trailing_skip(self);def test_both(self);def test_large(self);def mypolyval(x, p);class Foo;def test_execution_order_ticket_1487(self);def test_cache(self);def test_right_open_random(self);def test_ndim(self);def test_ndim(self);def test_masked(self);def test_matrix(self);def test_array_like(self);def test_simple(self);def test_density(self);def test_empty(self);def test_inf_edges(self);def test_simple(self);def test_empty(self);def test_empty(self);def test_simple(self);def test_int_beta(self);def test_simple(self);def test_sparse(self);def test_0d(self);def test_empty_with_minlength(self);def test_percentile_out();"
3653,3,404a21a, Lars Buitinck <L.J.Buitinck@uva.nl>," Tue, 27 Aug 2013 12:03:23 +0200","ct: [PATCH 1/3] FIX: wrong function types in ufunc_object.cassign_reduce_identity_{zero,one} were treated asPyArray_AssignReduceIdentityFunc, but that type hasan extra void* argument. Added the argument.",1,6,6,numpy/core/src/umath/ufunc_object.c,[u'12'],6,6," -72,10 +72,10 ; -2180,10 +2180,10 ; -2641,13 +2641,13 ;","static in;PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;reduce_type_resolver(PyUFuncObject *ufunc, PyArrayObject *arr;"
3653,3,994bf25, Lars Buitinck <L.J.Buitinck@uva.nl>," Tue, 27 Aug 2013 12:05:22 +0200",ct: [PATCH 2/3] FIX: remove unused variables and add castsMakes the build complete with fewer warnings.,4,7,6,numpy/core/src/multiarray/multiarray_tests.c.src,[u'3'],2,1," -478,7 +478,8 ;","map_increment(PyArrayMapIterObject *mit, PyObject *op, inplace_map_binop add_in;"
3653,3,994bf25, Lars Buitinck <L.J.Buitinck@uva.nl>," Tue, 27 Aug 2013 12:05:22 +0200",ct: [PATCH 2/3] FIX: remove unused variables and add castsMakes the build complete with fewer warnings.,4,7,6,numpy/core/src/multiarray/nditer_api.c,[u'2'],1,1," -1837,7 +1837,7 ;",npyiter_copy_from_buffers(NpyIter *iter;
3653,3,994bf25, Lars Buitinck <L.J.Buitinck@uva.nl>," Tue, 27 Aug 2013 12:05:22 +0200",ct: [PATCH 2/3] FIX: remove unused variables and add castsMakes the build complete with fewer warnings.,4,7,6,numpy/core/src/umath/ufunc_object.c,[u'6'],3,3," -755,7 +755,8 ; -4529,7 +4530,7 ; -4538,7 +4539,6 ;",static int get_ufunc_arguments(PyUFuncObject *ufunc;PyUFunc_RegisterLoopForDescr(PyUFuncObject *ufunc;PyUFunc_RegisterLoopForDescr(PyUFuncObject *ufunc;
3653,3,994bf25, Lars Buitinck <L.J.Buitinck@uva.nl>," Tue, 27 Aug 2013 12:05:22 +0200",ct: [PATCH 2/3] FIX: remove unused variables and add castsMakes the build complete with fewer warnings.,4,7,6,numpy/numarray/_capi.c,[u'2'],1,1," -1099,7 +1099,7 ;","NA_OutputArray(PyObject *a, NumarrayType t, int requires;"
3653,3,49d7ca3, Lars Buitinck <L.J.Buitinck@uva.nl>," Tue, 27 Aug 2013 14:14:42 +0200",ct: [PATCH 3/3] MAINT: ignore some more generated C files.,1,7,0,.gitignore,[u'8'],7,1," -111,10 +111,16 ;",numpy/core/src/npymath/npy_math_complex.;
3652,1,c445241, Christoph Gohlke <cgohlke@uci.edu>," Mon, 26 Aug 2013 21:41:17 -0700",ct: [PATCH] BLD: restore compatibility with ANSI C,1,0,0,numpy/core/blasdot/_dotblas.c,[u'1'],0,1," -770,7 +770,6 ;","dotblas_matrixproduct(PyObject *NPY_UNUSED(dummy), PyObject *args, PyObject* kw;"
3651,1,5c7a9f2, Matthieu Dartiailh <marul@laposte.net>," Sun, 25 Aug 2013 16:30:09 +0200","ct: [PATCH] Small correction in the docstring of polyfit. As mentionned in Issue 3640, the notes were wrong in the order of the index for p.",1,3,3,numpy/lib/polynomial.py,[u'6'],3,3," -470,10 +470,10 ;","def polyfit(x, y, deg, rcond=None, full=False, w=None, cov=False);"
3647,6,768a739, endolith <endolith@gmail.com>," Wed, 21 Aug 2013 16:20:43 -0400",ct: [PATCH 1/6] DOC: hfft/ihfft description conflicts with itselfSays Hermite spectrum when it means signal,1,6,6,numpy/fft/fftpack.py,[u'12'],6,6," -412,7 +412,7 ; -437,8 +437,8 ; -463,7 +463,7 ; -487,8 +487,8 ;","def irfft(a, n=None, axis=-1);def hfft(a, n=None, axis=-1);def hfft(a, n=None, axis=-1);def ihfft(a, n=None, axis=-1);"
3647,6,8cd496d, endolith <endolith@gmail.com>," Thu, 22 Aug 2013 22:27:24 -0400","ct: [PATCH 2/6] DOC: Add examples, copy some text from rfft functions to clarify inputs and outputs",1,49,12,numpy/fft/fftpack.py,[u'61'],41,11," -352,7 +352,8 ; -388,7 +389,6 ; -419,15 +419,28 ; -437,13 +450,22 ; -463,7 +485,7 ; -471,14 +493,21 ; -492,6 +521,14 ;","def irfft(a, n=None, axis=-1);def irfft(a, n=None, axis=-1);def hfft(a, n=None, axis=-1);def hfft(a, n=None, axis=-1);def hfft(a, n=None, axis=-1);def ihfft(a, n=None, axis=-1);def ihfft(a, n=None, axis=-1);"
3647,6,1ab96d2, endolith <endolith@gmail.com>," Fri, 23 Aug 2013 11:41:44 -0400",ct: [PATCH 3/6] DOC: add note clarifying why ifftshift is needed,1,2,0,numpy/fft/helper.py,[u'3'],2,1," -75,7 +75,8 ;","def fftshift(x, axes=None);"
3647,6,e5a80eb, endolith <endolith@gmail.com>," Thu, 29 Aug 2013 20:03:03 -0400","ct: [PATCH 4/6] DOC: change ""Hermite"" to ""Hermitian"", ""though"" to ""although""",2,6,6,numpy/fft/fftpack.py,[u'10'],5,5," -292,7 +292,7 ; -338,7 +338,7 ; -381,7 +381,7 ; -450,7 +450,7 ; -516,7 +516,7 ;","def rfft(a, n=None, axis=-1);def irfft(a, n=None, axis=-1);def irfft(a, n=None, axis=-1);def hfft(a, n=None, axis=-1);def ihfft(a, n=None, axis=-1);"
3647,6,e5a80eb, endolith <endolith@gmail.com>," Thu, 29 Aug 2013 20:03:03 -0400","ct: [PATCH 4/6] DOC: change ""Hermite"" to ""Hermitian"", ""though"" to ""although""",2,6,6,numpy/fft/helper.py,[u'2'],1,1," -75,7 +75,7 ;","def fftshift(x, axes=None);"
3647,6,df664ea, endolith <endolith@gmail.com>," Thu, 29 Aug 2013 21:24:46 -0400",ct: [PATCH 5/6] DOC: Remove parentheses around axis,1,18,18,numpy/fft/fftpack.py,[u'36'],18,18," -96,7 +96,7 ; -190,7 +190,7 ; -263,7 +263,7 ; -350,7 +350,7 ; -423,7 +423,7 ; -496,7 +496,7 ; -584,8 +584,8 ; -685,8 +685,8 ; -770,8 +770,8 ; -858,8 +858,8 ; -936,8 +936,8 ; -1060,8 +1060,8 ;","def fft(a, n=None, axis=-1);def ifft(a, n=None, axis=-1);def rfft(a, n=None, axis=-1);def irfft(a, n=None, axis=-1);def hfft(a, n=None, axis=-1);def ihfft(a, n=None, axis=-1);def fftn(a, s=None, axes=None);def ifftn(a, s=None, axes=None);def fft2(a, s=None, axes=(-2, -1));def ifft2(a, s=None, axes=(-2, -1));def rfftn(a, s=None, axes=None);def irfftn(a, s=None, axes=None);"
3647,6,1ae2b9e, endolith <endolith@gmail.com>," Fri, 30 Aug 2013 09:44:14 -0400","ct: [PATCH 6/6] DOC: Unlink non-variable 'm', use monospace instead",1,3,3,numpy/fft/fftpack.py,[u'6'],3,3," -361,7 +361,7 ; -434,7 +434,7 ; -1077,7 +1077,7 ;","def irfft(a, n=None, axis=-1);def hfft(a, n=None, axis=-1);def irfftn(a, s=None, axes=None);"
3645,1,fd6cfd6, Charles Harris <charlesr.harris@gmail.com>," Sun, 11 Aug 2013 20:52:39 -0600",ct: [PATCH] ENH: Make the ndarray diagonal method return a view.Also remove the test_diagonal_deprecation test and add test thatchecks that a view is returned and that it is not writeable.Closes #596.,4,31,134,numpy/add_newdocs.py,[u'4'],1,1," -3316,7 +3316,9 ;","def luf(lamdaexpr, *args, **kwargs);"
3645,1,fd6cfd6, Charles Harris <charlesr.harris@gmail.com>," Sun, 11 Aug 2013 20:52:39 -0600",ct: [PATCH] ENH: Make the ndarray diagonal method return a view.Also remove the test_diagonal_deprecation test and add test thatchecks that a view is returned and that it is not writeable.Closes #596.,4,31,134,numpy/core/fromnumeric.py,[u'15'],2,2," -1125,16 +1125,15 ;","def diagonal(a, offset=0, axis1=0, axis2=1);"
3645,1,fd6cfd6, Charles Harris <charlesr.harris@gmail.com>," Sun, 11 Aug 2013 20:52:39 -0600",ct: [PATCH] ENH: Make the ndarray diagonal method return a view.Also remove the test_diagonal_deprecation test and add test thatchecks that a view is returned and that it is not writeable.Closes #596.,4,31,134,numpy/core/src/multiarray/item_selection.c,[u'15'],2,2," -2341,14 +2341,13 ;","PyArray_Diagonal(PyArrayObject *self, int offset, int axis1, int axis2;"
3645,1,fd6cfd6, Charles Harris <charlesr.harris@gmail.com>," Sun, 11 Aug 2013 20:52:39 -0600",ct: [PATCH] ENH: Make the ndarray diagonal method return a view.Also remove the test_diagonal_deprecation test and add test thatchecks that a view is returned and that it is not writeable.Closes #596.,4,31,134,numpy/core/tests/test_multiarray.py,[u'131'],3,26," -1343,123 +1343,20 ;",def test_diagonal(self);
3644,1,c5ee7f7, Julian Taylor <jtaylor.debian@googlemail.com>," Tue, 20 Aug 2013 19:56:48 +0200",ct: [PATCH] ENH: add nonzero of bools fastpathcount_nonzero already has a fastpath but nonzero does not.Improves performance by about 25% via avoiding a function call.,1,32,10,numpy/core/src/multiarray/item_selection.c,[u'42'],23,7," -2586,11 +2586,22 ; -2630,12 +2641,23 ;",PyArray_Nonzero(PyArrayObject *self;PyArray_Nonzero(PyArrayObject *self;
3642,5,42af4e0, Ake Sandgren <ake@hpc2n.umu.se>," Tue, 20 Aug 2013 12:11:44 -0400",ct: [PATCH 1/5] Add support for using openblas for the _dotblas function.,1,23,0,numpy/distutils/system_info.py,[u'24'],23,1," -119,7 +119,6 ; -298,6 +297,7 ; -1492,6 +1492,11 ; -1537,6 +1542,23 ;",";def get_info(name, notfound_action=0);def calc_info(self);def calc_info(self);"
3642,5,6c81671, Skipper Seabold <jsseabold@gmail.com>," Tue, 20 Aug 2013 12:12:49 -0400",ct: [PATCH 2/5] BLD: Update with information about openblas.,1,15,0,site.cfg.example,[u'15'],15,0," -91,6 +91,21 ;",;
3642,5,43fcc0e, Olivier Grisel <olivier.grisel@ensta.org>," Wed, 4 Sep 2013 16:10:04 +0200",ct: [PATCH 3/5] Make vecLib / Accelerate not shadow other optimized builds under OSX,1,33,23,numpy/distutils/system_info.py,[u'56'],25,17," -12,6 +12,7 ; -1366,7 +1367,22 ; -1394,14 +1410,6 ; -1455,7 +1463,22 ; -1487,19 +1510,6 ;",;class lapack_opt_info(system_info);def calc_info(self);class blas_opt_info(system_info);def calc_info(self);
3642,5,ffd4332, Olivier Grisel <olivier.grisel@ensta.org>," Wed, 4 Sep 2013 16:16:33 +0200","ct: [PATCH 4/5] site.cfg.example should not reference blas_opt and lapack_optblas_opt and lapack_opt sections are not actually read by thenumpy.distutils.system_info machinery. They are just meta entry points for the`get_info` public function that in turns introspec the atlas, openblas and mklsections.",1,34,52,site.cfg.example,[u'86'],22,34," -63,48 +63,46 ; -125,7 +123,6 ; -143,18 +140,3 ;",;;;
3642,5,fb0c7bd, Olivier Grisel <olivier.grisel@ensta.org>," Wed, 4 Sep 2013 17:43:21 +0200",ct: [PATCH 5/5] Use the default install location of OpenBLAS in the example,1,3,3,site.cfg.example,[u'6'],3,3," -81,12 +81,12 ;",;
3639,5,d67e9af, Scott Sinclair <scott.sinclair.za@gmail.com>," Mon, 19 Aug 2013 13:38:24 +0200","ct: [PATCH 1/5] BLD, REF: Rename files in preparation for build time module generation",12,10514,10514,numpy/polynomial/_chebyshev.py,[u'2015'],39,0," -0,0 +1,2015 ;",;
3639,5,d67e9af, Scott Sinclair <scott.sinclair.za@gmail.com>," Mon, 19 Aug 2013 13:38:24 +0200","ct: [PATCH 1/5] BLD, REF: Rename files in preparation for build time module generation",12,10514,10514,numpy/polynomial/_hermite.py,[u'1750'],34,0," -0,0 +1,1750 ;",;
3639,5,d67e9af, Scott Sinclair <scott.sinclair.za@gmail.com>," Mon, 19 Aug 2013 13:38:24 +0200","ct: [PATCH 1/5] BLD, REF: Rename files in preparation for build time module generation",12,10514,10514,numpy/polynomial/_hermite_e.py,[u'1746'],33,0," -0,0 +1,1746 ;",;
3639,5,d67e9af, Scott Sinclair <scott.sinclair.za@gmail.com>," Mon, 19 Aug 2013 13:38:24 +0200","ct: [PATCH 1/5] BLD, REF: Rename files in preparation for build time module generation",12,10514,10514,numpy/polynomial/_laguerre.py,[u'1742'],33,0," -0,0 +1,1742 ;",;
3639,5,d67e9af, Scott Sinclair <scott.sinclair.za@gmail.com>," Mon, 19 Aug 2013 13:38:24 +0200","ct: [PATCH 1/5] BLD, REF: Rename files in preparation for build time module generation",12,10514,10514,numpy/polynomial/_legendre.py,[u'1768'],34,0," -0,0 +1,1768 ;",;
3639,5,d67e9af, Scott Sinclair <scott.sinclair.za@gmail.com>," Mon, 19 Aug 2013 13:38:24 +0200","ct: [PATCH 1/5] BLD, REF: Rename files in preparation for build time module generation",12,10514,10514,numpy/polynomial/_polynomial.py,[u'1493'],29,0," -0,0 +1,1493 ;",;
3639,5,d67e9af, Scott Sinclair <scott.sinclair.za@gmail.com>," Mon, 19 Aug 2013 13:38:24 +0200","ct: [PATCH 1/5] BLD, REF: Rename files in preparation for build time module generation",12,10514,10514,numpy/polynomial/chebyshev.py,[u'2015'],0,39," -1,2015 +0,0 ;",;
3639,5,d67e9af, Scott Sinclair <scott.sinclair.za@gmail.com>," Mon, 19 Aug 2013 13:38:24 +0200","ct: [PATCH 1/5] BLD, REF: Rename files in preparation for build time module generation",12,10514,10514,numpy/polynomial/hermite.py,[u'1750'],0,34," -1,1750 +0,0 ;",;
3639,5,d67e9af, Scott Sinclair <scott.sinclair.za@gmail.com>," Mon, 19 Aug 2013 13:38:24 +0200","ct: [PATCH 1/5] BLD, REF: Rename files in preparation for build time module generation",12,10514,10514,numpy/polynomial/hermite_e.py,[u'1746'],0,33," -1,1746 +0,0 ;",;
3639,5,d67e9af, Scott Sinclair <scott.sinclair.za@gmail.com>," Mon, 19 Aug 2013 13:38:24 +0200","ct: [PATCH 1/5] BLD, REF: Rename files in preparation for build time module generation",12,10514,10514,numpy/polynomial/laguerre.py,[u'1742'],0,33," -1,1742 +0,0 ;",;
3639,5,d67e9af, Scott Sinclair <scott.sinclair.za@gmail.com>," Mon, 19 Aug 2013 13:38:24 +0200","ct: [PATCH 1/5] BLD, REF: Rename files in preparation for build time module generation",12,10514,10514,numpy/polynomial/legendre.py,[u'1768'],0,34," -1,1768 +0,0 ;",;
3639,5,d67e9af, Scott Sinclair <scott.sinclair.za@gmail.com>," Mon, 19 Aug 2013 13:38:24 +0200","ct: [PATCH 1/5] BLD, REF: Rename files in preparation for build time module generation",12,10514,10514,numpy/polynomial/polynomial.py,[u'1493'],0,29," -1,1493 +0,0 ;",;
3639,5,0348ed5, Scott Sinclair <scott.sinclair.za@gmail.com>," Mon, 19 Aug 2013 13:43:02 +0200","ct: [PATCH 2/5] BLD, REF: Move generation of polynomial classes to build time* Improve Numpy package import time by moving auto-generation of  polynomial classes to build time. See Github issue  https://github.com/numpy/numpy/issues/634 and original pull request  discussion at https://github.com/numpy/numpy/pull/334",8,58,28,numpy/polynomial/_chebyshev.py,[u'3'],0,3," -91,7 +91,6 ; -2011,5 +2010,3 ;",;def chebpts2(npts);
3639,5,0348ed5, Scott Sinclair <scott.sinclair.za@gmail.com>," Mon, 19 Aug 2013 13:43:02 +0200","ct: [PATCH 2/5] BLD, REF: Move generation of polynomial classes to build time* Improve Numpy package import time by moving auto-generation of  polynomial classes to build time. See Github issue  https://github.com/numpy/numpy/issues/634 and original pull request  discussion at https://github.com/numpy/numpy/pull/334",8,58,28,numpy/polynomial/_hermite.py,[u'3'],0,3," -63,7 +63,6 ; -1746,5 +1745,3 ;",;def hermweight(x);
3639,5,0348ed5, Scott Sinclair <scott.sinclair.za@gmail.com>," Mon, 19 Aug 2013 13:43:02 +0200","ct: [PATCH 2/5] BLD, REF: Move generation of polynomial classes to build time* Improve Numpy package import time by moving auto-generation of  polynomial classes to build time. See Github issue  https://github.com/numpy/numpy/issues/634 and original pull request  discussion at https://github.com/numpy/numpy/pull/334",8,58,28,numpy/polynomial/_hermite_e.py,[u'3'],0,3," -63,7 +63,6 ; -1742,5 +1741,3 ;",;def hermeweight(x);
3639,5,0348ed5, Scott Sinclair <scott.sinclair.za@gmail.com>," Mon, 19 Aug 2013 13:43:02 +0200","ct: [PATCH 2/5] BLD, REF: Move generation of polynomial classes to build time* Improve Numpy package import time by moving auto-generation of  polynomial classes to build time. See Github issue  https://github.com/numpy/numpy/issues/634 and original pull request  discussion at https://github.com/numpy/numpy/pull/334",8,58,28,numpy/polynomial/_laguerre.py,[u'3'],0,3," -63,7 +63,6 ; -1738,5 +1737,3 ;",;def lagweight(x);
3639,5,0348ed5, Scott Sinclair <scott.sinclair.za@gmail.com>," Mon, 19 Aug 2013 13:43:02 +0200","ct: [PATCH 2/5] BLD, REF: Move generation of polynomial classes to build time* Improve Numpy package import time by moving auto-generation of  polynomial classes to build time. See Github issue  https://github.com/numpy/numpy/issues/634 and original pull request  discussion at https://github.com/numpy/numpy/pull/334",8,58,28,numpy/polynomial/_legendre.py,[u'3'],0,3," -87,7 +87,6 ; -1764,5 +1763,3 ;",;def legweight(x);
3639,5,0348ed5, Scott Sinclair <scott.sinclair.za@gmail.com>," Mon, 19 Aug 2013 13:43:02 +0200","ct: [PATCH 2/5] BLD, REF: Move generation of polynomial classes to build time* Improve Numpy package import time by moving auto-generation of  polynomial classes to build time. See Github issue  https://github.com/numpy/numpy/issues/634 and original pull request  discussion at https://github.com/numpy/numpy/pull/334",8,58,28,numpy/polynomial/_polynomial.py,[u'3'],0,3," -65,7 +65,6 ; -1489,5 +1488,3 ;",;def polyroots(c);
3639,5,0348ed5, Scott Sinclair <scott.sinclair.za@gmail.com>," Mon, 19 Aug 2013 13:43:02 +0200","ct: [PATCH 2/5] BLD, REF: Move generation of polynomial classes to build time* Improve Numpy package import time by moving auto-generation of  polynomial classes to build time. See Github issue  https://github.com/numpy/numpy/issues/634 and original pull request  discussion at https://github.com/numpy/numpy/pull/334",8,58,28,numpy/polynomial/polytemplate.py,[u'22'],10,9," -1,12 +1,15 ; -15,10 +18,9 ;",;;
3639,5,0348ed5, Scott Sinclair <scott.sinclair.za@gmail.com>," Mon, 19 Aug 2013 13:43:02 +0200","ct: [PATCH 2/5] BLD, REF: Move generation of polynomial classes to build time* Improve Numpy package import time by moving auto-generation of  polynomial classes to build time. See Github issue  https://github.com/numpy/numpy/issues/634 and original pull request  discussion at https://github.com/numpy/numpy/pull/334",8,58,28,numpy/polynomial/setup.py,[u'46'],40,0," -1,6 +1,52 ;",;
3639,5,b31268b, Scott Sinclair <scott.sinclair.za@gmail.com>," Mon, 19 Aug 2013 13:56:36 +0200","ct: [PATCH 3/5] BUG: Explicit imports to avoid confusing 2to3 tool for Py3 builds* When a Py3 build is run directly from the repository, the 2to3 tool  doesn't refactor the relative imports (e.g. from polynomial import  Polynomial) in numpy/polynomial/__init__.py (presumably because the  files don't exist at the time 2to3 is run and the tool must  therefore assume they are meant to be external imports).",6,11,11,numpy/polynomial/__init__.py,[u'12'],6,6," -17,12 +17,12 ;",;
3639,5,b31268b, Scott Sinclair <scott.sinclair.za@gmail.com>," Mon, 19 Aug 2013 13:56:36 +0200","ct: [PATCH 3/5] BUG: Explicit imports to avoid confusing 2to3 tool for Py3 builds* When a Py3 build is run directly from the repository, the 2to3 tool  doesn't refactor the relative imports (e.g. from polynomial import  Polynomial) in numpy/polynomial/__init__.py (presumably because the  files don't exist at the time 2to3 is run and the tool must  therefore assume they are meant to be external imports).",6,11,11,numpy/polynomial/_chebyshev.py,[u'2'],1,1," -415,7 +415,7 ;",def cheb2poly(c) ;
3639,5,b31268b, Scott Sinclair <scott.sinclair.za@gmail.com>," Mon, 19 Aug 2013 13:56:36 +0200","ct: [PATCH 3/5] BUG: Explicit imports to avoid confusing 2to3 tool for Py3 builds* When a Py3 build is run directly from the repository, the 2to3 tool  doesn't refactor the relative imports (e.g. from polynomial import  Polynomial) in numpy/polynomial/__init__.py (presumably because the  files don't exist at the time 2to3 is run and the tool must  therefore assume they are meant to be external imports).",6,11,11,numpy/polynomial/_hermite.py,[u'2'],1,1," -159,7 +159,7 ;",def herm2poly(c) ;
3639,5,b31268b, Scott Sinclair <scott.sinclair.za@gmail.com>," Mon, 19 Aug 2013 13:56:36 +0200","ct: [PATCH 3/5] BUG: Explicit imports to avoid confusing 2to3 tool for Py3 builds* When a Py3 build is run directly from the repository, the 2to3 tool  doesn't refactor the relative imports (e.g. from polynomial import  Polynomial) in numpy/polynomial/__init__.py (presumably because the  files don't exist at the time 2to3 is run and the tool must  therefore assume they are meant to be external imports).",6,11,11,numpy/polynomial/_hermite_e.py,[u'2'],1,1," -159,7 +159,7 ;",def herme2poly(c) ;
3639,5,b31268b, Scott Sinclair <scott.sinclair.za@gmail.com>," Mon, 19 Aug 2013 13:56:36 +0200","ct: [PATCH 3/5] BUG: Explicit imports to avoid confusing 2to3 tool for Py3 builds* When a Py3 build is run directly from the repository, the 2to3 tool  doesn't refactor the relative imports (e.g. from polynomial import  Polynomial) in numpy/polynomial/__init__.py (presumably because the  files don't exist at the time 2to3 is run and the tool must  therefore assume they are meant to be external imports).",6,11,11,numpy/polynomial/_laguerre.py,[u'2'],1,1," -158,7 +158,7 ;",def lag2poly(c) ;
3639,5,b31268b, Scott Sinclair <scott.sinclair.za@gmail.com>," Mon, 19 Aug 2013 13:56:36 +0200","ct: [PATCH 3/5] BUG: Explicit imports to avoid confusing 2to3 tool for Py3 builds* When a Py3 build is run directly from the repository, the 2to3 tool  doesn't refactor the relative imports (e.g. from polynomial import  Polynomial) in numpy/polynomial/__init__.py (presumably because the  files don't exist at the time 2to3 is run and the tool must  therefore assume they are meant to be external imports).",6,11,11,numpy/polynomial/_legendre.py,[u'2'],1,1," -190,7 +190,7 ;",def leg2poly(c) ;
3639,5,059e7f7, Scott Sinclair <scott.sinclair.za@gmail.com>," Mon, 19 Aug 2013 13:58:57 +0200",ct: [PATCH 4/5] REF: Forgot to remove unused import,1,0,0,numpy/polynomial/polytemplate.py,[u'1'],0,1," -15,7 +15,6 ;",;
3639,5,9185b5a, Scott Sinclair <scott.sinclair.za@gmail.com>," Fri, 30 Aug 2013 11:54:59 +0200",ct: [PATCH 5/5] DOC: Correct spelling of Legendre,1,2,2,numpy/polynomial/polytemplate.py,[u'4'],2,2," -4,9 +4,9 ;",;
3638,5,3512346, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 19:47:56 -0600","ct: [PATCH 1/5] DEP, MAINT: Remove references to numeric and numarray.This covers those locations that either import or build numarrayor numeric.",6,4,19,numpy/bento.info,[u'2'],0,2," -17,8 +17,6 ;",Library;
3638,5,3512346, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 19:47:56 -0600","ct: [PATCH 1/5] DEP, MAINT: Remove references to numeric and numarray.This covers those locations that either import or build numarrayor numeric.",6,4,19,numpy/core/setup.py,[u'1'],0,1," -762,7 +762,6 ;","def generate_multiarray_templated_sources(ext, build_dir);"
3638,5,3512346, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 19:47:56 -0600","ct: [PATCH 1/5] DEP, MAINT: Remove references to numeric and numarray.This covers those locations that either import or build numarrayor numeric.",6,4,19,numpy/core/tests/test_regression.py,[u'6'],0,6," -1419,12 +1419,6 ;",def test_buffer_hashlib(self);
3638,5,3512346, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 19:47:56 -0600","ct: [PATCH 1/5] DEP, MAINT: Remove references to numeric and numarray.This covers those locations that either import or build numarrayor numeric.",6,4,19,numpy/distutils/misc_util.py,[u'4'],0,4," -1294,10 +1294,6 ;","def add_include_dirs(self,*paths);"
3638,5,3512346, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 19:47:56 -0600","ct: [PATCH 1/5] DEP, MAINT: Remove references to numeric and numarray.This covers those locations that either import or build numarrayor numeric.",6,4,19,numpy/lib/tests/test_regression.py,[u'8'],4,4," -180,10 +180,10 ;","def test_who_with_0dim_array(self, level=rlevel);"
3638,5,3512346, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 19:47:56 -0600","ct: [PATCH 1/5] DEP, MAINT: Remove references to numeric and numarray.This covers those locations that either import or build numarrayor numeric.",6,4,19,numpy/setup.py,[u'2'],0,2," -10,8 +10,6 ;","def configuration(parent_package='',top_path=None);"
3638,5,4974823, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 19:42:33 -0600","ct: [PATCH 2/5] DEP, MAINT: Copy info function from numarray.The numarray info function is called by lib.utils.info. Rename itto _info and copy into lib/utils.py. Some modifications are madeas it only needs to support numpy.",1,55,47,numpy/lib/utils.py,[u'102'],29,24," -8,10 +8,11 ; -42,47 +43,6 ; -418,6 +378,55 ; -479,8 +488,7 ;",";def get_include();def _makenamedict(module='numpy');def info(object=None,maxwidth=76,output=sys.stdout,toplevel='numpy');"
3638,5,5d76b01, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 19:49:55 -0600","ct: [PATCH 3/5] DEP, DOC: Undocument numarray and numeric.Mention that they were removed in 1.9.0.",2,8,8,doc/source/reference/routines.numarray.rst,[u'8'],4,4," -1,5 +1,5 ;",;
3638,5,5d76b01, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 19:49:55 -0600","ct: [PATCH 3/5] DEP, DOC: Undocument numarray and numeric.Mention that they were removed in 1.9.0.",2,8,8,doc/source/reference/routines.oldnumeric.rst,[u'8'],4,4," -1,7 +1,7 ;",;
3638,5,2a1705f, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 19:51:59 -0600","ct: [PATCH 4/5] DEP, DOC: Document removal of oldnumeric and numarray in release notes.",1,0,0,doc/release/1.9.0-notes.rst,[u'1'],1,0," -11,6 +11,7 ;",Highlight;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/numarray/__init__.py,[u'38'],0,1," -1,38 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/numarray/_capi.c,[u'3441'],0,28," -1,3441 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/numarray/alter_code1.py,[u'267'],0,3," -1,267 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/numarray/alter_code2.py,[u'68'],0,1," -1,68 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/numarray/compat.py,[u'5'],0,1," -1,5 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/numarray/convolve.py,[u'16'],0,1," -1,16 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/numarray/fft.py,[u'8'],0,1," -1,8 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/numarray/functions.py,[u'500'],0,4," -1,500 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/numarray/image.py,[u'16'],0,1," -1,16 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/numarray/include/numpy/arraybase.h,[u'71'],0,1," -1,71 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/numarray/include/numpy/cfunc.h,[u'77'],0,1," -1,77 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/numarray/include/numpy/ieeespecial.h,[u'123'],0,1," -1,123 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/numarray/include/numpy/libnumarray.h,[u'630'],0,5," -1,630 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/numarray/include/numpy/numcomplex.h,[u'252'],0,2," -1,252 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/numarray/include/numpy/nummacro.h,[u'447'],0,4," -1,447 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/numarray/linear_algebra.py,[u'16'],0,1," -1,16 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/numarray/ma.py,[u'3'],0,1," -1,3 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/numarray/matrix.py,[u'8'],0,1," -1,8 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/numarray/mlab.py,[u'8'],0,1," -1,8 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/numarray/nd_image.py,[u'16'],0,1," -1,16 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/numarray/numerictypes.py,[u'552'],0,5," -1,552 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/numarray/random_array.py,[u'10'],0,1," -1,10 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/numarray/session.py,[u'347'],0,3," -1,347 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/numarray/setup.py,[u'19'],0,1," -1,19 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/numarray/ufuncs.py,[u'23'],0,1," -1,23 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/numarray/util.py,[u'49'],0,1," -1,49 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/oldnumeric/__init__.py,[u'55'],0,1," -1,55 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/oldnumeric/alter_code1.py,[u'243'],0,2," -1,243 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/oldnumeric/alter_code2.py,[u'148'],0,2," -1,148 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/oldnumeric/array_printer.py,[u'17'],0,1," -1,17 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/oldnumeric/arrayfns.py,[u'99'],0,1," -1,99 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/oldnumeric/compat.py,[u'121'],0,1," -1,121 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/oldnumeric/fft.py,[u'22'],0,1," -1,22 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/oldnumeric/fix_default_axis.py,[u'294'],0,3," -1,294 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/oldnumeric/functions.py,[u'127'],0,1," -1,127 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/oldnumeric/linear_algebra.py,[u'85'],0,1," -1,85 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/oldnumeric/ma.py,[u'2296'],0,19," -1,2296 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/oldnumeric/matrix.py,[u'70'],0,1," -1,70 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/oldnumeric/misc.py,[u'37'],0,1," -1,37 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/oldnumeric/mlab.py,[u'128'],0,2," -1,128 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/oldnumeric/precision.py,[u'174'],0,2," -1,174 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/oldnumeric/random_array.py,[u'269'],0,3," -1,269 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/oldnumeric/rng.py,[u'137'],0,2," -1,137 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/oldnumeric/rng_stats.py,[u'36'],0,1," -1,36 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/oldnumeric/setup.py,[u'11'],0,1," -1,11 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/oldnumeric/tests/test_oldnumeric.py,[u'96'],0,1," -1,96 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/oldnumeric/tests/test_regression.py,[u'11'],0,1," -1,11 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/oldnumeric/typeconv.py,[u'62'],0,1," -1,62 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/oldnumeric/ufuncs.py,[u'21'],0,1," -1,21 +0,0 ;",;
3638,5,3beebbc, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 18:40:28 -0600",ct: [PATCH 5/5] DEP: Remove deprecated modules numarray and oldnumeric.They were deprecated in 1.8 and scheduled for removal in 1.9.Closes #3637.,50,0,11578,numpy/oldnumeric/user_array.py,[u'9'],0,1," -1,9 +0,0 ;",;
3636,1,0858d8a, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 20:44:24 -0600",ct: [PATCH] DEP: Make nansum return 0 for all-NaN or empty axis.Make this happen and remove test parts dependent on numpy version< 1.9. Fixes test failures in numpy after 1.8 branch.,2,12,39,numpy/lib/nanfunctions.py,[u'13'],1,11," -478,18 +478,7 ;","def nansum(a, axis=None, dtype=None, out=None, keepdims=0);"
3636,1,0858d8a, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 20:44:24 -0600",ct: [PATCH] DEP: Make nansum return 0 for all-NaN or empty axis.Make this happen and remove test parts dependent on numpy version< 1.9. Fixes test failures in numpy after 1.8 branch.,2,12,39,numpy/lib/tests/test_nanfunctions.py,[u'38'],11,25," -244,36 +244,20 ;",def test_allnans(self);
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,BENTO_BUILD.txt,[u'2'],1,1," -3,7 +3,7 ;",No-frill version;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,DEV_README.txt,[u'11'],1,1," -1,19 +1,18 ;",;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,README.txt,[u'4'],1,1," -1,10 +1,10 ;",;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/CAPI.rst.txt,[u'6'],1,1," -15,7 +15,7 ; -238,7 +238,7 ; -254,7 +254,7 ;",of the API) that will need to be changed;segfaults may result;PyArray_FromAny function;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/DISTUTILS.rst.txt,[u'44'],1,1," -29,8 +29,8 ; -46,12 +46,12 ; -72,13 +72,13 ; -159,12 +159,12 ; -174,14 +174,14 ; -204,7 +204,7 ; -216,7 +216,7 ; -269,10 +269,10 ; -405,7 +405,7 ; -414,7 +414,7 ; -441,7 +441,7 ; -452,7 +452,7 ;",Requirements for SciPy package;Their contents are described below;Below is an example of a minimal ``setup.py`` file for a pure SciPy package:;in writing setup scripts;in writing setup scripts;in writing setup scripts;in writing setup scripts;in writing setup scripts;The header of a typical SciPy ``__init__.py`` is:;The header of a typical SciPy ``__init__.py`` is:;will compile the ``library`` sources without optimization flags;pattern:;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/HOWTO_DOCUMENT.rst.txt,[u'32'],1,1," -142,7 +142,7 ; -150,7 +150,7 ; -182,7 +182,7 ; -195,7 +195,7 ; -370,7 +370,7 ; -397,7 +397,7 ; -427,7 +427,7 ; -498,7 +498,7 ; -514,7 +514,7 ; -553,16 +553,16 ; -597,7 +597,7 ;","The sections of the docstring are;The sections of the docstring are;The sections of the docstring are;The sections of the docstring are;The sections of the docstring are;The sections of the docstring are;The sections of the docstring are;Document these as you would any other function.  Do not includ;instances a useful docstring, we do the following;hard to get a good overview of all functionality provided by looking at th;output. New paragraphs are marked with a blank line;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/Py3K.rst.txt,[u'8'],1,1," -483,7 +483,7 ; -491,13 +491,13 ; -633,7 +633,7 ;","So what is done in ``PyArray_FromAny`` currently is that;So what is done in ``PyArray_FromAny`` currently is that;Currently, the following is done;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/TESTS.rst.txt,[u'4'],1,1," -206,7 +206,7 ; -236,7 +236,7 ;","but ``test_evens`` is a generator that returns a series of tests, usin;for numpy.lib:;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/cython/README.txt,[u'2'],1,1," -17,4 +17,4 ;","To run it locally, simply type:;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/neps/datetime-proposal.rst,[u'47'],1,1," -6,7 +6,7 ; -115,10 +115,10 ; -140,7 +140,7 ; -565,27 +565,27 ; -595,18 +595,18 ; -626,13 +626,13 ; -672,4 +672,3 ;",;lower units respectively);i.e. you cannot specify 'M8[us]//5' as 'M8//5' or as '//5;Necessary changes to NumP;ufuncs that have datetime and timedelta arguments can use the Python AP;Multiple of basic units are simple to handle.  Divisors of basic unit;allowed;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/neps/datetime-proposal3.rst,[u'1'],0,1," -572,4 +572,3 ;",for this proposal purposes;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/neps/deferred-ufunc-evaluation.rst,[u'8'],1,1," -97,7 +97,7 ; -159,7 +159,7 ; -185,7 +185,7 ; -266,7 +266,7 ;",Here's how it might be used in NumPy.:;The API would be expanded with a number of functions;The API would be expanded with a number of functions;Other Implementation Detail;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/neps/generalized-ufuncs.rst,[u'4'],1,1," -91,14 +91,14 ;",dimensions.  The signature is represented by a string of th;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/neps/groupby_additions.rst,[u'21'],1,1," -24,7 +24,7 ; -44,7 +44,7 ; -54,24 +54,24 ; -79,7 +79,7 ; -109,4 +109,3 ;",Suppose you have a NumPy structured array containing information abou;Ufunc methods propose;reducein:;reduceby:;edges:;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/neps/missing-data.rst,[u'6'],1,1," -105,12 +105,12 ; -1174,7 +1174,7 ;",an array of all missing values must produce the same result as th;the discussion are:;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/neps/new-iterator-ufunc.rst,[u'37'],1,1," -375,7 +375,7 ; -691,7 +691,7 ; -748,7 +748,7 ; -778,7 +778,7 ; -813,7 +813,7 ; -936,7 +936,7 ; -988,7 +988,7 ; -1009,7 +1009,7 ; -1052,7 +1052,7 ; -1242,7 +1242,7 ; -1341,14 +1341,14 ; -1658,7 +1658,7 ; -1721,7 +1721,7 ; -1734,7 +1734,7 ; -1772,7 +1772,7 ; -1809,7 +1809,7 ; -1900,7 +1900,7 ; -1978,4 +1978,3 ;","In general, it should be possible to emulate the current behavior where i;Construction and Destructio;Construction and Destructio;Construction and Destructio;Construction and Destructio;Construction and Destructio;Construction and Destructio;Construction and Destructio;Construction and Destructio;Construction and Destructio;Construction and Destructio;First, here is the definition of the ``luf`` function.:;Python iterator protocol.:;Here is the same function, but following the C-style pattern.:;of the iterator, designed to help speed up the inner loops, is the fla;modify ``iter_add`` once again.:;easy it was to add an optional output parameter.:;a dual core machine.:;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/neps/structured_array_extensions.txt,[u'1'],0,1," -6,4 +6,3 ;",;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/neps/warnfix.txt,[u'2'],1,1," -65,7 +65,7 ;","When applied to a variable, one would get;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/newdtype_example/floatint/__init__.py,[u'2'],0,1," -1,3 +1 ;",;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/postprocess.py,[u'2'],1,1," -44,7 +44,7 ;","def process_html(fn, lines);"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/records.rst.txt,[u'1'],0,1," -84,4 +84,3 ;",reference;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/source/conf.py,[u'4'],1,1," -84,7 +84,7 ; -109,7 +109,7 ;",;;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/source/dev/gitwash/configure_git.rst,[u'6'],1,1," -16,7 +16,7 ; -24,7 +24,7 ; -33,7 +33,7 ;",Here is an example ``.gitconfig`` file:;Here is an example ``.gitconfig`` file:;Here is an example ``.gitconfig`` file:;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/source/dev/gitwash/development_workflow.rst,[u'8'],1,1," -16,7 +16,7 ; -100,7 +100,7 ; -144,7 +144,7 ; -155,7 +155,7 ;",Basic workflo;In git >= 1.7 you can ensure that the link is correctly set by using th;In more detai;In more detai;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/source/dev/gitwash/git_development.rst,[u'1'],0,1," -12,4 +12,3 ;",Contents;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/source/dev/gitwash/git_resources.rst,[u'4'],1,1," -9,9 +9,9 ;",Tutorials and summarie;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/source/dev/gitwash/index.rst,[u'2'],0,1," -12,5 +12,3 ;",Contents;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/source/reference/arrays.datetime.rst,[u'2'],1,1," -322,7 +322,7 ;","dates, use :func:`busday_count`;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/source/reference/c-api.config.rst,[u'1'],0,1," -101,4 +101,3 ;",Platform informatio;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/source/reference/c-api.coremath.rst,[u'5'],1,1," -347,7 +347,7 ; -376,5 +376,4 ;",__ http://www.openexr.com/about.htm;__ http://www.openexr.com/about.htm;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/source/reference/c-api.deprecations.rst,[u'6'],1,1," -14,14 +14,14 ; -44,7 +44,7 ;","Numarray.   The core API originated with Numeric in 1995 and there ar;versions of NumPy should not have major C-API changes, however, tha;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/source/reference/c-api.iterator.rst,[u'8'],1,1," -57,7 +57,7 ; -69,7 +69,7 ; -649,7 +649,7 ; -1229,7 +1229,7 ;",Here is a conversion table for which functions to use with the new iterator;Here is a conversion table for which functions to use with the new iterator;Construction and Destructio;Functions For Iteratio;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/source/reference/routines.char.rst,[u'1'],0,1," -84,4 +84,3 ;",Convenience clas;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/source/reference/routines.datetime.rst,[u'1'],0,1," -17,4 +17,3 ;",Business Day Function;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/source/reference/routines.dual.rst,[u'1'],0,1," -45,4 +45,3 ;",Othe;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/source/reference/routines.emath.rst,[u'1'],0,1," -7,4 +7,3 ;",Mathematical functions with automatic domain (:mod:`numpy.emath`;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/source/reference/routines.ma.rst,[u'2'],0,1," -400,5 +400,3 ;",Miscellane;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/source/reference/routines.numarray.rst,[u'1'],0,1," -3,4 +3,3 ;",Numarray compatibility (:mod:`numpy.numarray`;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/source/reference/routines.oldnumeric.rst,[u'1'],0,1," -5,4 +5,3 ;",Old Numeric compatibility (:mod:`numpy.oldnumeric`;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/source/reference/swig.interface-file.rst,[u'2'],1,1," -444,7 +444,7 ;",arrays with views into memory that is managed.  See the discussion `her;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/source/reference/swig.testing.rst,[u'10'],1,1," -15,8 +15,8 ; -57,9 +57,9 ; -108,7 +108,7 ;","this results in 1,427 individual unit tests that are performed whe;Two-dimensional arrays are tested in exactly the same manner.  Th;Testing SWIG Interface File;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/source/user/basics.io.rst,[u'2'],1,1," -5,4 +5,4 ;",I/O with Nump;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,doc/ufuncs.rst.txt,[u'5'],0,1," -96,8 +96,3 ;",If there are object arrays involved then loop->obj gets set to 1.  Then there a;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/__init__.py,[u'1'],0,1," -195,4 +195,3 ;","def pkgload(*packages, **options);"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/add_newdocs.py,[u'2'],1,1," -2648,7 +2648,7 ;","def luf(lamdaexpr, *args, **kwargs);"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/_methods.py,[u'1'],0,1," -121,4 +121,3 ;","def _std(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/arrayprint.py,[u'1'],0,1," -750,4 +750,3 ;","def __init__(self, data);"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/code_generators/ufunc_docstrings.py,[u'2'],1,1," -2199,7 +2199,7 ;","def add_newdoc(place, name, doc);"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/fromnumeric.py,[u'19'],1,1," -106,7 +106,7 ; -2077,9 +2077,9 ; -2087,9 +2087,9 ; -2161,7 +2161,7 ; -2171,9 +2171,9 ; -2913,4 +2913,3 ;","def take(a, indices, axis=None, out=None, mode='raise');def amax(a, axis=None, out=None, keepdims=False);def amax(a, axis=None, out=None, keepdims=False);def amin(a, axis=None, out=None, keepdims=False);def amin(a, axis=None, out=None, keepdims=False);def var(a, axis=None, dtype=None, out=None, ddof=0;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/function_base.py,[u'1'],0,1," -166,4 +166,3 ;","def logspace(start,stop,num=50,endpoint=True,base=10.0);"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/include/numpy/npy_common.h,[u'1'],0,1," -952,4 +952,3 ;",typedef npy_int64 npy_datetime;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/shape_base.py,[u'1'],0,1," -275,4 +275,3 ;",def hstack(tup);
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/src/multiarray/arrayobject.c,[u'16'],1,1," -77,7 +77,7 ; -92,7 +92,7 ; -145,8 +145,8 ; -157,19 +157,19 ; -1478,7 +1478,7 ;","PyArray_Size(PyObject *op;PyArray_SetUpdateIfCopyBase(PyArrayObject *arr, PyArrayObject *base;PyArray_SetBaseObject(PyArrayObject *arr, PyObject *obj;PyArray_SetBaseObject(PyArrayObject *arr, PyObject *obj;PyArray_CheckStrides(int elsize, int nd, npy_intp numbytes, npy_intp offset;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/src/multiarray/common.c,[u'14'],1,1," -108,7 +108,7 ; -117,14 +117,14 ; -381,7 +381,7 ; -391,7 +391,7 ;","_array_find_python_scalar_type(PyObject *op;_array_find_python_scalar_type(PyObject *op;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/src/multiarray/common.h,[u'2'],1,1," -39,7 +39,7 ;",_array_find_python_scalar_type(PyObject *op);
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/src/multiarray/conversion_utils.c,[u'4'],1,1," -802,7 +802,7 ; -1127,7 +1127,7 ;","PyArray_PyIntAsIntp(PyObject *o;PyArray_TypestrConvert(int itemsize, int gentype;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/src/multiarray/convert_datatype.c,[u'6'],1,1," -738,9 +738,9 ;","can_cast_scalar_to(PyArray_Descr *scal_type, char *scal_data;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/src/multiarray/ctors.c,[u'4'],1,1," -1805,8 +1805,8 ;","PyArray_FromArray(PyArrayObject *arr, PyArray_Descr *newtype, int flags;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/src/multiarray/dtype_transfer.c,[u'1'],0,1," -4245,4 +4245,3 ;","PyArray_PrepareThreeRawArrayIter(int ndim, npy_intp *shape;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/src/multiarray/flagsobject.c,[u'2'],1,1," -100,7 +100,7 ;","PyArray_UpdateFlags(PyArrayObject *ret, int flagmask;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/src/multiarray/iterators.c,[u'8'],1,1," -975,8 +975,8 ; -1158,9 +1158,9 ;","iter_ass_subscript(PyArrayIterObject *self, PyObject *ind, PyObject *val;iter_array(PyArrayIterObject *it, PyObject *NPY_UNUSED(op);"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/src/multiarray/mapping.c,[u'18'],1,1," -987,7 +987,7 ; -1030,7 +1030,7 ; -1212,7 +1212,7 ; -1226,8 +1226,8 ; -2002,7 +2002,7 ; -2124,10 +2124,10 ;","array_subscript_fancy(PyArrayObject *self, PyObject *op, int fancy;array_subscript_fromobject(PyArrayObject *self, PyObject *op;array_subscript(PyArrayObject *self, PyObject *op;array_subscript(PyArrayObject *self, PyObject *op;PyArray_MapIterNew(PyObject *indexobj, int oned, int fancy;PyArray_MapIterArray(PyArrayObject * a, PyObject * index;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/src/multiarray/methods.c,[u'2'],1,1," -1992,7 +1992,7 ;","array_dot(PyArrayObject *self, PyObject *args, PyObject *kwds;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/src/multiarray/multiarraymodule.c,[u'2'],1,1," -488,7 +488,7 ;","PyArray_ConcatenateFlattenedArrays(int narrays, PyArrayObject **arrays;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/src/multiarray/scalartypes.c.src,[u'2'],1,1," -3051,7 +3051,7 ;",void_arrtype_hash(PyObject *obj;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/src/multiarray/shape.c,[u'2'],1,1," -361,7 +361,7 ;","_attempt_nocopy_reshape(PyArrayObject *self, int newnd, npy_intp* newdims;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/src/npymath/halffloat.c,[u'1'],0,1," -527,4 +527,3 ;",npy_uint64 npy_halfbits_to_doublebits(npy_uint16 h;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/src/npymath/ieee754.c.src,[u'3'],1,1," -21,7 +21,7 ; -678,4 +678,3 ;","double npy_copysign(double x, double y;void npy_set_floatstatus_invalid(void;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/src/npysort/selection.c.src,[u'2'],1,1," -1,7 +1,7 ;",;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/src/private/npy_partition.h,[u'1'],0,1," -556,4 +556,3 ;","get_argpartition_func(int type, NPY_SELECTKIND which;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/src/scalarmathmodule.c.src,[u'2'],1,1," -500,7 +500,7 ;","half_ctype_remainder(npy_half a, npy_half b, npy_half *out) ;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/src/umath/loops.h,[u'1'],0,1," -2726,4 +2726,3 ;","OBJECT_sign(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY_UNUSE;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/src/umath/operand_flag_tests.c.src,[u'2'],1,1," -79,7 +79,7 ;",PyMODINIT_FUNC initoperand_flag_tests(void;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/src/umath/reduction.c,[u'2'],1,1," -250,7 +250,7 ;","check_nonreorderable_axes(int ndim, npy_bool *axis_flags, const char *funcname;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/src/umath/ufunc_type_resolution.c,[u'4'],1,1," -1613,7 +1613,7 ; -2129,5 +2129,3 ;",linear_search_userloop_type_resolver(PyUFuncObject *self;type_tuple_type_resolver(PyUFuncObject *self;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/tests/test_api.py,[u'2'],1,1," -268,7 +268,7 ;",def test_array_astype();
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/tests/test_dtype.py,[u'4'],1,1," -50,8 +50,8 ;",def test_equivalent_dtype_hashing(self);
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/tests/test_function_base.py,[u'1'],0,1," -35,4 +35,3 ;",def test_type(self);
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/tests/test_item_selection.py,[u'2'],1,1," -59,7 +59,7 ;",def test_refcounting(self);
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/tests/test_multiarray.py,[u'4'],1,1," -1314,11 +1314,11 ;",def test_dot(self);
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/tests/test_shape_base.py,[u'2'],1,1," -183,7 +183,7 ;",def test_concatenate_axis_None();
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/core/tests/test_ufunc.py,[u'44'],1,1," -801,7 +801,7 ; -814,7 +814,7 ; -885,12 +885,12 ; -906,12 +906,12 ; -927,12 +927,12 ; -943,12 +943,12 ;",def test_ufunc_custom_out(self);def test_operand_flags(self);def test_inplace_fancy_indexing(self);def test_inplace_fancy_indexing(self);def test_inplace_fancy_indexing(self);def test_inplace_fancy_indexing(self);
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/distutils/command/build_clib.py,[u'2'],1,1," -104,7 +104,7 ;",def run(self);
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/distutils/command/config.py,[u'2'],1,1," -152,7 +152,7 ;","def _link (self, body;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/distutils/conv_template.py,[u'4'],1,1," -193,14 +193,14 ;",def parse_loop_header(loophead) ;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/distutils/extension.py,[u'2'],1,1," -72,7 +72,7 ;","def __init__ (self, name, sources;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/doc/basics.py,[u'1'],0,1," -144,4 +144,3 ;",;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/doc/broadcasting.py,[u'1'],0,1," -176,4 +176,3 ;",;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/doc/byteswapping.py,[u'1'],0,1," -136,4 +136,3 ;",;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/doc/creation.py,[u'1'],0,1," -142,4 +142,3 ;",;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/doc/glossary.py,[u'1'],0,1," -416,4 +416,3 ;",;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/doc/howtofind.py,[u'1'],0,1," -8,4 +8,3 ;",;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/doc/indexing.py,[u'1'],0,1," -406,4 +406,3 ;",;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/doc/internals.py,[u'1'],0,1," -161,4 +161,3 ;",;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/doc/io.py,[u'1'],0,1," -8,4 +8,3 ;",;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/doc/jargon.py,[u'1'],0,1," -8,4 +8,3 ;",;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/doc/methods_vs_functions.py,[u'1'],0,1," -8,4 +8,3 ;",;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/doc/misc.py,[u'1'],0,1," -227,4 +227,3 ;",;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/doc/performance.py,[u'1'],0,1," -8,4 +8,3 ;",;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/doc/structured_arrays.py,[u'3'],1,1," -194,7 +194,7 ; -221,4 +221,3 ;",;;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/doc/subclassing.py,[u'1'],0,1," -558,4 +558,3 ;","def __array_wrap__(self, arr, context=None);"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/doc/ufuncs.py,[u'1'],0,1," -136,4 +136,3 ;",;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/f2py/NEWS.txt,[u'2'],1,1," -1,2 +1,2 ;",;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/f2py/TODO.txt,[u'2'],1,1," -26,7 +26,7 ;",subroutine fu;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/f2py/crackfortran.py,[u'2'],1,1," -721,7 +721,7 ;",def _is_intent_callback(vdecl);
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/f2py/doc/Release-2.x.txt,[u'6'],1,1," -14,13 +14,13 ; -63,7 +63,7 ;",C expertise is required for using this tool;Features include;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/f2py/doc/Release-3.x.txt,[u'10'],1,1," -14,13 +14,13 ; -33,7 +33,7 ; -55,7 +55,7 ; -72,7 +72,7 ;",C expertise is required for using this tool;Features include;NEW:   Accessing Fortran 90/95 module data;NEW: * Installation with distutils;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/f2py/doc/Release-4.x.txt,[u'10'],1,1," -18,13 +18,13 ; -37,7 +37,7 ; -59,7 +59,7 ; -76,7 +76,7 ;",New features;Features include;Features include;Features include;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/f2py/doc/f2python9-final/README.txt,[u'4'],1,1," -23,9 +23,9 ;",Note that this file includes the following JPG image;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,.../doc/f2python9-final/src/examples/exp1mess.txt,[u'2'],1,1," -13,5 +13,5 ;",Building modules..;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,.../f2python9-final/src/examples/exp1session.txt,[u'2'],1,1," -17,4 +17,4 ;",Return objects;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/f2py/doc/multiarray/array_from_pyobj.c,[u'4'],1,1," -311,9 +311,9 ;","int check_and_fix_dimensions(const PyArrayObject* arr,const int rank,int *dims;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,.../doc/multiarray/fortran_array_from_pyobj.txt,[u'6'],1,1," -118,7 +118,7 ; -192,7 +192,7 ; -281,4 +281,4 ;",Statement of the problem;if type(obj) is ArrayType;else;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/f2py/doc/multiarray/transpose.txt,[u'97'],1,1," -1,7 +1,7 ; -161,16 +161,16 ; -188,7 +188,7 ; -197,16 +197,16 ; -225,15 +225,15 ; -624,14 +624,14 ; -657,9 +657,9 ; -674,12 +674,12 ; -737,13 +737,13 ; -798,14 +798,14 ; -814,22 +814,22 ; -862,13 +862,13 ; -878,7 +878,7 ; -892,18 +892,18 ; -912,9 +912,9 ; -1026,7 +1026,7 ; -1121,7 +1121,6 ;",";int trans(scalar *a, unsigned m, unsigned n, int *move, int iwrk;My Alg    Matrix cop;mld900@anusf.anu.edu.a;Enjoy;void processstmt(;can give me a lead here, thanks;no need to explicitly store the transpose matrix in another array an;void dmx_transpose(unsigned n, unsigned m, double* a, double* b;The C++ Scalar, Vector, Matrix and Tensor class librar;Hm. F90? You're not silently allocating a temporary I hope;http://users.bigpond.net.au/amiller;space, what I need is a porting subroutine that remaps the data from one forma;the values 1,3,5,7,9,2,4,6,8,10 in this order;Darran Edmundso;int test_matrix_cols(a, m, n) TYPE *a; int m, n;main(argc, argv) int argc; char *argv[];"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/f2py/doc/multiarrays.txt,[u'3'],1,1," -89,7 +89,7 ; -117,4 +117,3 ;","subroutine foo(l,m,n,a;wrapping Fortran multidimensional arrays with f2py2e;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/f2py/doc/using_F_compiler.txt,[u'8'],1,1," -46,7 +46,7 ; -54,7 +54,7 ; -117,7 +117,7 ; -137,7 +137,7 ;",Required arguments;Required arguments;value of `a';Return objects;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/f2py/docs/FAQ.txt,[u'10'],1,1," -238,7 +238,7 ; -543,7 +543,7 ; -572,11 +572,11 ;",constructs in future. But note that the task in non-trivial and ma;__ http://www.met.ed.ac.uk/~cory/PyARTS;Here are some comments people have posted to f2py mailing list and c.l.py;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/f2py/docs/HISTORY.txt,[u'85'],1,1," -38,7 +38,7 ; -46,7 +46,7 ; -65,8 +65,8 ; -135,7 +135,7 ; -173,7 +173,7 ; -278,14 +278,14 ; -316,7 +316,7 ; -371,7 +371,7 ; -409,7 +409,7 ; -451,7 +451,7 ; -547,7 +547,7 ; -598,8 +598,8 ; -640,7 +640,7 ; -667,7 +667,7 ; -690,9 +690,9 ; -704,7 +704,7 ; -715,7 +715,7 ; -737,7 +737,7 ; -748,7 +748,7 ; -760,7 +760,7 ; -791,7 +791,7 ; -809,9 +809,9 ; -831,7 +831,7 ; -841,7 +841,7 ; -852,23 +852,23 ; -885,15 +885,15 ; -929,14 +929,14 ; -983,7 +983,7 ; -1038,7 +1038,6 ;",Release 2.46.24;Release 2.46.24;Release 2.46.24;Release 2.45.241_192;Release 2.43.239_183;Release 2.43.239_180;Release 2.39.235_169;Release 2.39.235_164;Release 2.39.235_164;Release 2.37.233-154;Public Release 2.32.225-141;Public Release 2.32.225-141;Public Release 2.32.225-141;Public Release 2.32.225-141;Public Release 2.32.225-141;Public Release 2.32.225-141;Public Release 2.32.225-141;Older Release;Older Release;Older Release;Older Release;Older Release;Older Release;Older Release;Older Release;Older Release;Older Release;Older Release;Older Release;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/f2py/docs/OLDNEWS.txt,[u'2'],1,1," -60,4 +60,4 ;",;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/f2py/docs/README.txt,[u'26'],1,1," -21,10 +21,10 ; -47,7 +47,7 ; -150,7 +150,7 ; -249,7 +249,7 ; -287,7 +287,7 ; -299,12 +299,12 ; -354,7 +354,7 ; -412,9 +412,9 ; -445,7 +445,7 ;","__ FAQ.htm;__ FAQ.htm;Here follows a more detailed list of F2PY features;Unpack the source file, change to directrory ``F2PY-?-???/`` and ru;__ hello.;__ hello.;__ http://cens.ioc.ee/cgi-bin/cvsweb/python/f2py2e/docs/HISTORY.txt?rev=HEAD&co;__ http://jrfonseca.dyndns.org/debian;__ http://jrfonseca.dyndns.org/debian;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/f2py/docs/TESTING.txt,[u'2'],1,1," -35,7 +35,7 ;",Test;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/f2py/docs/THANKS.txt,[u'2'],1,1," -4,7 +4,7 ;",;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/f2py/docs/usersguide/index.txt,[u'66'],1,1," -4,7 +4,7 ; -97,7 +97,7 ; -125,7 +125,7 ; -236,8 +236,8 ; -292,8 +292,8 ; -405,17 +405,17 ; -425,7 +425,7 ; -463,7 +463,7 ; -570,10 +570,10 ; -605,7 +605,7 ; -626,7 +626,7 ; -691,7 +691,7 ; -809,7 +809,7 ; -964,12 +964,12 ; -1047,7 +1047,7 ; -1439,7 +1439,7 ; -1457,7 +1457,7 ; -1490,9 +1490,9 ; -1553,7 +1553,7 ; -1602,7 +1602,7 ; -1618,7 +1618,7 ; -1664,7 +1664,7 ; -1679,7 +1679,7 ; -1712,7 +1712,7 ; -1740,7 +1740,7 ;",";Python the Fortran subroutine ``FIB`` is accessible via ``fib1.fib``:;Python the Fortran subroutine ``FIB`` is accessible via ``fib1.fib``:;In Python:;previous case:;Type declaration;Type declaration;Use statements;__ external;__ external;The following attributes are used by F2PY;The following attributes are used by F2PY;The following attributes are used by F2PY;All wrappers (to Fortran/C routines or to common blocks or to Fortra;expects an array version of a string in order to *in situ* changes t;distinguished by the usage of ``-c`` and ``-h`` switches;distinguished by the usage of ``-c`` and ``-h`` switches;distinguished by the usage of ``-c`` and ``-h`` switches;distinguished by the usage of ``-c`` and ``-h`` switches;The following functions are provided by the ``f2py2e`` module;Using ``numpy_distutils`;extension modules, etc;extension modules, etc;extension modules, etc;wraps the C library function ``system()``:;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/f2py/func2subr.py,[u'5'],1,1," -92,7 +92,7 ; -150,7 +150,7 ; -289,4 +289,3 ;","def createfuncwrapper(rout,signature=0);def add(line,ret=ret);def assubr(rout);"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/fft/fftpack.py,[u'12'],1,1," -273,7 +273,7 ; -298,13 +298,13 ;","def rfft(a, n=None, axis=-1);def rfft(a, n=None, axis=-1);"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/fft/helper.py,[u'12'],1,1," -125,8 +125,8 ; -140,7 +140,7 ; -172,11 +172,11 ;","def fftfreq(n, d=1.0);def fftfreq(n, d=1.0);def fftfreq(n, d=1.0);"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/lib/index_tricks.py,[u'2'],1,1," -657,7 +657,7 ;","def fill_diagonal(a, val, wrap=False);"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/lib/tests/test_index_tricks.py,[u'2'],1,1," -256,7 +256,7 ;",def test_ndindex();
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/lib/type_check.py,[u'1'],0,1," -603,4 +603,3 ;",def common_type(*arrays);
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/lib/user_array.py,[u'2'],1,1," -12,7 +12,7 ;",;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/linalg/_gufuncs_linalg.py,[u'24'],1,1," -15,7 +15,7 ; -73,9 +73,9 ; -91,7 +91,7 ; -114,9 +114,9 ; -354,7 +354,7 ; -368,7 +368,7 ; -1398,11 +1398,11 ;",";;;;def slogdet(a, **kwargs);def slogdet(a, **kwargs);def chosolve(A, B, UPLO='L', **kw_args);"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/linalg/lapack_lite/blas_lite.c,[u'1'],0,1," -21132,4 +21132,3 ;","doublereal snrm2_(integer *n, real *x, integer *incx;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/linalg/lapack_lite/dlamch.c,[u'548'],4,4," -5,49 +5,49 ; -64,7 +64,7 ; -93,7 +93,7 ; -130,56 +130,56 ; -203,18 +203,18 ; -230,11 +230,11 ; -248,14 +248,14 ; -265,8 +265,8 ; -288,13 +288,13 ; -304,12 +304,12 ; -342,73 +342,73 ; -428,12 +428,12 ; -447,16 +447,16 ; -511,12 +511,12 ; -539,13 +539,13 ; -557,7 +557,7 ; -570,7 +570,7 ; -585,33 +585,33 ; -647,30 +647,30 ; -688,33 +688,33 ; -739,7 +739,7 ; -776,60 +776,60 ; -861,8 +861,8 ; -871,32 +871,32 ; -905,16 +905,16 ;",";doublereal dlamch_(char *cmach;doublereal dlamch_(char *cmach;ndin;ndin;uc;;in;g ;ng;fo;fo;fo;PS. *;hi;erflow;erflow;w;in;doublereal dlamc3_(doublereal *a, doublereal *b;doublereal dlamc3_(doublereal *a, doublereal *b;doublereal dlamc3_(doublereal *a, doublereal *b;doublereal dlamc3_(doublereal *a, doublereal *b;doublereal dlamc3_(doublereal *a, doublereal *b;i;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/linalg/lapack_lite/dlapack_lite.c,[u'1'],0,1," -100830,4 +100830,3 ;","doublereal slapy3_(real *x, real *y, real *z__;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/linalg/lapack_lite/zlapack_lite.c,[u'1'],0,1," -27003,4 +27003,3 ;","doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/linalg/setup.py,[u'4'],1,1," -15,9 +15,9 ;","def configuration(parent_package='',top_path=None);"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/linalg/tests/test_gufuncs_linalg.py,[u'14'],1,1," -134,7 +134,7 ; -159,7 +159,7 ; -329,15 +329,15 ; -377,7 +377,7 ; -427,7 +427,7 ;","def real_matrices(self);def complex_hermitian_matrices(self);def test_zero(self);def do(self, a, b);def _check_for_type_vector(self, typ);"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/linalg/umath_linalg.c.src,[u'8'],1,1," -1056,7 +1056,7 ; -2483,7 +2483,7 ; -3860,7 +3860,7 ; -3941,7 +3941,7 ;",static voi;init_@lapack_func@(GEEV_PARAMS_t* params;static char eigh_types[] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/ma/API_CHANGES.txt,[u'3'],1,1," -61,7 +61,7 ; -133,4 +133,3 ;","Previously, ``putmask`` was used like this:;New features (non exhaustive list;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/ma/README.txt,[u'4'],0,1," -234,7 +234,3 ;",Revision note;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/matrixlib/tests/test_regression.py,[u'1'],0,1," -32,4 +32,3 ;","def test_matrix_std_argmax(self,level=rlevel);"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/numarray/include/numpy/cfunc.h,[u'1'],0,1," -75,4 +75,3 ;",typedef struct ;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/numarray/include/numpy/ieeespecial.h,[u'1'],0,1," -121,4 +121,3 ;",typedef enu;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/oldnumeric/tests/test_regression.py,[u'1'],0,1," -9,4 +9,3 ;","def test_numeric_random(self, level=rlevel);"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/random/mtrand/distributions.c,[u'82'],1,1," -7,10 +7,10 ; -21,9 +21,9 ; -52,8 +52,8 ; -62,7 +62,7 ; -162,7 +162,7 ; -225,7 +225,7 ; -241,7 +241,7 ; -380,7 +380,7 ; -404,12 +404,12 ; -514,7 +514,7 ; -525,11 +525,11 ; -551,7 +551,7 ; -600,7 +600,7 ; -624,12 +624,12 ; -639,7 +639,7 ; -647,7 +647,7 ; -666,7 +666,7 ; -710,7 +710,7 ; -744,10 +744,10 ; -772,7 +772,7 ; -783,39 +783,39 ; -836,20 +836,20 ; -857,7 +857,7 ;",";;;double loggam(double x;double rk_standard_gamma(rk_state *state, double shape;double rk_noncentral_chisquare(rk_state *state, double df, double nonc;long rk_binomial_btpe(rk_state *state, long n, double p;long rk_binomial_inversion(rk_state *state, long n, double p;long rk_binomial_inversion(rk_state *state, long n, double p;long rk_poisson_ptrs(rk_state *state, double lam;long rk_poisson(rk_state *state, double lam;double rk_standard_t(rk_state *state, double df;double rk_vonmises(rk_state *state, double mu, double kappa;double rk_power(rk_state *state, double a;double rk_laplace(rk_state *state, double loc, double scale;double rk_gumbel(rk_state *state, double loc, double scale;double rk_wald(rk_state *state, double mean, double scale;long rk_geometric_search(rk_state *state, double p;long rk_hypergeometric_hyp(rk_state *state, long good, long bad, long sample;long rk_hypergeometric_hrua(rk_state *state, long good, long bad, long sample;long rk_hypergeometric_hrua(rk_state *state, long good, long bad, long sample;double rk_triangular(rk_state *state, double left, double mode, double right;long rk_logseries(rk_state *state, double p;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/random/mtrand/distributions.h,[u'20'],1,1," -7,10 +7,10 ; -30,11 +30,11 ; -42,15 +42,15 ; -60,10 +60,10 ; -119,7 +119,7 ;",";extern ""C"" ;extern ""C"" ;extern double rk_exponential(rk_state *state, double scale);extern long rk_poisson_mult(rk_state *state, double lam);"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/random/mtrand/mtrand.c,[u'1356'],10,10," -486,7 +486,7 ; -494,7 +494,7 ; -507,7 +507,7 ; -515,14 +515,14 ; -530,7 +530,7 ; -552,7 +552,7 ; -560,14 +560,14 ; -1629,7 +1629,7 ; -1654,7 +1654,7 ; -1663,7 +1663,7 ; -1747,7 +1747,7 ; -1756,8 +1756,8 ; -1782,8 +1782,8 ; -1808,7 +1808,7 ; -1817,7 +1817,7 ; -1901,7 +1901,7 ; -1910,7 +1910,7 ; -1937,7 +1937,7 ; -1965,7 +1965,7 ; -2171,7 +2171,7 ; -2182,7 +2182,7 ; -2209,7 +2209,7 ; -2234,7 +2234,7 ; -2243,7 +2243,7 ; -2327,7 +2327,7 ; -2336,8 +2336,8 ; -2362,8 +2362,8 ; -2390,7 +2390,7 ; -2399,7 +2399,7 ; -2623,7 +2623,7 ; -2634,7 +2634,7 ; -2660,10 +2660,10 ; -2685,7 +2685,7 ; -2694,7 +2694,7 ; -2778,7 +2778,7 ; -2787,7 +2787,7 ; -2814,10 +2814,10 ; -2842,7 +2842,7 ; -2851,7 +2851,7 ; -3084,7 +3084,7 ; -3095,7 +3095,7 ; -3121,7 +3121,7 ; -3146,7 +3146,7 ; -3155,7 +3155,7 ; -3234,7 +3234,7 ; -3243,7 +3243,7 ; -3270,7 +3270,7 ; -3295,7 +3295,7 ; -3304,7 +3304,7 ; -3383,7 +3383,7 ; -3392,7 +3392,7 ; -3419,7 +3419,7 ; -3446,7 +3446,7 ; -3455,7 +3455,7 ; -3665,7 +3665,7 ; -3673,7 +3673,7 ; -3683,9 +3683,9 ; -3711,7 +3711,7 ; -3736,7 +3736,7 ; -3745,7 +3745,7 ; -3824,7 +3824,7 ; -3833,7 +3833,7 ; -3860,7 +3860,7 ; -3887,7 +3887,7 ; -3896,7 +3896,7 ; -4106,7 +4106,7 ; -4114,7 +4114,7 ; -4124,9 +4124,9 ; -4152,7 +4152,7 ; -4177,7 +4177,7 ; -4186,7 +4186,7 ; -4265,7 +4265,7 ; -4274,7 +4274,7 ; -4301,7 +4301,7 ; -4329,7 +4329,7 ; -4338,7 +4338,7 ; -4557,7 +4557,7 ; -4565,7 +4565,7 ; -4575,9 +4575,9 ; -4603,7 +4603,7 ; -4628,7 +4628,7 ; -4637,7 +4637,7 ; -4716,7 +4716,7 ; -4725,7 +4725,7 ; -4752,7 +4752,7 ; -4780,7 +4780,7 ; -4981,7 +4981,7 ; -4992,7 +4992,7 ; -5019,7 +5019,7 ; -5096,7 +5096,7 ; -5105,7 +5105,7 ; -5133,10 +5133,10 ; -5192,19 +5192,19 ; -5244,7 +5244,7 ; -5256,7 +5256,7 ; -5270,7 +5270,7 ; -5278,7 +5278,7 ; -5306,7 +5306,7 ; -5477,7 +5477,7 ; -5513,7 +5513,7 ; -5617,7 +5617,7 ; -5627,7 +5627,7 ; -5685,7 +5685,7 ; -5781,11 +5781,11 ; -5883,11 +5883,11 ; -6064,7 +6064,7 ; -6073,7 +6073,7 ; -6112,11 +6112,11 ; -6133,7 +6133,7 ; -6172,10 +6172,10 ; -6190,10 +6190,10 ; -6236,10 +6236,10 ; -6254,10 +6254,10 ; -6319,7 +6319,7 ; -6377,10 +6377,10 ; -6419,7 +6419,7 ; -6476,10 +6476,10 ; -6520,7 +6520,7 ; -6606,7 +6606,7 ; -6615,7 +6615,7 ; -6641,7 +6641,7 ; -6650,7 +6650,7 ; -6660,19 +6660,19 ; -6686,7 +6686,7 ; -6694,7 +6694,7 ; -6801,7 +6801,7 ; -6810,7 +6810,7 ; -6862,7 +6862,7 ; -6896,7 +6896,7 ; -6904,8 +6904,8 ; -6944,8 +6944,8 ; -7054,7 +7054,7 ; -7280,7 +7280,7 ; -7289,7 +7289,7 ; -7305,7 +7305,7 ; -7316,7 +7316,7 ; -7464,7 +7464,7 ; -7497,7 +7497,7 ; -7514,7 +7514,7 ; -7523,7 +7523,7 ; -7574,7 +7574,7 ; -7584,7 +7584,7 ; -7767,7 +7767,7 ; -7780,7 +7780,7 ; -7791,7 +7791,7 ; -8082,11 +8082,11 ; -8236,7 +8236,7 ; -8245,7 +8245,7 ; -8259,7 +8259,7 ; -8283,7 +8283,7 ; -8299,11 +8299,11 ; -8317,7 +8317,7 ; -8330,7 +8330,7 ; -8379,7 +8379,7 ; -8390,7 +8390,7 ; -8403,10 +8403,10 ; -8467,8 +8467,8 ; -8551,7 +8551,7 ; -8559,7 +8559,7 ; -8674,7 +8674,7 ; -8688,7 +8688,7 ; -8735,7 +8735,7 ; -8755,7 +8755,7 ; -8789,7 +8789,7 ; -8841,7 +8841,7 ; -8861,7 +8861,7 ; -8895,7 +8895,7 ; -8949,7 +8949,7 ; -9026,7 +9026,7 ; -9051,7 +9051,7 ; -9064,7 +9064,7 ; -9123,7 +9123,7 ; -9181,10 +9181,10 ; -9227,7 +9227,7 ; -9309,7 +9309,7 ; -9317,7 +9317,7 ; -9350,7 +9350,7 ; -9365,7 +9365,7 ; -9380,16 +9380,16 ; -9403,7 +9403,7 ; -9464,7 +9464,7 ; -9479,7 +9479,7 ; -9525,7 +9525,7 ; -9605,7 +9605,7 ; -9613,7 +9613,7 ; -9672,7 +9672,7 ; -9687,7 +9687,7 ; -9702,16 +9702,16 ; -9725,7 +9725,7 ; -9844,7 +9844,7 ; -9859,7 +9859,7 ; -9905,7 +9905,7 ; -9977,7 +9977,7 ; -9985,7 +9985,7 ; -10009,7 +10009,7 ; -10024,7 +10024,7 ; -10039,16 +10039,16 ; -10062,7 +10062,7 ; -10110,7 +10110,7 ; -10125,7 +10125,7 ; -10168,7 +10168,7 ; -10225,10 +10225,10 ; -10268,7 +10268,7 ; -10338,7 +10338,7 ; -10346,7 +10346,7 ; -10370,7 +10370,7 ; -10385,7 +10385,7 ; -10400,7 +10400,7 ; -10408,7 +10408,7 ; -10471,7 +10471,7 ; -10486,7 +10486,7 ; -10532,7 +10532,7 ; -10612,7 +10612,7 ; -10620,7 +10620,7 ; -10679,7 +10679,7 ; -10694,7 +10694,7 ; -10709,7 +10709,7 ; -10717,7 +10717,7 ; -10855,7 +10855,7 ; -10870,7 +10870,7 ; -10916,7 +10916,7 ; -10996,7 +10996,7 ; -11004,7 +11004,7 ; -11063,7 +11063,7 ; -11078,7 +11078,7 ; -11093,16 +11093,16 ; -11116,7 +11116,7 ; -11239,7 +11239,7 ; -11254,7 +11254,7 ; -11301,7 +11301,7 ; -11391,7 +11391,7 ; -11399,7 +11399,7 ; -11509,7 +11509,7 ; -11517,7 +11517,7 ; -11531,16 +11531,16 ; -11554,11 +11554,11 ; -11572,7 +11572,7 ; -11585,7 +11585,7 ; -11628,7 +11628,7 ; -11768,7 +11768,7 ; -11776,7 +11776,7 ; -11821,7 +11821,7 ; -11891,7 +11891,7 ; -11899,7 +11899,7 ; -11923,7 +11923,7 ; -11938,7 +11938,7 ; -11953,16 +11953,16 ; -11976,7 +11976,7 ; -12024,7 +12024,7 ; -12039,7 +12039,7 ; -12084,7 +12084,7 ; -12247,7 +12247,7 ; -12255,7 +12255,7 ; -12269,16 +12269,16 ; -12292,7 +12292,7 ; -12431,7 +12431,7 ; -12439,7 +12439,7 ; -12482,7 +12482,7 ; -12539,10 +12539,10 ; -12582,7 +12582,7 ; -12652,7 +12652,7 ; -12660,7 +12660,7 ; -12684,7 +12684,7 ; -12699,7 +12699,7 ; -12714,16 +12714,16 ; -12737,7 +12737,7 ; -12785,7 +12785,7 ; -12800,7 +12800,7 ; -12845,7 +12845,7 ; -12925,7 +12925,7 ; -12933,7 +12933,7 ; -12966,7 +12966,7 ; -12981,7 +12981,7 ; -12996,16 +12996,16 ; -13019,7 +13019,7 ; -13082,7 +13082,7 ; -13097,7 +13097,7 ; -13142,7 +13142,7 ; -13212,7 +13212,7 ; -13220,7 +13220,7 ; -13244,7 +13244,7 ; -13259,7 +13259,7 ; -13274,16 +13274,16 ; -13297,7 +13297,7 ; -13345,7 +13345,7 ; -13360,7 +13360,7 ; -13404,7 +13404,7 ; -13474,7 +13474,7 ; -13482,7 +13482,7 ; -13506,7 +13506,7 ; -13521,7 +13521,7 ; -13536,16 +13536,16 ; -13559,7 +13559,7 ; -13607,7 +13607,7 ; -13622,7 +13622,7 ; -13666,7 +13666,7 ; -13736,7 +13736,7 ; -13744,7 +13744,7 ; -13768,7 +13768,7 ; -13783,7 +13783,7 ; -13798,16 +13798,16 ; -13821,7 +13821,7 ; -13869,7 +13869,7 ; -13884,7 +13884,7 ; -13931,7 +13931,7 ; -14013,7 +14013,7 ; -14021,7 +14021,7 ; -14054,7 +14054,7 ; -14069,7 +14069,7 ; -14084,7 +14084,7 ; -14092,7 +14092,7 ; -14166,7 +14166,7 ; -14181,7 +14181,7 ; -14229,7 +14229,7 ; -14311,7 +14311,7 ; -14319,7 +14319,7 ; -14352,7 +14352,7 ; -14367,7 +14367,7 ; -14382,7 +14382,7 ; -14390,7 +14390,7 ; -14464,7 +14464,7 ; -14479,7 +14479,7 ; -14527,7 +14527,7 ; -14609,7 +14609,7 ; -14617,7 +14617,7 ; -14650,7 +14650,7 ; -14665,7 +14665,7 ; -14680,7 +14680,7 ; -14688,7 +14688,7 ; -14762,7 +14762,7 ; -14777,7 +14777,7 ; -14825,7 +14825,7 ; -14907,25 +14907,25 ; -14934,7 +14934,7 ; -14948,7 +14948,7 ; -14963,7 +14963,7 ; -14978,16 +14978,16 ; -14999,7 +14999,7 ; -15060,7 +15060,7 ; -15075,7 +15075,7 ; -15121,7 +15121,7 ; -15193,16 +15193,16 ; -15211,7 +15211,7 ; -15225,7 +15225,7 ; -15240,7 +15240,7 ; -15255,16 +15255,16 ; -15278,7 +15278,7 ; -15326,7 +15326,7 ; -15341,7 +15341,7 ; -15386,7 +15386,7 ; -15466,7 +15466,7 ; -15474,7 +15474,7 ; -15533,7 +15533,7 ; -15548,7 +15548,7 ; -15563,7 +15563,7 ; -15571,7 +15571,7 ; -15704,7 +15704,7 ; -15719,8 +15719,8 ; -15765,8 +15765,8 ; -15856,7 +15856,7 ; -15864,7 +15864,7 ; -15974,7 +15974,7 ; -15982,7 +15982,7 ; -15996,7 +15996,7 ; -16004,7 +16004,7 ; -16023,7 +16023,7 ; -16037,7 +16037,7 ; -16050,7 +16050,7 ; -16091,7 +16091,7 ; -16227,7 +16227,7 ; -16235,7 +16235,7 ; -16280,7 +16280,7 ; -16361,7 +16361,7 ; -16369,7 +16369,7 ; -16453,7 +16453,7 ; -16468,7 +16468,7 ; -16483,16 +16483,16 ; -16506,7 +16506,7 ; -16683,7 +16683,7 ; -16698,7 +16698,7 ; -16744,7 +16744,7 ; -16824,7 +16824,7 ; -16832,7 +16832,7 ; -16932,7 +16932,7 ; -16940,7 +16940,7 ; -16954,16 +16954,16 ; -16977,7 +16977,7 ; -17170,7 +17170,7 ; -17178,7 +17178,7 ; -17223,7 +17223,7 ; -17360,7 +17360,7 ; -17375,7 +17375,7 ; -17390,16 +17390,16 ; -17413,7 +17413,7 ; -17519,7 +17519,7 ; -17534,7 +17534,7 ; -17578,7 +17578,7 ; -17648,7 +17648,7 ; -17656,7 +17656,7 ; -17680,7 +17680,7 ; -17695,7 +17695,7 ; -17710,16 +17710,16 ; -17733,7 +17733,7 ; -17781,7 +17781,7 ; -17796,7 +17796,7 ; -17840,7 +17840,7 ; -17910,7 +17910,7 ; -17918,7 +17918,7 ; -17968,7 +17968,7 ; -17983,7 +17983,7 ; -17998,16 +17998,16 ; -18021,7 +18021,7 ; -18129,7 +18129,7 ; -18144,7 +18144,7 ; -18190,7 +18190,7 ; -18281,7 +18281,7 ; -18289,7 +18289,7 ; -18425,7 +18425,7 ; -18433,7 +18433,7 ; -18447,16 +18447,16 ; -18470,7 +18470,7 ; -18753,7 +18753,7 ; -18761,7 +18761,7 ; -18807,7 +18807,7 ; -18877,7 +18877,7 ; -18885,7 +18885,7 ; -18935,7 +18935,7 ; -18950,7 +18950,7 ; -18965,16 +18965,16 ; -18988,7 +18988,7 ; -19096,7 +19096,7 ; -19111,7 +19111,7 ; -19155,7 +19155,7 ; -19632,7 +19632,7 ; -19681,13 +19681,13 ; -19811,7 +19811,7 ; -19822,7 +19822,7 ; -19874,7 +19874,7 ; -19962,7 +19962,7 ; -19971,11 +19971,11 ; -19989,26 +19989,26 ; -20022,7 +20022,7 ; -20031,7 +20031,7 ; -20086,7 +20086,7 ; -20106,7 +20106,7 ; -20132,7 +20132,7 ; -20264,7 +20264,7 ; -20273,7 +20273,7 ; -20283,9 +20283,9 ; -20293,9 +20293,9 ; -20339,7 +20339,7 ; -20420,7 +20420,7 ; -20429,11 +20429,11 ; -20447,14 +20447,14 ; -20463,7 +20463,7 ; -20518,7 +20518,7 ; -20538,7 +20538,7 ; -20569,11 +20569,11 ; -20582,14 +20582,14 ; -20597,7 +20597,7 ; -20688,7 +20688,7 ; -20697,7 +20697,7 ; -20705,9 +20705,9 ; -20746,7 +20746,7 ; -20774,16 +20774,16 ; -20936,7 +20936,7 ; -20951,7 +20951,7 ; -20989,7 +20989,7 ; -21009,7 +21009,7 ; -21093,7 +21093,7 ; -21112,7 +21112,7 ; -21799,10 +21799,10 ; -21846,7 +21846,7 ; -21890,7 +21890,7 ; -21902,7 +21902,7 ; -21923,7 +21923,7 ; -21946,7 +21946,7 ; -21957,7 +21957,7 ; -21979,7 +21979,7 ; -22001,7 +22001,7 ; -22012,7 +22012,7 ; -22023,7 +22023,7 ; -22034,7 +22034,7 ; -22045,7 +22045,7 ; -22067,7 +22067,7 ; -22089,7 +22089,7 ; -22111,7 +22111,7 ; -22133,7 +22133,7 ; -22173,7 +22173,7 ; -22210,7 +22210,7 ; -22221,7 +22221,7 ; -22276,7 +22276,7 ; -22287,7 +22287,7 ; -22298,7 +22298,7 ; -22309,7 +22309,7 ; -22320,7 +22320,7 ; -22331,7 +22331,7 ; -22342,7 +22342,7 ; -22353,7 +22353,7 ; -22364,7 +22364,7 ; -22375,7 +22375,7 ; -22386,7 +22386,7 ; -22397,7 +22397,7 ; -22408,7 +22408,7 ; -22419,7 +22419,7 ; -22430,7 +22430,7 ; -22441,7 +22441,7 ; -22452,7 +22452,7 ; -22463,7 +22463,7 ; -22474,7 +22474,7 ; -22485,7 +22485,7 ; -22507,7 +22507,7 ; -22529,7 +22529,7 ; -22569,7 +22569,7 ; -22628,7 +22628,7 ; -22661,7 +22661,7 ; -22749,7 +22749,7 ; -22771,7 +22771,7 ; -22782,7 +22782,7 ; -22793,7 +22793,7 ; -22815,7 +22815,7 ; -22837,7 +22837,7 ; -22947,7 +22947,7 ; -22969,7 +22969,7 ; -23020,10 +23020,10 ; -23045,7 +23045,7 ; -23170,20 +23170,20 ; -23191,10 +23191,10 ; -23206,7 +23206,7 ; -23257,8 +23257,8 ; -23270,8 +23270,8 ; -23289,7 +23289,7 ; -23307,7 +23307,7 ; -23320,7 +23320,7 ; -23333,7 +23333,7 ; -23351,7 +23351,7 ; -23369,7 +23369,7 ; -23387,7 +23387,7 ; -23405,7 +23405,7 ; -23418,7 +23418,7 ; -23431,7 +23431,7 ; -23442,7 +23442,7 ; -23941,7 +23941,7 ; -23955,7 +23955,7 ; -23968,7 +23968,7 ; -23982,7 +23982,7 ; -24046,7 +24046,7 ; -24060,7 +24060,7 ; -24073,7 +24073,7 ; -24087,11 +24087,11 ; -24105,7 +24105,7 ; -24118,7 +24118,7 ; -24131,7 +24131,7 ;","struct __pyx_obj_6mtrand_RandomState;struct __pyx_obj_6mtrand_RandomState;typedef double (*__pyx_t_6mtrand_rk_cont1)(rk_state *, double);typedef double (*__pyx_t_6mtrand_rk_cont2)(rk_state *, double, double);typedef double (*__pyx_t_6mtrand_rk_cont3)(rk_state *, double, double, double);typedef long (*__pyx_t_6mtrand_rk_discdd)(rk_state *, double, double);typedef long (*__pyx_t_6mtrand_rk_discnmN)(rk_state *, long, long, long);static PyObject *__pyx_k_tuple_198;static PyObject *__pyx_f_6mtrand_cont0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont1_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont1_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont1_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont1_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont2_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont2_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont2_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont2_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont3_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont3_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont3_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont3_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_disc0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_disc0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_disc0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_disc0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_disc0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discnp_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discnp_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discnp_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discnp_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discnp_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discdd_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discdd_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discdd_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discdd_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnmN_array_sc(rk_state *__pyx_v_state, __py;static PyObject *__pyx_f_6mtrand_discnmN_array_sc(rk_state *__pyx_v_state, __py;static PyObject *__pyx_f_6mtrand_discnmN_array_sc(rk_state *__pyx_v_state, __py;static PyObject *__pyx_f_6mtrand_discnmN_array_sc(rk_state *__pyx_v_state, __py;static PyObject *__pyx_f_6mtrand_discnmN_array_sc(rk_state *__pyx_v_state, __py;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discd_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_discd_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_discd_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_discd_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_discd_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static double __pyx_f_6mtrand_kahan_sum(double *__pyx_v_darr, npy_intp __pyx_v_;static double __pyx_f_6mtrand_kahan_sum(double *__pyx_v_darr, npy_intp __pyx_v_;static int __pyx_pw_6mtrand_11RandomState_1__init__(PyObject *__pyx_v_self, PyO;static int __pyx_pf_6mtrand_11RandomState___init__(struct __pyx_obj_6mtrand_Ran;static void __pyx_pw_6mtrand_11RandomState_3__dealloc__(PyObject *__pyx_v_self;static void __pyx_pf_6mtrand_11RandomState_2__dealloc__(struct __pyx_obj_6mtran;static void __pyx_pf_6mtrand_11RandomState_2__dealloc__(struct __pyx_obj_6mtran;static void __pyx_pf_6mtrand_11RandomState_2__dealloc__(struct __pyx_obj_6mtran;static PyObject *__pyx_pw_6mtrand_11RandomState_5seed(PyObject *__pyx_v_self, P;static PyObject *__pyx_pf_6mtrand_11RandomState_4seed(struct __pyx_obj_6mtrand_;static PyObject *__pyx_pw_6mtrand_11RandomState_7get_state(PyObject *__pyx_v_se;static PyObject *__pyx_pf_6mtrand_11RandomState_6get_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_6get_state(struct __pyx_obj_6mt;static PyObject *__pyx_pw_6mtrand_11RandomState_9set_state(PyObject *__pyx_v_se;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pw_6mtrand_11RandomState_11__getstate__(PyObject *__pyx_;static PyObject *__pyx_pf_6mtrand_11RandomState_10__getstate__(struct __pyx_obj;static PyObject *__pyx_pw_6mtrand_11RandomState_13__setstate__(PyObject *__pyx_;static PyObject *__pyx_pf_6mtrand_11RandomState_12__setstate__(struct __pyx_obj;static PyObject *__pyx_pw_6mtrand_11RandomState_15__reduce__(PyObject *__pyx_v_;static PyObject *__pyx_pf_6mtrand_11RandomState_14__reduce__(struct __pyx_obj_6;static PyObject *__pyx_pw_6mtrand_11RandomState_17random_sample(PyObject *__pyx;static PyObject *__pyx_pf_6mtrand_11RandomState_16random_sample(struct __pyx_ob;static PyObject *__pyx_pw_6mtrand_11RandomState_19tomaxint(PyObject *__pyx_v_se;static PyObject *__pyx_pf_6mtrand_11RandomState_18tomaxint(struct __pyx_obj_6mt;static PyObject *__pyx_pw_6mtrand_11RandomState_21randint(PyObject *__pyx_v_sel;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pw_6mtrand_11RandomState_23bytes(PyObject *__pyx_v_self;static PyObject *__pyx_pf_6mtrand_11RandomState_22bytes(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_22bytes(struct __pyx_obj_6mtran;static PyObject *__pyx_pw_6mtrand_11RandomState_25choice(PyObject *__pyx_v_self;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pw_6mtrand_11RandomState_27uniform(PyObject *__pyx_v_sel;static PyObject *__pyx_pf_6mtrand_11RandomState_26uniform(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_26uniform(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_26uniform(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_26uniform(struct __pyx_obj_6mtr;static PyObject *__pyx_pw_6mtrand_11RandomState_29rand(PyObject *__pyx_v_self, ;static PyObject *__pyx_pf_6mtrand_11RandomState_28rand(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_28rand(struct __pyx_obj_6mtrand;static PyObject *__pyx_pw_6mtrand_11RandomState_31randn(PyObject *__pyx_v_self;static PyObject *__pyx_pf_6mtrand_11RandomState_30randn(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_30randn(struct __pyx_obj_6mtran;static PyObject *__pyx_pw_6mtrand_11RandomState_33random_integers(PyObject *__p;static PyObject *__pyx_pf_6mtrand_11RandomState_32random_integers(struct __pyx_;static PyObject *__pyx_pf_6mtrand_11RandomState_32random_integers(struct __pyx_;static PyObject *__pyx_pf_6mtrand_11RandomState_32random_integers(struct __pyx_;static PyObject *__pyx_pw_6mtrand_11RandomState_35standard_normal(PyObject *__p;static PyObject *__pyx_pf_6mtrand_11RandomState_34standard_normal(struct __pyx_;static PyObject *__pyx_pw_6mtrand_11RandomState_37normal(PyObject *__pyx_v_self;static PyObject *__pyx_pf_6mtrand_11RandomState_36normal(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_36normal(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_36normal(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_36normal(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_36normal(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_36normal(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_36normal(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_36normal(struct __pyx_obj_6mtra;static PyObject *__pyx_pw_6mtrand_11RandomState_39beta(PyObject *__pyx_v_self, ;static PyObject *__pyx_pf_6mtrand_11RandomState_38beta(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_38beta(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_38beta(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_38beta(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_38beta(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_38beta(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_38beta(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_38beta(struct __pyx_obj_6mtrand;static PyObject *__pyx_pw_6mtrand_11RandomState_41exponential(PyObject *__pyx_v;static PyObject *__pyx_pf_6mtrand_11RandomState_40exponential(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_40exponential(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_40exponential(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_40exponential(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_40exponential(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_40exponential(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_40exponential(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_40exponential(struct __pyx_obj_;static PyObject *__pyx_pw_6mtrand_11RandomState_43standard_exponential(PyObjec;static PyObject *__pyx_pf_6mtrand_11RandomState_42standard_exponential(struct _;static PyObject *__pyx_pw_6mtrand_11RandomState_45standard_gamma(PyObject *__py;static PyObject *__pyx_pf_6mtrand_11RandomState_44standard_gamma(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_44standard_gamma(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_44standard_gamma(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_44standard_gamma(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_44standard_gamma(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_44standard_gamma(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_44standard_gamma(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_44standard_gamma(struct __pyx_o;static PyObject *__pyx_pw_6mtrand_11RandomState_47gamma(PyObject *__pyx_v_self;static PyObject *__pyx_pf_6mtrand_11RandomState_46gamma(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_46gamma(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_46gamma(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_46gamma(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_46gamma(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_46gamma(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_46gamma(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_46gamma(struct __pyx_obj_6mtran;static PyObject *__pyx_pw_6mtrand_11RandomState_49f(PyObject *__pyx_v_self, PyO;static PyObject *__pyx_pf_6mtrand_11RandomState_48f(struct __pyx_obj_6mtrand_Ra;static PyObject *__pyx_pf_6mtrand_11RandomState_48f(struct __pyx_obj_6mtrand_Ra;static PyObject *__pyx_pf_6mtrand_11RandomState_48f(struct __pyx_obj_6mtrand_Ra;static PyObject *__pyx_pf_6mtrand_11RandomState_48f(struct __pyx_obj_6mtrand_Ra;static PyObject *__pyx_pf_6mtrand_11RandomState_48f(struct __pyx_obj_6mtrand_Ra;static PyObject *__pyx_pf_6mtrand_11RandomState_48f(struct __pyx_obj_6mtrand_Ra;static PyObject *__pyx_pf_6mtrand_11RandomState_48f(struct __pyx_obj_6mtrand_Ra;static PyObject *__pyx_pf_6mtrand_11RandomState_48f(struct __pyx_obj_6mtrand_Ra;static PyObject *__pyx_pw_6mtrand_11RandomState_51noncentral_f(PyObject *__pyx_;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pw_6mtrand_11RandomState_53chisquare(PyObject *__pyx_v_s;static PyObject *__pyx_pf_6mtrand_11RandomState_52chisquare(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_52chisquare(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_52chisquare(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_52chisquare(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_52chisquare(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_52chisquare(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_52chisquare(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_52chisquare(struct __pyx_obj_6m;static PyObject *__pyx_pw_6mtrand_11RandomState_55noncentral_chisquare(PyObjec;static PyObject *__pyx_pf_6mtrand_11RandomState_54noncentral_chisquare(struct _;static PyObject *__pyx_pf_6mtrand_11RandomState_54noncentral_chisquare(struct _;static PyObject *__pyx_pf_6mtrand_11RandomState_54noncentral_chisquare(struct _;static PyObject *__pyx_pf_6mtrand_11RandomState_54noncentral_chisquare(struct _;static PyObject *__pyx_pf_6mtrand_11RandomState_54noncentral_chisquare(struct _;static PyObject *__pyx_pf_6mtrand_11RandomState_54noncentral_chisquare(struct _;static PyObject *__pyx_pw_6mtrand_11RandomState_57standard_cauchy(PyObject *__p;static PyObject *__pyx_pf_6mtrand_11RandomState_56standard_cauchy(struct __pyx_;static PyObject *__pyx_pw_6mtrand_11RandomState_59standard_t(PyObject *__pyx_v_;static PyObject *__pyx_pf_6mtrand_11RandomState_58standard_t(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_58standard_t(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_58standard_t(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_58standard_t(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_58standard_t(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_58standard_t(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_58standard_t(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_58standard_t(struct __pyx_obj_6;static PyObject *__pyx_pw_6mtrand_11RandomState_61vonmises(PyObject *__pyx_v_se;static PyObject *__pyx_pf_6mtrand_11RandomState_60vonmises(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_60vonmises(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_60vonmises(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_60vonmises(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_60vonmises(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_60vonmises(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_60vonmises(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_60vonmises(struct __pyx_obj_6mt;static PyObject *__pyx_pw_6mtrand_11RandomState_63pareto(PyObject *__pyx_v_self;static PyObject *__pyx_pf_6mtrand_11RandomState_62pareto(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_62pareto(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_62pareto(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_62pareto(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_62pareto(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_62pareto(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_62pareto(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_62pareto(struct __pyx_obj_6mtra;static PyObject *__pyx_pw_6mtrand_11RandomState_65weibull(PyObject *__pyx_v_sel;static PyObject *__pyx_pf_6mtrand_11RandomState_64weibull(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_64weibull(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_64weibull(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_64weibull(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_64weibull(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_64weibull(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_64weibull(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_64weibull(struct __pyx_obj_6mtr;static PyObject *__pyx_pw_6mtrand_11RandomState_67power(PyObject *__pyx_v_self;static PyObject *__pyx_pf_6mtrand_11RandomState_66power(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_66power(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_66power(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_66power(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_66power(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_66power(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_66power(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_66power(struct __pyx_obj_6mtran;static PyObject *__pyx_pw_6mtrand_11RandomState_69laplace(PyObject *__pyx_v_sel;static PyObject *__pyx_pf_6mtrand_11RandomState_68laplace(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_68laplace(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_68laplace(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_68laplace(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_68laplace(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_68laplace(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_68laplace(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_68laplace(struct __pyx_obj_6mtr;static PyObject *__pyx_pw_6mtrand_11RandomState_71gumbel(PyObject *__pyx_v_self;static PyObject *__pyx_pf_6mtrand_11RandomState_70gumbel(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_70gumbel(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_70gumbel(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_70gumbel(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_70gumbel(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_70gumbel(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_70gumbel(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_70gumbel(struct __pyx_obj_6mtra;static PyObject *__pyx_pw_6mtrand_11RandomState_73logistic(PyObject *__pyx_v_se;static PyObject *__pyx_pf_6mtrand_11RandomState_72logistic(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_72logistic(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_72logistic(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_72logistic(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_72logistic(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_72logistic(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_72logistic(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_72logistic(struct __pyx_obj_6mt;static PyObject *__pyx_pw_6mtrand_11RandomState_75lognormal(PyObject *__pyx_v_s;static PyObject *__pyx_pf_6mtrand_11RandomState_74lognormal(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_74lognormal(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_74lognormal(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_74lognormal(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_74lognormal(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_74lognormal(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_74lognormal(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_74lognormal(struct __pyx_obj_6m;static PyObject *__pyx_pw_6mtrand_11RandomState_77rayleigh(PyObject *__pyx_v_se;static PyObject *__pyx_pf_6mtrand_11RandomState_76rayleigh(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_76rayleigh(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_76rayleigh(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_76rayleigh(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_76rayleigh(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_76rayleigh(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_76rayleigh(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_76rayleigh(struct __pyx_obj_6mt;static PyObject *__pyx_pw_6mtrand_11RandomState_79wald(PyObject *__pyx_v_self, ;static PyObject *__pyx_pf_6mtrand_11RandomState_78wald(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_78wald(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_78wald(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_78wald(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_78wald(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_78wald(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_78wald(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_78wald(struct __pyx_obj_6mtrand;static PyObject *__pyx_pw_6mtrand_11RandomState_81triangular(PyObject *__pyx_v_;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pw_6mtrand_11RandomState_83binomial(PyObject *__pyx_v_se;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pw_6mtrand_11RandomState_85negative_binomial(PyObject *_;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pw_6mtrand_11RandomState_87poisson(PyObject *__pyx_v_sel;static PyObject *__pyx_pf_6mtrand_11RandomState_86poisson(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_86poisson(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_86poisson(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_86poisson(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_86poisson(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_86poisson(struct __pyx_obj_6mtr;static PyObject *__pyx_pw_6mtrand_11RandomState_89zipf(PyObject *__pyx_v_self, ;static PyObject *__pyx_pf_6mtrand_11RandomState_88zipf(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_88zipf(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_88zipf(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_88zipf(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_88zipf(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_88zipf(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_88zipf(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_88zipf(struct __pyx_obj_6mtrand;static PyObject *__pyx_pw_6mtrand_11RandomState_91geometric(PyObject *__pyx_v_s;static PyObject *__pyx_pf_6mtrand_11RandomState_90geometric(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_90geometric(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_90geometric(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_90geometric(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_90geometric(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_90geometric(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_90geometric(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_90geometric(struct __pyx_obj_6m;static PyObject *__pyx_pw_6mtrand_11RandomState_93hypergeometric(PyObject *__py;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pw_6mtrand_11RandomState_95logseries(PyObject *__pyx_v_s;static PyObject *__pyx_pf_6mtrand_11RandomState_94logseries(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_94logseries(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_94logseries(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_94logseries(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_94logseries(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_94logseries(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_94logseries(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_94logseries(struct __pyx_obj_6m;static PyObject *__pyx_pw_6mtrand_11RandomState_97multivariate_normal(PyObject ;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pw_6mtrand_11RandomState_99multinomial(PyObject *__pyx_v;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pw_6mtrand_11RandomState_101dirichlet(PyObject *__pyx_v_;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pw_6mtrand_11RandomState_103shuffle(PyObject *__pyx_v_se;static PyObject *__pyx_pf_6mtrand_11RandomState_102shuffle(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_102shuffle(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_102shuffle(struct __pyx_obj_6mt;static PyObject *__pyx_pw_6mtrand_11RandomState_105permutation(PyObject *__pyx_;static PyObject *__pyx_pf_6mtrand_11RandomState_104permutation(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_104permutation(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_104permutation(struct __pyx_obj;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/testing/noseclasses.py,[u'2'],1,1," -122,7 +122,7 ;","def check_output(self, want, got, optionflags);"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/testing/nosetester.py,[u'1'],0,1," -457,4 +457,3 ;","def bench(self, label='fast', verbose=1, extra_argv=None);"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,numpy/testing/utils.py,[u'1'],0,1," -1580,4 +1580,3 ;","def gen_alignment_data(dtype=float32, type='binary', max_size=24);"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,tools/c_coverage/HOWTO_C_COVERAGE.txt,[u'1'],0,1," -115,4 +115,3 ;",removing lines because they are tautologically impossible or t;
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,tools/commitstats.py,[u'7'],1,1," -14,7 +14,7 ; -33,12 +33,9 ;","def get_count(filename, repo);def get_count(filename, repo);"
3635,2,8ddb0ce, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:16:06 -0600",ct: [PATCH 1/2] STY: Giant whitespace cleanup.Now is as good a time as any with open PR's at a low.,153,1464,1545,tools/win32build/doall.py,[u'4'],1,1," -19,9 +19,9 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,doc/newdtype_example/example.py,[u'2'],1,1," -8,7 +8,7 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,doc/newdtype_example/setup.py,[u'2'],1,1," -4,7 +4,7 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,doc/numpybook/comparison/ctypes/interface.py,[u'2'],1,1," -49,7 +49,7 ;","def add(a, b);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,doc/numpybook/comparison/timing.py,[u'6'],1,1," -43,7 +43,7 ; -57,6 +57,6 ;",;;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,doc/numpybook/comparison/weave/filter.py,[u'2'],1,1," -20,5 +20,5 ;",def filter(a);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,doc/numpybook/comparison/weave/inline.py,[u'10'],1,1," -16,7 +16,7 ; -36,16 +36,16 ;",def example1(a);def arr(a);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,doc/numpybook/runcode.py,[u'4'],1,1," -131,7 +131,7 ; -143,7 +143,7 ;","def runpycode(lyxstr, name='MyCode');def main(args);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,doc/swig/test/setup.py,[u'2'],1,1," -59,6 +59,6 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,doc/swig/test/testArray.py,[u'4'],1,1," -115,7 +115,7 ; -138,7 +138,7 ;",def testView(self);def testConstructor1(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,doc/swig/test/testFarray.py,[u'16'],1,1," -16,7 +16,7 ; -36,7 +36,7 ; -66,10 +66,10 ; -114,7 +114,7 ; -128,20 +128,20 ;",;def testConstructor2(self);def testSetGet(self);def testAsString(self);def testStr(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,doc/swig/test/testFortran.py,[u'2'],1,1," -47,7 +47,7 ;",def testSecondElementObject(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,doc/swig/test/testMatrix.py,[u'62'],1,1," -29,7 +29,7 ; -37,7 +37,7 ; -45,7 +45,7 ; -53,7 +53,7 ; -68,7 +68,7 ; -76,7 +76,7 ; -98,7 +98,7 ; -106,7 +106,7 ; -114,7 +114,7 ; -128,16 +128,16 ; -145,7 +145,7 ; -153,7 +153,7 ; -161,7 +161,7 ; -169,16 +169,16 ; -186,7 +186,7 ; -194,7 +194,7 ; -202,16 +202,16 ; -219,7 +219,7 ; -227,7 +227,7 ; -235,9 +235,9 ;",def testDet(self);def testDetBadList(self);def testDetWrongDim(self);def testDetWrongSize(self);def testMax(self);def testMaxBadList(self);def testMin(self);def testMinBadList(self);def testMinWrongDim(self);def testScale(self);def testScaleWrongSize(self);def testScaleWrongType(self);def testScaleNonArray(self);def testFloor(self);def testFloorWrongType(self);def testFloorNonArray(self);def testCeil(self);def testCeilWrongType(self);def testCeilNonArray(self);def testLUSplit(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,doc/swig/test/testSuperTensor.py,[u'60'],1,1," -30,10 +30,10 ; -41,7 +41,7 ; -49,7 +49,7 ; -57,7 +57,7 ; -72,7 +72,7 ; -80,7 +80,7 ; -102,7 +102,7 ; -110,7 +110,7 ; -125,16 +125,16 ; -142,9 +142,9 ; -152,8 +152,8 ; -161,9 +161,9 ; -177,12 +177,12 ; -190,7 +190,7 ; -198,7 +198,7 ; -212,11 +212,11 ; -224,7 +224,7 ; -232,7 +232,7 ; -240,7 +240,7 ; -248,7 +248,7 ;",def testNorm(self);def testNormBadList(self);def testNormWrongDim(self);def testNormWrongSize(self);def testMax(self);def testMaxBadList(self);def testMin(self);def testMinBadList(self);def testMinWrongDim(self);def testScaleWrongType(self);def testScaleWrongDim(self);def testScaleWrongSize(self);def testScaleNonArray(self);def testFloorWrongType(self);def testFloorWrongDim(self);def testFloorNonArray(self);def testCeilWrongType(self);def testCeilWrongDim(self);def testCeilNonArray(self);def testLUSplit(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,doc/swig/test/testTensor.py,[u'112'],1,1," -31,8 +31,8 ; -43,8 +43,8 ; -52,8 +52,8 ; -61,8 +61,8 ; -77,8 +77,8 ; -86,8 +86,8 ; -109,8 +109,8 ; -118,8 +118,8 ; -134,29 +134,29 ; -164,8 +164,8 ; -173,9 +173,9 ; -190,19 +190,19 ; -210,7 +210,7 ; -225,19 +225,19 ; -245,7 +245,7 ; -253,8 +253,8 ; -262,12 +262,12 ;",def testNorm(self);def testNormBadList(self);def testNormWrongDim(self);def testNormWrongSize(self);def testMax(self);def testMaxBadList(self);def testMin(self);def testMinBadList(self);def testMinWrongDim(self);def testScaleWrongDim(self);def testScaleWrongSize(self);def testFloor(self);def testFloorWrongDim(self);def testCeil(self);def testCeilWrongDim(self);def testCeilNonArray(self);def testLUSplit(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,doc/swig/test/testVector.py,[u'56'],1,1," -50,7 +50,7 ; -64,21 +64,21 ; -92,21 +92,21 ; -120,16 +120,16 ; -137,7 +137,7 ; -145,7 +145,7 ; -153,23 +153,23 ; -177,7 +177,7 ; -185,23 +185,23 ; -209,7 +209,7 ; -217,16 +217,16 ; -234,7 +234,7 ; -249,7 +249,7 ;",def testLengthWrongDim(self);def testProd(self);def testSum(self);def testReverse(self);def testReverseWrongSize(self);def testReverseWrongType(self);def testReverseNonArray(self);def testOnesWrongType(self);def testOnesNonArray(self);def testZerosWrongType(self);def testZerosNonArray(self);def testTwos(self);def testThrees(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/_import_tools.py,[u'106'],1,1," -15,14 +15,14 ; -32,17 +32,17 ; -57,7 +57,7 ; -73,30 +73,30 ; -107,8 +107,8 ; -165,10 +165,10 ; -178,13 +178,13 ; -195,7 +195,7 ; -205,10 +205,10 ; -224,11 +224,11 ; -238,60 +238,60 ; -313,14 +313,14 ; -329,20 +329,20 ;","def __init__(self, verbose=False, infunc=False);def _get_info_files(self, package_dir, parent_path, parent_package=None);def _init_info_modules(self, packages=None);def _init_info_modules(self, packages=None);def _get_sorted_names(self);def __call__(self,*packages, **options);def __call__(self,*packages, **options);def __call__(self,*packages, **options);def __call__(self,*packages, **options);def __call__(self,*packages, **options);def __call__(self,*packages, **options);def get_pkgdocs(self);def get_pkgdocs(self);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/add_newdocs.py,[u'10'],1,1," -925,7 +925,7 ; -1280,10 +1280,10 ; -1347,14 +1347,14 ;","def luf(lamdaexpr, *args, **kwargs);def luf(lamdaexpr, *args, **kwargs);def luf(lamdaexpr, *args, **kwargs);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/build_utils/common.py,[u'6'],1,1," -73,9 +73,9 ;",def _pyod3();
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/compat/setup.py,[u'2'],1,1," -4,7 +4,7 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/__init__.py,[u'4'],1,1," -32,7 +32,7 ; -58,7 +58,7 ;",";def _ufunc_reconstruct(module, name);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/_internal.py,[u'6'],1,1," -24,7 +24,7 ; -108,10 +108,10 ;","def _makenames_list(adict, align);def _array_descr(descriptor);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/arrayprint.py,[u'6'],1,1," -214,7 +214,7 ; -510,7 +510,7 ; -521,7 +521,7 ;","def _leading_trailing(a);def _formatArray(a, format_function, rank, max_line_len;def _formatArray(a, format_function, rank, max_line_len;"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/code_generators/genapi.py,[u'2'],1,1," -72,7 +72,7 ;",def remove_whitespace(s);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/code_generators/generate_umath.py,[u'172'],1,2," -237,7 +237,7 ; -248,7 +248,7 ; -259,7 +259,7 ; -271,7 +271,7 ; -282,7 +282,7 ; -293,7 +293,7 ; -306,14 +306,14 ; -321,14 +321,14 ; -337,14 +337,14 ; -352,7 +352,7 ; -360,13 +360,13 ; -374,316 +374,316 ; -691,105 +691,105 ; -801,11 +801,11 ; -899,7 +899,7 ; -939,11 +939,11 ; -966,7 +966,7 ;","def english_upper(s);def english_upper(s);def english_upper(s);def english_upper(s);def english_upper(s);def english_upper(s);def english_upper(s);def english_upper(s);def english_upper(s);def english_upper(s);def english_upper(s);def english_upper(s);def english_upper(s);def english_upper(s);def make_arrays(funcdict);def make_ufuncs(funcdict);def make_code(funcdict,filename);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/fromnumeric.py,[u'4'],1,1," -40,7 +40,7 ; -2239,7 +2239,7 ;","def _wrapit(obj, method, *args, **kwds);def alen(a);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/function_base.py,[u'4'],1,1," -164,5 +164,5 ;","def logspace(start,stop,num=50,endpoint=True,base=10.0);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/getlimits.py,[u'28'],1,1," -3,7 +3,7 ; -97,7 +97,7 ; -107,7 +107,7 ; -115,7 +115,7 ; -151,11 +151,11 ; -296,11 +296,11 ;",";def __new__(cls, dtype);def __new__(cls, dtype);def __new__(cls, dtype);def _init(self, dtype);def __repr__(self);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/memmap.py,[u'4'],1,1," -11,7 +11,7 ; -204,7 +204,7 ;",";def __new__(subtype, filename, dtype=uint8, mode='r+', offset=0;"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/numeric.py,[u'32'],1,1," -866,9 +866,9 ; -953,7 +953,7 ; -963,7 +963,7 ; -1037,7 +1037,7 ; -1169,8 +1169,8 ; -1346,7 +1346,7 ; -1462,12 +1462,12 ; -1489,11 +1489,11 ; -1742,10 +1742,10 ; -2019,7 +2019,7 ; -2699,7 +2699,7 ;","def correlate(a, v, mode='valid', old_behavior=False);def convolve(a,v,mode='full');def convolve(a,v,mode='full');def outer(a,b);def tensordot(a, b, axes=2);def rollaxis(a, axis, start=0);def cross(a, b, axisa=-1, axisb=-1, axisc=-1, axis=None);def cross(a, b, axisa=-1, axisb=-1, axisc=-1, axis=None);def indices(dimensions, dtype=int);def _maketup(descr, val);class errstate(object);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/numerictypes.py,[u'14'],1,1," -86,7 +86,7 ; -436,7 +436,7 ; -445,7 +445,7 ; -541,7 +541,7 ; -871,7 +871,7 ; -942,7 +942,7 ; -1030,6 +1030,6 ;",";def _construct_char_code_lookup();def _construct_char_code_lookup();def maximum_sctype(t);def sctype2char(sctype);def _find_common_coerce(a, b);def find_common_type(array_types, scalar_types);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/setup.py,[u'78'],1,1," -360,10 +360,10 ; -383,12 +383,12 ; -397,32 +397,32 ; -471,10 +471,10 ; -493,7 +493,7 ; -523,13 +523,13 ; -567,10 +567,10 ; -621,11 +621,11 ; -643,7 +643,7 ; -826,7 +826,7 ; -857,13 +857,13 ; -881,7 +881,7 ; -905,7 +905,7 ; -919,19 +919,19 ; -942,21 +942,21 ; -970,7 +970,7 ;","def check_types(config_cmd, ext, build_dir);def visibility_define(config);def configuration(parent_package='',top_path=None);def generate_config_h(ext, build_dir);def generate_config_h(ext, build_dir);def generate_config_h(ext, build_dir);def generate_numpyconfig_h(ext, build_dir);def generate_api(ext, build_dir);def generate_api(ext, build_dir);def generate_multiarray_templated_sources(ext, build_dir);def generate_umath_templated_sources(ext, build_dir);def generate_umath_c(ext, build_dir);def generate_umath_c(ext, build_dir);def generate_umath_c(ext, build_dir);def get_dotblas_sources(ext, build_dir);def get_dotblas_sources(ext, build_dir);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/setup_common.py,[u'6'],1,1," -236,9 +236,9 ;",def _pyod3();
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/shape_base.py,[u'10'],1,1," -1,6 +1,6 ; -100,7 +100,7 ; -162,11 +162,11 ;",;def atleast_2d(*arys);def atleast_3d(*arys);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/src/multiarray/testcalcs.py,[u'2'],1,1," -33,7 +33,7 ;",def year_offset(year);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/tests/test_api.py,[u'84'],1,1," -167,19 +167,19 ; -221,7 +221,7 ; -276,7 +276,7 ; -285,23 +285,23 ; -311,27 +311,27 ; -397,10 +397,10 ; -410,13 +410,13 ; -426,27 +426,27 ;","def test_fastCopyAndTranspose();def test_array_astype();def test_array_astype();def test_copyto_fromscalar();def test_copyto();def check_copy_result(x, y, ccontig, fcontig, strides=False);def check_contig(a, ccontig, fcontig);def check_contig(a, ccontig, fcontig);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/tests/test_blasdot.py,[u'18'],1,1," -50,16 +50,16 ; -81,8 +81,8 ;",def test_dot_3args();def test_dot_3args_errors();
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/tests/test_datetime.py,[u'108'],1,1," -159,26 +159,26 ; -351,12 +351,12 ; -592,7 +592,7 ; -878,11 +878,11 ; -1004,40 +1004,40 ; -1394,18 +1394,18 ; -1413,18 +1413,18 ; -1432,14 +1432,14 ; -1481,26 +1481,26 ;",def test_datetime_scalar_construction(self);def test_timedelta_scalar_construction_units(self);def test_dtype_promotion(self);def test_datetime_subtract(self);def test_datetime_minmax(self);def test_datetime_arange(self);def test_timedelta_arange(self);def test_datetime_maximum_reduce(self);def test_datetime_busdaycalendar(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/tests/test_defchararray.py,[u'34'],1,1," -37,14 +37,14 ; -572,9 +572,9 ; -588,9 +588,9 ; -603,18 +603,18 ;",def test_from_string_array(self);def test_radd(self);def test_mul(self);def test_rmul(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/tests/test_deprecations.py,[u'30'],1,1," -148,20 +148,20 ; -170,7 +170,7 ; -180,8 +180,8 ; -193,26 +193,26 ; -261,8 +261,8 ;","def assert_deprecated(*args, **kwargs);def assert_deprecated(*args, **kwargs);def test_valid_indexing(self);def assert_deprecated(*args, **kwargs);def test_bool_as_int_argument(self);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/tests/test_dtype.py,[u'112'],1,1," -85,21 +85,21 ; -116,10 +116,10 ; -139,9 +139,9 ; -150,7 +150,7 ; -167,7 +167,7 ; -182,22 +182,22 ; -206,23 +206,23 ; -263,38 +263,38 ; -357,7 +357,7 ; -365,7 +365,7 ; -378,7 +378,7 ; -403,7 +403,7 ; -412,7 +412,7 ; -425,7 +425,7 ;",def test_invalid_types(self);def test_different_names(self);def test_aligned_size(self);def test_aligned_size(self);def test_aligned_size(self);def test_aligned_size(self);def test_union_struct(self);def test_nonequivalent_record(self);def test_complex_dtype_str(self);def test_complex_dtype_str(self);def test_complex_dtype_str(self);def test_complex_dtype_repr(self);def test_complex_dtype_repr(self);def test_complex_dtype_repr(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/tests/test_einsum.py,[u'256'],2,2," -38,42 +38,42 ; -85,186 +85,186 ; -275,11 +275,11 ; -288,17 +288,17 ; -306,30 +306,30 ; -337,50 +337,50 ; -395,20 +395,20 ; -427,8 +427,8 ; -479,15 +479,15 ;","def test_einsum_errors(self);def test_einsum_views(self);def check_einsum_sums(self, dtype);def check_einsum_sums(self, dtype);def check_einsum_sums(self, dtype);def check_einsum_sums(self, dtype);def check_einsum_sums(self, dtype);def check_einsum_sums(self, dtype);def test_einsum_sums_clongdouble(self);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/tests/test_function_base.py,[u'26'],1,1," -5,33 +5,33 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/tests/test_getlimits.py,[u'10'],1,1," -15,31 +15,31 ;",class TestPythonFloat(TestCase);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/tests/test_half.py,[u'206'],1,2," -28,8 +28,8 ; -65,10 +65,10 ; -223,17 +223,17 ; -247,7 +247,7 ; -276,127 +276,127 ;",def setUp(self);def test_half_conversions(self);def test_half_funcs(self);def test_half_funcs(self);def test_spacing_nextafter(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/tests/test_indexerrors.py,[u'36'],1,1," -54,34 +54,34 ; -94,10 +94,10 ; -106,10 +106,10 ;","def test_iterators_exceptions(self);def assign(obj, ind, val);def assign(obj, ind, val);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/tests/test_indexing.py,[u'50'],1,1," -39,7 +39,7 ; -47,7 +47,7 ; -57,7 +57,7 ; -71,7 +71,7 ; -108,7 +108,7 ; -140,8 +140,8 ; -154,19 +154,19 ; -226,7 +226,7 ; -258,7 +258,7 ; -481,8 +481,8 ; -492,7 +492,7 ; -502,13 +502,13 ;","def test_empty_fancy_index(self);def test_ellipsis_index(self);def test_ellipsis_index(self);def test_single_int_index(self);def test_boolean_indexing_twodim(self);class TestMultiIndexingAutomated(TestCase);def setUp(self);def _get_multi_index(self, arr, indices);def _get_multi_index(self, arr, indices);def test_boolean(self);def test_multidim(self);def test_multidim(self);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/tests/test_item_selection.py,[u'4'],1,1," -8,12 +8,12 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/tests/test_memmap.py,[u'6'],1,1," -11,7 +11,7 ; -33,7 +33,7 ; -55,7 +55,7 ;",;def test_roundtrip(self);def test_attributes(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/tests/test_multiarray.py,[u'750'],5,5," -63,16 +63,16 ; -137,13 +137,13 ; -158,15 +158,15 ; -178,13 +178,13 ; -194,12 +194,12 ; -213,42 +213,42 ; -256,18 +256,18 ; -276,7 +276,7 ; -287,17 +287,17 ; -316,9 +316,9 ; -331,49 +331,49 ; -384,7 +384,7 ; -459,52 +459,52 ; -523,17 +523,17 ; -561,7 +561,7 ; -574,7 +574,7 ; -584,7 +584,7 ; -633,8 +633,8 ; -671,9 +671,9 ; -711,32 +711,32 ; -751,7 +751,7 ; -760,13 +760,13 ; -805,8 +805,8 ; -838,9 +838,9 ; -876,7 +876,7 ; -886,14 +886,14 ; -959,17 +959,17 ; -1156,23 +1156,23 ; -1253,11 +1253,11 ; -1293,12 +1293,12 ; -1316,13 +1316,13 ; -1470,39 +1470,39 ; -1512,11 +1512,11 ; -1533,7 +1533,7 ; -1552,7 +1552,7 ; -1570,78 +1570,78 ; -1652,14 +1652,14 ; -1669,11 +1669,11 ; -1716,7 +1716,7 ; -1737,11 +1737,11 ; -1784,7 +1784,7 ; -1823,18 +1823,18 ; -1848,45 +1848,45 ; -1907,36 +1907,36 ; -1946,7 +1946,7 ; -1954,39 +1954,39 ; -1998,27 +1998,27 ; -2028,7 +2028,7 ; -2109,7 +2109,7 ; -2149,21 +2149,21 ; -2210,14 +2210,14 ; -2228,13 +2228,13 ; -2274,15 +2274,15 ; -2304,21 +2304,21 ; -2393,14 +2393,14 ; -2432,11 +2432,11 ; -2448,11 +2448,11 ; -2460,13 +2460,13 ; -2605,7 +2605,7 ; -2656,7 +2656,7 ; -2684,16 +2684,16 ; -2717,8 +2717,8 ; -2737,7 +2737,7 ; -2749,23 +2749,23 ; -3052,13 +3052,13 ; -3187,13 +3187,13 ; -3224,32 +3224,32 ; -3272,7 +3272,7 ; -3282,7 +3282,7 ; -3292,7 +3292,7 ; -3344,7 +3344,7 ; -3354,14 +3354,14 ; -3374,7 +3374,7 ; -3460,7 +3460,7 ; -3497,19 +3497,19 ;","def test_otherflags(self);def make_array(size, offset, strides);def set_strides(arr, strides);def test_fill_struct_array(self);def test_assignment_broadcasting(self);def setUp(self);def assign(x, i, v);def test_constructor(self);def test_output(self);def test_newaxis(self);def test_overlapping_assignment(self);def __array__(self, dtype=None);def test_subarray_comparison(self);def test_test_interning(self);def test_sort(self);def test_sort(self);def test_sort(self);def test_sort(self);def test_sort(self);def assert_c(arr);def test_argsort(self);def test_argsort(self);def test_argsort(self);def test_argsort(self);def test_searchsorted(self);def test_searchsorted(self);def test_searchsorted_unicode(self);def test_partition(self);def test_partition_iterative(self);def test_partition_cdtype(self);def test_dot(self);def test_diagonal_memleak(self);def test_test_zero_rank(self);def _loads(self, obj);def test_version0_object(self);def test_version1_object(self);def test_mixed(self);class TestArgmax(TestCase);class TestArgmax(TestCase);class TestArgmin(TestCase);class TestArgmin(TestCase);def test_scalar(self);def _clip_type(self,type_group,array_max;def test_ip_types(self);def test_masked_array(self);def test_ip_types(self);def test_record_array(self);def tearDown(self);def test_numbers(self);def test_string_with_ws(self);def test_locale(self);def test_empty(self);def test___array__(self);def test_invalid_arguements(self);def test_field_names(self);def collect_warning_types(f, *args, **kwargs);def collect_warning_types(f, *args, **kwargs);def test_record_hash(self);def test_ddof_too_big(self);def __new__(cls, data, info);def test_dot_3args(self);def test_dot_3args_errors(self);def test_1d(self);def test_2d(self);def test_simple_strict_within(self);def _check_roundtrip(self, obj);def test_roundtrip(self);def test_roundtrip_half(self);def test_export_simple_1d(self);def test_export_simple_nd(self);def test_export_record(self);def test_export_subarray(self);def test_export_flags(self);def __array_interface__(self);def test_mapiter(self);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/tests/test_nditer.py,[u'1520'],10,10," -39,7 +39,7 ; -74,14 +74,14 ; -93,21 +93,21 ; -119,22 +119,22 ; -146,22 +146,22 ; -173,250 +173,250 ; -424,7 +424,7 ; -438,7 +438,7 ; -448,21 +448,21 ; -471,25 +471,25 ; -512,95 +512,95 ; -612,30 +612,30 ; -647,10 +647,10 ; -665,9 +665,9 ; -690,7 +690,7 ; -699,21 +699,21 ; -738,7 +738,7 ; -753,13 +753,13 ; -768,7 +768,7 ; -782,7 +782,7 ; -800,7 +800,7 ; -814,8 +814,8 ; -824,106 +824,106 ; -938,7 +938,7 ; -946,7 +946,7 ; -954,7 +954,7 ; -988,7 +988,7 ; -1001,15 +1001,15 ; -1020,34 +1020,34 ; -1059,61 +1059,61 ; -1124,69 +1124,69 ; -1198,7 +1198,7 ; -1206,11 +1206,11 ; -1223,7 +1223,7 ; -1235,8 +1235,8 ; -1244,8 +1244,8 ; -1256,78 +1256,78 ; -1335,81 +1335,81 ; -1434,57 +1434,57 ; -1495,12 +1495,12 ; -1510,21 +1510,21 ; -1538,9 +1538,9 ; -1556,7 +1556,7 ; -1573,15 +1573,15 ; -1594,8 +1594,8 ; -1608,8 +1608,8 ; -1625,8 +1625,8 ; -1636,8 +1636,8 ; -1647,8 +1647,8 ; -1657,8 +1657,8 ; -1670,9 +1670,9 ; -1687,13 +1687,13 ; -1711,8 +1711,8 ; -1720,20 +1720,20 ; -1741,15 +1741,15 ; -1757,15 +1757,15 ; -1773,36 +1773,36 ; -1810,11 +1810,11 ; -1823,14 +1823,14 ; -1839,14 +1839,14 ; -1856,11 +1856,11 ; -1870,11 +1870,11 ; -1887,8 +1887,8 ; -1901,23 +1901,23 ; -1928,76 +1928,76 ; -2005,7 +2005,7 ; -2014,7 +2014,7 ; -2025,8 +2025,8 ; -2037,7 +2037,7 ; -2072,174 +2072,174 ; -2248,27 +2248,27 ; -2278,10 +2278,10 ; -2296,14 +2296,14 ; -2319,9 +2319,9 ; -2330,11 +2330,11 ; -2345,135 +2345,135 ; -2514,15 +2514,15 ; -2546,9 +2546,9 ; -2558,25 +2558,25 ;",def test_iter_refcount();def test_iter_best_order();def test_iter_best_order();def test_iter_c_order();def test_iter_f_order();def test_iter_c_or_f_order();def test_iter_no_inner_full_coalesce();def test_iter_no_inner_full_coalesce();def test_iter_no_inner_dim_coalescing();def test_iter_dim_coalescing();def test_iter_broadcasting();def test_iter_broadcasting_errors();def test_iter_broadcasting_errors();def test_iter_broadcasting_errors();def test_iter_flags_errors();def test_iter_flags_errors();def assign_index(i);def assign_iterrange(i);def test_iter_nbo_align_contig();def test_iter_nbo_align_contig();def test_iter_nbo_align_contig();def test_iter_nbo_align_contig();def test_iter_array_cast();def test_iter_scalar_cast();def test_iter_scalar_cast();def test_iter_scalar_cast();def test_iter_object_arrays_basic();def test_iter_object_arrays_basic();def test_iter_object_arrays_basic();def test_iter_object_arrays_conversions();def test_iter_op_axes();def test_iter_copy();def test_iter_copy();def test_iter_copy();def test_iter_allocate_output_simple();def test_iter_allocate_output_buffered_readwrite();def test_iter_allocate_output_itorder();def test_iter_allocate_output_subtype();def test_iter_iterindex();def get_array(i);def test_iter_buffering();def test_iter_write_buffering();def test_iter_buffering_delayed_alloc();def assign_iter(i);def test_iter_buffered_cast_byteswapped();def test_iter_buffered_cast_byteswapped();def test_iter_buffered_cast_byteswapped_complex();def test_iter_buffered_cast_byteswapped_complex();def test_iter_buffered_cast_byteswapped_complex();def test_iter_buffered_cast_byteswapped_complex();def test_iter_buffered_cast_structured_type();def test_iter_buffered_cast_structured_type();def test_iter_buffered_cast_structured_type();def test_iter_buffered_cast_structured_type();def test_iter_buffered_cast_structured_type();def test_iter_buffered_cast_structured_type();def test_iter_buffered_cast_structured_type();def test_iter_buffered_cast_subarray();def test_iter_buffered_cast_subarray();def test_iter_buffered_cast_subarray();def test_iter_buffered_cast_subarray();def test_iter_buffered_cast_subarray();def test_iter_buffered_cast_subarray();def test_iter_buffered_cast_subarray();def test_iter_buffered_cast_subarray();def test_iter_buffering_string();def test_iter_buffering_string();def test_iter_buffered_reduce_reuse();def get_params();def get_params();def test_iter_nested_iters_dtype_buffered();def test_iter_reduction();def test_iter_reduction();def test_iter_buffering_reduction();def test_iter_buffering_reduction();def test_iter_buffering_reduction();def test_iter_allocated_array_dtypes();def test_0d_iter();def test_0d_iter();
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/tests/test_numeric.py,[u'410'],3,3," -17,28 +17,28 ; -74,8 +74,8 ; -91,35 +91,35 ; -130,53 +130,53 ; -184,10 +184,10 ; -195,10 +195,10 ; -461,31 +461,31 ; -497,56 +497,56 ; -556,7 +556,7 ; -565,7 +565,7 ; -692,8 +692,8 ; -731,48 +731,48 ; -784,10 +784,10 ; -810,52 +810,52 ; -875,9 +875,9 ; -1111,8 +1111,8 ; -1152,7 +1152,7 ; -1163,7 +1163,7 ; -1174,7 +1174,7 ; -1185,7 +1185,7 ; -1196,7 +1196,7 ; -1296,21 +1296,21 ; -1319,36 +1319,36 ; -1358,8 +1358,8 ; -1420,12 +1420,12 ; -1465,31 +1465,31 ; -1573,20 +1573,20 ; -1654,7 +1654,7 ; -1769,7 +1769,7 ;","def __init__(self,sequence=None);def test_vecmat2(self);def test_vecvecinner(self);def test_all(self);def test_mean(self);def test_std(self);def test_floating_exceptions(self);def check_promotion_cases(self, promote_func);def check_promotion_cases(self, promote_func);def res_type(a, b);def test_values(self);def test_nonzero_trivial(self);def test_boolean_edgecase(self);def test_negative(self);def setUp(self);def test_type_cast_04(self);def test_type_cast_08(self);def test_type_cast_09(self);def test_type_cast_10(self);def test_type_cast_11(self);def test_type_cast_12(self);def setUp(self);def test_ip_allclose(self);class TestIsclose(object);def tst_isclose_allclose(self, x, y);def test_no_parameter_modification(self);def setUp(self);def check_like_function(self, like_function, value, fill_value=False);def test_roll1d(self);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/tests/test_numerictypes.py,[u'44'],1,1," -20,8 +20,8 ; -60,8 +60,8 ; -74,7 +74,7 ; -125,13 +125,13 ; -160,7 +160,7 ; -169,9 +169,9 ; -338,37 +338,37 ;",";;def normalize_descr(descr);def test_zerosSD(self);def test_list_of_tuple(self);def test_list_of_list_of_tuple(self);class test_read_values_nested_multiple(read_values_nested, TestCase);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/tests/test_print.py,[u'6'],1,1," -16,7 +16,7 ; -56,7 +56,7 ; -130,7 +130,7 ;",";def test_nan_inf_float();def _test_redirected_print(x, tp, ref=None);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/tests/test_regression.py,[u'476'],3,3," -25,34 +25,34 ; -79,7 +79,7 ; -88,7 +88,7 ; -96,11 +96,11 ; -109,14 +109,14 ; -128,7 +128,7 ; -149,8 +149,8 ; -159,22 +159,22 ; -196,7 +196,7 ; -206,8 +206,8 ; -221,10 +221,10 ; -236,21 +236,21 ; -261,7 +261,7 ; -270,41 +270,41 ; -323,29 +323,29 ; -355,36 +355,36 ; -392,26 +392,26 ; -426,7 +426,7 ; -441,8 +441,8 ; -456,51 +456,51 ; -508,7 +508,7 ; -521,7 +521,7 ; -531,22 +531,22 ; -558,48 +558,48 ; -614,14 +614,14 ; -635,11 +635,11 ; -654,7 +654,7 ; -695,31 +695,31 ; -730,42 +730,42 ; -775,29 +775,29 ; -806,7 +806,7 ; -857,7 +857,7 ; -866,8 +866,8 ; -875,7 +875,7 ; -902,10 +902,10 ; -935,7 +935,7 ; -973,7 +973,7 ; -1024,17 +1024,17 ; -1045,12 +1045,12 ; -1058,7 +1058,7 ; -1071,13 +1071,13 ; -1101,15 +1101,15 ; -1138,7 +1138,7 ; -1149,8 +1149,8 ; -1189,7 +1189,7 ; -1252,8 +1252,8 ; -1379,9 +1379,9 ; -1389,7 +1389,7 ; -1416,7 +1416,7 ; -1436,8 +1436,8 ; -1471,7 +1471,7 ; -1489,7 +1489,7 ; -1499,14 +1499,14 ; -1591,7 +1591,7 ; -1636,16 +1636,16 ; -1668,12 +1668,12 ; -1697,7 +1697,7 ; -1706,7 +1706,7 ; -1740,9 +1740,9 ; -1767,10 +1767,10 ; -1794,9 +1794,9 ;","class TestRegression(TestCase);def test_sort_bigendian(self,level=rlevel);def test_negative_nd_indexing(self,level=rlevel);def test_char_dump(self,level=rlevel);def test_bool(self,level=rlevel);def test_round(self,level=rlevel);def test_object_array_fill(self,level=rlevel);def test_mem_dtype_align(self,level=rlevel);def test_endian_recarray(self,level=rlevel);def test_endian_recarray(self,level=rlevel);def test_mem_dot(self,level=rlevel);def test_arange_endian(self,level=rlevel);def test_squeeze_type(self,level=rlevel);def test_numpy_float_python_long_addition(self);def assign(a, b, c);def index_tmp(): tmp[np.array(10);def test_pickle_dtype(self,level=rlevel);def test_method_args(self, level=rlevel);def test_method_args(self, level=rlevel);def test_method_args(self, level=rlevel);def test_mem_float_imag(self, level=rlevel);def test_numeric_carray_compare(self, level=rlevel);def test_dtype_repr(self, level=rlevel);def test_reshape_trailing_ones_strides(self);def test_noncommutative_reduce_accumulate(self, level=rlevel);def test_junk_in_string_fields_of_recarray(self, level=rlevel);def test_take_object_fail(self);def test_rand_seed(self, level=rlevel);def test_unicode_scalar(self, level=rlevel);def test_string_sort_with_zeros(self, level=rlevel);def test_copy_detection_corner_case(self, level=rlevel);def test_object_array_refcounting(self, level=rlevel);def test_object_array_refcounting(self, level=rlevel);def test_object_array_refcounting(self, level=rlevel);def test_object_array_refcounting(self, level=rlevel);def __del__(self);def test_nonnative_endian_fill(self, level=rlevel);def __new__(cls, data, info);def __array_finalize__(self, obj);def __array_finalize__(self, obj);def __array_finalize__(self, obj);def test_nonscalar_item_method(self);def test_for_object_scalar_creation(self, level=rlevel);def test_for_object_scalar_creation(self, level=rlevel);def test_void_scalar_constructor(self);def test_fromiter_bytes(self);def test_structured_arrays_with_objects1(self);def test_structured_arrays_with_objects2(self);def test_buffer_hashlib(self);def test_log1p_compiler_shenanigans(self);def test_ticket_1538(self);def test_complex_nan_maximum(self);def test_ufunc_no_unnecessary_views(self);def test_nonzero_byteswap(self);def test_array_scalar_contiguous(self);def test_object_array_self_reference(self);def test_string_astype(self);def test_ticket_1756(self);def test_ticket_1770(self);def test_pickle_bytes_overwrite(self);def test_assign_obj_listoflists(self);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/tests/test_scalarmath.py,[u'30'],1,1," -16,16 +16,16 ; -36,13 +36,13 ; -81,21 +81,21 ; -132,7 +132,7 ; -155,9 +155,9 ;","class TestTypes(TestCase);def test_type_add(self, level=1);def test_small_types(self);def test_int_from_long(self);def _test_type_repr(self, t);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/tests/test_shape_base.py,[u'72'],1,1," -13,14 +13,14 ; -46,7 +46,7 ; -83,9 +83,9 ; -107,7 +107,7 ; -124,56 +124,56 ; -185,7 +185,7 ;",def test_0D_array(self);def test_r1array(self);def test_3D_array(self);def test_2D_array(self);class TestHstack(TestCase);def test_concatenate_axis_None();
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/tests/test_ufunc.py,[u'414'],3,3," -24,7 +24,7 ; -80,7 +80,7 ; -111,27 +111,27 ; -154,13 +154,13 ; -252,117 +252,117 ; -379,71 +379,71 ; -466,14 +466,14 ; -487,9 +487,9 ; -587,9 +587,9 ; -604,13 +604,13 ; -621,76 +621,76 ; -706,7 +706,7 ; -803,11 +803,11 ; -818,20 +818,20 ; -868,95 +868,95 ; -969,7 +969,7 ; -985,19 +985,19 ;","def test_reduceat_shifting_sum(self) ;def test_generic_loops(self) ;def test_generic_loops(self) ;def logical_xor(self, obj) ;def test_all_ufunc(self) ;def test_endian(self);def slice_n(n);def broadcastable(s1,s2);class MyArray(np.ndarray);def test_where_param(self);def test_where_param_buffer_output(self);def test_identityless_reduction_nonreorderable(self);def test_ufunc_custom_out(self);def test_operand_flags(self);def __rmul__(self, other);def test_inplace_fancy_indexing(self);def test_inplace_fancy_indexing(self);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/tests/test_umath.py,[u'90'],1,1," -78,7 +78,7 ; -169,14 +169,14 ; -186,7 +186,7 ; -198,7 +198,7 ; -208,7 +208,7 ; -220,7 +220,7 ; -238,7 +238,7 ; -249,7 +249,7 ; -261,7 +261,7 ; -271,7 +271,7 ; -283,7 +283,7 ; -479,8 +479,8 ; -526,8 +526,8 ; -573,8 +573,8 ; -615,8 +615,8 ; -784,21 +784,21 ; -871,9 +871,9 ; -966,7 +966,7 ; -1046,8 +1046,8 ; -1081,7 +1081,7 ; -1237,12 +1237,12 ; -1271,7 +1271,7 ;","def test_floor_division_complex(self);def assert_complex_equal(x, y);class TestExp2(TestCase);def test_logaddexp2_values(self) ;def test_logaddexp2_range(self) ;def test_inf(self) ;class TestLog(TestCase);class TestExp(TestCase);def test_logaddexp_values(self) ;def test_logaddexp_range(self) ;def test_inf(self) ;def test_reduce(self);def test_reduce(self);def test_reduce(self);def test_reduce(self);class C(A);def __array__(self);def test_against_cmath(self);def check(func, z0, d=1);def __new__(subtype, shape);def test_pos_nan();def test_reduceat_empty();"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/tests/test_umath_complex.py,[u'2'],1,1," -484,7 +484,7 ;",def test_zero(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/core/tests/test_unicode.py,[u'24'],1,1," -84,9 +84,9 ; -145,8 +145,8 ; -232,11 +232,11 ; -310,8 +310,8 ;",def test_zerosSD(self);def test_valuesSD(self);def test_valuesSD(self);def test_valuesMD(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/ccompiler.py,[u'60'],1,1," -56,7 +56,7 ; -114,7 +114,7 ; -170,8 +170,8 ; -236,7 +236,7 ; -256,16 +256,16 ; -290,13 +290,13 ; -351,16 +351,16 ; -396,7 +396,7 ; -434,7 +434,7 ; -457,7 +457,7 ; -496,18 +496,18 ;","def CCompiler_spawn(self, cmd, display=None);def CCompiler_object_filenames(self, source_filenames, strip_dir=0, output_dir=;def CCompiler_compile(self, sources, output_dir=None, macros=None;def allow(attr);def _compiler_to_string(compiler);def CCompiler_show_customization(self);def CCompiler_customize(self, dist, need_cxx=0);def simple_version_match(pat=r'[-.\d]+', ignore='', start='');def CCompiler_get_version(self, force=False, ok_status=[0]);def matcher(version_string);def CCompiler_cxx_compiler(self);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/command/__init__.py,[u'2'],1,1," -24,7 +24,7 ;",def test_na_writable_attributes_deletion();
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/command/bdist_rpm.py,[u'2'],1,1," -19,6 +19,6 ;",def _make_spec_file(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/command/build.py,[u'2'],1,1," -19,7 +19,7 ;",class build(old_build);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/command/build_clib.py,[u'18'],1,1," -42,13 +42,13 ; -63,7 +63,7 ; -136,7 +136,7 ; -148,14 +148,14 ; -229,7 +229,7 ; -276,9 +276,9 ;","def initialize_options(self);def run(self);def build_a_library(self, build_info, lib_name, libraries);def build_a_library(self, build_info, lib_name, libraries);def build_a_library(self, build_info, lib_name, libraries);def build_a_library(self, build_info, lib_name, libraries);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/command/build_ext.py,[u'36'],1,1," -37,7 +37,7 ; -99,14 +99,14 ; -123,13 +123,13 ; -161,7 +161,7 ; -177,7 +177,7 ; -297,8 +297,8 ; -308,7 +308,7 ; -347,14 +347,14 ; -402,7 +402,7 ; -437,7 +437,7 ; -445,7 +445,7 ; -465,7 +465,7 ;","class build_ext (old_build_ext);def run(self);def run(self);def run(self);def run(self);def build_extension(self, ext);def build_extension(self, ext);def build_extension(self, ext);def build_extension(self, ext);def _libs_with_msvc_and_fortran(self, fcompiler, c_libraries;def _libs_with_msvc_and_fortran(self, fcompiler, c_libraries;def _libs_with_msvc_and_fortran(self, fcompiler, c_libraries;"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/command/build_py.py,[u'2'],1,1," -16,7 +16,7 ;","def find_package_modules(self, package, package_dir);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/command/build_src.py,[u'96'],1,1," -66,7 +66,7 ; -136,14 +136,14 ; -179,14 +179,14 ; -195,13 +195,13 ; -289,7 +289,7 ; -396,10 +396,10 ; -428,7 +428,7 ; -436,7 +436,7 ; -515,20 +515,20 ; -551,9 +551,9 ; -566,12 +566,12 ; -581,7 +581,7 ; -590,8 +590,8 ; -599,8 +599,8 ; -611,20 +611,20 ; -689,7 +689,7 ; -745,17 +745,17 ; -766,7 +766,7 ; -776,9 +776,9 ; -788,7 +788,7 ;","class build_src(build_ext.build_ext);def finalize_options(self);def build_data_files_sources(self);def build_data_files_sources(self);def build_py_modules_sources(self);def generate_sources(self, sources, extension);def template_sources(self, sources, extension);def template_sources(self, sources, extension);def f2py_sources(self, sources, extension);def f2py_sources(self, sources, extension);def f2py_sources(self, sources, extension);def f2py_sources(self, sources, extension);def f2py_sources(self, sources, extension);def f2py_sources(self, sources, extension);def f2py_sources(self, sources, extension);def swig_sources(self, sources, extension);def swig_sources(self, sources, extension);def get_swig_target(source);def get_swig_modulename(source);def _find_swig_target(target_dir,name);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/command/config.py,[u'20'],1,1," -80,15 +80,15 ; -96,7 +96,7 ; -105,14 +105,14 ; -123,7 +123,7 ; -131,11 +131,11 ; -145,7 +145,7 ;","class was %;def _wrap_method(self,mth,lang,args);def _link (self, body;def _link (self, body;def _link (self, body;def _link (self, body;"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/command/config_compiler.py,[u'30'],1,1," -24,24 +24,24 ; -65,7 +65,7 ; -76,7 +76,7 ; -90,7 +90,7 ; -106,7 +106,7 ; -117,7 +117,7 ;",class config_fc(Command);def finalize_options(self);def finalize_options(self);class config_cc(Command);def finalize_options(self);def finalize_options(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/command/install.py,[u'4'],1,1," -41,7 +41,7 ; -61,7 +61,7 ;",def setuptools_run(self);def run(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/command/install_headers.py,[u'2'],1,1," -12,7 +12,7 ;",def run (self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/command/sdist.py,[u'2'],1,1," -22,7 +22,7 ;",def add_defaults (self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/conv_template.py,[u'24'],1,1," -124,10 +124,10 ; -150,7 +150,7 ; -188,7 +188,7 ; -208,7 +208,7 ; -276,9 +276,9 ; -289,7 +289,7 ; -323,10 +323,10 ;","def parse_structure(astr, level);def parse_values(astr);def parse_loop_header(loophead) ;def parse_loop_header(loophead) ;def resolve_includes(source);def resolve_includes(source);def unique_key(adict);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/core.py,[u'8'],1,1," -55,7 +55,7 ; -133,13 +133,13 ; -207,4 +207,4 ;",";def setup(**attr);def _check_append_ext_library(libraries, lib_name, build_info);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/cpuinfo.py,[u'98'],1,1," -72,16 +72,16 ; -144,10 +144,10 ; -246,7 +246,7 ; -259,7 +259,7 ; -278,25 +278,25 ; -305,7 +305,7 ; -316,7 +316,7 ; -337,7 +337,7 ; -380,7 +380,7 ; -439,35 +439,35 ; -496,22 +496,22 ; -524,7 +524,7 ; -542,11 +542,11 ; -596,11 +596,11 ; -624,20 +624,20 ; -652,10 +652,10 ;",class CPUInfoBase(object);def _is_AthlonK6_3(self);def _is_Nocona(self);def _is_Itanium(self);def _has_f00f_bug(self);def __init__(self);def _is_singleCPU(self);def _is_rorion(self): return self.__cputype('orion';def _is_i386(self);def _is_sun4(self);def __init__(self);def __init__(self);def _is_Am5x86(self);def _is_PentiumPro(self);def _getNCPUs(self);def _has_sse2(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/exec_command.py,[u'224'],1,2," -46,7 +46,7 ; -65,10 +65,10 ; -92,7 +92,7 ; -102,9 +102,9 ; -138,7 +138,7 ; -248,11 +248,11 ; -265,13 +265,13 ; -291,7 +291,7 ; -310,12 +310,12 ; -338,11 +338,11 ; -351,16 +351,16 ; -375,13 +375,13 ; -390,38 +390,38 ; -453,120 +453,120 ; -575,33 +575,33 ;",";def temp_file_name();def find_executable(exe, path=None, _cache={});def find_executable(exe, path=None, _cache={});def _preserve_environment( names );def _exec_command_posix( command;def _exec_command_posix( command;def _exec_command_python(command;def _exec_command_python(command;def _exec_command( command, use_shell=None, use_tee = None, **env );def _exec_command( command, use_shell=None, use_tee = None, **env );def _exec_command( command, use_shell=None, use_tee = None, **env );def _exec_command( command, use_shell=None, use_tee = None, **env );def test_nt(**kws);def test_execute_in(**kws);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/extension.py,[u'6'],1,1," -16,8 +16,8 ; -39,7 +39,7 ;",";def __init__ (self, name, sources;"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/fcompiler/__init__.py,[u'102'],1,1," -15,7 +15,7 ; -144,16 +144,16 ; -164,14 +164,14 ; -196,7 +196,7 ; -543,10 +543,10 ; -572,17 +572,17 ; -593,7 +593,7 ; -604,7 +604,7 ; -613,18 +613,18 ; -650,7 +650,7 ; -705,19 +705,19 ; -925,18 +925,18 ; -956,12 +956,12 ; -969,7 +969,7 ;",";class FCompiler(CCompiler);class FCompiler(CCompiler);class FCompiler(CCompiler);def dump_properties(self);def _compile(self, obj, src, ext, cc_args, extra_postargs, pp_opts);def _compile(self, obj, src, ext, cc_args, extra_postargs, pp_opts);def _compile(self, obj, src, ext, cc_args, extra_postargs, pp_opts);def module_options(self, module_dirs, module_build_dir);def link(self, target_desc, objects;def _environment_hook(self, name, hook_name);def dummy_fortran_file();def is_free_format(file);def get_f77flags(src);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/fcompiler/absoft.py,[u'22'],1,1," -61,12 +61,12 ; -97,9 +97,9 ; -115,11 +115,11 ; -133,8 +133,8 ; -142,9 +142,9 ;",def get_flags_linker_so(self);def get_libraries(self);def get_flags(self);def get_flags_f77(self);def get_flags_f90(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/fcompiler/compaq.py,[u'20'],1,1," -29,7 +29,7 ; -41,18 +41,18 ; -101,7 +101,7 ; -110,10 +110,10 ;",class CompaqFCompiler(FCompiler);class CompaqFCompiler(FCompiler);class CompaqVisualFCompiler(FCompiler);class CompaqVisualFCompiler(FCompiler);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/fcompiler/g95.py,[u'2'],1,1," -22,7 +22,7 ;",class G95FCompiler(FCompiler);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/fcompiler/gnu.py,[u'2'],1,1," -170,7 +170,7 ;",def get_libraries(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/fcompiler/hpux.py,[u'4'],1,1," -31,10 +31,10 ;",def get_libraries(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/fcompiler/ibm.py,[u'8'],1,1," -35,7 +35,7 ; -47,7 +47,7 ; -65,7 +65,7 ; -73,7 +73,7 ;","def get_version(self,*args,**kwds);def get_version(self,*args,**kwds);def get_flags_linker_so(self);def get_flags_linker_so(self);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/fcompiler/intel.py,[u'14'],1,1," -137,8 +137,8 ; -152,14 +152,14 ; -178,10 +178,10 ;",def update_executables(self);def update_executables(self);class IntelItaniumVisualFCompiler(IntelVisualFCompiler);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/fcompiler/lahey.py,[u'6'],1,1," -17,7 +17,7 ; -28,12 +28,12 ;",class LaheyFCompiler(FCompiler);class LaheyFCompiler(FCompiler);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/fcompiler/mips.py,[u'4'],1,1," -16,7 +16,7 ; -31,7 +31,7 ;",class MIPSFCompiler(FCompiler);def get_flags_opt(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/fcompiler/nag.py,[u'4'],1,1," -23,7 +23,7 ; -34,7 +34,7 ;",class NAGFCompiler(FCompiler);def get_flags_arch(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/fcompiler/none.py,[u'16'],1,1," -9,14 +9,14 ;",class NoneFCompiler(FCompiler);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/fcompiler/pg.py,[u'4'],1,1," -29,7 +29,7 ; -40,7 +40,7 ;",class PGroupFCompiler(FCompiler);class PGroupFCompiler(FCompiler);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/fcompiler/sun.py,[u'6'],1,1," -19,7 +19,7 ; -35,12 +35,12 ;",class SunFCompiler(FCompiler);def get_flags_f77(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/from_template.py,[u'52'],1,1," -47,15 +47,15 ; -66,22 +66,22 ; -93,7 +93,7 ; -124,14 +124,14 ; -151,12 +151,12 ; -168,20 +168,20 ; -196,13 +196,13 ; -213,7 +213,7 ; -246,10 +246,10 ;",;def parse_structure(astr);def find_repl_patterns(astr);def unique_key(adict);def listrepl(mobj);def listrepl(mobj);def process_str(allstr);def resolve_includes(source);def process_file(source);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/intelccompiler.py,[u'6'],1,1," -10,7 +10,7 ; -24,7 +24,7 ; -35,7 +35,7 ;",class IntelCCompiler(UnixCCompiler);class IntelItaniumCCompiler(IntelCCompiler);class IntelEM64TCCompiler(UnixCCompiler);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/line_endings.py,[u'12'],1,1," -26,16 +26,16 ; -60,16 +60,16 ;",def dos2unix(file);def unix2dos(file);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/log.py,[u'6'],1,1," -16,9 +16,9 ; -78,7 +78,7 ;",";def set_verbosity(v, force=False);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/mingw32ccompiler.py,[u'20'],1,1," -54,7 +54,7 ; -64,7 +64,7 ; -215,11 +215,11 ; -391,7 +391,7 ; -405,9 +405,9 ; -419,14 +419,14 ; -465,7 +465,7 ;",def __init__ (self;def __init__ (self;def object_filenames (self;def _build_import_library_amd64();def _build_import_library_x86();def _build_import_library_x86();def _build_import_library_x86();
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/misc_util.py,[u'240'],2,2," -25,11 +25,11 ; -85,7 +85,7 ; -144,19 +144,19 ; -185,34 +185,34 ; -221,9 +221,9 ; -233,10 +233,10 ; -246,7 +246,7 ; -285,7 +285,7 ; -346,9 +346,9 ; -357,11 +357,11 ; -371,10 +371,10 ; -382,7 +382,7 ; -474,7 +474,7 ; -497,7 +497,7 ; -520,7 +520,7 ; -530,13 +530,13 ; -561,11 +561,11 ; -701,8 +701,8 ; -727,7 +727,7 ; -735,7 +735,7 ; -747,13 +747,13 ; -777,7 +777,7 ; -819,7 +819,7 ; -836,17 +836,17 ; -870,9 +870,9 ; -907,7 +907,7 ; -961,7 +961,7 ; -970,7 +970,7 ; -981,7 +981,7 ; -1040,7 +1040,7 ; -1075,19 +1075,19 ; -1096,18 +1096,18 ; -1203,7 +1203,7 ; -1213,7 +1213,7 ; -1225,7 +1225,7 ; -1248,9 +1248,9 ; -1258,7 +1258,7 ; -1319,11 +1319,11 ; -1342,16 +1342,16 ; -1404,7 +1404,7 ; -1419,26 +1419,26 ; -1653,23 +1653,23 ; -1683,9 +1683,9 ; -1699,7 +1699,7 ; -1728,7 +1728,7 ; -1747,7 +1747,7 ; -1760,11 +1760,11 ; -1783,16 +1783,16 ; -1801,7 +1801,7 ; -1820,8 +1820,8 ; -1857,7 +1857,7 ; -1877,11 +1877,11 ; -1892,7 +1892,7 ; -1929,7 +1929,7 ; -1937,8 +1937,8 ; -1971,7 +1971,7 ; -1979,8 +1979,8 ; -2006,7 +2006,7 ; -2183,7 +2183,7 ;",";def rel_path(path, parent_path);def njoin(*path);def minrelpath(path);def _fix_paths(paths,local_path,include_non_existing);def _fix_paths(paths,local_path,include_non_existing);def gpaths(paths, local_path='', include_non_existing=True);def terminal_has_colors();def mingw32();def msvc_runtime_library();def msvc_runtime_library();def _get_f90_modules(source);def _get_headers(directory_list);def is_local_src_dir(directory);def general_source_directories_files(top_path);def general_source_directories_files(top_path);def get_script_files(scripts);def __init__(self;def __init__(self;def __init__(self;def __init__(self;def todict(self);def _wildcard_get_subpackage(self, subpackage_name;def _get_configuration_from_setup_py(self, setup_py;def fix_args_py3(args);def get_subpackage(self,subpackage_name;def add_subpackage(self,subpackage_name;def add_subpackage(self,subpackage_name;def add_subpackage(self,subpackage_name;def add_data_dir(self,data_path);def add_data_dir(self,data_path);def add_data_dir(self,data_path);def add_data_files(self,*files);def add_data_files(self,*files);def add_data_files(self,*files);def add_data_files(self,*files);def add_data_files(self,*files);def add_headers(self,*files);def paths(self,*paths,**kws);def add_extension(self,name,sources,**kw);def add_extension(self,name,sources,**kw);def add_scripts(self,*files);def __str__(self);def get_config_cmd(self);def have_f77c(self);def have_f90c(self);def append_to(self, extlib);def _get_svn_revision(self,path);def _get_svn_revision(self,path);def _get_hg_revision(self,path);def get_version(self, version_file=None, version_variable=None);def get_version(self, version_file=None, version_variable=None);def get_version(self, version_file=None, version_variable=None);def make_svn_version_py(self, delete=True);def make_svn_version_py(self, delete=True);def make_hg_version_py(self, delete=True);def make_hg_version_py(self, delete=True);def make_config_py(self,name='__config__');def dict_append(d, **kws);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/setup.py,[u'2'],1,1," -3,7 +3,7 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/system_info.py,[u'2'],1,1," -1829,7 +1829,7 ;",def calc_info(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/tests/f2py_ext/setup.py,[u'4'],1,1," -3,8 +3,8 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/tests/f2py_ext/tests/test_fib2.py,[u'2'],1,1," -7,7 +7,7 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/tests/f2py_f90_ext/setup.py,[u'2'],1,1," -3,7 +3,7 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,.../distutils/tests/f2py_f90_ext/tests/test_foo.py,[u'2'],1,1," -6,7 +6,7 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/tests/gen_ext/setup.py,[u'6'],1,1," -28,16 +28,16 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/tests/gen_ext/tests/test_fib3.py,[u'2'],1,1," -6,7 +6,7 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/tests/pyrex_ext/setup.py,[u'2'],1,1," -3,7 +3,7 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/tests/setup.py,[u'2'],1,1," -3,7 +3,7 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/tests/swig_ext/setup.py,[u'6'],1,1," -3,12 +3,12 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,.../distutils/tests/swig_ext/tests/test_example.py,[u'6'],1,1," -6,12 +6,12 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/tests/test_misc_util.py,[u'58'],1,1," -11,49 +11,49 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/distutils/unixccompiler.py,[u'2'],1,1," -31,7 +31,7 ;","def UnixCCompiler__compile(self, obj, src, ext, cc_args, extra_postargs, pp_opt;"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/dual.py,[u'6'],1,1," -17,9 +17,9 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/f2py/__init__.py,[u'10'],1,1," -1,7 +1,7 ; -32,13 +32,13 ;",;def compile(source;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/f2py/auxfuncs.py,[u'136'],1,1," -37,7 +37,7 ; -68,7 +68,7 ; -91,7 +91,7 ; -143,7 +143,7 ; -216,7 +216,7 ; -332,53 +332,53 ; -390,7 +390,7 ; -444,25 +444,25 ; -508,22 +508,22 ; -532,7 +532,7 ; -550,16 +550,16 ; -569,10 +569,10 ; -583,23 +583,23 ; -619,15 +619,15 ; -647,7 +647,7 ; -656,15 +656,15 ; -672,11 +672,11 ; -688,19 +688,19 ;",";def isscalar(var);def get_kind(var);def islong_complex(var);def hasassumedshape(rout);def isintent_inout(var);def hasinitvalue(var);class F2PYError(Exception);def getmultilineblock(rout,blockname,comment=1,counter=0);def getcallprotoargument(rout,cb_map={});def getcallprotoargument(rout,cb_map={});def getargs(rout);def getargs2(rout);def replace(str,d,defaultsep='');def dictappend(rd,ar);def applyrules(rules,d,var={});def applyrules(rules,d,var={});def applyrules(rules,d,var={});"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/f2py/capi_maps.py,[u'314'],2,2," -34,22 +34,22 ; -71,24 +71,24 ; -175,10 +175,10 ; -188,31 +188,31 ; -241,7 +241,7 ; -254,8 +254,8 ; -281,7 +281,7 ; -314,35 +314,35 ; -350,11 +350,11 ; -368,63 +368,63 ; -434,22 +434,22 ; -457,7 +457,7 ; -467,7 +467,7 ; -478,9 +478,9 ; -491,59 +491,59 ; -557,17 +557,17 ; -590,15 +590,15 ; -610,9 +610,9 ; -630,11 +630,11 ; -664,19 +664,19 ; -722,7 +722,7 ; -740,7 +740,7 ; -751,7 +751,7 ; -761,13 +761,13 ;",";;;;def getctype(var);def getctype(var);def getstrlength(var);def getarrdims(a,var,verbose=0);def getpydocsign(a,var);def getpydocsign(a,var);def getinit(a,var);def sign2map(a,var);def sign2map(a,var);def sign2map(a,var);def sign2map(a,var);def routsign2map(rout);def routsign2map(rout);def routsign2map(rout);def modsign2map(m);def cb_sign2map(a,var,index=None);def cb_routsign2map(rout,um);def cb_routsign2map(rout,um);def cb_routsign2map(rout,um);def common_sign2map(a,var): # obsolut;"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/f2py/cb_rules.py,[u'204'],1,2," -127,7 +127,7 ; -142,42 +142,42 ; -189,8 +189,8 ; -240,8 +240,8 ; -254,59 +254,59 ; -318,18 +318,18 ; -343,7 +343,7 ; -354,12 +354,12 ; -370,9 +370,9 ; -391,9 +391,9 ; -408,28 +408,28 ; -437,8 +437,8 ; -449,8 +449,8 ; -461,8 +461,8 ; -483,22 +483,22 ; -513,7 +513,7 ;",";;;;;;;;;;def buildcallbacks(m);def buildcallback(rout,um);def buildcallback(rout,um);def buildcallback(rout,um);def buildcallback(rout,um);def buildcallback(rout,um);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/f2py/cfuncs.py,[u'64'],1,1," -39,12 +39,12 ; -419,7 +419,7 ; -587,7 +587,7 ; -600,7 +600,7 ; -680,7 +680,7 ; -803,7 +803,7 ; -875,7 +875,7 ; -976,7 +976,7 ; -988,30 +988,30 ; -1118,7 +1118,7 ; -1127,10 +1127,10 ; -1159,7 +1159,7 ; -1175,7 +1175,7 ; -1190,7 +1190,7 ; -1210,9 +1210,9 ;",";;;;;;;;;def buildcfuncs();def buildcfuncs();def append_needs(need,flag=1);def append_needs(need,flag=1);def append_needs(need,flag=1);def get_needs();"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/f2py/common_rules.py,[u'46'],1,1," -39,10 +39,10 ; -56,31 +56,31 ; -88,45 +88,45 ;","def findcommonblocks(block,top=1);def findcommonblocks(block,top=1);def dadd(line,s=doc): s[0] = '%s\n%s'%(s[0],line;"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/f2py/crackfortran.py,[u'800'],5,6," -204,21 +204,21 ; -227,7 +227,7 ; -240,17 +240,17 ; -277,23 +277,23 ; -316,10 +316,10 ; -337,7 +337,7 ; -404,20 +404,20 ; -428,20 +428,20 ; -449,10 +449,10 ; -460,55 +460,55 ; -517,14 +517,14 ; -542,7 +542,7 ; -561,15 +561,15 ; -587,18 +587,18 ; -632,7 +632,7 ; -642,7 +642,7 ; -673,10 +673,10 ; -688,32 +688,32 ; -722,20 +722,20 ; -750,21 +750,21 ; -776,7 +776,7 ; -799,7 +799,7 ; -813,11 +813,11 ; -835,9 +835,9 ; -852,7 +852,7 ; -860,23 +860,23 ; -887,20 +887,20 ; -909,7 +909,7 ; -922,10 +922,10 ; -942,14 +942,14 ; -968,23 +968,23 ; -993,11 +993,11 ; -1008,7 +1008,7 ; -1021,14 +1021,14 ; -1037,13 +1037,13 ; -1061,13 +1061,13 ; -1097,13 +1097,13 ; -1114,13 +1114,13 ; -1132,9 +1132,9 ; -1150,7 +1150,7 ; -1187,7 +1187,7 ; -1196,11 +1196,11 ; -1208,25 +1208,25 ; -1238,20 +1238,20 ; -1268,8 +1268,8 ; -1283,29 +1283,29 ; -1322,7 +1322,7 ; -1334,7 +1334,7 ; -1345,11 +1345,11 ; -1361,7 +1361,7 ; -1375,12 +1375,12 ; -1390,7 +1390,7 ; -1403,7 +1403,7 ; -1411,15 +1411,15 ; -1479,7 +1479,7 ; -1498,7 +1498,7 ; -1510,10 +1510,10 ; -1525,11 +1525,11 ; -1546,7 +1546,7 ; -1558,13 +1558,13 ; -1575,7 +1575,7 ; -1583,7 +1583,7 ; -1610,8 +1610,8 ; -1687,7 +1687,7 ; -1705,7 +1705,7 ; -1715,12 +1715,12 ; -1732,11 +1732,11 ; -1755,113 +1755,113 ; -1870,11 +1870,11 ; -1883,12 +1883,12 ; -1897,8 +1897,8 ; -1907,25 +1907,25 ; -1999,9 +1999,9 ; -2009,22 +2009,22 ; -2037,11 +2037,11 ; -2052,30 +2052,30 ; -2084,9 +2084,9 ; -2109,10 +2109,10 ; -2124,15 +2124,15 ; -2141,7 +2141,7 ; -2151,14 +2151,14 ; -2167,8 +2167,8 ; -2197,23 +2197,23 ; -2226,9 +2226,9 ; -2253,14 +2253,14 ; -2275,22 +2275,22 ; -2325,11 +2325,11 ; -2337,38 +2337,38 ; -2381,7 +2381,7 ; -2392,13 +2392,13 ; -2423,12 +2423,12 ; -2437,7 +2437,7 ; -2452,11 +2452,11 ; -2484,18 +2484,18 ; -2514,12 +2514,12 ; -2540,20 +2540,20 ; -2562,35 +2562,35 ; -2600,9 +2600,9 ; -2647,13 +2647,13 ; -2671,33 +2671,33 ; -2705,47 +2705,47 ; -2778,7 +2778,7 ; -2820,13 +2820,13 ;","def outmess(line,flag=1);def rmbadname(names): return [rmbadname1(_m) for _m in names;def getextension(name);def readfortrancode(ffile,dowithline=show,istop=1);def readfortrancode(ffile,dowithline=show,istop=1);def readfortrancode(ffile,dowithline=show,istop=1);def readfortrancode(ffile,dowithline=show,istop=1);def readfortrancode(ffile,dowithline=show,istop=1);def readfortrancode(ffile,dowithline=show,istop=1);def readfortrancode(ffile,dowithline=show,istop=1);def crackline(line,reset=0);def crackline(line,reset=0);def crackline(line,reset=0);def crackline(line,reset=0);def crackline(line,reset=0);def crackline(line,reset=0);def markoutercomma(line,comma=',');def appenddecl(decl,decl2,force=1);def _resolvenameargspattern(line);def analyzeline(m,case,line);def analyzeline(m,case,line);def analyzeline(m,case,line);def analyzeline(m,case,line);def analyzeline(m,case,line);def analyzeline(m,case,line);def analyzeline(m,case,line);def analyzeline(m,case,line);def analyzeline(m,case,line);def analyzeline(m,case,line);def analyzeline(m,case,line);def analyzeline(m,case,line);def analyzeline(m,case,line);def analyzeline(m,case,line);def analyzeline(m,case,line);def analyzeline(m,case,line);def analyzeline(m,case,line);def analyzeline(m,case,line);def analyzeline(m,case,line);def analyzeline(m,case,line);def analyzeline(m,case,line);def analyzeline(m,case,line);def appendmultiline(group, context_name,ml);def cracktypespec0(typespec,ll);def markinnerspaces(line);def updatevars(typespec,selector,attrspec,entitydecl);def updatevars(typespec,selector,attrspec,entitydecl);def updatevars(typespec,selector,attrspec,entitydecl);def updatevars(typespec,selector,attrspec,entitydecl);def updatevars(typespec,selector,attrspec,entitydecl);def updatevars(typespec,selector,attrspec,entitydecl);def updatevars(typespec,selector,attrspec,entitydecl);def cracktypespec(typespec,selector);def cracktypespec(typespec,selector);def cracktypespec(typespec,selector);def getblockname(block,unknown='unknown');def get_useparameters(block, param_map=None);def get_useparameters(block, param_map=None);def postcrack2(block,tab='',param_map=None);def postcrack2(block,tab='',param_map=None);def postcrack(block,args=None,tab='');def postcrack(block,args=None,tab='');def postcrack(block,args=None,tab='');def postcrack(block,args=None,tab='');def analyzecommon(block);def analyzecommon(block);def analyzecommon(block);def analyzebody(block,args,tab='');def buildimplicitrules(block);def getarrlen(dl,args,star='*');def getarrlen(dl,args,star='*');def getarrlen(dl,args,star='*');def getarrlen(dl,args,star='*');def _selected_real_kind_func(p, r=0, radix=0);def get_parameters(vars, global_params={});def get_parameters(vars, global_params={});def get_parameters(vars, global_params={});def analyzevars(block);def analyzevars(block);def analyzevars(block);def analyzevars(block);def analyzevars(block);def analyzevars(block);def analyzevars(block);def analyzevars(block);def analyzevars(block);def analyzevars(block);def analyzevars(block);def analyzevars(block);def analyzevars(block);def analyzevars(block);def expr2name(a, block, args=[]);def analyzeargs(block);def analyzeargs(block);def determineexprtype(expr,vars,rules={});def crack2fortrangen(block,tab='\n', as_interface=False);def crack2fortrangen(block,tab='\n', as_interface=False);def crack2fortrangen(block,tab='\n', as_interface=False);def use2fortran(use,tab='');def vars2fortran(block,vars,args,tab='', as_interface=False);def vars2fortran(block,vars,args,tab='', as_interface=False);def vars2fortran(block,vars,args,tab='', as_interface=False);def crack2fortran(block);def crack2fortran(block);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/f2py/diagnose.py,[u'24'],1,1," -37,7 +37,7 ; -48,7 +48,7 ; -62,9 +62,9 ; -79,7 +79,7 ; -93,10 +93,10 ; -112,10 +112,10 ; -130,7 +130,7 ; -138,11 +138,11 ;",def run();def run();def run();def run();def run();def run();def run();def run();
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/f2py/doc/collectinput.py,[u'8'],1,1," -40,7 +40,7 ; -59,12 +59,12 ;",;;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/f2py/docs/pytest.py,[u'4'],1,1," -4,9 +4,9 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/f2py/docs/usersguide/setup_example.py,[u'4'],1,1," -8,7 +8,7 ; -16,6 +16,6 ;",;;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/f2py/f2py2e.py,[u'84'],1,1," -173,8 +173,8 ; -182,7 +182,7 ; -236,7 +236,7 ; -247,7 +247,7 ; -265,9 +265,9 ; -287,7 +287,7 ; -307,7 +307,7 ; -322,7 +322,7 ; -330,13 +330,13 ; -354,11 +354,11 ; -370,11 +370,11 ; -388,14 +388,14 ; -404,7 +404,7 ; -442,7 +442,7 ; -483,7 +483,7 ; -499,39 +499,39 ; -544,10 +544,10 ; -569,9 +569,9 ;",";def scaninputline(inputline);def scaninputline(inputline);def scaninputline(inputline);def scaninputline(inputline);def callcrackfortran(files,options);def callcrackfortran(files,options);def buildmodules(lst);def buildmodules(lst);def run_main(comline_list);def run_main(comline_list);def run_main(comline_list);def filter_files(prefix,suffix,files,remove_prefix=None);def run_compile();def run_compile();def run_compile();def run_compile();def run_compile();"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/f2py/f2py_testing.py,[u'12'],1,1," -15,10 +15,10 ; -26,7 +26,7 ; -39,8 +39,8 ;","def cmdline();def run(runtest,test_functions,repeat=1);def run(runtest,test_functions,repeat=1);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/f2py/f90mod_rules.py,[u'72'],1,1," -83,19 +83,19 ; -103,16 +103,16 ; -128,33 +128,33 ; -165,27 +165,27 ; -193,35 +193,35 ; -232,7 +232,7 ; -243,4 +243,4 ;","def findf90modules(m);def dadd(line,s=doc): s[0] = '%s\n%s'%(s[0],line;def iadd(line,s=ihooks): s[0] = '%s\n%s'%(s[0],line;def iadd(line,s=ihooks): s[0] = '%s\n%s'%(s[0],line;def iadd(line,s=ihooks): s[0] = '%s\n%s'%(s[0],line;def iadd(line,s=ihooks): s[0] = '%s\n%s'%(s[0],line;def iadd(line,s=ihooks): s[0] = '%s\n%s'%(s[0],line;"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/f2py/func2subr.py,[u'76'],1,1," -40,7 +40,7 ; -51,28 +51,28 ; -82,7 +82,7 ; -95,7 +95,7 ; -107,22 +107,22 ; -140,16 +140,16 ; -166,11 +166,11 ; -185,7 +185,7 ; -198,7 +198,7 ; -207,11 +207,11 ; -228,11 +228,11 ; -246,9 +246,9 ; -261,7 +261,7 ; -281,11 +281,11 ;","def var2fixfortran(vars,a,fa=None,f90mode=None);def var2fixfortran(vars,a,fa=None,f90mode=None);def createfuncwrapper(rout,signature=0);def createfuncwrapper(rout,signature=0);def add(line,ret=ret);def add(line,ret=ret);def add(line,ret=ret);def createsubrwrapper(rout,signature=0);def createsubrwrapper(rout,signature=0);def add(line,ret=ret);def add(line,ret=ret);def add(line,ret=ret);def assubr(rout);def assubr(rout);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/f2py/rules.py,[u'568'],4,4," -81,18 +81,18 ; -243,16 +243,16 ; -320,7 +320,7 ; -338,65 +338,65 ; -405,21 +405,21 ; -431,30 +431,30 ; -466,46 +466,46 ; -520,11 +520,11 ; -532,14 +532,14 ; -574,8 +574,8 ; -587,17 +587,17 ; -605,24 +605,24 ; -644,14 +644,14 ; -691,37 +691,37 ; -752,7 +752,7 ; -762,7 +762,7 ; -814,7 +814,7 ; -824,12 +824,12 ; -840,8 +840,8 ; -860,7 +860,7 ; -872,18 +872,18 ; -893,7 +893,7 ; -904,29 +904,29 ; -943,7 +943,7 ; -951,10 +951,10 ; -964,10 +964,10 ; -984,38 +984,38 ; -1036,8 +1036,8 ; -1069,10 +1069,10 ; -1084,9 +1084,9 ; -1127,28 +1127,28 ; -1156,16 +1156,16 ; -1182,39 +1182,39 ; -1248,28 +1248,28 ; -1277,11 +1277,11 ; -1293,14 +1293,14 ; -1314,7 +1314,7 ; -1325,29 +1325,29 ; -1365,8 +1365,8 ; -1379,15 +1379,15 ; -1401,25 +1401,25 ; -1434,15 +1434,15 ;",";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;def buildmodule(m,um);def buildmodule(m,um);def buildmodule(m,um);def buildmodule(m,um);def buildmodule(m,um);def buildmodule(m,um);def buildapi(rout);def buildapi(rout);def buildapi(rout);def buildapi(rout);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/f2py/setup.py,[u'10'],1,1," -48,10 +48,10 ; -91,7 +91,7 ; -125,5 +125,5 ;",def generate_f2py_py(build_dir);def generate_f2py_py(build_dir);def generate_f2py_py(build_dir);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/f2py/tests/test_array_from_pyobj.py,[u'282'],2,2," -8,7 +8,7 ; -44,12 +44,12 ; -61,9 +61,9 ; -82,9 +82,9 ; -93,10 +93,10 ; -104,24 +104,24 ; -129,10 +129,10 ; -169,7 +169,7 ; -177,16 +177,16 ; -201,14 +201,14 ; -227,26 +227,26 ; -260,7 +260,7 ; -269,36 +269,36 ; -306,15 +306,15 ; -322,84 +322,84 ; -409,10 +409,10 ; -421,16 +421,16 ; -439,25 +439,25 ; -466,48 +466,48 ; -516,15 +516,15 ; -539,7 +539,7 ;",";def flags_info(arr);def __init__(self,intent_list=[]);def is_intent_exact(self,*names);class Type(object);class Type(object);def __new__(cls,name);def larger_types(self);def __init__(self,typ,dims,intent,obj);def __init__(self,typ,dims,intent,obj);def __init__(self,typ,dims,intent,obj);def has_shared_memory(self);def has_shared_memory(self);def test_inout_2seq(self);def test_f_inout_23seq(self);def test_in_cache_from_2casttype_failure(self);def test_in_cache_from_2casttype_failure(self);def test_cache_hidden(self);def test_hidden(self);def test_inplace_from_casttype(self);class test_%s_gen(unittest.TestCase;"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/f2py/tests/test_assumed_shape.py,[u'22'],1,1," -20,17 +20,17 ;",class TestAssumedShapeSumExample(util.F2PyTest);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/f2py/tests/test_callback.py,[u'32'],1,1," -74,24 +74,24 ; -99,9 +99,9 ;",def fun(): return ;def mth(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/f2py/tests/test_kind.py,[u'4'],1,1," -24,11 +24,11 ;",def test_all(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/f2py/tests/test_return_character.py,[u'18'],1,1," -8,19 +8,19 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/f2py/tests/test_return_complex.py,[u'24'],1,1," -8,7 +8,7 ; -22,18 +22,18 ; -46,7 +46,7 ;",";def check_function(self, t);def check_function(self, t);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/f2py/tests/test_return_integer.py,[u'18'],1,1," -7,7 +7,7 ; -17,13 +17,13 ; -34,7 +34,7 ;",";def check_function(self, t);def check_function(self, t);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/f2py/tests/test_return_logical.py,[u'22'],1,1," -7,8 +7,8 ; -32,20 +32,20 ;",";def check_function(self, t);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/f2py/tests/test_return_real.py,[u'20'],1,1," -8,7 +8,7 ; -23,14 +23,14 ; -44,7 +44,7 ;",";def check_function(self, t);def check_function(self, t);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/f2py/tests/test_size.py,[u'28'],1,1," -17,30 +17,30 ;",class TestSizeSumExample(util.F2PyTest);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/f2py/use_rules.py,[u'30'],1,1," -53,7 +53,7 ; -61,7 +61,7 ; -71,9 +71,9 ; -81,29 +81,29 ;",";def buildusevars(m,r);def buildusevars(m,r);def buildusevars(m,r);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/fft/fftpack.py,[u'18'],1,1," -32,7 +32,7 ; -62,11 +62,11 ; -619,7 +619,7 ; -714,7 +714,7 ; -792,10 +792,10 ; -965,7 +965,7 ; -1086,7 +1086,7 ;",";def _raw_fft(a, n=None, axis=-1, init_function=fftpack.cffti;def fftn(a, s=None, axes=None);def ifftn(a, s=None, axes=None);def fft2(a, s=None, axes=(-2,-1));def rfftn(a, s=None, axes=None);def irfftn(a, s=None, axes=None);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/fft/helper.py,[u'12'],1,1," -68,8 +68,8 ; -116,8 +116,8 ; -157,7 +157,7 ; -213,7 +213,7 ;","def fftshift(x, axes=None);def ifftshift(x, axes=None);def fftfreq(n, d=1.0);def rfftfreq(n, d=1.0);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/fft/setup.py,[u'2'],1,1," -3,7 +3,7 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/fft/tests/test_helper.py,[u'2'],1,1," -25,7 +25,7 ;",def test_definition(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/lib/__init__.py,[u'2'],1,1," -24,7 +24,7 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/lib/financial.py,[u'2'],1,1," -688,7 +688,7 ;","def npv(rate, values);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/lib/format.py,[u'6'],1,1," -352,7 +352,7 ; -366,7 +366,7 ; -485,7 +485,7 ;",def read_array_header_1_0(fp);def read_array_header_1_0(fp);def read_array(fp);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/lib/function_base.py,[u'52'],1,1," -351,7 +351,7 ; -362,7 +362,7 ; -392,11 +392,11 ; -1196,7 +1196,7 ; -1269,7 +1269,7 ; -1736,7 +1736,7 ; -1744,7 +1744,7 ; -1820,7 +1820,7 ; -1916,7 +1916,7 ; -2022,8 +2022,8 ; -2120,7 +2120,7 ; -2216,8 +2216,8 ; -2285,7 +2285,7 ; -2364,7 +2364,7 ; -2487,7 +2487,7 ; -2592,7 +2592,7 ; -2841,7 +2841,7 ; -2926,8 +2926,8 ; -3212,7 +3212,7 ; -3253,9 +3253,9 ;","def histogramdd(sample, bins=10, range=None, normed=False, weights=None);def histogramdd(sample, bins=10, range=None, normed=False, weights=None);def histogramdd(sample, bins=10, range=None, normed=False, weights=None);def sort_complex(a);def unique(x);def cov(m, y=None, rowvar=1, bias=0, ddof=None);def cov(m, y=None, rowvar=1, bias=0, ddof=None);def corrcoef(x, y=None, rowvar=1, bias=0, ddof=None);def blackman(M);def bartlett(M);def hanning(M);def hamming(M);def _chbevl(x, vals);def i0(x);def kaiser(M,beta);def msort(a);def _compute_qth_percentile(sorted, q, axis, out);def trapz(y, x=None, dx=1.0, axis=-1);def delete(arr, obj, axis=None);def delete(arr, obj, axis=None);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/lib/index_tricks.py,[u'32'],1,1," -6,8 +6,8 ; -144,7 +144,7 ; -180,7 +180,7 ; -195,12 +195,12 ; -237,12 +237,12 ; -265,10 +265,10 ; -293,7 +293,7 ; -323,11 +323,11 ;",";class nd_grid(object);def __getitem__(self,key);def __getitem__(self,key);def __init__(self, axis=0, matrix=False, ndmin=1, trans1d=-1);def __getitem__(self,key);def __getitem__(self,key);def __getitem__(self,key);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/lib/info.py,[u'2'],1,1," -147,5 +147,5 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/lib/polynomial.py,[u'14'],1,1," -141,7 +141,7 ; -223,7 +223,7 ; -589,7 +589,7 ; -599,7 +599,7 ; -828,7 +828,7 ; -1200,7 +1200,7 ; -1261,4 +1261,4 ;","def poly(seq_of_zeros);def roots(p);def polyfit(x, y, deg, rcond=None, full=False, w=None, cov=False);def polyfit(x, y, deg, rcond=None, full=False, w=None, cov=False);def polymul(a1, a2);def __setattr__(self, key, val);def deriv(self, m=1);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/lib/recfunctions.py,[u'2'],1,1," -900,7 +900,7 ;","def join_by(key, r1, r2, jointype='inner', r1postfix='1', r2postfix='2';"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/lib/scimath.py,[u'4'],1,1," -17,7 +17,7 ; -84,7 +84,7 ;",;def _tocomplex(arr);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/lib/setup.py,[u'6'],1,1," -5,13 +5,13 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/lib/shape_base.py,[u'62'],1,1," -1,7 +1,7 ; -68,18 +68,18 ; -91,7 +91,7 ; -101,7 +101,7 ; -182,7 +182,7 ; -288,11 +288,11 ; -348,7 +348,7 ; -383,17 +383,17 ; -474,10 +474,10 ; -535,11 +535,11 ; -588,9 +588,9 ; -633,7 +633,7 ; -659,7 +659,7 ; -728,10 +728,10 ; -745,7 +745,7 ; -819,14 +819,14 ;",";def apply_along_axis(func1d,axis,arr,*args);def apply_along_axis(func1d,axis,arr,*args);def apply_along_axis(func1d,axis,arr,*args);def apply_over_axes(func, a, axes);def column_stack(tup);def _replace_zero_by_x_arrays(sub_arys);def array_split(ary,indices_or_sections,axis = 0);def split(ary,indices_or_sections,axis=0);def hsplit(ary,indices_or_sections);def vsplit(ary,indices_or_sections);def dsplit(ary,indices_or_sections);def get_array_wrap(*args);def kron(a,b);def kron(a,b);def tile(A, reps);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/lib/stride_tricks.py,[u'2'],1,1," -115,6 +115,6 ;",def broadcast_arrays(*args);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/lib/tests/test_arraysetops.py,[u'42'],1,1," -61,8 +61,8 ; -83,7 +83,7 ; -107,19 +107,19 ; -182,8 +182,8 ; -202,9 +202,9 ; -220,7 +220,7 ; -236,12 +236,12 ;","def check_all(a, b, i1, i2, dt);def test_intersect1d( self );def test_setxor1d( self );def test_in1d(self);def test_in1d_invert(self);def test_union1d( self );def test_setdiff1d( self );"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/lib/tests/test_financial.py,[u'126'],1,1," -5,7 +5,7 ; -14,127 +14,127 ;",;def test_irr(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/lib/tests/test_format.py,[u'24'],1,1," -331,11 +331,11 ; -354,8 +354,8 ; -394,8 +394,8 ; -520,7 +520,7 ; -538,18 +538,18 ;",def teardown_module();def teardown_module();def teardown_module();def test_bad_magic_args();def test_bad_header();
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/lib/tests/test_function_base.py,[u'112'],1,1," -174,10 +174,10 ; -185,42 +185,42 ; -236,9 +236,9 ; -355,10 +355,10 ; -368,7 +368,7 ; -380,8 +380,8 ; -394,7 +394,7 ; -422,9 +422,9 ; -598,7 +598,7 ; -776,18 +776,18 ; -1052,7 +1052,7 ; -1114,23 +1114,23 ; -1160,10 +1160,10 ; -1173,7 +1173,7 ; -1182,10 +1182,10 ;","def test_basic(self);def test_basic(self);class SubClass(np.ndarray);def test_basic(self);def test_nd(self);def _check_inverse_of_slicing(self, indices);def test_slices(self);class SubClass(np.ndarray);def mypolyval(x, p);def test_ndim(self);def test_weights(self);def test_dtype_order(self);def test_empty(self);def test_simple(self);def test_simple(self);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/lib/tests/test_index_tricks.py,[u'160'],1,2," -8,42 +8,42 ; -51,9 +51,9 ; -63,12 +63,12 ; -77,63 +77,63 ; -144,17 +144,17 ; -162,7 +162,7 ; -177,7 +177,7 ; -192,7 +192,7 ; -223,7 +223,7 ;",;def test_dtypes(self);def test_dtypes(self);def test_basic(self);def test_regression_1(self);def test_fill_diagonal();def test_fill_diagonal();def test_fill_diagonal();def test_diag_indices();
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/lib/tests/test_io.py,[u'4'],1,1," -583,7 +583,7 ; -1554,7 +1554,7 ;",def test_3d_shaped_dtype(self);def test_recfromcsv(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/lib/tests/test_nanfunctions.py,[u'8'],1,1," -17,7 +17,7 ; -131,7 +131,7 ; -253,7 +253,7 ; -398,7 +398,7 ;",;def test_allnans(self);def test_allnans(self);def test_allnans(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/lib/tests/test_polynomial.py,[u'50'],1,1," -86,29 +86,29 ; -116,7 +116,7 ; -124,19 +124,19 ; -153,14 +153,14 ;",def test_doctests(self);def test_polyfit(self) ;def test_polyfit(self) ;def test_objects(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/lib/tests/test_recfunctions.py,[u'14'],1,1," -660,13 +660,13 ; -675,7 +675,7 ;",def test_no_r2postfix(self);def test_two_keys_two_vars(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/lib/tests/test_regression.py,[u'76'],1,1," -12,22 +12,22 ; -36,51 +36,51 ; -108,16 +108,16 ; -144,20 +144,20 ; -194,9 +194,9 ; -214,17 +214,17 ;",";def test_unique_zero_sized(self,level=rlevel);def test_polydiv_type(self) ;def test_large_fancy_indexing(self, level=rlevel);def test_append_fields_dtype_list(self);def test_loadtxt_fields_subarrays(self);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/lib/tests/test_shape_base.py,[u'330'],2,3," -7,133 +7,133 ; -143,14 +143,14 ; -159,27 +159,27 ; -190,75 +190,75 ; -270,44 +270,44 ; -331,9 +331,9 ;",;class TestSplit(TestCase);def test_unequal_split(self);class TestHsplit(TestCase);def test_basic(self);def test_basic(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/lib/tests/test_stride_tricks.py,[u'144'],1,1," -52,10 +52,10 ; -67,13 +67,13 ; -92,18 +92,18 ; -116,25 +116,25 ; -146,9 +146,9 ; -160,38 +160,38 ;",def test_same();def test_same_input_shapes();def test_two_compatible_by_ones_input_shapes();def test_two_compatible_by_prepending_ones_input_shapes();def test_incompatible_shapes_raise_valueerror();def test_same_as_ufunc();
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/lib/tests/test_twodim_base.py,[u'202'],1,2," -14,46 +14,46 ; -93,7 +93,7 ; -123,61 +123,61 ; -191,40 +191,40 ; -233,11 +233,11 ; -327,15 +327,15 ;",";def test_matrix(self, vals=None);class TestFliplr(TestCase);def test_simple(self);def test_empty(self);def test_triu_indices(self);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/lib/tests/test_type_check.py,[u'140'],1,1," -20,11 +20,11 ; -36,50 +36,50 ; -97,72 +97,72 ; -193,9 +193,9 ; -226,9 +226,9 ; -259,7 +259,7 ; -269,7 +269,7 ; -279,7 +279,7 ; -319,19 +319,19 ;",def assert_all(x);class TestMintypecode(TestCase);class TestReal(TestCase);def test_complex1(self);def test_complex1(self);class TestIsposinf(TestCase);class TestIsneginf(TestCase);class TestNanToNum(TestCase);def test_basic(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/lib/tests/test_ufunclike.py,[u'2'],1,1," -54,7 +54,7 ;","def __array_wrap__(self, obj, context=None);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/lib/twodim_base.py,[u'34'],1,1," -3,9 +3,9 ; -113,7 +113,7 ; -160,12 +160,12 ; -276,7 +276,7 ; -334,12 +334,12 ; -385,7 +385,7 ; -421,7 +421,7 ; -510,9 +510,9 ; -650,7 +650,7 ; -719,7 +719,7 ; -929,4 +929,4 ;",";def flipud(m);def rot90(m, k=1);def diag(v, k=0);def diagflat(v, k=0);def tri(N, M=None, k=0, dtype=float);def tril(m, k=0);def vander(x, N=None);def histogram2d(x, y, bins=10, range=None, normed=False, weights=None);def mask_indices(n, mask_func, k=0);def triu_indices_from(arr, k=0);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/lib/type_check.py,[u'10'],1,1," -3,9 +3,9 ; -68,7 +68,7 ; -102,7 +102,7 ;",";def mintypecode(typechars,typeset='GDFgdf',default='d');def asfarray(a, dtype=_nx.float_);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/lib/user_array.py,[u'66'],1,1," -39,9 +39,9 ; -65,16 +65,16 ; -88,32 +88,32 ; -163,12 +163,12 ; -185,7 +185,7 ; -195,7 +195,7 ; -204,19 +204,19 ;","def __getslice__(self, i, j);def __isub__(self, other);def __imod__(self, other);def __long__(self): return self._scalarfunc(long;def _rc(self, a);def __setattr__(self,attr,value);def __getattr__(self,attr);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/lib/utils.py,[u'20'],1,1," -320,7 +320,7 ; -351,9 +351,9 ; -409,7 +409,7 ; -470,7 +470,7 ; -537,7 +537,7 ; -565,7 +565,7 ; -972,7 +972,7 ; -987,7 +987,7 ;","def who(vardict=None);def who(vardict=None);def _makenamedict(module='numpy');def info(object=None,maxwidth=76,output=sys.stdout,toplevel='numpy');def info(object=None,maxwidth=76,output=sys.stdout,toplevel='numpy');def info(object=None,maxwidth=76,output=sys.stdout,toplevel='numpy');class SafeEval(object);def visitConst(self, node, **kw);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/linalg/lapack_lite/make_lite.py,[u'2'],1,1," -151,7 +151,7 ;","def _newFortranRoutine(self, rname, filename);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/linalg/linalg.py,[u'16'],1,1," -13,7 +13,7 ; -271,7 +271,7 ; -766,7 +766,7 ; -808,7 +808,7 ; -1415,10 +1415,10 ; -1585,7 +1585,7 ; -1824,7 +1824,7 ;",";def tensorsolve(a, b, axes=None);def qr(a, mode='reduced');def qr(a, mode='reduced');def cond(x, p=None);def pinv(a, rcond=1e-15 );def lstsq(a, b, rcond=-1);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/linalg/setup.py,[u'4'],1,1," -6,7 +6,7 ; -23,7 +23,7 ;",";def configuration(parent_package='',top_path=None);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/linalg/tests/test_gufuncs_linalg.py,[u'82'],1,1," -71,7 +71,7 ; -127,38 +127,38 ; -181,7 +181,7 ; -201,7 +201,7 ; -223,7 +223,7 ; -243,7 +243,7 ; -265,17 +265,17 ; -291,7 +291,7 ; -369,10 +369,10 ; -389,8 +389,8 ; -417,7 +417,7 ; -455,43 +455,43 ;","def assert_almost_equal(a, b, **kw);def assert_valid_eigenvals(M, w, **kw);def complex_hermitian_matrices_vector(self);def test_cdouble(self);def test_vector_cdouble(self);def test_cdouble(self);def test_vector_cdouble(self);def do(self, a, b);def do(self, a, b);def do(self, a, b);def do(self, a, b);def test_cdouble_vector(self);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/linalg/tests/test_linalg.py,[u'128'],1,1," -39,32 +39,32 ; -78,71 +78,71 ; -211,14 +211,14 ; -227,15 +227,15 ; -256,13 +256,13 ; -288,7 +288,7 ; -313,7 +313,7 ; -344,13 +344,13 ; -426,10 +426,10 ; -437,14 +437,14 ; -452,7 +452,7 ; -460,46 +460,46 ; -507,17 +507,17 ; -623,7 +623,7 ; -644,11 +644,11 ; -696,17 +696,17 ; -769,7 +769,7 ; -864,7 +864,7 ;","def get_complex_dtype(dtype);def test_empty(self);class ArraySubclass(np.ndarray);class ArraySubclass(np.ndarray);def test_0_size(self);class TestEig(LinalgTestCase, LinalgGeneralizedTestCase, TestCase);class TestSVD(LinalgTestCase, LinalgGeneralizedTestCase, TestCase);class TestCond2(LinalgTestCase, TestCase);def do(self, a, b);class TestMatrixPower(object);def tz(M);def tz(M);def test_empty(self);def test_axis(self);def test_axis(self);def test_matrix_rank(self);def check_qr(self, a);def test_generalized_raise_multiloop();"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/linalg/tests/test_regression.py,[u'8'],1,1," -20,13 +20,13 ;","def test_eig_build(self, level = rlevel);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/ma/bench.py,[u'44'],1,1," -17,8 +17,8 ; -26,8 +26,8 ; -42,7 +42,7 ; -64,11 +64,11 ; -92,11 +92,11 ; -139,28 +139,28 ;",";;;def compare_functions_1v(func, nloop=500;def compare_functions_2v(func, nloop=500, test=True;def compare_functions_2v(func, nloop=500, test=True;"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/ma/setup.py,[u'2'],1,1," -10,7 +10,7 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/ma/tests/test_core.py,[u'64'],1,1," -34,7 +34,7 ; -79,8 +79,8 ; -100,8 +100,8 ; -658,7 +658,7 ; -717,7 +717,7 ; -1547,7 +1547,7 ; -1778,7 +1778,7 ; -1952,10 +1952,10 ; -2125,10 +2125,10 ; -2428,10 +2428,10 ; -2467,7 +2467,7 ; -2615,10 +2615,10 ; -2840,10 +2840,10 ; -2897,7 +2897,7 ; -3079,7 +3079,7 ; -3110,7 +3110,7 ; -3119,7 +3119,7 ; -3369,7 +3369,7 ; -3457,11 +3457,11 ;",def setUp (self);def test_basic1d(self);def test_basic2d(self);def setUp (self);def test_divide_on_different_shapes(self);def test_fillvalue_in_view(self);def test_inplace_division_misc(self);class TestMaskedArrayMethods(TestCase);def test_argmax_argmin(self);def test_squeeze(self);def test_take(self);class TestMaskedArrayMathMethods(TestCase);class TestMaskedArrayMathMethodsComplex(TestCase);def setUp(self);def test_where(self);def test_where_with_masked_choice(self);def test_where_with_masked_choice(self);def test_compress(self);def test_getmaskarray(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/ma/tests/test_extras.py,[u'6'],1,1," -277,8 +277,8 ; -688,7 +688,7 ;",def test_2d(self);def test_polyfit(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/ma/tests/test_mrecords.py,[u'254'],2,2," -39,12 +39,12 ; -55,7 +55,7 ; -64,14 +64,14 ; -79,7 +79,7 ; -90,24 +90,24 ; -115,7 +115,7 ; -125,27 +125,27 ; -153,14 +153,14 ; -171,42 +171,42 ; -214,30 +214,30 ; -245,12 +245,12 ; -282,9 +282,9 ; -299,29 +299,29 ; -333,9 +333,9 ; -347,19 +347,19 ; -375,12 +375,12 ; -398,26 +398,26 ; -431,7 +431,7 ; -439,9 +439,9 ; -452,13 +452,13 ; -480,21 +480,21 ; -505,7 +505,7 ;","def __init__(self, *args, **kwds);def test_byview(self);def test_get(self);def test_get(self);def test_get(self);def test_set_fields(self);def test_set_fields(self);def test_set_fields_mask(self);def test_set_mask(self);def test_set_elements(self);def test_setslices_hardmask(self);def test_hardmask(self);def test_pickling(self);def test_withnames(self);def test_exotic_formats(self);def test_view_simple_dtype(self);def __init__(self, *args, **kwds);def test_fromrecords(self);def test_fromrecords(self);def test_fromrecords_wmask(self);def test_fromtextfile(self);def test_record_array_with_object_field();"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/ma/tests/test_old_ma.py,[u'28'],1,1," -26,7 +26,7 ; -44,8 +44,8 ; -64,8 +64,8 ; -333,7 +333,7 ; -341,7 +341,7 ; -574,12 +574,12 ; -722,10 +722,10 ;",def setUp (self);def test_testBasic1d(self);def test_testBasic2d(self);def test_testOddFeatures(self);def test_testOddFeatures(self);def test_testAverage2(self);def test_nonzero(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/ma/tests/test_regression.py,[u'22'],1,1," -10,32 +10,32 ; -63,8 +63,8 ;",;def test_var_sets_maskedarray_scalar(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/ma/tests/test_subclassing.py,[u'48'],1,1," -26,23 +26,23 ; -58,9 +58,9 ; -81,7 +81,7 ; -104,21 +104,21 ; -127,7 +127,7 ; -138,10 +138,10 ; -151,8 +151,8 ;","def __new__(cls,arr,info={});def __new__(cls, data, mask=nomask);def setUp(self);def test_masked_binary_operations(self);def test_attributepropagation(self);def test_attributepropagation(self);def test_attributepropagation(self);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/ma/timer_comparison.py,[u'140'],1,1," -83,7 +83,7 ; -112,45 +112,45 ; -164,7 +164,7 ; -175,22 +175,22 ; -203,16 +203,16 ; -220,17 +220,17 ; -300,9 +300,9 ; -312,9 +312,9 ; -324,9 +324,9 ; -340,8 +340,8 ; -376,55 +376,55 ; -441,7 +441,7 ;","def assert_array_compare(self, comparison, x, y, err_msg='', header='';def assert_array_equal(self, x, y, err_msg='');def test_2(self);def test_2(self);def test_3(self);def test_4(self);def test_6(self);def test_6(self);def test_6(self);def test_6(self);def test_7(self);def test_A(self);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/matlib.py,[u'10'],1,1," -168,8 +168,8 ; -210,7 +210,7 ; -347,12 +347,12 ;","def identity(n,dtype=None);def eye(n,M=None, k=0, dtype=float);def repmat(a, m, n);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/matrixlib/defmatrix.py,[u'50'],1,1," -39,7 +39,7 ; -95,7 +95,7 ; -169,7 +169,7 ; -185,21 +185,21 ; -271,9 +271,9 ; -304,9 +304,9 ; -330,13 +330,13 ; -378,7 +378,7 ; -391,7 +391,7 ; -862,7 +862,7 ; -997,7 +997,7 ; -1018,8 +1018,8 ; -1084,10 +1084,10 ;","def _eval(astr);def asmatrix(data, dtype=None);def matrix_power(M,n);def matrix_power(M,n);def __new__(subtype, data, dtype=None, copy=True);def __array_finalize__(self, obj);def __getitem__(self, index);def _align(self, axis);def _collapse(self, axis);def getI(self);def getH(self);def _from_string(str,gdict,ldict);def bmat(obj, ldict=None, gdict=None);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/matrixlib/tests/test_defmatrix.py,[u'202'],1,2," -10,51 +10,51 ; -63,12 +63,12 ; -80,46 +80,46 ; -142,14 +142,14 ; -173,34 +173,34 ; -272,12 +272,12 ; -305,23 +305,23 ; -331,64 +331,64 ;",;def test_sum(self);def test_sum(self);def test_basic(self);def test_comparisons(self);class TestMatrixReturn(TestCase);def test_instance_methods(self);def test_dimesions(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/matrixlib/tests/test_multiarray.py,[u'10'],1,1," -5,14 +5,14 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/matrixlib/tests/test_numeric.py,[u'2'],1,1," -6,5 +6,5 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/matrixlib/tests/test_regression.py,[u'10'],1,1," -9,14 +9,14 ; -25,10 +25,10 ;","class TestRegression(TestCase);def test_matrix_multiply_by_1d_vector(self, level=rlevel) ;"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/numarray/alter_code1.py,[u'36'],1,1," -69,12 +69,12 ; -82,7 +82,7 ; -106,16 +106,16 ; -123,9 +123,9 ; -222,7 +222,7 ; -234,16 +234,16 ; -254,7 +254,7 ;","def changeimports(fstr, name, newname);def changeimports(fstr, name, newname);def addimport(astr);def replaceattr(astr);def convertall(direc=os.path.curdir, orig=1);def convertsrc(direc=os.path.curdir, ext=None, orig=1);def convertsrc(direc=os.path.curdir, ext=None, orig=1);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/numarray/alter_code2.py,[u'2'],1,1," -50,7 +50,7 ;",def convertall(direc=os.path.curdir);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/numarray/functions.py,[u'22'],1,1," -107,7 +107,7 ; -211,13 +211,13 ; -228,7 +228,7 ; -241,7 +241,7 ; -250,7 +250,7 ; -265,7 +265,7 ; -389,7 +389,7 ; -472,14 +472,14 ;","def and_(a, b);def fromfile(infile, type=None, shape=None, sizing=STRICT;def fromfile(infile, type=None, shape=None, sizing=STRICT;def fromfile(infile, type=None, shape=None, sizing=STRICT;def fromfile(infile, type=None, shape=None, sizing=STRICT;def fromfile(infile, type=None, shape=None, sizing=STRICT;def info(obj, output=sys.stdout, numpy=0);def tensormultiply(a1, a2);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/numarray/numerictypes.py,[u'54'],1,1," -32,17 +32,17 ; -305,23 +305,23 ; -330,10 +330,10 ; -341,7 +341,7 ; -415,16 +415,16 ; -433,12 +433,12 ; -510,7 +510,7 ; -528,7 +528,7 ;",";def _scipy_alias(scipy_type, numarray_type);def _scipy_alias(scipy_type, numarray_type);def _scipy_alias(scipy_type, numarray_type);def _initGenericCoercions();def _initGenericCoercions();def getType(type);def getType(type);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/numarray/session.py,[u'16'],1,1," -119,9 +119,9 ; -154,7 +154,7 ; -192,13 +192,13 ; -234,7 +234,7 ; -276,7 +276,7 ; -291,7 +291,7 ;","def _callers_modules();def __new__(_type, name, save=False);def __new__(_type, module, name, _type2, save=False);def _locate(modules, object);def save(variables=None, file=SAVEFILE, dictionary=None, verbose=False);def save(variables=None, file=SAVEFILE, dictionary=None, verbose=False);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/numarray/setup.py,[u'2'],1,1," -4,7 +4,7 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/oldnumeric/alter_code1.py,[u'32'],1,1," -67,7 +67,7 ; -83,13 +83,13 ; -111,15 +111,15 ; -128,7 +128,7 ; -139,7 +139,7 ; -199,7 +199,7 ; -211,16 +211,16 ; -231,7 +231,7 ;",";def changeimports(fstr, name, newname);def fixistesting(astr);def replaceattr(astr);def fromstr(filestr);def convertall(direc=os.path.curdir, orig=1);def convertsrc(direc=os.path.curdir, ext=None, orig=1);def convertsrc(direc=os.path.curdir, ext=None, orig=1);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/oldnumeric/alter_code2.py,[u'18'],1,1," -35,11 +35,11 ; -49,13 +49,13 ; -66,7 +66,7 ; -131,7 +131,7 ;",";def changeimports(fstr, name, newname);def changeimports(fstr, name, newname);def convertall(direc=os.path.curdir);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/oldnumeric/arrayfns.py,[u'10'],1,1," -43,21 +43,21 ; -65,7 +65,7 ; -84,7 +84,7 ;","def interp(y, x, z, typ=None);def span(lo, hi, num, d2=0);def zmin_zmax(z, ireg);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/oldnumeric/fix_default_axis.py,[u'10'],1,1," -82,9 +82,9 ; -200,8 +200,8 ; -277,7 +277,7 ;","def _add_axis(fstr, name, repl);def _import_change(fstr, names);def convertall(direc=os.path.curdir, import_change=False);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/oldnumeric/functions.py,[u'6'],1,1," -12,7 +12,7 ; -55,7 +55,7 ; -64,7 +64,7 ;",";def ones(shape, typecode='l', savespace=0, dtype=None);def zeros(shape, typecode='l', savespace=0, dtype=None);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/oldnumeric/linear_algebra.py,[u'6'],1,1," -24,7 +24,7 ; -42,7 +42,7 ; -79,7 +79,7 ;",";def eigenvalues(a);def linear_least_squares(a, b, rcond=1.e-10);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/oldnumeric/ma.py,[u'26'],1,1," -1157,22 +1157,22 ; -1772,7 +1772,7 ; -2179,7 +2179,7 ; -2237,7 +2237,7 ; -2257,7 +2257,7 ; -2269,13 +2269,13 ;","def __idiv__(self, other);def masked_where(condition, x, copy=1);def _clip(self,a_min,a_max,out=None);def _min(a, axis=None, out=None);def _squeeze(self);def _swapaxes(self,axis1,axis2);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/oldnumeric/matrix.py,[u'2'],1,1," -28,7 +28,7 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/oldnumeric/mlab.py,[u'10'],1,1," -29,7 +29,7 ; -39,7 +39,7 ; -84,8 +84,8 ; -96,7 +96,7 ;","def eye(N, M=None, k=0, typecode=None, dtype=None);def tri(N, M=None, k=0, typecode=None, dtype=None);def cov(m, y=None, rowvar=0, bias=0);def cov(m, y=None, rowvar=0, bias=0);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/oldnumeric/random_array.py,[u'34'],1,1," -3,7 +3,7 ; -19,7 +19,7 ; -189,14 +189,14 ; -206,13 +206,13 ; -221,7 +221,7 ; -232,20 +232,20 ; -263,7 +263,7 ;",";def seed(x=0, y=0);def poisson(mean, shape=[]);def test();def test();def test();def test();"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/oldnumeric/rng.py,[u'10'],1,1," -6,7 +6,7 ; -21,7 +21,7 ; -61,7 +61,7 ; -76,7 +76,7 ; -97,7 +97,7 ;",";def __init__(self, meth, *args);def __init__(self, m, s);def __init__(self, m, s);def density(x);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/oldnumeric/rng_stats.py,[u'6'],1,1," -10,7 +10,7 ; -26,11 +26,11 ;","def average(data);def histogram(data, nbins, range = None);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/oldnumeric/setup.py,[u'2'],1,1," -2,7 +2,7 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/oldnumeric/tests/test_oldnumeric.py,[u'90'],1,1," -11,79 +11,79 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/oldnumeric/tests/test_regression.py,[u'2'],1,1," -8,4 +8,4 ;",class TestRegression(TestCase);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/polynomial/chebyshev.py,[u'14'],1,1," -98,7 +98,7 ; -439,7 +439,7 ; -448,7 +448,7 ; -482,7 +482,7 ; -1523,7 +1523,7 ; -1588,7 +1588,7 ; -1805,7 +1805,7 ;",";def cheb2poly(c) ;def cheb2poly(c) ;def chebline(off, scl) ;def chebvander2d(x, y, deg) ;def chebvander3d(x, y, z, deg) ;def chebcompanion(c);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/polynomial/hermite.py,[u'14'],1,1," -185,7 +185,7 ; -228,7 +228,7 ; -1295,7 +1295,7 ; -1360,7 +1360,7 ; -1577,13 +1577,13 ;","def herm2poly(c) ;def hermline(off, scl) ;def hermvander2d(x, y, deg) ;def hermvander3d(x, y, z, deg) ;def hermcompanion(c);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/polynomial/hermite_e.py,[u'14'],1,1," -184,7 +184,7 ; -228,7 +228,7 ; -1291,7 +1291,7 ; -1356,7 +1356,7 ; -1574,13 +1574,13 ;","def herme2poly(c) ;def hermeline(off, scl) ;def hermevander2d(x, y, deg) ;def hermevander3d(x, y, z, deg) ;def hermecompanion(c);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/polynomial/laguerre.py,[u'10'],1,1," -181,7 +181,7 ; -1294,7 +1294,7 ; -1359,7 +1359,7 ; -1578,10 +1578,10 ;","def lag2poly(c) ;def lagvander2d(x, y, deg) ;def lagvander3d(x, y, z, deg) ;def lagcompanion(c);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/polynomial/legendre.py,[u'14'],1,1," -92,7 +92,7 ; -213,7 +213,7 ; -222,7 +222,7 ; -256,7 +256,7 ; -1324,7 +1324,7 ; -1389,7 +1389,7 ; -1605,7 +1605,7 ;",";def leg2poly(c) ;def leg2poly(c) ;def legline(off, scl) ;def legvander2d(x, y, deg) ;def legvander3d(x, y, z, deg) ;def legcompanion(c);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/polynomial/polynomial.py,[u'16'],1,1," -58,8 +58,8 ; -75,7 +75,7 ; -84,7 +84,7 ; -120,7 +120,7 ; -1119,7 +1119,7 ; -1186,7 +1186,7 ; -1424,7 +1424,7 ;",";;;def polyline(off, scl) ;def polyvander2d(x, y, deg) ;def polyvander3d(x, y, z, deg) ;def polycompanion(c);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/polynomial/setup.py,[u'2'],1,1," -2,7 +2,7 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/polynomial/tests/test_chebyshev.py,[u'68'],1,1," -64,8 +64,8 ; -74,8 +74,8 ; -83,7 +83,7 ; -92,7 +92,7 ; -102,7 +102,7 ; -127,7 +127,7 ; -140,8 +140,8 ; -156,9 +156,9 ; -173,9 +173,9 ; -187,7 +187,7 ; -201,7 +201,7 ; -212,7 +212,7 ; -250,7 +250,7 ; -260,7 +260,7 ; -270,7 +270,7 ; -280,7 +280,7 ; -320,14 +320,14 ; -409,10 +409,10 ; -423,8 +423,8 ; -433,8 +433,8 ; -467,7 +467,7 ; -480,16 +480,16 ; -506,7 +506,7 ;",class TestArithmetic(TestCase) ;def test_chebadd(self) ;def test_chebsub(self) ;def test_chebmulx(self);def test_chebmul(self) ;def test_chebval(self) ;def test_chebval(self) ;def test_chebval2d(self);def test_chebval3d(self);def test_chebgrid2d(self);def test_chebgrid3d(self);def test_chebint(self) ;def test_chebint(self) ;def test_chebint(self) ;def test_chebint(self) ;def test_chebint(self) ;def test_chebder(self) ;def f(x) ;def f(x) ;def f(x) ;def test_100(self);class TestMisc(TestCase) ;def test_chebtrim(self) ;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/polynomial/tests/test_classes.py,[u'6'],1,1," -155,12 +155,12 ; -441,7 +441,7 ;",def check_fit(Poly) ;def check_deriv(Poly);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/polynomial/tests/test_hermite.py,[u'66'],1,1," -49,8 +49,8 ; -59,8 +59,8 ; -68,7 +68,7 ; -80,7 +80,7 ; -91,7 +91,7 ; -116,7 +116,7 ; -130,8 +130,8 ; -146,9 +146,9 ; -163,9 +163,9 ; -177,7 +177,7 ; -191,7 +191,7 ; -202,7 +202,7 ; -240,7 +240,7 ; -250,7 +250,7 ; -260,7 +260,7 ; -270,7 +270,7 ; -310,14 +310,14 ; -399,10 +399,10 ; -413,8 +413,8 ; -423,8 +423,8 ; -457,7 +457,7 ; -470,7 +470,7 ; -482,7 +482,7 ; -499,7 +499,7 ;",class TestArithmetic(TestCase) ;def test_hermadd(self) ;def test_hermsub(self) ;def test_hermmul(self) ;def test_hermmul(self) ;def test_hermval(self) ;def test_hermval(self) ;def test_hermval2d(self);def test_hermval3d(self);def test_hermgrid2d(self);def test_hermgrid3d(self);def test_hermint(self) ;def test_hermint(self) ;def test_hermint(self) ;def test_hermint(self) ;def test_hermint(self) ;def test_hermder(self) ;def f(x) ;def f(x) ;def f(x) ;def test_100(self);class TestMisc(TestCase) ;def test_hermfromroots(self) ;def test_hermtrim(self) ;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/polynomial/tests/test_hermite_e.py,[u'84'],1,1," -9,15 +9,15 ; -46,8 +46,8 ; -56,8 +56,8 ; -65,7 +65,7 ; -77,7 +77,7 ; -88,7 +88,7 ; -113,7 +113,7 ; -127,8 +127,8 ; -143,9 +143,9 ; -160,9 +160,9 ; -174,7 +174,7 ; -188,7 +188,7 ; -199,7 +199,7 ; -237,7 +237,7 ; -247,7 +247,7 ; -257,7 +257,7 ; -267,7 +267,7 ; -307,14 +307,14 ; -396,10 +396,10 ; -410,8 +410,8 ; -420,8 +420,8 ; -454,7 +454,7 ; -467,7 +467,7 ; -479,7 +479,7 ; -496,7 +496,7 ;",;class TestArithmetic(TestCase) ;def test_hermeadd(self) ;def test_hermesub(self) ;def test_hermemul(self) ;def test_hermemul(self) ;def test_hermeval(self) ;def test_hermeval(self) ;def test_hermeval2d(self);def test_hermeval3d(self);def test_hermegrid2d(self);def test_hermegrid3d(self);def test_hermeint(self) ;def test_hermeint(self) ;def test_hermeint(self) ;def test_hermeint(self) ;def test_hermeint(self) ;def test_hermeder(self) ;def f(x) ;def f(x) ;def f(x) ;def test_100(self);class TestMisc(TestCase) ;def test_hermefromroots(self) ;def test_hermetrim(self) ;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/polynomial/tests/test_laguerre.py,[u'78'],1,1," -11,12 +11,12 ; -45,8 +45,8 ; -55,8 +55,8 ; -64,7 +64,7 ; -76,7 +76,7 ; -87,7 +87,7 ; -111,7 +111,7 ; -125,8 +125,8 ; -141,9 +141,9 ; -158,9 +158,9 ; -172,7 +172,7 ; -186,7 +186,7 ; -197,7 +197,7 ; -235,7 +235,7 ; -245,7 +245,7 ; -255,7 +255,7 ; -265,7 +265,7 ; -305,14 +305,14 ; -394,10 +394,10 ; -408,8 +408,8 ; -418,8 +418,8 ; -452,7 +452,7 ; -465,7 +465,7 ; -477,7 +477,7 ; -494,7 +494,7 ;",;class TestArithmetic(TestCase) ;def test_lagadd(self) ;def test_lagsub(self) ;def test_lagmul(self) ;def test_lagmul(self) ;def test_lagval(self) ;def test_lagval(self) ;def test_lagval2d(self);def test_lagval3d(self);def test_laggrid2d(self);def test_laggrid3d(self);def test_lagint(self) ;def test_lagint(self) ;def test_lagint(self) ;def test_lagint(self) ;def test_lagint(self) ;def test_lagder(self) ;def f(x) ;def f(x) ;def f(x) ;def test_100(self);class TestMisc(TestCase) ;def test_lagfromroots(self) ;def test_lagtrim(self) ;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/polynomial/tests/test_legendre.py,[u'72'],1,1," -16,10 +16,10 ; -48,8 +48,8 ; -58,8 +58,8 ; -67,7 +67,7 ; -80,7 +80,7 ; -91,7 +91,7 ; -115,7 +115,7 ; -129,8 +129,8 ; -145,9 +145,9 ; -162,7 +162,7 ; -176,7 +176,7 ; -190,7 +190,7 ; -201,7 +201,7 ; -239,7 +239,7 ; -249,7 +249,7 ; -259,7 +259,7 ; -269,7 +269,7 ; -309,14 +309,14 ; -397,10 +397,10 ; -411,8 +411,8 ; -421,8 +421,8 ; -455,7 +455,7 ; -468,7 +468,7 ; -480,7 +480,7 ; -497,7 +497,7 ;",;class TestArithmetic(TestCase) ;def test_legadd(self) ;def test_legsub(self) ;def test_legmul(self) ;def test_legmul(self) ;def test_legval(self) ;def test_legval(self) ;def test_legval2d(self);def test_legval3d(self);def test_leggrid2d(self);def test_leggrid3d(self);def test_legint(self) ;def test_legint(self) ;def test_legint(self) ;def test_legint(self) ;def test_legint(self) ;def test_legder(self) ;def f(x) ;def f(x) ;def f(x) ;def test_100(self);class TestMisc(TestCase) ;def test_legfromroots(self) ;def test_legtrim(self) ;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/polynomial/tests/test_polynomial.py,[u'72'],1,1," -46,8 +46,8 ; -56,8 +56,8 ; -74,7 +74,7 ; -85,17 +85,17 ; -118,7 +118,7 ; -133,8 +133,8 ; -149,9 +149,9 ; -166,7 +166,7 ; -180,7 +180,7 ; -194,7 +194,7 ; -205,7 +205,7 ; -238,7 +238,7 ; -248,7 +248,7 ; -258,7 +258,7 ; -268,7 +268,7 ; -308,14 +308,14 ; -403,16 +403,16 ; -429,10 +429,10 ; -443,8 +443,8 ; -453,8 +453,8 ; -473,7 +473,7 ;",class TestArithmetic(TestCase) ;def test_polyadd(self) ;def test_polymulx(self);def test_polydiv(self) ;def test_polyval(self) ;def test_polyval(self) ;def test_polyval2d(self);def test_polyval3d(self);def test_polygrid2d(self);def test_polygrid3d(self);def test_polyint(self) ;def test_polyint(self) ;def test_polyint(self) ;def test_polyint(self) ;def test_polyint(self) ;def test_polyder(self) ;class TestMisc(TestCase) ;def f(x) ;def f(x) ;def f(x) ;def test_polytrim(self) ;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/polynomial/tests/test_polyutils.py,[u'22'],1,1," -18,8 +18,8 ; -45,7 +45,7 ; -57,8 +57,8 ; -72,24 +72,24 ;",def test_trimseq(self) ;class TestDomain(TestCase) ;def test_getdomain(self) ;def test_mapdomain(self) ;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/polynomial/tests/test_printing.py,[u'24'],1,1," -5,74 +5,74 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/random/__init__.py,[u'2'],1,1," -100,7 +100,7 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/random/setup.py,[u'8'],1,1," -19,7 +19,7 ; -41,9 +41,9 ;","def needs_mingw_ftime_workaround();def generate_libraries(ext, build_dir);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/random/tests/test_random.py,[u'62'],1,1," -26,8 +26,8 ; -94,20 +94,20 ; -115,7 +115,7 ; -126,7 +126,7 ; -164,25 +164,25 ; -195,7 +195,7 ; -203,7 +203,7 ; -224,7 +224,7 ; -251,7 +251,7 ; -302,7 +302,7 ; -378,7 +378,7 ; -418,7 +418,7 ; -463,7 +463,7 ; -480,8 +480,8 ; -496,8 +496,8 ;",def test_zero_probability(self);def test_rand(self);def test_randint(self);def test_random_sample(self);def test_choice_exceptions(self);def test_choice_return_shape(self);def test_choice_return_shape(self);def test_shuffle(self);def test_chisquare(self);def test_gumbel(self);def test_multinomial(self);def test_normal(self);def test_power(self);def test_standard_exponential(self);def test_standard_normal(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/setup.py,[u'2'],1,1," -4,7 +4,7 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/testing/decorators.py,[u'4'],1,1," -141,14 +141,14 ;","def get_msg(func,msg=None);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/testing/noseclasses.py,[u'12'],1,1," -69,7 +69,7 ; -127,13 +127,13 ;","def _find(self, tests, obj, name, module, source_lines, globs, seen);def check_output(self, want, got, optionflags);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/testing/nosetester.py,[u'6'],1,1," -57,7 +57,7 ; -82,7 +82,7 ; -214,7 +214,7 ;",def import_nose();def run_module_suite(file_to_run = None);def _show_system_info(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/testing/numpytest.py,[u'4'],1,1," -15,7 +15,7 ; -24,7 +24,7 ;",def importall(package);def importall(package);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/testing/print_coercion_tables.py,[u'2'],1,1," -54,7 +54,7 ;","def print_coercion_table(ntypes, inputfirstvalue, inputsecondvalue, firstarray;"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/testing/setup.py,[u'2'],1,1," -4,7 +4,7 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/testing/tests/test_decorators.py,[u'2'],1,1," -7,7 +7,7 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/testing/tests/test_utils.py,[u'2'],1,1," -194,7 +194,7 ;",def test_nan(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/testing/utils.py,[u'40'],1,1," -17,7 +17,7 ; -118,7 +118,7 ; -129,7 +129,7 ; -164,7 +164,7 ; -243,16 +243,16 ; -316,7 +316,7 ; -350,9 +350,9 ; -466,7 +466,7 ; -535,7 +535,7 ; -562,7 +562,7 ; -624,7 +624,7 ; -1100,7 +1100,7 ; -1109,7 +1109,7 ; -1127,7 +1127,7 ;",";def jiffies(_proc_pid_stat = '/proc/%s/stat'%(os.getpid());def memusage(_proc_pid_stat = '/proc/%s/stat'%(os.getpid()));def GetPerformanceAttributes(object, counter, instance = None;def assert_equal(actual,desired,err_msg='',verbose=True);def assert_equal(actual,desired,err_msg='',verbose=True);def print_assert_equal(test_string,actual,desired);def assert_almost_equal(actual,desired,decimal=7,err_msg='',verbose=True);def assert_approx_equal(actual,desired,significant=7,err_msg='',verbose=True);def assert_approx_equal(actual,desired,significant=7,err_msg='',verbose=True);def chk_same_position(x_id, y_id, hasval='nan');def measure(code_str,times=1,label=None);def measure(code_str,times=1,label=None);def _assert_valid_refcount(op);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/tests/test_ctypeslib.py,[u'10'],1,1," -81,21 +81,21 ;",def test_ndim(self);
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,numpy/tests/test_matlib.py,[u'2'],1,1," -7,7 +7,7 ;",;
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,tools/commitstats.py,[u'2'],1,1," -12,7 +12,7 ;","def get_count(filename, repo);"
3635,2,fbd6510, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 11:51:25 -0600","ct: [PATCH 2/2] STY: Giant comma spacing fixup.Run the 2to3 ws_comma fixer on *.py files. Some lines are now too longand will need to be broken at some point. OTOH, some lines were alreadytoo long and need to be broken at some point. Now seems as good a timeas any to do this with open PRs at a minimum.",251,6968,6968,tools/test-installed-numpy.py,[u'4'],1,1," -39,10 +39,10 ;",;
3633,1,577183e, Charles Harris <charlesr.harris@gmail.com>," Sun, 18 Aug 2013 08:19:44 -0600",ct: [PATCH] DOC: Update 1.8.0-notes.rstNote that the numpydoc sphinx extensions now reside in their ownrepository.,1,8,0,doc/release/1.8.0-notes.rst,[u'9'],8,1," -32,11 +32,18 ;",Multiple field selection from a array of structured type currentl;
3632,1,465b227, Charles Harris <charlesr.harris@gmail.com>," Sat, 17 Aug 2013 21:43:34 -0600","ct: [PATCH] MAINT: Remove some commented out code in test_indexing.py.The code was intended to check refcounting, and indeed, exposed a longstanding bug by failing, which is why it was commented out. That bug isnow fixed and tested by gh-3631, so the commented out code couldtheoretically be made to work, but that requires enough del this and delthe other that I think it is too fragile to keep. So delete it.",1,0,27,numpy/core/tests/test_indexing.py,[u'27'],0,27," -488,14 +488,6 ; -509,16 +501,6 ; -531,20 +513,11 ;",def test_boolean(self);def test_multidim(self);def test_multidim(self);
3631,2,7d01fe5, Charles Harris <charlesr.harris@gmail.com>," Sat, 17 Aug 2013 19:12:38 -0600","ct: [PATCH 1/2] BUG: Fix reference leak in PyArray_IntpFromIndexSequence.This caused {ones, zeros, empty}([1]*10) to increase the referencecount of 1 by 10. Same for other numbers in the list.Closes #3589.",1,2,0,numpy/core/src/multiarray/conversion_utils.c,[u'3'],2,1," -99,6 +99,7 ; -922,8 +923,8 ;","PyArray_IntpConverter(PyObject *obj, PyArray_Dims *seq;PyArray_IntpFromIndexSequence(PyObject *seq, npy_intp *vals, npy_intp maxvals;"
3631,2,d0bdae4, Charles Harris <charlesr.harris@gmail.com>," Sat, 17 Aug 2013 19:41:09 -0600","ct: [PATCH 2/2] TST: Add test for reference leak in zeros, ones, empty, and full.Check that the reference counts of the  passed dimensions do notchange.",1,14,0,numpy/core/tests/test_numeric.py,[u'14'],14,0," -1546,6 +1546,20 ;",def test_filled(self);
3630,1,759a4f9, Ralf Gommers <ralf.gommers@googlemail.com>," Sat, 17 Aug 2013 16:17:39 +0200",ct: [PATCH] BUG: fix np.median so it accepts array_like input.  Clean up median tests.,2,74,56,numpy/lib/function_base.py,[u'1'],1,0," -2670,6 +2670,7 ;","def median(a, axis=None, out=None, overwrite_input=False);"
3630,1,759a4f9, Ralf Gommers <ralf.gommers@googlemail.com>," Sat, 17 Aug 2013 16:17:39 +0200",ct: [PATCH] BUG: fix np.median so it accepts array_like input.  Clean up median tests.,2,74,56,numpy/lib/tests/test_function_base.py,[u'129'],19,15," -1407,62 +1407,79 ;",def test_percentile_out();
3629,1,6a63c7a, Charles Harris <charlesr.harris@gmail.com>," Fri, 16 Aug 2013 19:28:38 -0600","ct: [PATCH] MAINT: Move NPY_BEGIN_THREADS_DEF to end of declarations.The is an ';' at the end of the macro definition. When used and followedby another ';', gcc thinks a statement has been made. An emptystatement, but still a statement. This causes compilation failure withPython 3.4a.The ';' should probably be removed, but that was undone in 1.7 tomaintain backward compatibility.",1,11,11,numpy/core/src/umath/ufunc_object.c,[u'22'],11,11," -4872,23 +4872,23 ; -4913,7 +4913,7 ; -4938,7 +4938,7 ; -4994,7 +4994,7 ; -5062,7 +5062,7 ; -5098,7 +5098,7 ; -5109,7 +5109,7 ; -5126,7 +5126,7 ;","ufunc_at(PyUFuncObject *ufunc, PyObject *args;ufunc_at(PyUFuncObject *ufunc, PyObject *args;ufunc_at(PyUFuncObject *ufunc, PyObject *args;ufunc_at(PyUFuncObject *ufunc, PyObject *args;ufunc_at(PyUFuncObject *ufunc, PyObject *args;ufunc_at(PyUFuncObject *ufunc, PyObject *args;ufunc_at(PyUFuncObject *ufunc, PyObject *args;ufunc_at(PyUFuncObject *ufunc, PyObject *args;"
3628,1,281458b, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 8 Aug 2013 20:24:21 +0200","ct: [PATCH] BUG: MapIter leaked itself and arr and index objectsMapIterBind incorrectly behaved when failing, cleaning up mostbut not everything. The callers have to decref the mapiterobject. Which basically means that MapIterBind does not evenhave to decref the new fields (they are decrefed in themapiter dealloc anyway).Note that trying to add tests checking the refcountingfailed, but the tests seem to fail at least in many casesnot because of the indexing.Closes gh-3589",2,48,19,numpy/core/src/multiarray/mapping.c,[u'32'],14,18," -1009,7 +1009,8 ; -1321,6 +1322,7 ; -1776,12 +1778,12 ; -1800,14 +1802,14 ; -1824,7 +1826,7 ; -1832,7 +1834,7 ; -1895,7 +1897,7 ; -1913,12 +1915,12 ; -1930,20 +1932,13 ; -2137,6 +2132,7 ;","array_subscript_fancy(PyArrayObject *self, PyObject *op, int fancy;array_ass_sub_fancy(PyArrayObject *self, PyObject *ind, PyObject *op, int fancy;PyArray_MapIterBind(PyArrayMapIterObject *mit, PyArrayObject *arr;PyArray_MapIterBind(PyArrayMapIterObject *mit, PyArrayObject *arr;PyArray_MapIterBind(PyArrayMapIterObject *mit, PyArrayObject *arr;PyArray_MapIterBind(PyArrayMapIterObject *mit, PyArrayObject *arr;PyArray_MapIterBind(PyArrayMapIterObject *mit, PyArrayObject *arr;PyArray_MapIterBind(PyArrayMapIterObject *mit, PyArrayObject *arr;PyArray_MapIterBind(PyArrayMapIterObject *mit, PyArrayObject *arr;PyArray_MapIterArray(PyArrayObject * a, PyObject * index;"
3628,1,281458b, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 8 Aug 2013 20:24:21 +0200","ct: [PATCH] BUG: MapIter leaked itself and arr and index objectsMapIterBind incorrectly behaved when failing, cleaning up mostbut not everything. The callers have to decref the mapiterobject. Which basically means that MapIterBind does not evenhave to decref the new fields (they are decrefed in themapiter dealloc anyway).Note that trying to add tests checking the refcountingfailed, but the tests seem to fail at least in many casesnot because of the indexing.Closes gh-3589",2,48,19,numpy/core/tests/test_indexing.py,[u'35'],34,1," -4,7 +4,7 ; -406,8 +406,10 ; -427,8 +429,10 ; -484,6 +488,14 ; -496,6 +508,17 ; -508,11 +531,21 ;",";def _check_multi_index(self, arr, index);def _check_single_index(self, arr, index);def test_boolean(self);def test_multidim(self);def test_multidim(self);"
3626,2,b82c1df, Daniel <dabi@blazemail.com>," Tue, 4 Jun 2013 07:20:09 +0200","ct: [PATCH 1/2] ENH: Make savetxt work with file like objects.Accept any object with a ""write"" method as that is the only methodcalled by the code.",1,0,0,numpy/lib/npyio.py,[u'2'],1,1," -1002,7 +1002,7 ;","def savetxt(fname, X, fmt='%.18e', delimiter=' ', newline='\n', header='';"
3626,2,ebfccd2, Daniel <dabi@blazemail.com>," Thu, 6 Jun 2013 00:42:55 +0200",ct: [PATCH 2/2] TST: Test that savetxt works with objects having a write method.,1,12,0,numpy/lib/tests/test_io.py,[u'12'],12,0," -401,6 +401,18 ;",def test_complex_arrays(self);
3625,1,73db716, Charles Harris <charlesr.harris@gmail.com>," Thu, 15 Aug 2013 13:07:47 -0600","ct: [PATCH] DOC: Update HOWTO_RELEASE.rst.txt.The current version is out of date. Supported Python versions havechanged, the buildbot is no longer reachable, some links are dead,etc.",1,18,24,doc/HOWTO_RELEASE.rst.txt,[u'42'],18,24," -16,11 +16,10 ; -31,14 +30,18 ; -81,8 +84,8 ; -113,7 +116,7 ; -139,7 +142,7 ; -156,7 +159,7 ; -164,14 +167,12 ; -186,13 +187,6 ; -297,14 +291,14 ; -353,7 +347,7 ;",Source tre;Doc wik;Cython sources are checked in at the moment. It is worth keeping an eye on wha;needs to be installed;and MSI installers can be installed wit;add adding a PATH variable in HKEY_CURRENT_USER/Environment;What is release;A source release in both .zip and .tar.gz formats is released;define NPY_x_y_API_VERSION in numpyconfig.;Update scipy.or;
3624,1,fb7bfd8, Charles Harris <charlesr.harris@gmail.com>," Thu, 15 Aug 2013 12:53:59 -0600",ct: [PATCH] DOC: Update 1.8.0 release notes.Add remarks on changes due in the next release and FutureWarnings.Add notes on the new functions in the array C-API.Add notes on the new function in th ufunc C-API.,1,33,2,doc/release/1.8.0-notes.rst,[u'35'],33,2," -19,6 +19,20 ; -268,8 +282,23 ; -288,6 +317,8 ;","Support for Python versions 2.4 and 2.5 has been dropped;Several changes to np.insert and np.delete;NumPy 1.8., and in some future version of NumPy they will raise an error;"
3623,1,871d079, Charles Harris <charlesr.harris@gmail.com>," Thu, 15 Aug 2013 12:20:11 -0600","ct: [PATCH] BUG: Use io.open instead of open for compatibility.The recent Python 3 fix adding encoding=""utf-8"" to the open functionfails on Python 2 because the encoding keyword is not defined. Thesolution is to use io.open, which is available for Python 2.6 and 2.7and is an alias for open when Python >= 3.0. It is reputed to be slowwhen running in 2.6, but that should not be a problem.",1,5,3,doc/postprocess.py,[u'8'],5,3," -8,7 +8,9 ; -23,7 +25,7 ; -32,7 +34,7 ;",;def main();def main();
3622,1,31f526e, Charles Harris <charlesr.harris@gmail.com>," Thu, 15 Aug 2013 11:31:08 -0600",ct: [PATCH] DOC: Merge doc updates from http://docs.scipy.org/numpy/patch/.Preparatory to 1.8.0 branch.,2,17,17,numpy/core/numeric.py,[u'32'],16,16," -978,13 +978,16 ; -1057,27 +1060,24 ; -1086,7 +1086,7 ;","def outer(a,b);def tensordot(a, b, axes=2);def tensordot(a, b, axes=2);"
3622,1,31f526e, Charles Harris <charlesr.harris@gmail.com>," Thu, 15 Aug 2013 11:31:08 -0600",ct: [PATCH] DOC: Merge doc updates from http://docs.scipy.org/numpy/patch/.Preparatory to 1.8.0 branch.,2,17,17,numpy/random/mtrand/mtrand.pyx,[u'2'],1,1," -538,7 +538,7 ;",cdef class RandomState;
3619,2,38d987d, Charles Harris <charlesr.harris@gmail.com>," Wed, 14 Aug 2013 15:10:40 -0600",ct: [PATCH 1/2] BUG: Replace relative imports in cversions.py.Scripts should not use relative imports as they won't work in anon-package environment.,1,2,2,numpy/core/code_generators/cversions.py,[u'4'],2,2," -7,8 +7,8 ;",;
3619,2,50989f7, Charles Harris <charlesr.harris@gmail.com>," Wed, 14 Aug 2013 15:14:27 -0600","ct: [PATCH 2/2] MAINT: Update API version and API hash.In preparation for the 1.8 release, update the API version to0x00000009 and the API hash to f99a02b75bd60205d1afe1eed080fd53.",3,9,0,numpy/core/code_generators/cversions.txt,[u'2'],2,0," -15,3 +15,5 ;",;
3619,2,50989f7, Charles Harris <charlesr.harris@gmail.com>," Wed, 14 Aug 2013 15:14:27 -0600","ct: [PATCH 2/2] MAINT: Update API version and API hash.In preparation for the 1.8 release, update the API version to0x00000009 and the API hash to f99a02b75bd60205d1afe1eed080fd53.",3,9,0,numpy/core/code_generators/numpy_api.py,[u'3'],3,0," -339,6 +339,7 ; -388,7 +389,9 ;",;;
3619,2,50989f7, Charles Harris <charlesr.harris@gmail.com>," Wed, 14 Aug 2013 15:14:27 -0600","ct: [PATCH 2/2] MAINT: Update API version and API hash.In preparation for the 1.8 release, update the API version to0x00000009 and the API hash to f99a02b75bd60205d1afe1eed080fd53.",3,9,0,numpy/core/setup_common.py,[u'5'],4,1," -31,7 +31,10 ;",;
3618,5,2d0487f, Mark Wiebe <mwwiebe@gmail.com>," Mon, 7 Jan 2013 09:04:18 -0800",ct: [PATCH 1/5] TST: Add test for reduceat ufunc regression on zero-sized array,1,7,0,numpy/core/tests/test_umath.py,[u'7'],7,0," -1228,6 +1228,13 ;",def test_reduceat();
3618,5,ef4b8af, Mark Wiebe <mwwiebe@gmail.com>," Mon, 7 Jan 2013 10:57:46 -0800",ct: [PATCH 2/5] BUG: Fix ufunc.reduceat regression with empty index (gh-2892),1,15,2,numpy/core/src/umath/ufunc_object.c,[u'17'],15,2," -3136,12 +3136,24 ; -3149,7 +3161,8 ;","PyUFunc_Reduceat(PyUFuncObject *ufunc, PyArrayObject *arr, PyArrayObject *ind;PyUFunc_Reduceat(PyUFuncObject *ufunc, PyArrayObject *arr, PyArrayObject *ind;"
3618,5,31dd2bb, Mark Wiebe <mwwiebe@gmail.com>," Thu, 17 Jan 2013 15:12:26 -0800","ct: [PATCH 3/5] TST: Change reduceat empty test to use i4 indicesOn 32-bit platforms, was failing in casting the testi8 index to i4. It may be desirable to allow thisin reduceat, but that change is independent of this pullrequest.",1,0,0,numpy/core/tests/test_umath.py,[u'2'],1,1," -1230,7 +1230,7 ;",def test_reduceat();
3618,5,571e28b, Mark Wiebe <mwwiebe@gmail.com>," Mon, 12 Aug 2013 16:56:38 -0700",ct: [PATCH 4/5] TST: Add test for additional ufunc.reduceat empty parameter case,1,8,0,numpy/core/tests/test_umath.py,[u'8'],8,0," -1235,6 +1235,14 ;",def test_reduceat_empty();
3618,5,73f34e3, Mark Wiebe <mwwiebe@gmail.com>," Mon, 12 Aug 2013 17:56:43 -0700",ct: [PATCH 5/5] BUG: Fix additional zero-sized index case for ufunc.reduceat,1,19,3,numpy/core/src/umath/ufunc_object.c,[u'22'],19,3," -3143,15 +3143,31 ;","PyUFunc_Reduceat(PyUFuncObject *ufunc, PyArrayObject *arr, PyArrayObject *ind;"
3617,1,5864961, Sascha Peilicke <saschpe@gmx.de>," Wed, 14 Aug 2013 17:01:09 +0200","ct: [PATCH] Explicitly set encoding to UTF-8 in postprocess.pyThe default (ascii) encoding breaks:python3.3 postprocess.py html build/html/*.htmlTraceback (most recent call last):  File ""postprocess.py"", line 59, in <module>    main()  File ""postprocess.py"", line 27, in main    lines = process_html(fn, f.readlines())  File ""/usr/lib64/python3.3/encodings/ascii.py"", line 26, in    return codecs.ascii_decode(input, self.errors)[0]UnicodeDecodeError: 'ascii' codec can't decode byte 0xc2 in2309: ordinal not in range(128)",1,2,2,doc/postprocess.py,[u'4'],2,2," -23,7 +23,7 ; -32,7 +32,7 ;",def main();def main();
3616,1,5c2dafb, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 14 Aug 2013 16:35:00 +0200","ct: [PATCH] BUG: Fix PyBUF_SIMPLE flag to GetBuffer.When no strides are requested, the array must be C-contiguous,not only if a shape was also requested.Closes gh-3613",3,123,9,numpy/core/src/multiarray/buffer.c,[u'9'],1,1," -604,23 +604,22 ;","array_getbuffer(PyObject *obj, Py_buffer *view, int flags;"
3616,1,5c2dafb, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 14 Aug 2013 16:35:00 +0200","ct: [PATCH] BUG: Fix PyBUF_SIMPLE flag to GetBuffer.When no strides are requested, the array must be C-contiguous,not only if a shape was also requested.Closes gh-3613",3,123,9,numpy/core/src/multiarray/multiarray_tests.c.src,[u'117'],22,1," -522,9 +522,6 ; -558,6 +555,7 ; -581,6 +579,116 ; -602,6 +710,9 ;","inplace_increment(PyObject *dummy, PyObject *args;fail;int_subclass(PyObject *dummy, PyObject *args;static PyMethodDef Multiarray_TestsMethods[] = ;"
3616,1,5c2dafb, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 14 Aug 2013 16:35:00 +0200","ct: [PATCH] BUG: Fix PyBUF_SIMPLE flag to GetBuffer.When no strides are requested, the array must be C-contiguous,not only if a shape was also requested.Closes gh-3613",3,123,9,numpy/core/tests/test_multiarray.py,[u'6'],1,1," -13,7 +13,7 ; -3121,6 +3121,10 ;",;def test_export_endian(self);
3612,1,320a0ca, jnothman <jnothman@student.usyd.edu.au>," Tue, 13 Aug 2013 19:00:46 +1000",ct: [PATCH] DOC fix legacy a.size() -> a.size in np.ravel docstring,1,0,0,numpy/core/fromnumeric.py,[u'2'],1,1," -1303,7 +1303,7 ;","def ravel(a, order='C');"
3610,2,eced0d6, Mark Wiebe <mwwiebe@gmail.com>," Mon, 7 Jan 2013 15:58:44 -0800",ct: [PATCH 1/2] TST: Test for x.fill(tuple) where x is a struct array,1,8,0,numpy/core/tests/test_multiarray.py,[u'8'],8,0," -131,9 +131,17 ;",def test_fill(self);
3610,2,8ffdb69, Mark Wiebe <mwwiebe@gmail.com>," Mon, 7 Jan 2013 16:15:57 -0800",ct: [PATCH 2/2] BUG: Fix to allow x.fill(tuple) where x is a struct array,1,8,0,numpy/core/src/multiarray/convert.c,[u'9'],8,1," -413,7 +413,14 ;","PyArray_FillWithScalar(PyArrayObject *arr, PyObject *obj;"
3609,2,66ad5a1, Mark Wiebe <mwwiebe@gmail.com>," Mon, 7 Jan 2013 15:58:44 -0800",ct: [PATCH 1/2] TST: Test for x.fill(tuple) where x is a struct array,1,8,0,numpy/core/tests/test_multiarray.py,[u'8'],8,0," -164,9 +164,17 ;",def test_fill(self);
3609,2,8c0c775, Mark Wiebe <mwwiebe@gmail.com>," Mon, 7 Jan 2013 16:15:57 -0800",ct: [PATCH 2/2] BUG: Fix to allow x.fill(tuple) where x is a struct array,1,8,0,numpy/core/src/multiarray/convert.c,[u'9'],8,1," -413,7 +413,14 ;","PyArray_FillWithScalar(PyArrayObject *arr, PyObject *obj;"
3608,1,df1aa99, Charles Harris <charlesr.harris@gmail.com>," Mon, 12 Aug 2013 15:03:47 -0600",ct: [PATCH] DOC: Remove references to diagonal changes in 1.8.Not happening. Also remove reference to selecting multiple fields out ofan array returning a view from 1.8.0 release notes.Closes #3228.,3,3,8,doc/release/1.8.0-notes.rst,[u'5'],0,5," -23,11 +23,6 ;",Support for SCons has been removed;
3608,1,df1aa99, Charles Harris <charlesr.harris@gmail.com>," Mon, 12 Aug 2013 15:03:47 -0600",ct: [PATCH] DOC: Remove references to diagonal changes in 1.8.Not happening. Also remove reference to selecting multiple fields out ofan array returning a view from 1.8.0 release notes.Closes #3228.,3,3,8,numpy/core/fromnumeric.py,[u'4'],2,2," -1130,10 +1130,10 ;","def diagonal(a, offset=0, axis1=0, axis2=1);"
3608,1,df1aa99, Charles Harris <charlesr.harris@gmail.com>," Mon, 12 Aug 2013 15:03:47 -0600",ct: [PATCH] DOC: Remove references to diagonal changes in 1.8.Not happening. Also remove reference to selecting multiple fields out ofan array returning a view from 1.8.0 release notes.Closes #3228.,3,3,8,numpy/core/src/multiarray/arrayobject.c,[u'2'],1,1," -705,7 +705,7 ;",array_might_be_written(PyArrayObject *obj;
3607,1,9e9bdc5, Stefan van der Walt <stefan@sun.ac.za>," Mon, 12 Aug 2013 18:19:41 +0200",ct: [PATCH] DOC: Fix small typos in partition docstring.,1,2,2,numpy/core/fromnumeric.py,[u'4'],2,2," -539,7 +539,7 ; -653,7 +653,7 ;","def partition(a, kth, axis=-1, kind='introselect', order=None);def argpartition(a, kth, axis=-1, kind='introselect', order=None);"
3606,1,147c7ac, Stefan van der Walt <stefan@sun.ac.za>," Mon, 12 Aug 2013 18:14:13 +0200",ct: [PATCH] BUG: Fix typo in core bento file.,1,2,2,numpy/core/bento.info,[u'4'],2,2," -12,8 +12,8 ;",Library;
3604,1,8f42dd0, Charles Harris <charlesr.harris@gmail.com>," Sun, 11 Aug 2013 20:52:39 -0600","ct: [PATCH] ENH: Make diagonal method return a view.Also remove the test_diagonal_deprecation test and add test thatchecks that a view is returned and that it is not writeable.Curiously, diagonal method returning a view was not enabled for numpy1.8.0-devel when 1.7.0 was tagged, so it is not tested as well asmight be desired.",3,24,126,numpy/add_newdocs.py,[u'4'],1,1," -3299,7 +3299,9 ;","def luf(lamdaexpr, *args, **kwargs);"
3604,1,8f42dd0, Charles Harris <charlesr.harris@gmail.com>," Sun, 11 Aug 2013 20:52:39 -0600","ct: [PATCH] ENH: Make diagonal method return a view.Also remove the test_diagonal_deprecation test and add test thatchecks that a view is returned and that it is not writeable.Curiously, diagonal method returning a view was not enabled for numpy1.8.0-devel when 1.7.0 was tagged, so it is not tested as well asmight be desired.",3,24,126,numpy/core/src/multiarray/item_selection.c,[u'15'],2,2," -1952,14 +1952,13 ;","PyArray_Diagonal(PyArrayObject *self, int offset, int axis1, int axis2;"
3604,1,8f42dd0, Charles Harris <charlesr.harris@gmail.com>," Sun, 11 Aug 2013 20:52:39 -0600","ct: [PATCH] ENH: Make diagonal method return a view.Also remove the test_diagonal_deprecation test and add test thatchecks that a view is returned and that it is not writeable.Curiously, diagonal method returning a view was not enabled for numpy1.8.0-devel when 1.7.0 was tagged, so it is not tested as well asmight be desired.",3,24,126,numpy/core/tests/test_multiarray.py,[u'131'],3,26," -972,123 +972,20 ;",def test_diagonal(self);
3601,1,98e3a6c, Charles Harris <charlesr.harris@gmail.com>," Sun, 11 Aug 2013 18:05:00 -0600",ct: [PATCH] DOC: Note the new behavior of financial.npv in the 1.8.0 release notes.Closes #3389.,1,10,0,doc/release/1.8.0-notes.rst,[u'10'],10,0," -103,6 +103,16 ;",Function `median` used with `overwrite_input` only partially sorts arra;
3600,1,cb0a4f0, Charles Harris <charlesr.harris@gmail.com>," Sun, 11 Aug 2013 17:09:09 -0600",ct: [PATCH] BUG: Fix variable declaration after statement.Some declarations that are not at the beginning of a block have slippedinto the code. This breaks compilation on Python3.4a1. The Numpy codingstandard also disallows that construct.Closes #3598.,3,72,71,numpy/core/src/multiarray/arrayobject.c,[u'8'],1,2," -1292,6 +1292,8 ; -1304,8 +1306,6 ; -1349,6 +1349,8 ; -1361,8 +1363,6 ;","array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;"
3600,1,cb0a4f0, Charles Harris <charlesr.harris@gmail.com>," Sun, 11 Aug 2013 17:09:09 -0600",ct: [PATCH] BUG: Fix variable declaration after statement.Some declarations that are not at the beginning of a block have slippedinto the code. This breaks compilation on Python3.4a1. The Numpy codingstandard also disallows that construct.Closes #3598.,3,72,71,numpy/core/src/umath/loops.c.src,[u'119'],15,16," -589,32 +589,38 ; -656,9 +662,11 ; -1329,12 +1337,11 ; -1358,16 +1365,13 ; -1385,13 +1389,12 ; -1467,14 +1470,13 ; -1542,12 +1544,11 ; -1557,12 +1558,11 ; -1586,14 +1586,13 ; -1697,7 +1696,7 ;","BOOL_@kind@(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY_UNUSE;BOOL_@kind@(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY_UNUSE;TIMEDELTA_mm_d_divide(char **args, npy_intp *dimensions, npy_intp *steps, void ;NPY_NO_EXPORT voi;NPY_NO_EXPORT voi;NPY_NO_EXPORT voi;NPY_NO_EXPORT voi;NPY_NO_EXPORT voi;NPY_NO_EXPORT voi;NPY_NO_EXPORT voi;"
3600,1,cb0a4f0, Charles Harris <charlesr.harris@gmail.com>," Sun, 11 Aug 2013 17:09:09 -0600",ct: [PATCH] BUG: Fix variable declaration after statement.Some declarations that are not at the beginning of a block have slippedinto the code. This breaks compilation on Python3.4a1. The Numpy codingstandard also disallows that construct.Closes #3598.,3,72,71,numpy/core/src/umath/test_rational.c.src,[u'16'],3,2," -1306,9 +1306,10 ; -1322,14 +1323,15 ;",PyMODINIT_FUNC inittest_rational(void) ;PyMODINIT_FUNC inittest_rational(void) ;
3599,1,d10832b, Charles Harris <charlesr.harris@gmail.com>," Sun, 11 Aug 2013 14:34:25 -0600","ct: [PATCH] BUG: Fix test_operand_flags test.The test tests an inner loop in operand_flag_tests.c.src that expectsa long type, but it is tested using 'i8'. This fails when long is not'i8'.Closes #3363.",1,5,4,numpy/core/tests/test_ufunc.py,[u'9'],5,4," -16,7 +16,8 ; -802,11 +803,11 ;",def test_pickle(self);def test_ufunc_custom_out(self);
3597,1,d6e8c91, Ralf Gommers <ralf.gommers@googlemail.com>," Sat, 10 Aug 2013 10:42:59 +0200",ct: [PATCH] MAINT: remove unused and broken parts of numpy.testingDeprecate np.testing.importall - it's pointless and partially broken.,6,21,47,numpy/testing/__init__.py,[u'2'],1,1," -11,7 +11,7 ;",;
3597,1,d6e8c91, Ralf Gommers <ralf.gommers@googlemail.com>," Sat, 10 Aug 2013 10:42:59 +0200",ct: [PATCH] MAINT: remove unused and broken parts of numpy.testingDeprecate np.testing.importall - it's pointless and partially broken.,6,21,47,numpy/testing/decorators.py,[u'2'],1,1," -15,10 +15,10 ;",;
3597,1,d6e8c91, Ralf Gommers <ralf.gommers@googlemail.com>," Sat, 10 Aug 2013 10:42:59 +0200",ct: [PATCH] MAINT: remove unused and broken parts of numpy.testingDeprecate np.testing.importall - it's pointless and partially broken.,6,21,47,numpy/testing/nosetester.py,[u'3'],1,2," -9,10 +9,10 ; -60,7 +60,6 ;",;def import_nose();
3597,1,d6e8c91, Ralf Gommers <ralf.gommers@googlemail.com>," Sat, 10 Aug 2013 10:42:59 +0200",ct: [PATCH] MAINT: remove unused and broken parts of numpy.testingDeprecate np.testing.importall - it's pointless and partially broken.,6,21,47,numpy/testing/nulltester.py,[u'17'],0,17," -1,17 +0,0 ;",;
3597,1,d6e8c91, Ralf Gommers <ralf.gommers@googlemail.com>," Sat, 10 Aug 2013 10:42:59 +0200",ct: [PATCH] MAINT: remove unused and broken parts of numpy.testingDeprecate np.testing.importall - it's pointless and partially broken.,6,21,47,numpy/testing/numpytest.py,[u'30'],7,23," -1,36 +1,20 ;",;
3597,1,d6e8c91, Ralf Gommers <ralf.gommers@googlemail.com>," Sat, 10 Aug 2013 10:42:59 +0200",ct: [PATCH] MAINT: remove unused and broken parts of numpy.testingDeprecate np.testing.importall - it's pointless and partially broken.,6,21,47,numpy/testing/utils.py,[u'14'],11,3," -24,7 +24,7 ; -915,7 +915,9 ; -1172,6 +1174,7 ; -1494,7 +1497,7 ; -1573,3 +1576,8 ;",";def assert_string_equal(actual, desired);def assert_allclose(actual, desired, rtol=1e-7, atol=0;def assert_no_warnings(func, *args, **kw);def gen_alignment_data(dtype=float32, type='binary', max_size=24);"
3596,1,b2de377, Eric Price <ecprice@mit.edu>," Fri, 9 Aug 2013 01:24:50 -0400",ct: [PATCH] Fix documentation description of loop spam in interactive interpreter,1,3,3,doc/source/reference/arrays.nditer.rst,[u'6'],3,3," -156,9 +156,9 ;","accessible by indexing into the iterator, and the index being tracke;"
3594,2,433f896, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 9 Aug 2013 18:44:44 +0200",ct: [PATCH 1/2] MAINT: move npy_is_aligned to common.halso make it and some other alignment operators a bit faster by usingunsigned integers and bitwise and if possible.Make use of npy_is_aligned in _IsAligned too.,3,31,24,numpy/core/src/multiarray/common.c,[u'14'],6,7," -7,6 +7,7 ; -674,8 +675,8 ; -684,25 +685,24 ;",;_zerofill(PyArrayObject *ret;_IsAligned(PyArrayObject *ap;
3594,2,433f896, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 9 Aug 2013 18:44:44 +0200",ct: [PATCH 1/2] MAINT: move npy_is_aligned to common.halso make it and some other alignment operators a bit faster by usingunsigned integers and bitwise and if possible.Make use of npy_is_aligned in _IsAligned too.,3,31,24,numpy/core/src/multiarray/common.h,[u'14'],13,0," -65,6 +65,20 ;","offset_bounds_from_strides(const int itemsize, const int nd;"
3594,2,433f896, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 9 Aug 2013 18:44:44 +0200",ct: [PATCH 1/2] MAINT: move npy_is_aligned to common.halso make it and some other alignment operators a bit faster by usingunsigned integers and bitwise and if possible.Make use of npy_is_aligned in _IsAligned too.,3,31,24,numpy/core/src/private/lowlevel_strided_loops.h,[u'27'],9,16," -1,5 +1,6 ; -398,26 +399,18 ; -442,9 +435,9 ;",";PyArray_PrepareThreeRawArrayIter(int ndim, npy_intp *shape;npy_aligned_block_offset(const void * addr, const npy_intp esize;"
3594,2,e91acdb, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 9 Aug 2013 19:30:53 +0200",ct: [PATCH 2/2] ENH: add NPY_LIKELY and NPY_UNLIKELY macros for branching hintsUse it for npy_is_aligned expecting alignments of the power of two.Cuts down the time spent in _IsAligned by the testsuite relativeto the rest of multiarray.so from 0.6% to 0.4%,3,28,3,numpy/core/include/numpy/npy_common.h,[u'18'],18,0," -18,6 +18,24 ;",;
3594,2,e91acdb, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 9 Aug 2013 19:30:53 +0200",ct: [PATCH 2/2] ENH: add NPY_LIKELY and NPY_UNLIKELY macros for branching hintsUse it for npy_is_aligned expecting alignments of the power of two.Cuts down the time spent in _IsAligned by the testsuite relativeto the rest of multiarray.so from 0.6% to 0.4%,3,28,3,numpy/core/setup_common.py,[u'1'],1,0," -111,6 +111,7 ;","def check_api_version(apiversion, codegen_dir);"
3594,2,e91acdb, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 9 Aug 2013 19:30:53 +0200",ct: [PATCH 2/2] ENH: add NPY_LIKELY and NPY_UNLIKELY macros for branching hintsUse it for npy_is_aligned expecting alignments of the power of two.Cuts down the time spent in _IsAligned by the testsuite relativeto the rest of multiarray.so from 0.6% to 0.4%,3,28,3,numpy/core/src/multiarray/common.h,[u'12'],9,3," -1,5 +1,6 ; -71,11 +72,16 ;",";offset_bounds_from_strides(const int itemsize, const int nd;"
3593,1,b6829ca, Eric Price <ecprice@mit.edu>," Fri, 9 Aug 2013 01:24:50 -0400",ct: [PATCH] Fix documentation description of loop spam in interactive interpreter,1,3,3,doc/source/reference/arrays.nditer.rst,[u'6'],3,3," -156,9 +156,9 ;","accessible by indexing into the iterator, and the index being tracke;"
3592,4,6ee3aba, Arink Verma <arinkverma@gmail.com>," Fri, 9 Aug 2013 01:57:17 +0530","ct: [PATCH 1/4] ENH: Added test cases to ensure the behavior of integer as it is. There is a need to add test case which ensure and maintain the behaviour of integer. As per pr #3567, which speed up integer scalar's operations by avoiding the conversion of integer to NumPy Scalar.",1,30,0,numpy/core/tests/test_scalarmath.py,[u'30'],30,0," -139,6 +139,36 ;",def test_int_from_long(self);
3592,4,18b5c7c, Arink Verma <arinkverma@gmail.com>," Sat, 10 Aug 2013 03:43:18 +0530",ct: [PATCH 2/4] Added test case for size of long based of os,1,19,0,numpy/core/tests/test_scalarmath.py,[u'19'],19,0," -1,6 +1,7 ; -168,6 +169,24 ;",;def test_int_value_behaviour(self);
3592,4,97e5b0d, Arink Verma <arinkverma@gmail.com>," Sat, 17 Aug 2013 04:04:10 +0530",ct: [PATCH 3/4] added int test for error raises,1,36,39,numpy/core/tests/test_scalarmath.py,[u'75'],18,19," -140,49 +140,46 ;",def test_int_from_long(self);
3592,4,1b30036, Arink Verma <arinkverma@gmail.com>," Thu, 22 Aug 2013 21:12:37 +0530",ct: [PATCH 4/4] Removing test for OS choices on long conventions,1,0,19,numpy/core/tests/test_scalarmath.py,[u'19'],0,19," -166,25 +166,6 ;",def Overflow_error_func(dtype);
3591,3,d7af236, Frank Breitling <frank.breitling@gmx.de>," Tue, 6 Aug 2013 00:55:11 +0200",ct: [PATCH 1/3] Update twodim_base.py,1,31,31,numpy/lib/twodim_base.py,[u'62'],24,24," -586,49 +586,49 ;","def histogram2d(x, y, bins=10, range=None, normed=False, weights=None);"
3591,3,e4dfc58, Frank Breitling <frank.breitling@gmx.de>," Thu, 8 Aug 2013 22:31:00 +0200",ct: [PATCH 2/3] Update twodim_base.pyDone! Removed import numpy and changed ml -> mpl.,1,2,3,numpy/lib/twodim_base.py,[u'5'],2,3," -586,9 +586,8 ; -620,7 +619,7 ;","def histogram2d(x, y, bins=10, range=None, normed=False, weights=None);def histogram2d(x, y, bins=10, range=None, normed=False, weights=None);"
3591,3,247ec02, Frank Breitling <frank.breitling@gmx.de>," Thu, 8 Aug 2013 22:35:18 +0200",ct: [PATCH 3/3] Update twodim_base.pyOops. Another typo mlp fixed in mpl.,1,0,0,numpy/lib/twodim_base.py,[u'2'],1,1," -586,7 +586,7 ;","def histogram2d(x, y, bins=10, range=None, normed=False, weights=None);"
3590,2,afceb18, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 8 Aug 2013 19:04:40 +0200",ct: [PATCH 1/2] ENH: add PyDataMem_NEW_ZEROED which allocates memory with calloc,3,23,2,numpy/core/code_generators/cversions.txt,[u'4'],2,2," -15,5 +15,5 ;",;
3590,2,afceb18, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 8 Aug 2013 19:04:40 +0200",ct: [PATCH 1/2] ENH: add PyDataMem_NEW_ZEROED which allocates memory with calloc,3,23,2,numpy/core/code_generators/numpy_api.py,[u'1'],1,0," -339,6 +339,7 ;",;
3590,2,afceb18, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 8 Aug 2013 19:04:40 +0200",ct: [PATCH 1/2] ENH: add PyDataMem_NEW_ZEROED which allocates memory with calloc,3,23,2,numpy/core/src/multiarray/multiarraymodule.c,[u'20'],20,0," -3500,6 +3500,26 ;",PyDataMem_NEW(size_t size;
3590,2,d271d97, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 8 Aug 2013 19:09:49 +0200",ct: [PATCH 2/2] ENH: use PyDataMem_NEW_ZEROED for PyArray_ZerosPyDataMem_NEW_ZEROED uses calloc which will take advantage of the factthat most operating systems provide already zero initialized memoryblocks on larger allocations.Additionally this memory can be sparse (= mapped to a single zero page)on some systems (e.g. linux) reducing memory usage of applicationsusing sparse arrays.,2,52,11,numpy/core/src/multiarray/ctors.c,[u'45'],28,9," -985,20 +985,22 ; -2683,22 +2685,43 ;","PyArray_NewFromDescr(PyTypeObject *subtype, PyArray_Descr *descr, int nd;NPY_NO_EXPORT PyObject ;"
3590,2,d271d97, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 8 Aug 2013 19:09:49 +0200",ct: [PATCH 2/2] ENH: use PyDataMem_NEW_ZEROED for PyArray_ZerosPyDataMem_NEW_ZEROED uses calloc which will take advantage of the factthat most operating systems provide already zero initialized memoryblocks on larger allocations.Additionally this memory can be sparse (= mapped to a single zero page)on some systems (e.g. linux) reducing memory usage of applicationsusing sparse arrays.,2,52,11,numpy/core/tests/test_multiarray.py,[u'18'],15,0," -394,6 +394,24 ;",def test_void(self);
3587,3,edbea84, Swechha Prakash <swechhaprakash@gmail.com>," Wed, 7 Aug 2013 20:23:33 +0530",ct: [PATCH 1/3] Throwing error in cases like #3357 and returning NULL,2,9,0,numpy/core/blasdot/_dotblas.c,[u'6'],6,0," -246,6 +246,12 ;","dotblas_matrixproduct(PyObject *NPY_UNUSED(dummy), PyObject *args, PyObject* kw;"
3587,3,edbea84, Swechha Prakash <swechhaprakash@gmail.com>," Wed, 7 Aug 2013 20:23:33 +0530",ct: [PATCH 1/3] Throwing error in cases like #3357 and returning NULL,2,9,0,numpy/core/tests/test_multiarray.py,[u'3'],3,0," -925,6 +925,9 ;",def test_dot(self);
3587,3,837ab5f, Swechha Prakash <swechhaprakash@gmail.com>," Wed, 7 Aug 2013 20:58:00 +0530",ct: [PATCH 2/3] Some changes in multiarray test cases,2,5,2,numpy/core/blasdot/_dotblas.c,[u'2'],1,1," -250,7 +250,7 ;","dotblas_matrixproduct(PyObject *NPY_UNUSED(dummy), PyObject *args, PyObject* kw;"
3587,3,837ab5f, Swechha Prakash <swechhaprakash@gmail.com>," Wed, 7 Aug 2013 20:58:00 +0530",ct: [PATCH 2/3] Some changes in multiarray test cases,2,5,2,numpy/core/tests/test_multiarray.py,[u'5'],4,1," -926,7 +926,10 ;",def test_dot(self);
3587,3,85492b3, Swechha Prakash <swechhaprakash@gmail.com>," Thu, 15 Aug 2013 09:11:54 +0530",ct: [PATCH 3/3] BUG: raising error in np.dot when one of the inputs are assigned to out,2,3,7,numpy/core/blasdot/_dotblas.c,[u'3'],1,2," -247,8 +247,7 ;","dotblas_matrixproduct(PyObject *NPY_UNUSED(dummy), PyObject *args, PyObject* kw;"
3587,3,85492b3, Swechha Prakash <swechhaprakash@gmail.com>," Thu, 15 Aug 2013 09:11:54 +0530",ct: [PATCH 3/3] BUG: raising error in np.dot when one of the inputs are assigned to out,2,3,7,numpy/core/tests/test_multiarray.py,[u'7'],2,5," -925,11 +925,8 ;",def test_dot(self);
3584,5,4fcf6a8, Joe Kington <joferkington@gmail.com>," Tue, 6 Aug 2013 22:10:41 -0500","ct: [PATCH 1/5] ENH: Add an ""axis"" kwarg to `numpy.unique`",2,118,6,numpy/lib/arraysetops.py,[u'62'],33,4," -90,7 +90,7 ; -102,13 +102,18 ; -134,6 +139,12 ; -159,6 +170,45 ;","def ediff1d(ary, to_end=None, to_begin=None);def unique(ar, return_index=False, return_inverse=False);def unique(ar, return_index=False, return_inverse=False);def unique(ar, return_index=False, return_inverse=False);"
3584,5,4fcf6a8, Joe Kington <joferkington@gmail.com>," Tue, 6 Aug 2013 22:10:41 -0500","ct: [PATCH 1/5] ENH: Add an ""axis"" kwarg to `numpy.unique`",2,118,6,numpy/lib/tests/test_arraysetops.py,[u'62'],37,0," -65,6 +65,68 ;","def check_all(a, b, i1, i2, dt);"
3584,5,a9f8ece, Joe Kington <joferkington@gmail.com>," Sun, 8 Sep 2013 21:34:21 -0500",ct: [PATCH 2/5] DOC: Fixed typo in docstring examples for unique,1,0,0,numpy/lib/arraysetops.py,[u'2'],1,1," -143,7 +143,7 ;","def unique(ar, return_index=False, return_inverse=False, axis=None);"
3584,5,fccd7fe, Joe Kington <joferkington@gmail.com>," Sun, 8 Sep 2013 21:42:40 -0500",ct: [PATCH 3/5] BUG: unique should raise a clearer error if an invalid axis kwarg is specified,1,3,0,numpy/lib/arraysetops.py,[u'4'],3,1," -170,8 +170,10 ;","def unique(ar, return_index=False, return_inverse=False, axis=None);"
3584,5,2544df4, Joe Kington <joferkington@gmail.com>," Mon, 9 Sep 2013 06:34:30 -0500",ct: [PATCH 4/5] STY: Refactored unqiue tests into their own class,1,117,115,numpy/lib/tests/test_arraysetops.py,[u'232'],18,18," -12,121 +12,6 ; -314,6 +199,123 ;",;def test_manyways(self);
3584,5,d9ea28d, Joe Kington <joferkington@gmail.com>," Mon, 9 Sep 2013 06:35:33 -0500",ct: [PATCH 5/5] TST: Added basic tests for an invalid axis kwarg to unique,1,11,8,numpy/lib/tests/test_arraysetops.py,[u'19'],11,8," -216,7 +216,7 ; -224,15 +224,15 ; -254,10 +254,13 ; -268,7 +271,7 ; -280,7 +283,7 ;","def test_1d_functionality(self);def test_1d_functionality(self);def run_1d_tests(self, a, b, i1, i2, dt);def test_unique_axis(self);def test_unique_axis(self);"
3578,1,6ec2a54, jeromekelleher <jerome.kelleher@ed.ac.uk>," Sun, 21 Jul 2013 20:22:22 +0200",ct: [PATCH] Update halffloat.cCorrected preprocessor form.,1,0,0,numpy/core/src/npymath/halffloat.c,[u'2'],1,1," -137,7 +137,7 ;","npy_half npy_half_nextafter(npy_half x, npy_half y;"
3577,1,271cb70, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 5 Aug 2013 19:36:58 +0200","ct: [PATCH] BUG: Boolean assignment allowed writing to 0-sized arrayThis was because of the assumption that broadcasting worksif the dimension is not > 1, but correct is != 1.Adepted from a patch provided by prossahl, backports gh-3575",2,15,2,numpy/core/src/multiarray/mapping.c,[u'4'],2,2," -805,8 +805,7 ; -815,6 +814,7 ;",array_ass_boolean_subscript(PyArrayObject *self;array_ass_boolean_subscript(PyArrayObject *self;
3577,1,271cb70, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 5 Aug 2013 19:36:58 +0200","ct: [PATCH] BUG: Boolean assignment allowed writing to 0-sized arrayThis was because of the assumption that broadcasting worksif the dimension is not > 1, but correct is != 1.Adepted from a patch provided by prossahl, backports gh-3575",2,15,2,numpy/core/tests/test_indexing.py,[u'13'],13,0," -21,5 +21,18 ;",def test_boolean_indexing();
3576,1,d03cd89, Martin Spacek <git@mspacek.mm.st>," Mon, 5 Aug 2013 11:16:35 -0700",ct: [PATCH] MAINT: fix typo in npy-format.txt,1,0,0,doc/neps/npy-format.txt,[u'2'],1,1," -108,7 +108,7 ;",Requirement;
3575,1,f0910a1, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 5 Aug 2013 19:36:58 +0200","ct: [PATCH] BUG: Boolean assignment allowed writing to 0-sized arrayThis was because of the assumption that broadcasting worksif the dimension is not > 1, but correct is != 1.Adepted from a patch provided by prossahl.Closes gh-3458.",2,19,8,numpy/core/src/multiarray/mapping.c,[u'4'],2,2," -806,8 +806,7 ; -816,6 +815,7 ;",array_ass_boolean_subscript(PyArrayObject *self;array_ass_boolean_subscript(PyArrayObject *self;
3575,1,f0910a1, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 5 Aug 2013 19:36:58 +0200","ct: [PATCH] BUG: Boolean assignment allowed writing to 0-sized arrayThis was because of the assumption that broadcasting worksif the dimension is not > 1, but correct is != 1.Adepted from a patch provided by prossahl.Closes gh-3458.",2,19,8,numpy/core/tests/test_indexing.py,[u'23'],17,6," -84,7 +84,7 ; -93,8 +93,19 ; -116,7 +127,7 ; -160,7 +171,7 ; -185,7 +196,7 ; -487,7 +498,7 ;","def test_single_bool_index(self);def test_boolean_indexing_onedim(self);def test_boolean_indexing_twodim(self);def setUp(self);def _get_multi_index(self, arr, indices);def test_multidim(self);"
3574,21,4a4db36, kat <kat@aya.yale.edu>," Mon, 5 Aug 2013 10:42:50 -0700",ct: [PATCH 01/21] ENH: append in np.ma.core,1,47,0,numpy/ma/core.py,[u'48'],47,1," -46,7 +46,7 ; -7015,6 +7015,52 ;",";def asanyarray(a, dtype=None);"
3574,21,137116b, kat <kat@aya.yale.edu>," Mon, 5 Aug 2013 10:43:11 -0700",ct: [PATCH 02/21] TEST: testing append in np.ma.core,1,13,0,numpy/ma/tests/test_core.py,[u'13'],13,0," -647,6 +647,19 ;",def test_mvoid_print(self);
3572,1,46e1d87, Pauli Virtanen <pav@iki.fi>," Mon, 5 Aug 2013 12:57:49 +0300",ct: [PATCH] MAINT: runtests: make it work on Fedora,1,0,0,runtests.py,[u'2'],1,1," -189,7 +189,7 ;",def build_project(args);
3570,2,79b094e, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 4 Aug 2013 19:30:56 +0200","ct: [PATCH 1/2] BUG: Fix np.insert with negative axis.In some cases a negative axis argument to np.insert would resultin wrong behaviour due to np.rollaxis, add modulo operation toavoid this (an error is still raised due to arr.shape[axis]).Closes gh-3494",1,7,7,numpy/lib/function_base.py,[u'14'],7,7," -1734,9 +1734,9 ; -1863,7 +1863,7 ; -1924,7 +1924,7 ; -1933,8 +1933,8 ; -3603,7 +3603,7 ;","class vectorize(object);def __call__(self, *args, **kwargs);def _func(*vargs);def _vectorize_call(self, func, args);def insert(arr, obj, values, axis=None);"
3570,2,c57c417, =?UTF-8?q?F=C3=A9lix=20Hartmann?= <felix.hartmann@crans.org>," Wed, 3 Jul 2013 15:15:55 +0200",ct: [PATCH 2/2] TST: add test for negative axis values in np.insert.,1,12,0,numpy/lib/tests/test_function_base.py,[u'12'],12,0," -185,6 +185,18 ;",def test_multidim(self);
3569,1,23eaf73, Martin Spacek <git@mspacek.mm.st>," Sun, 4 Aug 2013 09:58:09 -0700",ct: [PATCH] Fix same typo in NEP,1,0,0,doc/neps/npy-format.txt,[u'2'],1,1," -108,7 +108,7 ;",Requirement;
3568,1,4ea064b, Martin Spacek <git@mspacek.mm.st>," Sun, 4 Aug 2013 09:55:31 -0700",ct: [PATCH] Fix doc typo,1,0,0,numpy/lib/format.py,[u'2'],1,1," -35,7 +35,7 ;",;
3567,6,70de8aa, Arink Verma <arinkverma@gmail.com>," Sat, 3 Aug 2013 04:25:46 +0530","ct: [PATCH 1/6] ENH: Avoiding conversion of integer to NumPy Scalar. There is a bottleneck in scalar operations, when trying to extract the underlying C value from a Python integer/float. I have avoid conversion for know integer type but extracting its value.",2,151,13,numpy/core/src/scalarmathmodule.c.src,[u'136'],30,4," -661,21 +661,13 ; -719,7 +711,6 ; -778,6 +769,125 ;","static voi;_@name@_convert_to_ctype(PyObject *a, @type@ *arg1;_@name@_convert_to_ctype(PyObject *a, @type@ *arg1;"
3567,6,70de8aa, Arink Verma <arinkverma@gmail.com>," Sat, 3 Aug 2013 04:25:46 +0530","ct: [PATCH 1/6] ENH: Avoiding conversion of integer to NumPy Scalar. There is a bottleneck in scalar operations, when trying to extract the underlying C value from a Python integer/float. I have avoid conversion for know integer type but extracting its value.",2,151,13,numpy/core/tests/test_scalarmath.py,[u'28'],7,0," -139,6 +139,34 ;",def test_int_from_long(self);
3567,6,79342d5, Arink Verma <arinkverma@gmail.com>," Sat, 3 Aug 2013 18:09:55 +0530",ct: [PATCH 2/6] Extracting longlong value without converting it to NyType,1,66,4,numpy/core/src/scalarmathmodule.c.src,[u'70'],33,2," -661,13 +661,13 ; -711,6 +711,7 ; -887,6 +888,67 ;","static voi;_@name@_convert_to_ctype(PyObject *a, @type@ *arg1;_@name@_convert_to_ctype(PyObject *a, @type@ *arg1;"
3567,6,9c7ef03, Arink Verma <arinkverma@gmail.com>," Tue, 20 Aug 2013 01:18:50 +0530",ct: [PATCH 3/6] Moved int test cases to pr#3592,1,0,28,numpy/core/tests/test_scalarmath.py,[u'28'],0,28," -139,34 +139,6 ;",def test_int_from_long(self);
3567,6,7b415b2, Arink Verma <arinkverma@gmail.com>," Tue, 27 Aug 2013 22:05:38 +0530",ct: [PATCH 4/6] Added PyInt_CheckExact for python < 3 and error check for PyLong_AsLong,1,34,21,numpy/core/src/scalarmathmodule.c.src,[u'55'],22,13," -781,18 +781,22 ; -841,18 +845,22 ; -901,18 +909,23 ;","_@name@_convert_to_ctype(PyObject *a, @type@ *arg1;_@name@_convert_to_ctype(PyObject *a, @type@ *arg1;_@name@_convert_to_ctype(PyObject *a, @type@ *arg1;"
3567,6,d334dbd, Arink Verma <arinkverma@gmail.com>," Fri, 30 Aug 2013 02:04:52 +0530",ct: [PATCH 5/6] Replaced PyInt_As_Long with PyInt_AsLong and  errorchecking,1,27,10,numpy/core/src/scalarmathmodule.c.src,[u'37'],25,10," -783,13 +783,19 ; -847,13 +853,19 ; -909,16 +921,21 ;","_@name@_convert_to_ctype(PyObject *a, @type@ *arg1;_@name@_convert_to_ctype(PyObject *a, @type@ *arg1;_@name@_convert_to_ctype(PyObject *a, @type@ *arg1;"
3567,6,7ed2c9b, Arink Verma <arinkverma@gmail.com>," Sat, 31 Aug 2013 02:59:35 +0530",ct: [PATCH 6/6] Check for error value by PyLong_AsUnsignedLong as (unsigned long)-1,1,0,0,numpy/core/src/scalarmathmodule.c.src,[u'2'],1,1," -795,7 +795,7 ;","_@name@_convert_to_ctype(PyObject *a, @type@ *arg1;"
3566,1,3a25d29, Charles Harris <charlesr.harris@gmail.com>," Thu, 1 Aug 2013 12:21:05 -0600","ct: [PATCH] ENH: Ignore submodule content in git status.Currently git status will show the submodules as containing untrackedcontent. This cannot be fixed in .gitignore, but rather needs to bemarked in .gitmodules.",1,6,4,.gitmodules,[u'10'],6,4," -1,6 +1,8 ;",;
3565,2,eacca11, =?UTF-8?q?Jes=C3=BAs=20G=C3=B3mez?= <jgomo3@gmail.com>," Wed, 17 Jul 2013 09:23:16 -0430",ct: [PATCH 1/2] DOC: Fixes for doc/source/user/basics.io.genfromtxt.rst.Add missing part of usecols negative index explanation and otherminor redaction fixes.,2,5,5,doc/source/user/basics.io.genfromtxt.rst,[u'4'],2,2," -150,7 +150,7 ; -301,7 +301,7 ;","In some cases, we are not interested in all the columns of the data but only a ;However, some additional control may sometimes be required;"
3565,2,eacca11, =?UTF-8?q?Jes=C3=BAs=20G=C3=B3mez?= <jgomo3@gmail.com>," Wed, 17 Jul 2013 09:23:16 -0430",ct: [PATCH 1/2] DOC: Fixes for doc/source/user/basics.io.genfromtxt.rst.Add missing part of usecols negative index explanation and otherminor redaction fixes.,2,5,5,numpy/doc/creation.py,[u'6'],3,3," -106,9 +106,9 ;",;
3565,2,fb416a0, Charles Harris <charlesr.harris@gmail.com>," Thu, 1 Aug 2013 11:55:42 -0600",ct: [PATCH 2/2] MAINT: Cleanup doc/source/user/basics.io.genfromtxt.rst.Remove trailing whitespace.Break long lines.Fix some indentation.Use the `::` directive to indicate interactive examples.,1,239,152,doc/source/user/basics.io.genfromtxt.rst,[u'391'],19,12," -7,32 +7,37 ; -42,24 +47,30 ; -76,29 +87,32 ; -118,7 +132,9 ; -128,45 +144,54 ; -175,32 +200,40 ; -210,83 +243,108 ; -296,46 +354,57 ; -350,33 +419,42 ; -388,37 +466,43 ; -427,8 +511,10 ; -437,8 +523,9 ;","Importing data with :func:`~numpy.genfromtxt;Splitting the lines into column;In that case, we need to set :keyword:`delimiter` to a single integer (if all t;Any character present after the comment marker(s) is simply ignored;Skipping lines and choosing column;If the columns have names, we can also select which columns to import by givin;Setting the name;Tweaking the conversio;We need to explicitly strip the string from white spaces as it is not done by d;Expected type  Defaul;The output array will then be a :class:`~numpy.ma.MaskedArray`;These functions work the same way as the original, but they have different defa;"
3564,1,2462946, Lars Buitinck <L.J.Buitinck@uva.nl>," Thu, 1 Aug 2013 14:46:01 +0200","ct: [PATCH] DOC: np.char.startswith checks a prefix, not a suffix",1,0,0,numpy/core/defchararray.py,[u'2'],1,1," -1357,7 +1357,7 ;","def startswith(a, prefix, start=0, end=None);"
3560,1,1a20f0c, Arink Verma <arinkverma@gmail.com>," Tue, 30 Jul 2013 23:19:46 +0530",ct: [PATCH] ENH: Implementation Copy-paste tag in conv_template.py Ability to paste same copied code segment at more than one place,2,68,54,numpy/core/src/scalarmathmodule.c.src,[u'84'],13,22," -660,30 +660,9 ; -715,6 +694,33 ; -741,37 +747,7 ;","static voi;_@name@_convert_to_ctype(PyObject *a, @type@ *arg1;_@name@_convert_to_ctype(PyObject *a, @type@ *arg1;"
3560,1,1a20f0c, Arink Verma <arinkverma@gmail.com>," Tue, 30 Jul 2013 23:19:46 +0530",ct: [PATCH] ENH: Implementation Copy-paste tag in conv_template.py Ability to paste same copied code segment at more than one place,2,68,54,numpy/distutils/conv_template.py,[u'38'],16,0," -135,6 +135,43 ; -259,6 +296,7 ;","def parse_structure(astr, level);def replace(match);"
3559,1,c0a61b2, hklemm <hanno.klemm@maerskoil.com>," Sun, 28 Jul 2013 23:07:23 +0200",ct: [PATCH] Update structured_arrays.pyThe behaviour documented did not match the actual behaviour of numpy. Explanation changed and the code example updated.,1,3,4,numpy/doc/structured_arrays.py,[u'7'],3,4," -191,12 +191,11 ;",;
3558,1,d070fbd, Andreas Schwab <schwab@linux-m68k.org>," Wed, 11 Jan 2012 14:47:58 +0100",ct: [PATCH] ENH: Add support for Motorola extended float format,6,49,0,numpy/core/include/numpy/npy_cpu.h,[u'2'],2,0," -68,6 +68,8 ;",;
3558,1,d070fbd, Andreas Schwab <schwab@linux-m68k.org>," Wed, 11 Jan 2012 14:47:58 +0100",ct: [PATCH] ENH: Add support for Motorola extended float format,6,49,0,numpy/core/include/numpy/npy_endian.h,[u'3'],2,1," -36,7 +36,8 ;",;
3558,1,d070fbd, Andreas Schwab <schwab@linux-m68k.org>," Wed, 11 Jan 2012 14:47:58 +0100",ct: [PATCH] ENH: Add support for Motorola extended float format,6,49,0,numpy/core/setup.py,[u'1'],1,0," -456,6 +456,7 ;","def generate_config_h(ext, build_dir);"
3558,1,d070fbd, Andreas Schwab <schwab@linux-m68k.org>," Wed, 11 Jan 2012 14:47:58 +0100",ct: [PATCH] ENH: Add support for Motorola extended float format,6,49,0,numpy/core/setup_common.py,[u'4'],4,0," -242,6 +242,8 ; -275,6 +277,8 ;",def _pyod3();def long_double_representation(lines);
3558,1,d070fbd, Andreas Schwab <schwab@linux-m68k.org>," Wed, 11 Jan 2012 14:47:58 +0100",ct: [PATCH] ENH: Add support for Motorola extended float format,6,49,0,numpy/core/src/npymath/npy_math_private.h,[u'39'],31,0," -250,6 +250,45 ;",do {                                                            ;
3558,1,d070fbd, Andreas Schwab <schwab@linux-m68k.org>," Wed, 11 Jan 2012 14:47:58 +0100",ct: [PATCH] ENH: Add support for Motorola extended float format,6,49,0,numpy/core/src/private/npy_fpmath.h,[u'1'],1,0," -40,6 +40,7 ;",;
3556,4,bf7641c, Arink Verma <arinkverma@gmail.com>," Sun, 28 Jul 2013 06:17:54 +0530","ct: [PATCH 1/4] ENH: Avoiding conversion to NumPy Scalar. Implementation Copy-paste tag in conv_template.py For some types, it is a lot faster to just extract the value directly from the Python scalar. So, in scalarmathmodule.src.c, avoided for PyFloat.",2,97,23,numpy/core/src/scalarmathmodule.c.src,[u'82'],25,10," -660,30 +660,9 ; -715,11 +694,68 ;","static voi;_@name@_convert_to_ctype(PyObject *a, @type@ *arg1;"
3556,4,bf7641c, Arink Verma <arinkverma@gmail.com>," Sun, 28 Jul 2013 06:17:54 +0530","ct: [PATCH 1/4] ENH: Avoiding conversion to NumPy Scalar. Implementation Copy-paste tag in conv_template.py For some types, it is a lot faster to just extract the value directly from the Python scalar. So, in scalarmathmodule.src.c, avoided for PyFloat.",2,97,23,numpy/distutils/conv_template.py,[u'38'],16,0," -135,6 +135,43 ; -259,6 +296,7 ;","def parse_structure(astr, level);def replace(match);"
3556,4,58c4a7f, Arink Verma <arinkverma@gmail.com>," Sun, 28 Jul 2013 13:15:22 +0530","ct: [PATCH 2/4] ENH: Avoiding conversion of double to NumPy Scalar. Fixed, wrongly seperated NPY_CDOUBLE instead of NPY_DOUBLE",1,2,2,numpy/core/src/scalarmathmodule.c.src,[u'4'],2,2," -712,8 +712,8 ;",static voi;
3556,4,b602ad7, Arink Verma <arinkverma@gmail.com>," Sun, 28 Jul 2013 15:19:56 +0530","ct: [PATCH 3/4] ENH: Avoiding conversion of long to NumPy Scalar. Added avoiding of conversion of long, extracting its value",1,10,10,numpy/core/src/scalarmathmodule.c.src,[u'20'],10,10," -699,19 +699,19 ; -731,12 +731,12 ;","static voi;_@name@_convert_to_ctype(PyObject *a, @type@ *arg1;"
3556,4,03f8bdd, Arink Verma <arinkverma@gmail.com>," Sun, 28 Jul 2013 18:37:44 +0530","ct: [PATCH 4/4] ENH: Avoiding conversion of long to NumPy Scalar. Fixed, extract the value directly from the Python3.3 scalar",1,36,6,numpy/core/src/scalarmathmodule.c.src,[u'42'],30,5," -731,12 +731,12 ; -755,6 +755,36 ;","_@name@_convert_to_ctype(PyObject *a, @type@ *arg1;_@name@_convert_to_ctype(PyObject *a, @type@ *arg1;"
3552,1,a0133fe, Tomas Tomecek <ttomecek@redhat.com>," Thu, 25 Jul 2013 15:57:09 +0200",ct: [PATCH] MAINT: typo fix in logging messageThere was a typo in logging message in module numpy.distutils.log function set_threshold:thershold -> threshold,1,2,2,numpy/distutils/log.py,[u'4'],2,2," -53,9 +53,9 ;","def set_threshold(level, force=False);"
3550,2,1eea247, endolith <endolith@gmail.com>," Thu, 25 Jul 2013 09:48:32 -0400",ct: [PATCH 1/2] DOC:Some minor proofreading of Tests introduction,1,6,6,doc/TESTS.rst.txt,[u'12'],6,6," -68,7 +68,7 ; -104,7 +104,7 ; -199,9 +199,9 ; -220,7 +220,7 ;","you'd like to become part of SciPy, please write the tests as yo;a test class:;with test generators:;hard to see for which parameters.  To avoid this problem, ensure that;"
3550,2,4259c4e, endolith <endolith@gmail.com>," Thu, 25 Jul 2013 12:49:16 -0400",ct: [PATCH 2/2] DOC:Revert ``assert()`` back to ``assert`` (statement),1,0,0,doc/TESTS.rst.txt,[u'2'],1,1," -104,7 +104,7 ;",a test class:;
3549,4,df21983, Pauli Virtanen <pav@iki.fi>," Wed, 24 Jul 2013 18:43:41 +0300",ct: [PATCH 1/4] DOC: use the new scipy-sphinx-theme in the documentation,7,42,240,.gitmodules,[u'3'],1,0," -0,0 +1,3 ;",;
3549,4,df21983, Pauli Virtanen <pav@iki.fi>," Wed, 24 Jul 2013 18:43:41 +0300",ct: [PATCH 1/4] DOC: use the new scipy-sphinx-theme in the documentation,7,42,240,doc/scipy-sphinx-theme,[u'1'],1,0," -0,0 +1 ;",;
3549,4,df21983, Pauli Virtanen <pav@iki.fi>," Wed, 24 Jul 2013 18:43:41 +0300",ct: [PATCH 1/4] DOC: use the new scipy-sphinx-theme in the documentation,7,42,240,doc/source/_static/scipy.css,[u'189'],0,32," -1,189 +0,0 ;",;
3549,4,df21983, Pauli Virtanen <pav@iki.fi>," Wed, 24 Jul 2013 18:43:41 +0300",ct: [PATCH 1/4] DOC: use the new scipy-sphinx-theme in the documentation,7,42,240,doc/source/_templates/indexsidebar.html,[u'1'],0,1," -1,5 +1,4 ;",;
3549,4,df21983, Pauli Virtanen <pav@iki.fi>," Wed, 24 Jul 2013 18:43:41 +0300",ct: [PATCH 1/4] DOC: use the new scipy-sphinx-theme in the documentation,7,42,240,doc/source/_templates/layout.html,[u'5'],1,1," -1,6 +1,9 ;",;
3549,4,df21983, Pauli Virtanen <pav@iki.fi>," Wed, 24 Jul 2013 18:43:41 +0300",ct: [PATCH 1/4] DOC: use the new scipy-sphinx-theme in the documentation,7,42,240,doc/source/conf.py,[u'83'],6,8," -30,9 +30,6 ; -83,62 +80,50 ;",;;
3549,4,df21983, Pauli Virtanen <pav@iki.fi>," Wed, 24 Jul 2013 18:43:41 +0300",ct: [PATCH 1/4] DOC: use the new scipy-sphinx-theme in the documentation,7,42,240,doc/source/scipyshiny_small.png,"[u'18991', u'0']",0,1,,
3549,4,41eeed7, Pauli Virtanen <pav@iki.fi>," Wed, 24 Jul 2013 18:49:27 +0300",ct: [PATCH 2/4] DOC: update scipy.org doc build Makefile targets,1,11,18,doc/Makefile,[u'29'],11,18," -1,7 +1,7 ; -24,13 +24,13 ; -56,34 +56,21 ; -114,6 +101,12 ;",;ALLSPHINXOPTS   = -d build/doctrees $(PAPEROPT_$(PAPER)) $(SPHINXOPTS) sourc;gitwash-update;html: generat;
3549,4,29d47bf, Pauli Virtanen <pav@iki.fi>," Thu, 25 Jul 2013 13:51:49 +0300",ct: [PATCH 3/4] MAINT: ensure the sphinx theme gets included in source tarballs,1,0,0,MANIFEST.in,[u'1'],1,0," -23,3 +23,4 ;",recursive-include doc/sphinxext ;
3549,4,bf0134d, Pauli Virtanen <pav@iki.fi>," Thu, 25 Jul 2013 15:04:28 +0300",ct: [PATCH 4/4] DOC: put release notes in inverse order,1,8,8,doc/source/release.rst,[u'16'],8,8," -2,12 +2,12 ;",;
3547,3,f4f7c53, Pauli Virtanen <pav@iki.fi>," Wed, 24 Jul 2013 19:10:16 +0300",ct: [PATCH 1/3] Move numpydoc to a separate repository,19,0,4004,doc/sphinxext/LICENSE.txt,[u'94'],0,3," -1,94 +0,0 ;",;
3547,3,f4f7c53, Pauli Virtanen <pav@iki.fi>," Wed, 24 Jul 2013 19:10:16 +0300",ct: [PATCH 1/3] Move numpydoc to a separate repository,19,0,4004,doc/sphinxext/MANIFEST.in,[u'2'],0,1," -1,2 +0,0 ;",;
3547,3,f4f7c53, Pauli Virtanen <pav@iki.fi>," Wed, 24 Jul 2013 19:10:16 +0300",ct: [PATCH 1/3] Move numpydoc to a separate repository,19,0,4004,doc/sphinxext/README.txt,[u'45'],0,2," -1,45 +0,0 ;",;
3547,3,f4f7c53, Pauli Virtanen <pav@iki.fi>," Wed, 24 Jul 2013 19:10:16 +0300",ct: [PATCH 1/3] Move numpydoc to a separate repository,19,0,4004,doc/sphinxext/numpydoc/__init__.py,[u'3'],0,1," -1,3 +0,0 ;",;
3547,3,f4f7c53, Pauli Virtanen <pav@iki.fi>," Wed, 24 Jul 2013 19:10:16 +0300",ct: [PATCH 1/3] Move numpydoc to a separate repository,19,0,4004,doc/sphinxext/numpydoc/comment_eater.py,[u'169'],0,4," -1,169 +0,0 ;",;
3547,3,f4f7c53, Pauli Virtanen <pav@iki.fi>," Wed, 24 Jul 2013 19:10:16 +0300",ct: [PATCH 1/3] Move numpydoc to a separate repository,19,0,4004,doc/sphinxext/numpydoc/compiler_unparse.py,[u'865'],0,21," -1,865 +0,0 ;",;
3547,3,f4f7c53, Pauli Virtanen <pav@iki.fi>," Wed, 24 Jul 2013 19:10:16 +0300",ct: [PATCH 1/3] Move numpydoc to a separate repository,19,0,4004,doc/sphinxext/numpydoc/docscrape.py,[u'523'],0,13," -1,523 +0,0 ;",;
3547,3,f4f7c53, Pauli Virtanen <pav@iki.fi>," Wed, 24 Jul 2013 19:10:16 +0300",ct: [PATCH 1/3] Move numpydoc to a separate repository,19,0,4004,doc/sphinxext/numpydoc/docscrape_sphinx.py,[u'267'],0,7," -1,267 +0,0 ;",;
3547,3,f4f7c53, Pauli Virtanen <pav@iki.fi>," Wed, 24 Jul 2013 19:10:16 +0300",ct: [PATCH 1/3] Move numpydoc to a separate repository,19,0,4004,doc/sphinxext/numpydoc/linkcode.py,[u'83'],0,2," -1,83 +0,0 ;",;
3547,3,f4f7c53, Pauli Virtanen <pav@iki.fi>," Wed, 24 Jul 2013 19:10:16 +0300",ct: [PATCH 1/3] Move numpydoc to a separate repository,19,0,4004,doc/sphinxext/numpydoc/numpydoc.py,[u'185'],0,5," -1,185 +0,0 ;",;
3547,3,f4f7c53, Pauli Virtanen <pav@iki.fi>," Wed, 24 Jul 2013 19:10:16 +0300",ct: [PATCH 1/3] Move numpydoc to a separate repository,19,0,4004,doc/sphinxext/numpydoc/phantom_import.py,[u'167'],0,4," -1,167 +0,0 ;",;
3547,3,f4f7c53, Pauli Virtanen <pav@iki.fi>," Wed, 24 Jul 2013 19:10:16 +0300",ct: [PATCH 1/3] Move numpydoc to a separate repository,19,0,4004,doc/sphinxext/numpydoc/plot_directive.py,[u'642'],0,15," -1,642 +0,0 ;",;
3547,3,f4f7c53, Pauli Virtanen <pav@iki.fi>," Wed, 24 Jul 2013 19:10:16 +0300",ct: [PATCH 1/3] Move numpydoc to a separate repository,19,0,4004,doc/sphinxext/numpydoc/tests/test_docscrape.py,[u'767'],0,18," -1,767 +0,0 ;",;
3547,3,f4f7c53, Pauli Virtanen <pav@iki.fi>," Wed, 24 Jul 2013 19:10:16 +0300",ct: [PATCH 1/3] Move numpydoc to a separate repository,19,0,4004,doc/sphinxext/numpydoc/tests/test_linkcode.py,[u'5'],0,1," -1,5 +0,0 ;",;
3547,3,f4f7c53, Pauli Virtanen <pav@iki.fi>," Wed, 24 Jul 2013 19:10:16 +0300",ct: [PATCH 1/3] Move numpydoc to a separate repository,19,0,4004,.../numpydoc/tests/test_phantom_import.py,[u'5'],0,1," -1,5 +0,0 ;",;
3547,3,f4f7c53, Pauli Virtanen <pav@iki.fi>," Wed, 24 Jul 2013 19:10:16 +0300",ct: [PATCH 1/3] Move numpydoc to a separate repository,19,0,4004,.../numpydoc/tests/test_plot_directive.py,[u'5'],0,1," -1,5 +0,0 ;",;
3547,3,f4f7c53, Pauli Virtanen <pav@iki.fi>," Wed, 24 Jul 2013 19:10:16 +0300",ct: [PATCH 1/3] Move numpydoc to a separate repository,19,0,4004,doc/sphinxext/numpydoc/tests/test_traitsdoc.py,[u'5'],0,1," -1,5 +0,0 ;",;
3547,3,f4f7c53, Pauli Virtanen <pav@iki.fi>," Wed, 24 Jul 2013 19:10:16 +0300",ct: [PATCH 1/3] Move numpydoc to a separate repository,19,0,4004,doc/sphinxext/numpydoc/traitsdoc.py,[u'142'],0,4," -1,142 +0,0 ;",;
3547,3,f4f7c53, Pauli Virtanen <pav@iki.fi>," Wed, 24 Jul 2013 19:10:16 +0300",ct: [PATCH 1/3] Move numpydoc to a separate repository,19,0,4004,doc/sphinxext/setup.py,[u'30'],0,1," -1,30 +0,0 ;",;
3547,3,3903928, Pauli Virtanen <pav@iki.fi>," Wed, 24 Jul 2013 19:27:02 +0300",ct: [PATCH 2/3] Add Numpydoc as a git submodule,2,4,0,.gitmodules,[u'3'],3,0," -1,3 +1,6 ;",;
3547,3,3903928, Pauli Virtanen <pav@iki.fi>," Wed, 24 Jul 2013 19:27:02 +0300",ct: [PATCH 2/3] Add Numpydoc as a git submodule,2,4,0,doc/sphinxext,[u'1'],1,0," -0,0 +1 ;",;
3547,3,fab4c0e, Pauli Virtanen <pav@iki.fi>," Thu, 25 Jul 2013 13:43:34 +0300",ct: [PATCH 3/3] DOC: fix HOWTO_BUILD_DOCS.rst.txt,1,8,28,doc/HOWTO_BUILD_DOCS.rst.txt,[u'36'],8,28," -18,6 +18,12 ; -62,34 +68,8 ;",in several different formats;Numpy's documentation uses several custom extensions to Sphinx.  Thes;
3546,1,62e3e62, Nils Werner <nils.werner@gmail.com>," Wed, 24 Jul 2013 13:06:53 +0200",ct: [PATCH] Link cumsum and diff to one another as theyre roughly the inverse of each other,2,3,0,numpy/core/fromnumeric.py,[u'2'],2,0," -1802,6 +1802,8 ;","def cumsum (a, axis=None, dtype=None, out=None);"
3546,1,62e3e62, Nils Werner <nils.werner@gmail.com>," Wed, 24 Jul 2013 13:06:53 +0200",ct: [PATCH] Link cumsum and diff to one another as theyre roughly the inverse of each other,2,3,0,numpy/lib/function_base.py,[u'2'],1,1," -962,7 +962,7 ;","def diff(a, n=1, axis=-1);"
3541,1,e6a547b, jeromekelleher <jerome.kelleher@ed.ac.uk>," Sun, 21 Jul 2013 20:22:22 +0200",ct: [PATCH] Update halffloat.cCorrected preprocessor form.,1,0,0,numpy/core/src/npymath/halffloat.c,[u'2'],1,1," -137,7 +137,7 ;","npy_half npy_half_nextafter(npy_half x, npy_half y;"
3539,2,ffb45c5, Warren Weckesser <warren.weckesser@gmail.com>," Fri, 19 Jul 2013 21:09:45 -0400",ct: [PATCH 1/2] BUG: linalg: norm was computing and then ignoring a product,1,0,2,numpy/linalg/linalg.py,[u'3'],1,2," -2029,8 +2029,7 ;","def norm(x, ord=None, axis=None);"
3539,2,80bc690, Warren Weckesser <warren.weckesser@gmail.com>," Sat, 20 Jul 2013 08:12:27 -0400",ct: [PATCH 2/2] MAINT: linalg: some more clean up in norm: 'nd' was defined but not used,1,4,5,numpy/linalg/linalg.py,[u'9'],4,5," -2032,12 +2032,12 ; -2066,11 +2066,10 ;","def norm(x, ord=None, axis=None);def norm(x, ord=None, axis=None);"
3538,2,9c93f75," ""K.-Michael Aye"" <kmichael.aye@gmail.com>"," Fri, 19 Jul 2013 15:21:09 -0700","ct: [PATCH 1/2] Docstring: point to correct equivalent functionnp.compress' ""See also"" pointed to itself instead to equivalent np.extract",1,0,0,numpy/core/fromnumeric.py,[u'2'],1,1," -1378,7 +1378,7 ;","def compress(condition, a, axis=None, out=None);"
3538,2,6352343," ""K.-Michael Aye"" <kmichael.aye@gmail.com>"," Tue, 23 Jul 2013 18:15:10 -0700",ct: [PATCH 2/2] Repaired my misunderstanding and added np.extractI overlooked that np.compress and ndarray.compress are different things and wrongly assumed that it was a typo. I corrected that and added np.extract for equivalency for 1-D arrays.,1,2,0,numpy/core/fromnumeric.py,[u'3'],2,1," -1378,7 +1378,8 ;","def compress(condition, a, axis=None, out=None);"
3537,5,55c1e55, Graeme <grb@skogoglandskap.no>," Fri, 19 Jul 2013 20:11:26 +0200","ct: [PATCH 1/5] GBB: New version of select which is several times faster, bugfixes, better internal documentation.Supports broadcasting, and has a special fast execution path for scalar condlists.Testing + benchmarks: see https://github.com/gbb/numpy-simple-select/blob/master/README.md",1,82,23,numpy/lib/function_base.py,[u'105'],35,10," -733,7 +733,7 ; -760,29 +760,88 ;","def select(condlist, choicelist, default=0);def select(condlist, choicelist, default=0);"
3537,5,5bb6d0f, Graeme <grb@skogoglandskap.no>," Fri, 19 Jul 2013 20:33:51 +0200","ct: [PATCH 2/5] I altered the first broadcast_arrays() example to make it much clearer for beginners.As someone relatively new to numpy, I found the original presentation of this example extremely confusing.This small change makes it much easier to see what the broadcast_arrays() call is doing, compared to the originals.",1,7,4,numpy/lib/stride_tricks.py,[u'11'],7,4," -53,12 +53,15 ;",def broadcast_arrays(*args);
3537,5,1360e72, Graeme <grb@skogoglandskap.no>," Fri, 19 Jul 2013 21:41:04 +0200","ct: [PATCH 3/5] 1. Support for scalars in condlist was incomplete. Arguably, this shouldn't be allowed anyway, but here for improved compatibility with the original select().2. Function calls in select() now using a consistent syntax.",1,3,0,numpy/lib/function_base.py,[u'4'],3,1," -790,6 +790,8 ; -805,7 +807,7 ;","def select(condlist, choicelist, default=0);def select(condlist, choicelist, default=0);"
3537,5,cc51966, Graeme <grb@skogoglandskap.no>," Thu, 25 Jul 2013 15:45:16 +0200",ct: [PATCH 4/5] GBB: fixes to select() and new select() tests. Reintroduces previous select()'s accidental compatibility with int ndarrays and marks this functionality as deprecated.ENH: supports int ndarrays in the style of previous versionsDEP: throws deprecation warning if int ndarray code is used (+test)BUG: python 3 produces a float index value because of '/' division when splitting the combined list in two - have changed this to '//',2,48,10,numpy/lib/function_base.py,[u'21'],16,4," -776,13 +776,26 ; -830,8 +843,8 ;","def select(condlist, choicelist, default=0);def select(condlist, choicelist, default=0);"
3537,5,cc51966, Graeme <grb@skogoglandskap.no>," Thu, 25 Jul 2013 15:45:16 +0200",ct: [PATCH 4/5] GBB: fixes to select() and new select() tests. Reintroduces previous select()'s accidental compatibility with int ndarrays and marks this functionality as deprecated.ENH: supports int ndarrays in the style of previous versionsDEP: throws deprecation warning if int ndarray code is used (+test)BUG: python 3 produces a float index value because of '/' division when splitting the combined list in two - have changed this to '//',2,48,10,numpy/lib/tests/test_function_base.py,[u'37'],29,6," -155,17 +155,42 ;","def _select(self, cond, values, default=0);"
3537,5,e1b976b, Graeme <grb@skogoglandskap.no>," Thu, 25 Jul 2013 16:34:40 +0200",ct: [PATCH 5/5] Integrated the type-checking change proposed by njsmith.ENH: this version of select() now accepts subtypes of bool/int in condlists.,1,9,13,numpy/lib/function_base.py,[u'22'],9,13," -776,21 +776,17 ;","def select(condlist, choicelist, default=0);"
3535,1,4561ec5, Arink Verma <arinkverma@gmail.com>," Sun, 28 Jul 2013 00:52:20 +0530",ct: [PATCH] ENH: Added code generator for loop lookup in  generate_umath.py Groupby types index difference from NPY_TYPES enum defined in ndarray_types.h. Made if-else condition over continous range and constant difference.,4,127,2,numpy/core/code_generators/generate_umath.py,[u'111'],26,1," -5,6 +5,8 ; -191,6 +193,10 ; -827,6 +833,97 ; -904,6 +1001,7 ; -921,6 +1019,7 ; -933,6 +1032,8 ; -940,6 +1041,7 ; -951,8 +1053,15 ; -960,7 +1069,7 ;",";def english_upper(s);def indent(st,spaces);def make_arrays(funcdict);def make_ufuncs(funcdict);def make_ufuncs(funcdict);def make_ufuncs(funcdict);def make_code(funcdict,filename);def make_code(funcdict,filename);"
3535,1,4561ec5, Arink Verma <arinkverma@gmail.com>," Sun, 28 Jul 2013 00:52:20 +0530",ct: [PATCH] ENH: Added code generator for loop lookup in  generate_umath.py Groupby types index difference from NPY_TYPES enum defined in ndarray_types.h. Made if-else condition over continous range and constant difference.,4,127,2,numpy/core/include/numpy/ufuncobject.h,[u'7'],1,1," -189,7 +189,6 ; -209,6 +208,12 ;",typedef struct _tagPyUFuncObject ;typedef struct _tagPyUFuncObject ;
3535,1,4561ec5, Arink Verma <arinkverma@gmail.com>," Sun, 28 Jul 2013 00:52:20 +0530",ct: [PATCH] ENH: Added code generator for loop lookup in  generate_umath.py Groupby types index difference from NPY_TYPES enum defined in ndarray_types.h. Made if-else condition over continous range and constant difference.,4,127,2,numpy/core/src/umath/ufunc_object.c,[u'1'],1,0," -4292,6 +4292,7 ;","PyUFunc_FromFuncAndDataAndSignature(PyUFuncGenericFunction *func, void **data;"
3535,1,4561ec5, Arink Verma <arinkverma@gmail.com>," Sun, 28 Jul 2013 00:52:20 +0530",ct: [PATCH] ENH: Added code generator for loop lookup in  generate_umath.py Groupby types index difference from NPY_TYPES enum defined in ndarray_types.h. Made if-else condition over continous range and constant difference.,4,127,2,numpy/core/src/umath/ufunc_type_resolution.c,[u'10'],3,0," -1260,6 +1260,16 ;",PyUFunc_DefaultLegacyInnerLoopSelector(PyUFuncObject *ufunc;
3534,12,aaac613, Benjamin Root <ben.v.root@gmail.com>," Thu, 2 May 2013 00:50:39 -0400","ct: [PATCH 01/12] ENH: Adding np.nanmean(), np.nanstd(), np.nanvar()",2,340,2,numpy/core/_methods.py,[u'79'],13,1," -7,7 +7,7 ; -61,6 +61,26 ; -101,6 +121,52 ; -111,3 +177,14 ;",";def _mean(a, axis=None, dtype=None, out=None, keepdims=False);def _var(a, axis=None, dtype=None, out=None, ddof=0;def _std(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);"
3534,12,aaac613, Benjamin Root <ben.v.root@gmail.com>," Thu, 2 May 2013 00:50:39 -0400","ct: [PATCH 01/12] ENH: Adding np.nanmean(), np.nanstd(), np.nanvar()",2,340,2,numpy/core/fromnumeric.py,[u'263'],45,1," -22,7 +22,8 ; -2665,6 +2666,8 ; -2711,6 +2714,80 ; -2753,6 +2830,7 ; -2813,6 +2891,97 ; -2915,3 +3084,95 ;",";def mean(a, axis=None, dtype=None, out=None, keepdims=False);def mean(a, axis=None, dtype=None, out=None, keepdims=False);def std(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);def std(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);def var(a, axis=None, dtype=None, out=None, ddof=0;"
3534,12,777b645, Benjamin Root <ben.v.root@gmail.com>," Wed, 15 May 2013 22:09:23 -0400","ct: [PATCH 02/12] TST: Added tests for nanmean(), nanvar(), nanstd()",2,134,10,numpy/core/_methods.py,[u'29'],6,4," -7,7 +7,8 ; -46,8 +47,9 ; -62,11 +64,14 ; -86,7 +91,8 ; -101,7 +107,7 ; -123,11 +129,14 ; -142,10 +151,10 ;",";def _count_reduce_items(arr, axis);def _mean(a, axis=None, dtype=None, out=None, keepdims=False);def _var(a, axis=None, dtype=None, out=None, ddof=0;def _var(a, axis=None, dtype=None, out=None, ddof=0;def _var(a, axis=None, dtype=None, out=None, ddof=0;def _nanvar(a, axis=None, dtype=None, out=None, ddof=0;"
3534,12,777b645, Benjamin Root <ben.v.root@gmail.com>," Wed, 15 May 2013 22:09:23 -0400","ct: [PATCH 02/12] TST: Added tests for nanmean(), nanvar(), nanstd()",2,134,10,numpy/core/tests/test_numeric.py,[u'115'],39,0," -3,6 +3,7 ; -177,18 +178,51 ; -1447,6 +1481,39 ; -1469,6 +1536,54 ;",;def test_mean(self);def test_no_parameter_modification(self);def test_ddof2(self);
3534,12,fcb0fef, Charles Harris <charlesr.harris@gmail.com>," Thu, 20 Jun 2013 20:44:54 -0600","ct: [PATCH 03/12] MAINT: Separate nan functions into their own module.New files lib/nanfunctions.py and lib/tests/test_nanfunctions.py areadded and both the previous and new nan functions and tests are movedinto them.The existing nan functions moved from lib/function_base are:    nansum, nanmin, nanmax, nanargmin, nanargmaxThe added nan functions moved from core/numeric are:    nanmean, nanvar, nanstd",8,946,916,numpy/core/_methods.py,[u'84'],1,4," -7,7 +7,7 ; -63,29 +63,6 ; -127,55 +104,6 ; -187,13 +115,3 ;",";def _mean(a, axis=None, dtype=None, out=None, keepdims=False);def _var(a, axis=None, dtype=None, out=None, ddof=0;def _std(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);"
3534,12,fcb0fef, Charles Harris <charlesr.harris@gmail.com>," Thu, 20 Jun 2013 20:44:54 -0600","ct: [PATCH 03/12] MAINT: Separate nan functions into their own module.New files lib/nanfunctions.py and lib/tests/test_nanfunctions.py areadded and both the previous and new nan functions and tests are movedinto them.The existing nan functions moved from lib/function_base are:    nansum, nanmin, nanmax, nanargmin, nanargmaxThe added nan functions moved from core/numeric are:    nanmean, nanvar, nanstd",8,946,916,numpy/core/fromnumeric.py,[u'279'],1,13," -14,18 +14,16 ; -2714,81 +2712,6 ; -2891,97 +2814,6 ; -3085,94 +2917,3 ;",";def mean(a, axis=None, dtype=None, out=None, keepdims=False);def std(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);def var(a, axis=None, dtype=None, out=None, ddof=0;"
3534,12,fcb0fef, Charles Harris <charlesr.harris@gmail.com>," Thu, 20 Jun 2013 20:44:54 -0600","ct: [PATCH 03/12] MAINT: Separate nan functions into their own module.New files lib/nanfunctions.py and lib/tests/test_nanfunctions.py areadded and both the previous and new nan functions and tests are movedinto them.The existing nan functions moved from lib/function_base are:    nansum, nanmin, nanmax, nanargmin, nanargmaxThe added nan functions moved from core/numeric are:    nanmean, nanvar, nanstd",8,946,916,numpy/core/tests/test_numeric.py,[u'101'],0,5," -183,12 +183,6 ; -200,12 +194,6 ; -217,12 +205,6 ; -1481,40 +1463,6 ; -1536,55 +1484,6 ;",def test_mean(self);def test_std(self);def test_var(self);def test_no_parameter_modification(self);def test_ddof2(self);
3534,12,fcb0fef, Charles Harris <charlesr.harris@gmail.com>," Thu, 20 Jun 2013 20:44:54 -0600","ct: [PATCH 03/12] MAINT: Separate nan functions into their own module.New files lib/nanfunctions.py and lib/tests/test_nanfunctions.py areadded and both the previous and new nan functions and tests are movedinto them.The existing nan functions moved from lib/function_base are:    nansum, nanmin, nanmax, nanargmin, nanargmaxThe added nan functions moved from core/numeric are:    nanmean, nanvar, nanstd",8,946,916,numpy/lib/__init__.py,[u'5'],1,1," -1,11 +1,14 ; -18,7 +21,6 ; -36,6 +38,7 ;",;;;
3534,12,fcb0fef, Charles Harris <charlesr.harris@gmail.com>," Thu, 20 Jun 2013 20:44:54 -0600","ct: [PATCH 03/12] MAINT: Separate nan functions into their own module.New files lib/nanfunctions.py and lib/tests/test_nanfunctions.py areadded and both the previous and new nan functions and tests are movedinto them.The existing nan functions moved from lib/function_base are:    nansum, nanmin, nanmax, nanargmin, nanargmaxThe added nan functions moved from core/numeric are:    nanmean, nanvar, nanstd",8,946,916,numpy/lib/function_base.py,[u'342'],1,16," -1,15 +1,14 ; -1361,331 +1360,6 ;",";def place(arr, mask, vals);"
3534,12,fcb0fef, Charles Harris <charlesr.harris@gmail.com>," Thu, 20 Jun 2013 20:44:54 -0600","ct: [PATCH 03/12] MAINT: Separate nan functions into their own module.New files lib/nanfunctions.py and lib/tests/test_nanfunctions.py areadded and both the previous and new nan functions and tests are movedinto them.The existing nan functions moved from lib/function_base are:    nansum, nanmin, nanmax, nanargmin, nanargmaxThe added nan functions moved from core/numeric are:    nanmean, nanvar, nanstd",8,946,916,numpy/lib/nanfunctions.py,[u'678'],34,0," -0,0 +1,678 ;",;
3534,12,fcb0fef, Charles Harris <charlesr.harris@gmail.com>," Thu, 20 Jun 2013 20:44:54 -0600","ct: [PATCH 03/12] MAINT: Separate nan functions into their own module.New files lib/nanfunctions.py and lib/tests/test_nanfunctions.py areadded and both the previous and new nan functions and tests are movedinto them.The existing nan functions moved from lib/function_base are:    nansum, nanmin, nanmax, nanargmin, nanargmaxThe added nan functions moved from core/numeric are:    nanmean, nanvar, nanstd",8,946,916,numpy/lib/tests/test_function_base.py,[u'133'],1,6," -3,10 +3,10 ; -1111,127 +1111,6 ; -1278,7 +1157,7 ; -1596,7 +1475,5 ;",;def test_dtype_order(self);def test_empty(self);def test_string_arg(self);
3534,12,fcb0fef, Charles Harris <charlesr.harris@gmail.com>," Thu, 20 Jun 2013 20:44:54 -0600","ct: [PATCH 03/12] MAINT: Separate nan functions into their own module.New files lib/nanfunctions.py and lib/tests/test_nanfunctions.py areadded and both the previous and new nan functions and tests are movedinto them.The existing nan functions moved from lib/function_base are:    nansum, nanmin, nanmax, nanargmin, nanargmaxThe added nan functions moved from core/numeric are:    nanmean, nanvar, nanstd",8,946,916,numpy/lib/tests/test_nanfunctions.py,[u'240'],12,0," -0,0 +1,240 ;",;
3534,12,1b6b871, Charles Harris <charlesr.harris@gmail.com>," Fri, 21 Jun 2013 10:28:41 -0600",ct: [PATCH 04/12] MAINT: Clean up core/_methods.py and core/fromnumeric.pyUse issubclass instead of issubdtype.Add some blank lines.Remove trailing whitespace.Remove uneeded float casts since true_divide is default.Clean up documentation a bit.,2,15,17,numpy/core/_methods.py,[u'19'],10,9," -7,7 +7,7 ; -48,19 +48,20 ; -68,23 +69,23 ; -100,7 +101,7 ;",";def _mean(a, axis=None, dtype=None, out=None, keepdims=False);def _var(a, axis=None, dtype=None, out=None, ddof=0;def _var(a, axis=None, dtype=None, out=None, ddof=0;"
3534,12,1b6b871, Charles Harris <charlesr.harris@gmail.com>," Fri, 21 Jun 2013 10:28:41 -0600",ct: [PATCH 04/12] MAINT: Clean up core/_methods.py and core/fromnumeric.pyUse issubclass instead of issubdtype.Add some blank lines.Remove trailing whitespace.Remove uneeded float casts since true_divide is default.Clean up documentation a bit.,2,15,17,numpy/core/fromnumeric.py,[u'13'],5,8," -62,9 +62,9 ; -2664,8 +2664,7 ; -2752,8 +2751,7 ; -2856,8 +2854,7 ;","def take(a, indices, axis=None, out=None, mode='raise');def mean(a, axis=None, dtype=None, out=None, keepdims=False);def std(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);def var(a, axis=None, dtype=None, out=None, ddof=0;"
3534,12,f16b12e, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Jul 2013 20:54:43 -0600","ct: [PATCH 05/12] BUG: Make mean, sum, var, std methods return correct scalar type.The return type could differ depending on whether or not the valuewas a scalar.",1,10,10,numpy/core/_methods.py,[u'20'],10,10," -57,10 +57,10 ; -76,10 +76,10 ; -98,10 +98,10 ; -112,7 +112,7 ;","def _mean(a, axis=None, dtype=None, out=None, keepdims=False);def _var(a, axis=None, dtype=None, out=None, ddof=0;def _var(a, axis=None, dtype=None, out=None, ddof=0;def _std(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);"
3534,12,02f5258, Charles Harris <charlesr.harris@gmail.com>," Sun, 14 Jul 2013 09:57:13 -0600","ct: [PATCH 06/12] ENH: Make var and std methods raise error when ddof too big.Currently the results may be infinite or negative. Instead, raise aValueError in this case.",1,29,23,numpy/core/_methods.py,[u'52'],28,22," -5,6 +5,8 ; -47,15 +49,17 ; -64,39 +68,41 ;",";def _count_reduce_items(arr, axis);def _mean(a, axis=None, dtype=None, out=None, keepdims=False);"
3534,12,6a02d05, Charles Harris <charlesr.harris@gmail.com>," Sun, 14 Jul 2013 09:57:54 -0600","ct: [PATCH 07/12] TST: Add more extensive tests for the mean, var, and std methods.Test the mean, var, and std methods more extensively. In addition, addtests that:    Check that scalar return types ar what they should be.    Check that ValueError is raised when ddof is too big.",2,173,0,numpy/core/tests/test_multiarray.py,[u'172'],36,0," -2399,7 +2399,178 ; -2409,6 +2580,7 ;","def test_basic(self);def __new__(cls, data, info);"
3534,12,6a02d05, Charles Harris <charlesr.harris@gmail.com>," Sun, 14 Jul 2013 09:57:54 -0600","ct: [PATCH 07/12] TST: Add more extensive tests for the mean, var, and std methods.Test the mean, var, and std methods more extensively. In addition, addtests that:    Check that scalar return types ar what they should be.    Check that ValueError is raised when ddof is too big.",2,173,0,numpy/core/tests/test_numeric.py,[u'2'],1,1," -202,7 +202,7 ;",def test_var(self);
3534,12,c7dd1e5, Charles Harris <charlesr.harris@gmail.com>," Sun, 23 Jun 2013 15:47:59 -0600","ct: [PATCH 08/12] MAINT: Refactor nanfunctions.nanmax, nanmin--------------Add out and keepdims keywords.nanargmin, nanargmax--------------------A NanWarning is raised if an all NaN slice detected. For all suchslices np.iingo(np.intp).min is returned as the index value.nansum------The keywords dtype, out, and keepdims are added.A FutureWarning is raised, as in the future the mean of an emptyslice after NaN replacement will be 0 instead of the current NaN.nanmean, nanvar, nanstd-----------------------For all, if the input array is of inexact type then the dtype and outparameters must be of inexact type if specified.  That insures that NaNscan be returned when appropriate.The nanmean function detects empty slices after NaN replacement andraises a NanWarning. NaN is returned as the value for all such slices.The nanmean and nanstd functions detect degrees of freedom <= 0 afterNaN replacement and raise a NanWarning. NaN is returned as the value forall such slices.",3,473,334,doc/source/reference/routines.statistics.rst,[u'5'],1,1," -23,11 +23,14 ;",Averages and variance;
3534,12,c7dd1e5, Charles Harris <charlesr.harris@gmail.com>," Sun, 23 Jun 2013 15:47:59 -0600","ct: [PATCH 08/12] MAINT: Refactor nanfunctions.nanmax, nanmin--------------Add out and keepdims keywords.nanargmin, nanargmax--------------------A NanWarning is raised if an all NaN slice detected. For all suchslices np.iingo(np.intp).min is returned as the index value.nansum------The keywords dtype, out, and keepdims are added.A FutureWarning is raised, as in the future the mean of an emptyslice after NaN replacement will be 0 instead of the current NaN.nanmean, nanvar, nanstd-----------------------For all, if the input array is of inexact type then the dtype and outparameters must be of inexact type if specified.  That insures that NaNscan be returned when appropriate.The nanmean function detects empty slices after NaN replacement andraises a NanWarning. NaN is returned as the value for all such slices.The nanmean and nanstd functions detect degrees of freedom <= 0 afterNaN replacement and raise a NanWarning. NaN is returned as the value forall such slices.",3,473,334,numpy/lib/nanfunctions.py,[u'801'],16,11," -1,215 +1,147 ; -219,6 +151,19 ; -271,50 +216,10 ; -326,6 +231,19 ; -378,16 +296,61 ; -418,7 +381,116 ; -429,6 +501,10 ; -439,7 +515,7 ; -455,7 +531,8 ; -465,8 +542,8 ; -485,14 +562,161 ; -504,6 +728,10 ; -521,8 +749,8 ; -531,8 +759,10 ; -575,104 +805,9 ;",";def nanmin(a, axis=None);def nanmin(a, axis=None);def nanmax(a, axis=None);def nanmax(a, axis=None);def nanargmax(a, axis=None);def nanmean(a, axis=None, dtype=None, out=None, keepdims=False);def nanmean(a, axis=None, dtype=None, out=None, keepdims=False);def nanmean(a, axis=None, dtype=None, out=None, keepdims=False);def nanmean(a, axis=None, dtype=None, out=None, keepdims=False);def nanmean(a, axis=None, dtype=None, out=None, keepdims=False);def nanstd(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);def nanstd(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);def nanstd(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);def nanstd(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);"
3534,12,c7dd1e5, Charles Harris <charlesr.harris@gmail.com>," Sun, 23 Jun 2013 15:47:59 -0600","ct: [PATCH 08/12] MAINT: Refactor nanfunctions.nanmax, nanmin--------------Add out and keepdims keywords.nanargmin, nanargmax--------------------A NanWarning is raised if an all NaN slice detected. For all suchslices np.iingo(np.intp).min is returned as the index value.nansum------The keywords dtype, out, and keepdims are added.A FutureWarning is raised, as in the future the mean of an emptyslice after NaN replacement will be 0 instead of the current NaN.nanmean, nanvar, nanstd-----------------------For all, if the input array is of inexact type then the dtype and outparameters must be of inexact type if specified.  That insures that NaNscan be returned when appropriate.The nanmean function detects empty slices after NaN replacement andraises a NanWarning. NaN is returned as the value for all such slices.The nanmean and nanstd functions detect degrees of freedom <= 0 afterNaN replacement and raise a NanWarning. NaN is returned as the value forall such slices.",3,473,334,numpy/testing/nosetester.py,[u'1'],1,0," -377,6 +377,7 ;","def test(self, label='fast', verbose=1, extra_argv=None;"
3534,12,eac46b4, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Jul 2013 18:11:03 -0600","ct: [PATCH 09/12] TST: Add tests for the nansum, nanmean, nanvar, and nanstd.",1,367,190,numpy/lib/tests/test_nanfunctions.py,[u'557'],23,12," -4,236 +4,413 ;",;
3534,12,f8244a6, Charles Harris <charlesr.harris@gmail.com>," Sun, 14 Jul 2013 10:42:37 -0600","ct: [PATCH 10/12] DOC: Document nanmean, nanvar, and nanstd in the 1.8.0 release notes.",1,8,0,doc/release/1.8.0-notes.rst,[u'9'],8,1," -140,7 +140,7 ; -155,6 +155,13 ;",arrays instead of only in simple indices. This means tha;elements smaller than the sorted elements will placed before the it and al;
3534,12,a36ef7a, Charles Harris <charlesr.harris@gmail.com>," Wed, 17 Jul 2013 14:08:20 -0600",ct: [PATCH 11/12] BUG: Regression test needs to ignore ComplexWarning.This was raising a warning during tests.,1,11,8,numpy/core/tests/test_regression.py,[u'19'],11,8," -1449,14 +1449,17 ;",def test_ticket_1539(self);
3534,12,dc73e1b, Charles Harris <charlesr.harris@gmail.com>," Mon, 12 Aug 2013 23:31:47 -0600",ct: [PATCH 12/12] DOC: Various fixes.Fix typos and clarify some explanations. Document the changes in the returnvalues of nanargmin and nanargmax for all-NaN slices in the 1.8.0 releasenotes.,3,22,19,doc/release/1.8.0-notes.rst,[u'4'],4,0," -47,6 +47,10 ;","case, now indicates a 0-D iteration and ``op_axes`` being NULL and the ol;"
3534,12,dc73e1b, Charles Harris <charlesr.harris@gmail.com>," Mon, 12 Aug 2013 23:31:47 -0600",ct: [PATCH 12/12] DOC: Various fixes.Fix typos and clarify some explanations. Document the changes in the returnvalues of nanargmin and nanargmax for all-NaN slices in the 1.8.0 releasenotes.,3,22,19,numpy/lib/nanfunctions.py,[u'29'],14,15," -301,9 +301,10 ; -348,9 +349,11 ; -399,8 +402,7 ; -467,14 +469,11 ; -501,7 +500,7 ; -597,7 +596,7 ; -728,7 +727,7 ;","def nanmax(a, axis=None, out=None, keepdims=False);def nanargmin(a, axis=None);def nansum(a, axis=None, dtype=None, out=None, keepdims=0);def nansum(a, axis=None, dtype=None, out=None, keepdims=0);def nanmean(a, axis=None, dtype=None, out=None, keepdims=False);def nanvar(a, axis=None, dtype=None, out=None, ddof=0;def nanstd(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);"
3534,12,dc73e1b, Charles Harris <charlesr.harris@gmail.com>," Mon, 12 Aug 2013 23:31:47 -0600",ct: [PATCH 12/12] DOC: Various fixes.Fix typos and clarify some explanations. Document the changes in the returnvalues of nanargmin and nanargmax for all-NaN slices in the 1.8.0 releasenotes.,3,22,19,numpy/lib/tests/test_nanfunctions.py,[u'8'],4,4," -35,7 +35,7 ; -99,7 +99,7 ; -177,7 +177,7 ; -282,7 +282,7 ;",class TestNanFunctions_MinMax(TestCase);class TestNanFunctions_ArgminArgmax(TestCase);def test_nanargmax(self);class TestNanFunctions_MeanVarStd(TestCase);
3533,11,cb508e2, Benjamin Root <ben.v.root@gmail.com>," Thu, 2 May 2013 00:50:39 -0400","ct: [PATCH 01/11] ENH: Adding np.nanmean(), np.nanstd(), np.nanvar()",2,340,2,numpy/core/_methods.py,[u'79'],13,1," -7,7 +7,7 ; -61,6 +61,26 ; -101,6 +121,52 ; -111,3 +177,14 ;",";def _mean(a, axis=None, dtype=None, out=None, keepdims=False);def _var(a, axis=None, dtype=None, out=None, ddof=0;def _std(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);"
3533,11,cb508e2, Benjamin Root <ben.v.root@gmail.com>," Thu, 2 May 2013 00:50:39 -0400","ct: [PATCH 01/11] ENH: Adding np.nanmean(), np.nanstd(), np.nanvar()",2,340,2,numpy/core/fromnumeric.py,[u'263'],45,1," -21,7 +21,8 ; -2517,6 +2518,8 ; -2563,6 +2566,80 ; -2605,6 +2682,7 ; -2665,6 +2743,97 ; -2767,3 +2936,95 ;",";def mean(a, axis=None, dtype=None, out=None, keepdims=False);def mean(a, axis=None, dtype=None, out=None, keepdims=False);def std(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);def std(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);def var(a, axis=None, dtype=None, out=None, ddof=0;"
3533,11,9faaec1, Benjamin Root <ben.v.root@gmail.com>," Wed, 15 May 2013 22:09:23 -0400","ct: [PATCH 02/11] TST: Added tests for nanmean(), nanvar(), nanstd()",2,134,10,numpy/core/_methods.py,[u'29'],6,4," -7,7 +7,8 ; -46,8 +47,9 ; -62,11 +64,14 ; -86,7 +91,8 ; -101,7 +107,7 ; -123,11 +129,14 ; -142,10 +151,10 ;",";def _count_reduce_items(arr, axis);def _mean(a, axis=None, dtype=None, out=None, keepdims=False);def _var(a, axis=None, dtype=None, out=None, ddof=0;def _var(a, axis=None, dtype=None, out=None, ddof=0;def _var(a, axis=None, dtype=None, out=None, ddof=0;def _nanvar(a, axis=None, dtype=None, out=None, ddof=0;"
3533,11,9faaec1, Benjamin Root <ben.v.root@gmail.com>," Wed, 15 May 2013 22:09:23 -0400","ct: [PATCH 02/11] TST: Added tests for nanmean(), nanvar(), nanstd()",2,134,10,numpy/core/tests/test_numeric.py,[u'115'],39,0," -3,6 +3,7 ; -177,18 +178,51 ; -1430,6 +1464,39 ; -1452,6 +1519,54 ;",;def test_mean(self);def test_no_parameter_modification(self);def test_ddof2(self);
3533,11,5ac0680, Charles Harris <charlesr.harris@gmail.com>," Thu, 20 Jun 2013 20:44:54 -0600","ct: [PATCH 03/11] MAINT: Separate nan functions into their own module.New files lib/nanfunctions.py and lib/tests/test_nanfunctions.py areadded and both the previous and new nan functions and tests are movedinto them.The existing nan functions moved from lib/function_base are:    nansum, nanmin, nanmax, nanargmin, nanargmaxThe added nan functions moved from core/numeric are:    nanmean, nanvar, nanstd",8,943,914,numpy/core/_methods.py,[u'84'],1,4," -7,7 +7,7 ; -63,29 +63,6 ; -127,55 +104,6 ; -187,13 +115,3 ;",";def _mean(a, axis=None, dtype=None, out=None, keepdims=False);def _var(a, axis=None, dtype=None, out=None, ddof=0;def _std(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);"
3533,11,5ac0680, Charles Harris <charlesr.harris@gmail.com>," Thu, 20 Jun 2013 20:44:54 -0600","ct: [PATCH 03/11] MAINT: Separate nan functions into their own module.New files lib/nanfunctions.py and lib/tests/test_nanfunctions.py areadded and both the previous and new nan functions and tests are movedinto them.The existing nan functions moved from lib/function_base are:    nansum, nanmin, nanmax, nanargmin, nanargmaxThe added nan functions moved from core/numeric are:    nanmean, nanvar, nanstd",8,943,914,numpy/core/fromnumeric.py,[u'274'],1,13," -15,16 +15,13 ; -2566,81 +2563,6 ; -2743,97 +2665,6 ; -2937,94 +2768,3 ;",";def mean(a, axis=None, dtype=None, out=None, keepdims=False);def std(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);def var(a, axis=None, dtype=None, out=None, ddof=0;"
3533,11,5ac0680, Charles Harris <charlesr.harris@gmail.com>," Thu, 20 Jun 2013 20:44:54 -0600","ct: [PATCH 03/11] MAINT: Separate nan functions into their own module.New files lib/nanfunctions.py and lib/tests/test_nanfunctions.py areadded and both the previous and new nan functions and tests are movedinto them.The existing nan functions moved from lib/function_base are:    nansum, nanmin, nanmax, nanargmin, nanargmaxThe added nan functions moved from core/numeric are:    nanmean, nanvar, nanstd",8,943,914,numpy/core/tests/test_numeric.py,[u'101'],0,5," -183,12 +183,6 ; -200,12 +194,6 ; -217,12 +205,6 ; -1464,40 +1446,6 ; -1519,55 +1467,6 ;",def test_mean(self);def test_std(self);def test_var(self);def test_no_parameter_modification(self);def test_ddof2(self);
3533,11,5ac0680, Charles Harris <charlesr.harris@gmail.com>," Thu, 20 Jun 2013 20:44:54 -0600","ct: [PATCH 03/11] MAINT: Separate nan functions into their own module.New files lib/nanfunctions.py and lib/tests/test_nanfunctions.py areadded and both the previous and new nan functions and tests are movedinto them.The existing nan functions moved from lib/function_base are:    nansum, nanmin, nanmax, nanargmin, nanargmaxThe added nan functions moved from core/numeric are:    nanmean, nanvar, nanstd",8,943,914,numpy/lib/__init__.py,[u'5'],1,1," -1,11 +1,14 ; -18,7 +21,6 ; -36,6 +38,7 ;",;;;
3533,11,5ac0680, Charles Harris <charlesr.harris@gmail.com>," Thu, 20 Jun 2013 20:44:54 -0600","ct: [PATCH 03/11] MAINT: Separate nan functions into their own module.New files lib/nanfunctions.py and lib/tests/test_nanfunctions.py areadded and both the previous and new nan functions and tests are movedinto them.The existing nan functions moved from lib/function_base are:    nansum, nanmin, nanmax, nanargmin, nanargmaxThe added nan functions moved from core/numeric are:    nanmean, nanvar, nanstd",8,943,914,numpy/lib/function_base.py,[u'342'],1,16," -1,15 +1,14 ; -1361,331 +1360,6 ;",";def place(arr, mask, vals);"
3533,11,5ac0680, Charles Harris <charlesr.harris@gmail.com>," Thu, 20 Jun 2013 20:44:54 -0600","ct: [PATCH 03/11] MAINT: Separate nan functions into their own module.New files lib/nanfunctions.py and lib/tests/test_nanfunctions.py areadded and both the previous and new nan functions and tests are movedinto them.The existing nan functions moved from lib/function_base are:    nansum, nanmin, nanmax, nanargmin, nanargmaxThe added nan functions moved from core/numeric are:    nanmean, nanvar, nanstd",8,943,914,numpy/lib/nanfunctions.py,[u'678'],34,0," -0,0 +1,678 ;",;
3533,11,5ac0680, Charles Harris <charlesr.harris@gmail.com>," Thu, 20 Jun 2013 20:44:54 -0600","ct: [PATCH 03/11] MAINT: Separate nan functions into their own module.New files lib/nanfunctions.py and lib/tests/test_nanfunctions.py areadded and both the previous and new nan functions and tests are movedinto them.The existing nan functions moved from lib/function_base are:    nansum, nanmin, nanmax, nanargmin, nanargmaxThe added nan functions moved from core/numeric are:    nanmean, nanvar, nanstd",8,943,914,numpy/lib/tests/test_function_base.py,[u'133'],1,6," -3,10 +3,10 ; -1100,127 +1100,6 ; -1267,7 +1146,7 ; -1538,7 +1417,5 ;",;def test_dtype_order(self);def test_empty(self);def test_string_arg(self);
3533,11,5ac0680, Charles Harris <charlesr.harris@gmail.com>," Thu, 20 Jun 2013 20:44:54 -0600","ct: [PATCH 03/11] MAINT: Separate nan functions into their own module.New files lib/nanfunctions.py and lib/tests/test_nanfunctions.py areadded and both the previous and new nan functions and tests are movedinto them.The existing nan functions moved from lib/function_base are:    nansum, nanmin, nanmax, nanargmin, nanargmaxThe added nan functions moved from core/numeric are:    nanmean, nanvar, nanstd",8,943,914,numpy/lib/tests/test_nanfunctions.py,[u'240'],12,0," -0,0 +1,240 ;",;
3533,11,25bda77, Charles Harris <charlesr.harris@gmail.com>," Fri, 21 Jun 2013 10:28:41 -0600",ct: [PATCH 04/11] MAINT: Clean up core/_methods.py and core/fromnumeric.pyUse issubclass instead of issubdtype.Add some blank lines.Remove trailing whitespace.Remove uneeded float casts since true_divide is default.Clean up documentation a bit.,2,15,17,numpy/core/_methods.py,[u'19'],10,9," -7,7 +7,7 ; -48,19 +48,20 ; -68,23 +69,23 ; -100,7 +101,7 ;",";def _mean(a, axis=None, dtype=None, out=None, keepdims=False);def _var(a, axis=None, dtype=None, out=None, ddof=0;def _var(a, axis=None, dtype=None, out=None, ddof=0;"
3533,11,25bda77, Charles Harris <charlesr.harris@gmail.com>," Fri, 21 Jun 2013 10:28:41 -0600",ct: [PATCH 04/11] MAINT: Clean up core/_methods.py and core/fromnumeric.pyUse issubclass instead of issubdtype.Add some blank lines.Remove trailing whitespace.Remove uneeded float casts since true_divide is default.Clean up documentation a bit.,2,15,17,numpy/core/fromnumeric.py,[u'13'],5,8," -60,9 +60,9 ; -2515,8 +2515,7 ; -2603,8 +2602,7 ; -2707,8 +2705,7 ;","def take(a, indices, axis=None, out=None, mode='raise');def mean(a, axis=None, dtype=None, out=None, keepdims=False);def std(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);def var(a, axis=None, dtype=None, out=None, ddof=0;"
3533,11,f060c68, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Jul 2013 20:54:43 -0600","ct: [PATCH 05/11] BUG: Make mean, sum, var, std methods return correct scalar type.The return type could differ depending on whether or not the valuewas a scalar.",1,10,10,numpy/core/_methods.py,[u'20'],10,10," -57,10 +57,10 ; -76,10 +76,10 ; -98,10 +98,10 ; -112,7 +112,7 ;","def _mean(a, axis=None, dtype=None, out=None, keepdims=False);def _var(a, axis=None, dtype=None, out=None, ddof=0;def _var(a, axis=None, dtype=None, out=None, ddof=0;def _std(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);"
3533,11,28385be, Charles Harris <charlesr.harris@gmail.com>," Sun, 14 Jul 2013 09:57:13 -0600","ct: [PATCH 06/11] ENH: Make var and std methods raise error when ddof too big.Currently the results may be infinite or negative. Instead, raise aValueError in this case.",1,29,23,numpy/core/_methods.py,[u'52'],28,22," -5,6 +5,8 ; -47,15 +49,17 ; -64,39 +68,41 ;",";def _count_reduce_items(arr, axis);def _mean(a, axis=None, dtype=None, out=None, keepdims=False);"
3533,11,d8eee9f, Charles Harris <charlesr.harris@gmail.com>," Sun, 14 Jul 2013 09:57:54 -0600","ct: [PATCH 07/11] TST: Add more extensive tests for the mean, var, and std methods.Test the mean, var, and std methods more extensively. In addition, addtests that:    Check that scalar return types ar what they should be.    Check that ValueError is raised when ddof is too big.",2,173,0,numpy/core/tests/test_multiarray.py,[u'172'],36,0," -2087,7 +2087,178 ; -2097,6 +2268,7 ;","def test_basic(self);def __new__(cls, data, info);"
3533,11,d8eee9f, Charles Harris <charlesr.harris@gmail.com>," Sun, 14 Jul 2013 09:57:54 -0600","ct: [PATCH 07/11] TST: Add more extensive tests for the mean, var, and std methods.Test the mean, var, and std methods more extensively. In addition, addtests that:    Check that scalar return types ar what they should be.    Check that ValueError is raised when ddof is too big.",2,173,0,numpy/core/tests/test_numeric.py,[u'2'],1,1," -202,7 +202,7 ;",def test_var(self);
3533,11,90ded18, Charles Harris <charlesr.harris@gmail.com>," Sun, 23 Jun 2013 15:47:59 -0600","ct: [PATCH 08/11] MAINT: Refactor nanfunctions.nanmax, nanmin--------------Add out and keepdims keywords.nanargmin, nanargmax--------------------A NanWarning is raised if an all NaN slice detected. For all suchslices np.iingo(np.intp).min is returned as the index value.nansum------The keywords dtype, out, and keepdims are added.A FutureWarning is raised, as in the future the mean of an emptyslice after NaN replacement will be 0 instead of the current NaN.nanmean, nanvar, nanstd-----------------------For all, if the input array is of inexact type then the dtype and outparameters must be of inexact type if specified.  That insures that NaNscan be returned when appropriate.The nanmean function detects empty slices after NaN replacement andraises a NanWarning. NaN is returned as the value for all such slices.The nanmean and nanstd functions detect degrees of freedom <= 0 afterNaN replacement and raise a NanWarning. NaN is returned as the value forall such slices.",3,473,334,doc/source/reference/routines.statistics.rst,[u'5'],1,1," -23,11 +23,14 ;",Averages and variance;
3533,11,90ded18, Charles Harris <charlesr.harris@gmail.com>," Sun, 23 Jun 2013 15:47:59 -0600","ct: [PATCH 08/11] MAINT: Refactor nanfunctions.nanmax, nanmin--------------Add out and keepdims keywords.nanargmin, nanargmax--------------------A NanWarning is raised if an all NaN slice detected. For all suchslices np.iingo(np.intp).min is returned as the index value.nansum------The keywords dtype, out, and keepdims are added.A FutureWarning is raised, as in the future the mean of an emptyslice after NaN replacement will be 0 instead of the current NaN.nanmean, nanvar, nanstd-----------------------For all, if the input array is of inexact type then the dtype and outparameters must be of inexact type if specified.  That insures that NaNscan be returned when appropriate.The nanmean function detects empty slices after NaN replacement andraises a NanWarning. NaN is returned as the value for all such slices.The nanmean and nanstd functions detect degrees of freedom <= 0 afterNaN replacement and raise a NanWarning. NaN is returned as the value forall such slices.",3,473,334,numpy/lib/nanfunctions.py,[u'801'],16,11," -1,215 +1,147 ; -219,6 +151,19 ; -271,50 +216,10 ; -326,6 +231,19 ; -378,16 +296,61 ; -418,7 +381,116 ; -429,6 +501,10 ; -439,7 +515,7 ; -455,7 +531,8 ; -465,8 +542,8 ; -485,14 +562,161 ; -504,6 +728,10 ; -521,8 +749,8 ; -531,8 +759,10 ; -575,104 +805,9 ;",";def nanmin(a, axis=None);def nanmin(a, axis=None);def nanmax(a, axis=None);def nanmax(a, axis=None);def nanargmax(a, axis=None);def nanmean(a, axis=None, dtype=None, out=None, keepdims=False);def nanmean(a, axis=None, dtype=None, out=None, keepdims=False);def nanmean(a, axis=None, dtype=None, out=None, keepdims=False);def nanmean(a, axis=None, dtype=None, out=None, keepdims=False);def nanmean(a, axis=None, dtype=None, out=None, keepdims=False);def nanstd(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);def nanstd(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);def nanstd(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);def nanstd(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);"
3533,11,90ded18, Charles Harris <charlesr.harris@gmail.com>," Sun, 23 Jun 2013 15:47:59 -0600","ct: [PATCH 08/11] MAINT: Refactor nanfunctions.nanmax, nanmin--------------Add out and keepdims keywords.nanargmin, nanargmax--------------------A NanWarning is raised if an all NaN slice detected. For all suchslices np.iingo(np.intp).min is returned as the index value.nansum------The keywords dtype, out, and keepdims are added.A FutureWarning is raised, as in the future the mean of an emptyslice after NaN replacement will be 0 instead of the current NaN.nanmean, nanvar, nanstd-----------------------For all, if the input array is of inexact type then the dtype and outparameters must be of inexact type if specified.  That insures that NaNscan be returned when appropriate.The nanmean function detects empty slices after NaN replacement andraises a NanWarning. NaN is returned as the value for all such slices.The nanmean and nanstd functions detect degrees of freedom <= 0 afterNaN replacement and raise a NanWarning. NaN is returned as the value forall such slices.",3,473,334,numpy/testing/nosetester.py,[u'1'],1,0," -378,6 +378,7 ;","def test(self, label='fast', verbose=1, extra_argv=None;"
3533,11,381b74b, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Jul 2013 18:11:03 -0600","ct: [PATCH 09/11] TST: Add tests for the nansum, nanmean, nanvar, and nanstd.",1,367,190,numpy/lib/tests/test_nanfunctions.py,[u'557'],23,12," -4,236 +4,413 ;",;
3533,11,fc4e85f, Charles Harris <charlesr.harris@gmail.com>," Sun, 14 Jul 2013 10:42:37 -0600","ct: [PATCH 10/11] DOC: Document nanmean, nanvar, and nanstd in the 1.8.0 release notes.",1,8,0,doc/release/1.8.0-notes.rst,[u'9'],8,1," -136,11 +136,18 ;",arrays instead of only in simple indices. This means tha;
3533,11,dd91979, Charles Harris <charlesr.harris@gmail.com>," Wed, 17 Jul 2013 14:08:20 -0600",ct: [PATCH 11/11] BUG: Regression test needs to ignore ComplexWarning.This was raising a warning during tests.,1,11,8,numpy/core/tests/test_regression.py,[u'19'],11,8," -1449,14 +1449,17 ;",def test_ticket_1539(self);
3531,4,5b52514, Frank B <frank.breitling@gmx.de>," Tue, 5 Feb 2013 13:13:36 +0100",ct: [PATCH 1/4] Added example for 2D-histogram with variable bin size.,1,21,2,numpy/lib/twodim_base.py,[u'23'],21,2," -547,7 +547,7 ; -584,12 +584,14 ; -599,6 +601,23 ;","def histogram2d(x, y, bins=10, range=None, normed=False, weights=None);def histogram2d(x, y, bins=10, range=None, normed=False, weights=None);def histogram2d(x, y, bins=10, range=None, normed=False, weights=None);"
3531,4,b3f37ed, Frank B <frank.breitling@gmx.de>," Tue, 5 Feb 2013 13:21:32 +0100",ct: [PATCH 2/4] Fixed two typos.,1,2,2,numpy/lib/twodim_base.py,[u'4'],2,2," -584,7 +584,7 ; -602,7 +602,7 ;","def histogram2d(x, y, bins=10, range=None, normed=False, weights=None);def histogram2d(x, y, bins=10, range=None, normed=False, weights=None);"
3531,4,5b10b1b, Frank Breitling <frank.breitling@gmx.de>," Sat, 13 Jul 2013 15:44:49 +0200",ct: [PATCH 3/4] Update twodim_base.py,1,44,33,numpy/lib/twodim_base.py,[u'77'],27,21," -584,40 +584,51 ;","def histogram2d(x, y, bins=10, range=None, normed=False, weights=None);"
3531,4,fc95961, Frank Breitling <frank.breitling@gmx.de>," Wed, 17 Jul 2013 18:33:18 +0200",ct: [PATCH 4/4] Update twodim_base.py,1,0,0,numpy/lib/twodim_base.py,[u'2'],1,1," -547,7 +547,7 ;","def histogram2d(x, y, bins=10, range=None, normed=False, weights=None);"
3529,1,cbc75f4, =?UTF-8?q?Jes=C3=BAs=20G=C3=B3mez?= <jgomo3@gmail.com>," Wed, 17 Jul 2013 09:23:16 -0430",ct: [PATCH] genfromtxt usecols negative index explanation and minor redaction fixes,2,5,5,doc/source/user/basics.io.genfromtxt.rst,[u'4'],2,2," -150,7 +150,7 ; -301,7 +301,7 ;","In some cases, we are not interested in all the columns of the data but only a ;However, some additional control may sometimes be required;"
3529,1,cbc75f4, =?UTF-8?q?Jes=C3=BAs=20G=C3=B3mez?= <jgomo3@gmail.com>," Wed, 17 Jul 2013 09:23:16 -0430",ct: [PATCH] genfromtxt usecols negative index explanation and minor redaction fixes,2,5,5,numpy/doc/creation.py,[u'6'],3,3," -106,9 +106,9 ;",;
3526,3,1234688," ""Yury V. Zaytsev"" <yury@shurup.com>"," Tue, 16 Jul 2013 11:29:22 +0200",ct: [PATCH 1/3] BUG: Fix PyType_FastSubclass() check for numpy.int_Signed-off-by: Yury V. Zaytsev <yury@shurup.com>,1,24,9,numpy/core/src/multiarray/multiarraymodule.c,[u'33'],20,8," -3783,6 +3783,19 ; -3811,18 +3824,17 ; -3864,6 +3876,9 ;",setup_scalartypes(PyObject *NPY_UNUSED(dict);setup_scalartypes(PyObject *NPY_UNUSED(dict);setup_scalartypes(PyObject *NPY_UNUSED(dict);
3526,3,83a3daf," ""Yury V. Zaytsev"" <yury@shurup.com>"," Tue, 16 Jul 2013 17:12:55 +0200",ct: [PATCH 2/3] BUG: Document that numpy.int_ doesn't inherit from int on Py3kSigned-off-by: Yury V. Zaytsev <yury@shurup.com>,1,7,2,doc/source/reference/arrays.scalars.rst,[u'9'],7,2," -61,14 +61,14 ; -88,6 +88,11 ;",are also provided. The C-like names are associated with character codes;Python Boolean scalar;
3526,3,41e6f06," ""Yury V. Zaytsev"" <yury@shurup.com>"," Wed, 17 Jul 2013 16:48:57 +0200",ct: [PATCH 3/3] TST: Add regression test to check numpy.int_ inheritance on Py2/Py3Signed-off-by: Yury V. Zaytsev <yury@shurup.com>,2,45,0,numpy/core/src/multiarray/multiarray_tests.c.src,[u'29'],24,0," -557,6 +557,30 ; -573,6 +597,11 ;",fail;static PyMethodDef Multiarray_TestsMethods[] = ;
3526,3,41e6f06," ""Yury V. Zaytsev"" <yury@shurup.com>"," Wed, 17 Jul 2013 16:48:57 +0200",ct: [PATCH 3/3] TST: Add regression test to check numpy.int_ inheritance on Py2/Py3Signed-off-by: Yury V. Zaytsev <yury@shurup.com>,2,45,0,numpy/core/tests/test_multiarray.py,[u'16'],13,0," -95,6 +95,22 ;",def test_dtypeattr(self);
3524,7,6fe8eb6, Blake Griffith <blake.a.griffith@gmail.com>," Sun, 25 Aug 2013 09:35:06 -0500",ct: [PATCH 1/7] DOC: Add NEP and documentation for ufunc overrides.,2,276,0,doc/neps/ufunc-overrides.rst,[u'242'],32,0," -0,0 +1,242 ;",;
3524,7,6fe8eb6, Blake Griffith <blake.a.griffith@gmail.com>," Sun, 25 Aug 2013 09:35:06 -0500",ct: [PATCH 1/7] DOC: Add NEP and documentation for ufunc overrides.,2,276,0,doc/source/reference/arrays.classes.rst,[u'34'],5,0," -38,6 +38,40 ;",Special attributes and method;
3524,7,536cd36, Blake Griffith <blake.a.griffith@gmail.com>," Sun, 25 Aug 2013 11:44:14 -0500",ct: [PATCH 2/7] ENH: Add ufunc override API.,1,195,0,numpy/core/src/private/ufunc_override.h,[u'195'],32,0," -0,0 +1,195 ;",;
3524,7,21976ca, Blake Griffith <blake.a.griffith@gmail.com>," Sun, 25 Aug 2013 11:44:53 -0500",ct: [PATCH 3/7] ENH: Add ufunc override functionality to ufuncs and dots.,3,95,3,numpy/core/blasdot/_dotblas.c,[u'28'],14,2," -2,11 +2,14 ; -215,8 +218,12 ; -232,6 +239,23 ;",";_bad_strides(PyArrayObject *ap;dotblas_matrixproduct(PyObject *NPY_UNUSED(dummy), PyObject *args, PyObject* kw;"
3524,7,21976ca, Blake Griffith <blake.a.griffith@gmail.com>," Sun, 25 Aug 2013 11:44:53 -0500",ct: [PATCH 3/7] ENH: Add ufunc override functionality to ufuncs and dots.,3,95,3,numpy/core/src/multiarray/multiarraymodule.c,[u'22'],13,0," -53,6 +53,7 ; -2079,8 +2080,29 ;","NPY_NO_EXPORT int NPY_NUMUSERTYPES = 0;array_innerproduct(PyObject *NPY_UNUSED(dummy), PyObject *args;"
3524,7,21976ca, Blake Griffith <blake.a.griffith@gmail.com>," Sun, 25 Aug 2013 11:44:53 -0500",ct: [PATCH 3/7] ENH: Add ufunc override functionality to ufuncs and dots.,3,95,3,numpy/core/src/umath/ufunc_object.c,[u'48'],27,1," -44,6 +44,7 ; -707,7 +708,6 ; -4043,6 +4043,7 ; -4053,6 +4054,18 ; -4834,18 +4847,51 ;",";_parse_signature(PyUFuncObject *ufunc, const char *signature;ufunc_generic_call(PyUFuncObject *ufunc, PyObject *args, PyObject *kwds;ufunc_generic_call(PyUFuncObject *ufunc, PyObject *args, PyObject *kwds;ufunc_outer(PyUFuncObject *ufunc, PyObject *args, PyObject *kwds;"
3524,7,5c630f0, Blake Griffith <blake.a.griffith@gmail.com>," Mon, 22 Jul 2013 23:22:55 -0500",ct: [PATCH 4/7] TST: Add ufunc override tests.,3,217,0,numpy/core/tests/test_blasdot.py,[u'18'],4,0," -151,3 +151,21 ;",def test_dot_array_order();
3524,7,5c630f0, Blake Griffith <blake.a.griffith@gmail.com>," Mon, 22 Jul 2013 23:22:55 -0500",ct: [PATCH 4/7] TST: Add ufunc override tests.,3,217,0,numpy/core/tests/test_multiarray.py,[u'18'],4,0," -1324,6 +1324,24 ;",def test_dot(self);
3524,7,5c630f0, Blake Griffith <blake.a.griffith@gmail.com>," Mon, 22 Jul 2013 23:22:55 -0500",ct: [PATCH 4/7] TST: Add ufunc override tests.,3,217,0,numpy/core/tests/test_umath.py,[u'181'],36,0," -868,6 +868,187 ;",def __array__(self);
3524,7,022aea8, Blake Griffith <blake.a.griffith@gmail.com>," Thu, 18 Jul 2013 21:26:58 -0500",ct: [PATCH 5/7] BLD: Added ufunc_override.h to setup.py.,1,2,0,numpy/core/setup.py,[u'3'],2,1," -881,7 +881,8 ;","def generate_umath_c(ext, build_dir);"
3524,7,3320571, Blake Griffith <blake.a.griffith@gmail.com>," Thu, 15 Aug 2013 12:35:27 -0500",ct: [PATCH 6/7] BLD TRAVIS: Added libatlas to travis build so it can test BLAS stuff.sudo apt-get install -qq libatlas-dev libatlas-base-dev,1,2,0,.travis.yml,[u'2'],2,0," -26,7 +26,9 ;",before_install;
3524,7,711b997, Blake Griffith <blake.a.griffith@gmail.com>," Sat, 31 Aug 2013 16:02:05 -0500",ct: [PATCH 7/7] DOC: Update release notes.,1,8,0,doc/release/1.9.0-notes.rst,[u'8'],8,0," -23,6 +23,14 ;",Compatibility note;
3522,1,cb2c887, Charles Harris <charlesr.harris@gmail.com>," Wed, 10 Jul 2013 18:06:55 -0600",ct: [PATCH] MAINT: Fix Python version dependent test.The buffer test in numpy/core/tests/test_api.py was apparentlytesting for incorrect behavior that was corrected in Python 2.7.5.This PR changes the test to check for the correct results and makesrunning it depend on Python version.Closes #3512.,1,17,16,numpy/core/tests/test_api.py,[u'33'],17,16," -68,26 +68,27 ;",def test_array_array();
3521,1,5a5e86f, Arink Verma <arinkverma@gmail.com>," Fri, 12 Jul 2013 17:50:00 +0530","ct: [PATCH] ENH: For smaller array, added macro NPY_BEGIN_THREADS_THRESHOLDED in ndarraytypes.h Avoiding NPY_BEGIN_THREADS for small arrays, can speed-up trivial_three_operand_loop by 5%. As releases of GIL, then quickly restoring just after small operation doesn't benefit.",2,4,2,numpy/core/include/numpy/ndarraytypes.h,[u'2'],2,0," -921,6 +921,8 ;","typedef int (PyArray_FinalizeFunc)(PyArrayObject *, PyObject *);"
3521,1,5a5e86f, Arink Verma <arinkverma@gmail.com>," Fri, 12 Jul 2013 17:50:00 +0530","ct: [PATCH] ENH: For smaller array, added macro NPY_BEGIN_THREADS_THRESHOLDED in ndarraytypes.h Avoiding NPY_BEGIN_THREADS for small arrays, can speed-up trivial_three_operand_loop by 5%. As releases of GIL, then quickly restoring just after small operation doesn't benefit.",2,4,2,numpy/core/src/umath/ufunc_object.c,[u'4'],2,2," -1098,7 +1098,7 ; -1131,7 +1131,7 ;",trivial_two_operand_loop(PyArrayObject **op;trivial_three_operand_loop(PyArrayObject **op;
3520,1,05a15c8, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 20:29:08 -0600","ct: [PATCH] MAINT: Remove uses of the WarningManager class.WarningManager was a workaround for the lack of the with statementin Python versions < 2.6. As those versions are no longer supportedit can be removed.Deprecation notes are added to WarningManager and WarningMessage, butto avoid a cascade of messages in third party apps, no warnings areraised at this time, that can be done later.Closes #3519.",12,70,150,numpy/core/tests/test_api.py,[u'3'],1,2," -1,11 +1,10 ;",;
3520,1,05a15c8, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 20:29:08 -0600","ct: [PATCH] MAINT: Remove uses of the WarningManager class.WarningManager was a workaround for the lack of the with statementin Python versions < 2.6. As those versions are no longer supportedit can be removed.Deprecation notes are added to WarningManager and WarningMessage, butto avoid a cascade of messages in third party apps, no warnings areraised at this time, that can be done later.Closes #3519.",12,70,150,numpy/core/tests/test_einsum.py,[u'9'],2,6," -1,12 +1,11 ; -272,9 +271,7 ; -379,8 +376,6 ;",";def check_einsum_sums(self, dtype);def check_einsum_sums(self, dtype);"
3520,1,05a15c8, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 20:29:08 -0600","ct: [PATCH] MAINT: Remove uses of the WarningManager class.WarningManager was a workaround for the lack of the with statementin Python versions < 2.6. As those versions are no longer supportedit can be removed.Deprecation notes are added to WarningManager and WarningMessage, butto avoid a cascade of messages in third party apps, no warnings areraised at this time, that can be done later.Closes #3519.",12,70,150,numpy/core/tests/test_multiarray.py,[u'41'],15,22," -8,7 +8,6 ; -958,17 +957,13 ; -2028,17 +2023,13 ; -2500,36 +2491,38 ;",;def test_diagonal(self);def test_field_names(self);def test_simple_strict_within(self);
3520,1,05a15c8, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 20:29:08 -0600","ct: [PATCH] MAINT: Remove uses of the WarningManager class.WarningManager was a workaround for the lack of the with statementin Python versions < 2.6. As those versions are no longer supportedit can be removed.Deprecation notes are added to WarningManager and WarningMessage, butto avoid a cascade of messages in third party apps, no warnings areraised at this time, that can be done later.Closes #3519.",12,70,150,numpy/core/tests/test_regression.py,[u'8'],2,6," -16,7 +16,7 ; -1545,13 +1545,9 ;",;def test_complex_scalar_warning(self);
3520,1,05a15c8, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 20:29:08 -0600","ct: [PATCH] MAINT: Remove uses of the WarningManager class.WarningManager was a workaround for the lack of the with statementin Python versions < 2.6. As those versions are no longer supportedit can be removed.Deprecation notes are added to WarningManager and WarningMessage, butto avoid a cascade of messages in third party apps, no warnings areraised at this time, that can be done later.Closes #3519.",12,70,150,numpy/lib/tests/test_io.py,[u'36'],9,23," -10,7 +10,6 ; -571,14 +570,13 ; -587,8 +585,6 ; -704,16 +700,12 ; -841,11 +833,9 ; -862,9 +852,6 ; -1168,15 +1155,12 ;",;def test_3d_shaped_dtype(self);def test_empty_file(self);def test_ndmin_keyword(self);def test_skip_footer(self);def test_skip_footer_with_invalid(self);def test_usecols_with_named_columns(self);
3520,1,05a15c8, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 20:29:08 -0600","ct: [PATCH] MAINT: Remove uses of the WarningManager class.WarningManager was a workaround for the lack of the with statementin Python versions < 2.6. As those versions are no longer supportedit can be removed.Deprecation notes are added to WarningManager and WarningMessage, butto avoid a cascade of messages in third party apps, no warnings areraised at this time, that can be done later.Closes #3519.",12,70,150,numpy/lib/utils.py,[u'8'],2,6," -1107,18 +1107,14 ;",def safe_eval(source);
3520,1,05a15c8, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 20:29:08 -0600","ct: [PATCH] MAINT: Remove uses of the WarningManager class.WarningManager was a workaround for the lack of the with statementin Python versions < 2.6. As those versions are no longer supportedit can be removed.Deprecation notes are added to WarningManager and WarningMessage, butto avoid a cascade of messages in third party apps, no warnings areraised at this time, that can be done later.Closes #3519.",12,70,150,numpy/ma/tests/test_core.py,[u'19'],3,14," -20,7 +20,6 ; -422,13 +421,9 ; -2764,23 +2759,15 ;",;def test_topython(self);def test_varstd_specialcases(self);
3520,1,05a15c8, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 20:29:08 -0600","ct: [PATCH] MAINT: Remove uses of the WarningManager class.WarningManager was a workaround for the lack of the with statementin Python versions < 2.6. As those versions are no longer supportedit can be removed.Deprecation notes are added to WarningManager and WarningMessage, butto avoid a cascade of messages in third party apps, no warnings areraised at this time, that can be done later.Closes #3519.",12,70,150,numpy/ma/tests/test_mrecords.py,[u'7'],1,6," -21,7 +21,6 ; -142,15 +141,11 ;",;def test_set_fields(self);
3520,1,05a15c8, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 20:29:08 -0600","ct: [PATCH] MAINT: Remove uses of the WarningManager class.WarningManager was a workaround for the lack of the with statementin Python versions < 2.6. As those versions are no longer supportedit can be removed.Deprecation notes are added to WarningManager and WarningMessage, butto avoid a cascade of messages in third party apps, no warnings areraised at this time, that can be done later.Closes #3519.",12,70,150,numpy/random/__init__.py,[u'10'],3,6," -88,19 +88,15 ;",;
3520,1,05a15c8, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 20:29:08 -0600","ct: [PATCH] MAINT: Remove uses of the WarningManager class.WarningManager was a workaround for the lack of the with statementin Python versions < 2.6. As those versions are no longer supportedit can be removed.Deprecation notes are added to WarningManager and WarningMessage, butto avoid a cascade of messages in third party apps, no warnings areraised at this time, that can be done later.Closes #3519.",12,70,150,numpy/testing/decorators.py,[u'13'],3,9," -15,11 +15,8 ; -253,10 +250,8 ; -264,8 +259,6 ;",";def deprecate_decorator(f);def _deprecated_imp(*args, **kwargs);"
3520,1,05a15c8, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 20:29:08 -0600","ct: [PATCH] MAINT: Remove uses of the WarningManager class.WarningManager was a workaround for the lack of the with statementin Python versions < 2.6. As those versions are no longer supportedit can be removed.Deprecation notes are added to WarningManager and WarningMessage, butto avoid a cascade of messages in third party apps, no warnings areraised at this time, that can be done later.Closes #3519.",12,70,150,numpy/testing/nosetester.py,[u'41'],16,21," -363,32 +363,27 ;","def test(self, label='fast', verbose=1, extra_argv=None;"
3520,1,05a15c8, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 20:29:08 -0600","ct: [PATCH] MAINT: Remove uses of the WarningManager class.WarningManager was a workaround for the lack of the with statementin Python versions < 2.6. As those versions are no longer supportedit can be removed.Deprecation notes are added to WarningManager and WarningMessage, butto avoid a cascade of messages in third party apps, no warnings areraised at this time, that can be done later.Closes #3519.",12,70,150,numpy/testing/utils.py,[u'25'],8,14," -1365,6 +1365,8 ; -1405,6 +1407,8 ; -1467,13 +1471,8 ; -1481,8 +1480,6 ; -1503,18 +1500,12 ;","class WarningMessage(object);class WarningManager(object);def assert_warns(warning_class, func, *args, **kw);def assert_warns(warning_class, func, *args, **kw);def assert_no_warnings(func, *args, **kw);"
3518,1,2f1174d, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 16:49:04 -0600",ct: [PATCH] MAINT: Use np.errstate context manager.Now that Python < 2.6 is no longer supported we can use the errstatecontext manager in places where constructs like```    old = seterr(invalid='ignore')    try:        blah    finally:       seterr(**old)```were used.,20,194,409,numpy/core/arrayprint.py,[u'12'],1,2," -546,8 +546,8 ; -562,8 +562,6 ; -599,8 +597,8 ; -614,8 +612,6 ;","def __init__(self, data, precision, suppress_small, sign=False);def fillFormat(self, data);def fillFormat(self, data);def __call__(self, x, strip_zeros=True);"
3518,1,2f1174d, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 16:49:04 -0600",ct: [PATCH] MAINT: Use np.errstate context manager.Now that Python < 2.6 is no longer supported we can use the errstatecontext manager in places where constructs like```    old = seterr(invalid='ignore')    try:        blah    finally:       seterr(**old)```were used.,20,194,409,numpy/core/machar.py,[u'7'],1,1," -10,7 +10,7 ; -107,11 +107,8 ;",";def __init__(self, float_conv=float,int_conv=int;"
3518,1,2f1174d, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 16:49:04 -0600",ct: [PATCH] MAINT: Use np.errstate context manager.Now that Python < 2.6 is no longer supported we can use the errstatecontext manager in places where constructs like```    old = seterr(invalid='ignore')    try:        blah    finally:       seterr(**old)```were used.,20,194,409,numpy/core/numeric.py,[u'11'],1,1," -2125,8 +2125,7 ; -2191,11 +2190,8 ; -2705,15 +2701,18 ;","def allclose(a, b, rtol=1.e-5, atol=1.e-8);def isclose(a, b, rtol=1.e-5, atol=1.e-8, equal_nan=False);class errstate(object);"
3518,1,2f1174d, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 16:49:04 -0600",ct: [PATCH] MAINT: Use np.errstate context manager.Now that Python < 2.6 is no longer supported we can use the errstatecontext manager in places where constructs like```    old = seterr(invalid='ignore')    try:        blah    finally:       seterr(**old)```were used.,20,194,409,numpy/core/tests/test_half.py,[u'11'],1,1," -71,8 +71,7 ; -100,9 +99,6 ; -363,8 +359,7 ; -426,8 +421,6 ;",def test_half_conversions(self);def test_nans_infs(self);def test_half_coercion(self);def test_half_fpe(self);
3518,1,2f1174d, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 16:49:04 -0600",ct: [PATCH] MAINT: Use np.errstate context manager.Now that Python < 2.6 is no longer supported we can use the errstatecontext manager in places where constructs like```    old = seterr(invalid='ignore')    try:        blah    finally:       seterr(**old)```were used.,20,194,409,numpy/core/tests/test_machar.py,[u'7'],1,1," -4,7 +4,7 ; -19,14 +19,11 ;",;def _run_machar_highprec(self);
3518,1,2f1174d, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 16:49:04 -0600",ct: [PATCH] MAINT: Use np.errstate context manager.Now that Python < 2.6 is no longer supported we can use the errstatecontext manager in places where constructs like```    old = seterr(invalid='ignore')    try:        blah    finally:       seterr(**old)```were used.,20,194,409,numpy/core/tests/test_numeric.py,[u'16'],1,2," -351,8 +351,8 ; -362,13 +362,10 ; -377,8 +374,6 ; -407,8 +402,7 ; -459,8 +453,6 ;","def test_default(self);def test_set(self);def test_divide_err(self);def assert_op_raises_fpe(self, fpeerr, flop, sc1, sc2);def test_floating_exceptions(self);"
3518,1,2f1174d, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 16:49:04 -0600",ct: [PATCH] MAINT: Use np.errstate context manager.Now that Python < 2.6 is no longer supported we can use the errstatecontext manager in places where constructs like```    old = seterr(invalid='ignore')    try:        blah    finally:       seterr(**old)```were used.,20,194,409,numpy/core/tests/test_regression.py,[u'20'],1,3," -655,11 +655,8 ; -1120,14 +1117,11 ; -1169,8 +1163,7 ; -1180,8 +1173,6 ; -1415,12 +1406,9 ;","def test_take_object_fail(self);def test_unaligned_unicode_access(self, level=rlevel) ;def test_array_ndmin_overflow(self);def test_errobj_reference_leak(self, level=rlevel);def test_type(t);"
3518,1,2f1174d, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 16:49:04 -0600",ct: [PATCH] MAINT: Use np.errstate context manager.Now that Python < 2.6 is no longer supported we can use the errstatecontext manager in places where constructs like```    old = seterr(invalid='ignore')    try:        blah    finally:       seterr(**old)```were used.,20,194,409,numpy/core/tests/test_scalarmath.py,[u'5'],1,1," -110,8 +110,7 ; -126,8 +125,6 ;",def test_mixed_types(self);def test_zero_division(self);
3518,1,2f1174d, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 16:49:04 -0600",ct: [PATCH] MAINT: Use np.errstate context manager.Now that Python < 2.6 is no longer supported we can use the errstatecontext manager in places where constructs like```    old = seterr(invalid='ignore')    try:        blah    finally:       seterr(**old)```were used.,20,194,409,numpy/core/tests/test_umath.py,[u'83'],5,10," -60,8 +60,7 ; -73,8 +72,6 ; -140,14 +137,11 ; -221,19 +215,16 ; -287,19 +278,16 ; -328,19 +316,15 ; -465,14 +449,11 ; -676,15 +657,12 ; -719,19 +697,17 ; -1164,12 +1140,9 ; -1196,19 +1169,16 ; -1299,8 +1269,7 ; -1314,8 +1283,6 ;","def test_division_complex(self);def test_zero_division_complex(self);def assert_complex_equal(x, y);def test_logaddexp2_range(self) ;def test_logaddexp_range(self) ;def test_simple(self);def test_ldexp(self);def test_sign(self);def test_abs_blocked(self);def _check_branch_cut(f, x0, dx, re_sign=1, im_sign=-1, sig_zero_ok=False;def test_nextafterl();def test_complex_nan_comparisons();def test_complex_nan_comparisons();"
3518,1,2f1174d, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 16:49:04 -0600",ct: [PATCH] MAINT: Use np.errstate context manager.Now that Python < 2.6 is no longer supported we can use the errstatecontext manager in places where constructs like```    old = seterr(invalid='ignore')    try:        blah    finally:       seterr(**old)```were used.,20,194,409,numpy/core/tests/test_umath_complex.py,[u'68'],3,9," -14,12 +14,9 ; -78,52 +75,40 ; -164,30 +149,24 ; -206,27 +185,21 ; -296,12 +269,9 ; -362,12 +332,9 ; -558,16 +525,13 ;",";def test_special_values(self);def test_special_values(self);def test_special_values(self);def test_special_values(self);def _check_ninf_nan(dummy);def check_real_value(f, x1, y1, x, exact=True);"
3518,1,2f1174d, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 16:49:04 -0600",ct: [PATCH] MAINT: Use np.errstate context manager.Now that Python < 2.6 is no longer supported we can use the errstatecontext manager in places where constructs like```    old = seterr(invalid='ignore')    try:        blah    finally:       seterr(**old)```were used.,20,194,409,numpy/lib/financial.py,[u'5'],1,1," -266,14 +266,11 ;","def nper(rate, pmt, pv, fv=0, when='end');"
3518,1,2f1174d, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 16:49:04 -0600",ct: [PATCH] MAINT: Use np.errstate context manager.Now that Python < 2.6 is no longer supported we can use the errstatecontext manager in places where constructs like```    old = seterr(invalid='ignore')    try:        blah    finally:       seterr(**old)```were used.,20,194,409,numpy/lib/tests/test_function_base.py,[u'5'],1,1," -1062,8 +1062,7 ; -1072,8 +1071,6 ;",def test_bins_errors(self);def test_inf_edges(self);
3518,1,2f1174d, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 16:49:04 -0600",ct: [PATCH] MAINT: Use np.errstate context manager.Now that Python < 2.6 is no longer supported we can use the errstatecontext manager in places where constructs like```    old = seterr(invalid='ignore')    try:        blah    finally:       seterr(**old)```were used.,20,194,409,numpy/lib/tests/test_type_check.py,[u'99'],5,13," -1,9 +1,11 ; -163,25 +165,16 ; -193,11 +186,8 ; -208,25 +198,16 ; -238,11 +219,8 ; -253,39 +231,24 ; -295,23 +258,18 ; -320,11 +278,8 ; -338,23 +293,17 ;",;def test_goodvalues(self);def test_complex(self);def test_goodvalues(self);def test_complex(self);def test_goodvalues(self);def test_ind(self);def test_generic(self);def test_complex_good(self);
3518,1,2f1174d, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 16:49:04 -0600",ct: [PATCH] MAINT: Use np.errstate context manager.Now that Python < 2.6 is no longer supported we can use the errstatecontext manager in places where constructs like```    old = seterr(invalid='ignore')    try:        blah    finally:       seterr(**old)```were used.,20,194,409,numpy/linalg/linalg.py,[u'11'],1,1," -18,11 +18,12 ;",;
3518,1,2f1174d, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 16:49:04 -0600",ct: [PATCH] MAINT: Use np.errstate context manager.Now that Python < 2.6 is no longer supported we can use the errstatecontext manager in places where constructs like```    old = seterr(invalid='ignore')    try:        blah    finally:       seterr(**old)```were used.,20,194,409,numpy/ma/core.py,[u'26'],1,4," -838,13 +838,9 ; -931,12 +927,9 ; -1069,12 +1062,9 ; -3815,12 +3805,9 ; -6083,12 +6070,9 ;","def __call__ (self, a, *args, **kwargs);def __call__ (self, a, b, *args, **kwargs);def __call__(self, a, b, *args, **kwargs);def __ipow__(self, other);def power(a, b, third=None);"
3518,1,2f1174d, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 16:49:04 -0600",ct: [PATCH] MAINT: Use np.errstate context manager.Now that Python < 2.6 is no longer supported we can use the errstatecontext manager in places where constructs like```    old = seterr(invalid='ignore')    try:        blah    finally:       seterr(**old)```were used.,20,194,409,numpy/ma/tests/test_core.py,[u'5'],1,1," -196,15 +196,12 ;",def test_asarray(self);
3518,1,2f1174d, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 16:49:04 -0600",ct: [PATCH] MAINT: Use np.errstate context manager.Now that Python < 2.6 is no longer supported we can use the errstatecontext manager in places where constructs like```    old = seterr(invalid='ignore')    try:        blah    finally:       seterr(**old)```were used.,20,194,409,numpy/ma/tests/test_old_ma.py,[u'186'],15,18," -3,14 +3,14 ; -22,16 +22,16 ; -89,19 +89,13 ; -109,18 +103,15 ; -128,51 +119,48 ; -182,7 +170,7 ; -194,34 +182,34 ; -248,13 +236,13 ; -271,7 +259,7 ; -324,7 +312,7 ; -439,15 +427,15 ; -557,8 +545,8 ; -617,12 +605,9 ; -656,7 +641,7 ; -699,18 +684,15 ; -740,7 +722,7 ; -749,7 +731,7 ; -759,7 +741,7 ; -789,8 +771,8 ; -830,7 +812,7 ; -856,7 +838,7 ;",";def eq(v, w, msg='');def test_testArithmetic (self);def test_testArithmetic (self);def test_testMixedArithmetic(self);def test_xtestCount (self);def test_testMinMax (self);def test_testCI(self);def test_testCopySize(self);def test_testPut(self);def test_testMinMax2(self);def test_testAverage2(self);def test_testToPython(self);def test_testArrayAttributes(self);def test_testUfuncRegression(self);def test_nonzero(self);def setUp(self);def setUp(self);def test_ptp(self);def test_varstd(self);def eqmask(m1, m2);"
3518,1,2f1174d, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 16:49:04 -0600",ct: [PATCH] MAINT: Use np.errstate context manager.Now that Python < 2.6 is no longer supported we can use the errstatecontext manager in places where constructs like```    old = seterr(invalid='ignore')    try:        blah    finally:       seterr(**old)```were used.,20,194,409,numpy/ma/tests/test_subclassing.py,[u'5'],1,1," -96,12 +96,9 ;",def test_maskedarray_subclassing(self);
3518,1,2f1174d, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 16:49:04 -0600",ct: [PATCH] MAINT: Use np.errstate context manager.Now that Python < 2.6 is no longer supported we can use the errstatecontext manager in places where constructs like```    old = seterr(invalid='ignore')    try:        blah    finally:       seterr(**old)```were used.,20,194,409,numpy/ma/timer_comparison.py,[u'1'],1,0," -9,6 +9,7 ;",;
3518,1,2f1174d, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 16:49:04 -0600",ct: [PATCH] MAINT: Use np.errstate context manager.Now that Python < 2.6 is no longer supported we can use the errstatecontext manager in places where constructs like```    old = seterr(invalid='ignore')    try:        blah    finally:       seterr(**old)```were used.,20,194,409,numpy/testing/utils.py,[u'20'],1,3," -71,14 +71,11 ; -92,14 +89,11 ; -539,13 +533,9 ;","def gisfinite(x);def gisinf(x);def assert_approx_equal(actual,desired,significant=7,err_msg='',verbose=True);"
3517,1,7819817, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 11 Jul 2013 20:23:36 +0200","ct: [PATCH] ENH: improve numpy.all()/any()Unroll the loop once and use pminub/pmaxub to save a slow pmovmskbinstruction. Improves performance by 50% on some AMD chips.Also add a pure libc path using memcmp and memchr for non amd64 systems.The libc path can be faster with a very modern cpu and libc version,e.g. an i7 with glibc 2.17 is about 20% faster than our code but manyother tested platforms are much slower (2.12 xeon, core2duo) or samespeed (2.17 phenom).The numpy code can be removed in future when faster libc versions andcpus are more commonly available.",3,57,3,numpy/core/src/umath/loops.c.src,[u'34'],34,0," -20,6 +20,8 ; -555,15 +557,47 ;",";BOOL_@kind@(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY_UNUSE;"
3517,1,7819817, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 11 Jul 2013 20:23:36 +0200","ct: [PATCH] ENH: improve numpy.all()/any()Unroll the loop once and use pminub/pmaxub to save a slow pmovmskbinstruction. Improves performance by 50% on some AMD chips.Also add a pure libc path using memcmp and memchr for non amd64 systems.The libc path can be faster with a very modern cpu and libc version,e.g. an i7 with glibc 2.17 is about 20% faster than our code but manyother tested platforms are much slower (2.12 xeon, core2duo) or samespeed (2.17 phenom).The numpy code can be removed in future when faster libc versions andcpus are more commonly available.",3,57,3,numpy/core/src/umath/simd.inc.src,[u'9'],6,3," -779,14 +779,17 ;","sse2_reduce_@kind@_BOOL(npy_bool * op, npy_bool * ip, const npy_intp n;"
3517,1,7819817, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 11 Jul 2013 20:23:36 +0200","ct: [PATCH] ENH: improve numpy.all()/any()Unroll the loop once and use pminub/pmaxub to save a slow pmovmskbinstruction. Improves performance by 50% on some AMD chips.Also add a pure libc path using memcmp and memchr for non amd64 systems.The libc path can be faster with a very modern cpu and libc version,e.g. an i7 with glibc 2.17 is about 20% faster than our code but manyother tested platforms are much slower (2.12 xeon, core2duo) or samespeed (2.17 phenom).The numpy code can be removed in future when faster libc versions andcpus are more commonly available.",3,57,3,numpy/core/tests/test_numeric.py,[u'17'],17,0," -245,6 +245,23 ;",def test_all_any(self);
3516,1,28eadc0, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 12:08:49 -0600","ct: [PATCH] MAINT: Remove outdated version checks.Because Numpy 1.8.0 will no longer supports Python versions < 2.6 weno longer need to check for that and can also remove the code that isspecific to those earlier versions.To make this a bit safer, the toplevel setup.py file now contains acheck of the Python version number and raises an error when run by anunsupported version.",31,21,320,doc/sphinxext/setup.py,[u'5'],1,1," -1,11 +1,10 ;",;
3516,1,28eadc0, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 12:08:49 -0600","ct: [PATCH] MAINT: Remove outdated version checks.Because Numpy 1.8.0 will no longer supports Python versions < 2.6 weno longer need to check for that and can also remove the code that isspecific to those earlier versions.To make this a bit safer, the toplevel setup.py file now contains acheck of the Python version number and raises an error when run by anunsupported version.",31,21,320,numpy/core/blasdot/_dotblas.c,[u'6'],0,3," -14,12 +14,6 ;",;
3516,1,28eadc0, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 12:08:49 -0600","ct: [PATCH] MAINT: Remove outdated version checks.Because Numpy 1.8.0 will no longer supports Python versions < 2.6 weno longer need to check for that and can also remove the code that isspecific to those earlier versions.To make this a bit safer, the toplevel setup.py file now contains acheck of the Python version number and raises an error when run by anunsupported version.",31,21,320,numpy/core/include/numpy/ndarrayobject.h,[u'7'],0,3," -225,15 +225,8 ;",PyArray_XDECREF_ERR(PyArrayObject *arr;
3516,1,28eadc0, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 12:08:49 -0600","ct: [PATCH] MAINT: Remove outdated version checks.Because Numpy 1.8.0 will no longer supports Python versions < 2.6 weno longer need to check for that and can also remove the code that isspecific to those earlier versions.To make this a bit safer, the toplevel setup.py file now contains acheck of the Python version number and raises an error when run by anunsupported version.",31,21,320,numpy/core/include/numpy/npy_common.h,[u'10'],0,4," -71,18 +71,8 ;",typedef Py_uintptr_t npy_uintp;
3516,1,28eadc0, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 12:08:49 -0600","ct: [PATCH] MAINT: Remove outdated version checks.Because Numpy 1.8.0 will no longer supports Python versions < 2.6 weno longer need to check for that and can also remove the code that isspecific to those earlier versions.To make this a bit safer, the toplevel setup.py file now contains acheck of the Python version number and raises an error when run by anunsupported version.",31,21,320,numpy/core/src/multiarray/arrayobject.c,[u'4'],0,2," -1694,8 +1694,6 ; -1726,7 +1724,5 ;",NPY_NO_EXPORT PyTypeObject PyArray_Type = ;NPY_NO_EXPORT PyTypeObject PyArray_Type = ;
3516,1,28eadc0, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 12:08:49 -0600","ct: [PATCH] MAINT: Remove outdated version checks.Because Numpy 1.8.0 will no longer supports Python versions < 2.6 weno longer need to check for that and can also remove the code that isspecific to those earlier versions.To make this a bit safer, the toplevel setup.py file now contains acheck of the Python version number and raises an error when run by anunsupported version.",31,21,320,numpy/core/src/multiarray/buffer.c,[u'38'],2,11," -93,8 +93,6 ; -333,8 +331,10 ; -722,42 +722,24 ; -817,15 +799,3 ;","array_getcharbuf(PyArrayObject *self, Py_ssize_t segment, constchar **ptrptr;_buffer_format_string(PyArray_Descr *descr, _tmp_string_t *str;_array_dealloc_buffer_info(PyArrayObject *self;_descriptor_from_pep3118_format(char *s;"
3516,1,28eadc0, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 12:08:49 -0600","ct: [PATCH] MAINT: Remove outdated version checks.Because Numpy 1.8.0 will no longer supports Python versions < 2.6 weno longer need to check for that and can also remove the code that isspecific to those earlier versions.To make this a bit safer, the toplevel setup.py file now contains acheck of the Python version number and raises an error when run by anunsupported version.",31,21,320,numpy/core/src/multiarray/convert_datatype.c,[u'13'],2,3," -97,15 +97,9 ; -115,7 +109,8 ;","PyArray_GetCastFunc(PyArray_Descr *descr, int type_num;PyArray_GetCastFunc(PyArray_Descr *descr, int type_num;"
3516,1,28eadc0, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 12:08:49 -0600","ct: [PATCH] MAINT: Remove outdated version checks.Because Numpy 1.8.0 will no longer supports Python versions < 2.6 weno longer need to check for that and can also remove the code that isspecific to those earlier versions.To make this a bit safer, the toplevel setup.py file now contains acheck of the Python version number and raises an error when run by anunsupported version.",31,21,320,numpy/core/src/multiarray/ctors.c,[u'12'],0,5," -590,9 +590,7 ; -655,7 +653,6 ; -681,7 +678,6 ; -721,11 +717,7 ; -1197,7 +1189,6 ; -1286,9 +1277,6 ;","discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;PyArray_New(PyTypeObject *subtype, int nd, npy_intp *dims, int type_num;_array_from_buffer_3118(PyObject *obj, PyObject **out;"
3516,1,28eadc0, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 12:08:49 -0600","ct: [PATCH] MAINT: Remove outdated version checks.Because Numpy 1.8.0 will no longer supports Python versions < 2.6 weno longer need to check for that and can also remove the code that isspecific to those earlier versions.To make this a bit safer, the toplevel setup.py file now contains acheck of the Python version number and raises an error when run by anunsupported version.",31,21,320,numpy/core/src/multiarray/datetime_busdaycal.c,[u'2'],0,1," -547,7 +547,5 ;",NPY_NO_EXPORT PyTypeObject NpyBusDayCalendar_Type = ;
3516,1,28eadc0, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 12:08:49 -0600","ct: [PATCH] MAINT: Remove outdated version checks.Because Numpy 1.8.0 will no longer supports Python versions < 2.6 weno longer need to check for that and can also remove the code that isspecific to those earlier versions.To make this a bit safer, the toplevel setup.py file now contains acheck of the Python version number and raises an error when run by anunsupported version.",31,21,320,numpy/core/src/multiarray/descriptor.c,[u'2'],0,1," -3497,7 +3497,5 ;",NPY_NO_EXPORT PyTypeObject PyArrayDescr_Type = ;
3516,1,28eadc0, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 12:08:49 -0600","ct: [PATCH] MAINT: Remove outdated version checks.Because Numpy 1.8.0 will no longer supports Python versions < 2.6 weno longer need to check for that and can also remove the code that isspecific to those earlier versions.To make this a bit safer, the toplevel setup.py file now contains acheck of the Python version number and raises an error when run by anunsupported version.",31,21,320,numpy/core/src/multiarray/dtype_transfer.c,[u'10'],1,3," -669,15 +669,9 ;",get_nbo_cast_numeric_transfer_function(int aligned;
3516,1,28eadc0, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 12:08:49 -0600","ct: [PATCH] MAINT: Remove outdated version checks.Because Numpy 1.8.0 will no longer supports Python versions < 2.6 weno longer need to check for that and can also remove the code that isspecific to those earlier versions.To make this a bit safer, the toplevel setup.py file now contains acheck of the Python version number and raises an error when run by anunsupported version.",31,21,320,numpy/core/src/multiarray/flagsobject.c,[u'6'],0,3," -643,11 +643,7 ; -725,7 +721,5 ;","arrayflags_richcompare(PyObject *self, PyObject *other, int cmp_op;NPY_NO_EXPORT PyTypeObject PyArrayFlags_Type = ;"
3516,1,28eadc0, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 12:08:49 -0600","ct: [PATCH] MAINT: Remove outdated version checks.Because Numpy 1.8.0 will no longer supports Python versions < 2.6 weno longer need to check for that and can also remove the code that isspecific to those earlier versions.To make this a bit safer, the toplevel setup.py file now contains acheck of the Python version number and raises an error when run by anunsupported version.",31,21,320,numpy/core/src/multiarray/iterators.c,[u'10'],0,4," -1136,11 +1136,7 ; -1349,9 +1345,7 ; -1826,9 +1820,7 ; -2158,7 +2150,5 ;","iter_ass_subscript(PyArrayIterObject *self, PyObject *ind, PyObject *val;NPY_NO_EXPORT PyTypeObject PyArrayIter_Type = ;NPY_NO_EXPORT PyTypeObject PyArrayMultiIter_Type = ;NPY_NO_EXPORT PyTypeObject PyArrayNeighborhoodIter_Type = ;"
3516,1,28eadc0, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 12:08:49 -0600","ct: [PATCH] MAINT: Remove outdated version checks.Because Numpy 1.8.0 will no longer supports Python versions < 2.6 weno longer need to check for that and can also remove the code that isspecific to those earlier versions.To make this a bit safer, the toplevel setup.py file now contains acheck of the Python version number and raises an error when run by anunsupported version.",31,21,320,numpy/core/src/multiarray/mapping.c,[u'6'],0,3," -1502,11 +1502,7 ; -2235,9 +2231,7 ;","array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;NPY_NO_EXPORT PyTypeObject PyArrayMapIter_Type = ;"
3516,1,28eadc0, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 12:08:49 -0600","ct: [PATCH] MAINT: Remove outdated version checks.Because Numpy 1.8.0 will no longer supports Python versions < 2.6 weno longer need to check for that and can also remove the code that isspecific to those earlier versions.To make this a bit safer, the toplevel setup.py file now contains acheck of the Python version number and raises an error when run by anunsupported version.",31,21,320,numpy/core/src/multiarray/mapping.h,[u'13'],2,3," -28,17 +28,10 ;","array_subscript(PyArrayObject *self, PyObject *op);"
3516,1,28eadc0, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 12:08:49 -0600","ct: [PATCH] MAINT: Remove outdated version checks.Because Numpy 1.8.0 will no longer supports Python versions < 2.6 weno longer need to check for that and can also remove the code that isspecific to those earlier versions.To make this a bit safer, the toplevel setup.py file now contains acheck of the Python version number and raises an error when run by anunsupported version.",31,21,320,numpy/core/src/multiarray/multiarraymodule.c,[u'9'],1,3," -1933,15 +1933,8 ;","array_count_nonzero(PyObject *NPY_UNUSED(self), PyObject *args, PyObject *kwds;"
3516,1,28eadc0, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 12:08:49 -0600","ct: [PATCH] MAINT: Remove outdated version checks.Because Numpy 1.8.0 will no longer supports Python versions < 2.6 weno longer need to check for that and can also remove the code that isspecific to those earlier versions.To make this a bit safer, the toplevel setup.py file now contains acheck of the Python version number and raises an error when run by anunsupported version.",31,21,320,numpy/core/src/multiarray/nditer_pywrap.c,[u'27'],0,10," -1747,11 +1747,7 ; -1764,11 +1760,7 ; -2405,7 +2397,6 ; -2416,26 +2407,10 ; -2497,7 +2472,5 ;","static PyObject *npyiter_iterrange_get(NewNpyArrayIterObject *self;static int npyiter_iterrange_set(NewNpyArrayIterObject *self, PyObject *value;static PyGetSetDef npyiter_getsets[] = ;NPY_NO_EXPORT PySequenceMethods npyiter_as_sequence = ;NPY_NO_EXPORT PyTypeObject NpyIter_Type = ;"
3516,1,28eadc0, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 12:08:49 -0600","ct: [PATCH] MAINT: Remove outdated version checks.Because Numpy 1.8.0 will no longer supports Python versions < 2.6 weno longer need to check for that and can also remove the code that isspecific to those earlier versions.To make this a bit safer, the toplevel setup.py file now contains acheck of the Python version number and raises an error when run by anunsupported version.",31,21,320,numpy/core/src/multiarray/number.c,[u'8'],0,3," -340,7 +340,6 ; -358,7 +357,6 ; -851,7 +849,6 ; -868,7 +865,6 ; -928,9 +924,5 ;","is_scalar_with_conversion(PyObject *o2, double* out_exponent;is_scalar_with_conversion(PyObject *o2, double* out_exponent;_array_copy_nice(PyArrayObject *self;array_index(PyArrayObject *v;NPY_NO_EXPORT PyNumberMethods array_as_number = ;"
3516,1,28eadc0, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 12:08:49 -0600","ct: [PATCH] MAINT: Remove outdated version checks.Because Numpy 1.8.0 will no longer supports Python versions < 2.6 weno longer need to check for that and can also remove the code that isspecific to those earlier versions.To make this a bit safer, the toplevel setup.py file now contains acheck of the Python version number and raises an error when run by anunsupported version.",31,21,320,numpy/core/src/multiarray/numpymemoryview.c,[u'4'],1,1," -21,7 +21,7 ; -241,9 +241,7 ;",;NPY_NO_EXPORT PyTypeObject PyMemorySimpleView_Type = ;
3516,1,28eadc0, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 12:08:49 -0600","ct: [PATCH] MAINT: Remove outdated version checks.Because Numpy 1.8.0 will no longer supports Python versions < 2.6 weno longer need to check for that and can also remove the code that isspecific to those earlier versions.To make this a bit safer, the toplevel setup.py file now contains acheck of the Python version number and raises an error when run by anunsupported version.",31,21,320,numpy/core/src/multiarray/numpymemoryview.h,[u'2'],1,1," -5,7 +5,7 ;",;
3516,1,28eadc0, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 12:08:49 -0600","ct: [PATCH] MAINT: Remove outdated version checks.Because Numpy 1.8.0 will no longer supports Python versions < 2.6 weno longer need to check for that and can also remove the code that isspecific to those earlier versions.To make this a bit safer, the toplevel setup.py file now contains acheck of the Python version number and raises an error when run by anunsupported version.",31,21,320,numpy/core/src/multiarray/numpyos.c,[u'5'],0,2," -19,12 +19,7 ;",;
3516,1,28eadc0, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 12:08:49 -0600","ct: [PATCH] MAINT: Remove outdated version checks.Because Numpy 1.8.0 will no longer supports Python versions < 2.6 weno longer need to check for that and can also remove the code that isspecific to those earlier versions.To make this a bit safer, the toplevel setup.py file now contains acheck of the Python version number and raises an error when run by anunsupported version.",31,21,320,numpy/core/src/multiarray/scalartypes.c.src,[u'75'],0,26," -101,9 +101,7 ; -364,7 +362,6 ; -435,7 +432,6 ; -517,11 +513,9 ; -570,11 +564,9 ; -1059,9 +1051,7 ; -2014,13 +2004,11 ; -2232,32 +2220,19 ; -2325,7 +2300,6 ; -2341,7 +2315,6 ; -2350,10 +2323,8 ; -2422,9 +2393,7 ; -2741,7 +2710,6 ; -2763,7 +2731,6 ; -2825,9 +2792,7 ; -3182,7 +3147,6 ; -3193,30 +3157,12 ; -3285,7 +3231,6 ; -3311,26 +3256,16 ; -3395,9 +3330,7 ; -3513,9 +3446,7 ; -3604,9 +3535,7 ; -3706,9 +3635,7 ; -4066,7 +3993,6 ; -4083,7 +4009,6 ;","NPY_NO_EXPORT PyTypeObject Py@NAME@ArrType_Type = ;gentype_repr(PyObject *self;gentype_format(PyObject *self, PyObject *args;format_@name@(char *buf, size_t buflen, @type@ val, unsigned int prec;format_@name@(char *buf, size_t buflen, @type@ val, unsigned int prec;static PyNumberMethods gentype_as_number = ;static PyMethodDef gentype_methods[] = ;fail;gentype_getcharbuf(PyObject *self, Py_ssize_t segment, constchar **ptrptr;gentype_getbuffer(PyObject *self, Py_buffer *view, int flags;static PyBufferProcs gentype_as_buffer = ;NPY_NO_EXPORT PyTypeObject PyGenericArrType_Type = ;bool_arrtype_nonzero(PyObject *a;bool_index(PyObject *a;NPY_NO_EXPORT PyNumberMethods bool_arrtype_as_number = ;object_arrtype_inplace_repeat(PyObjectScalarObject *self, Py_ssize_t count;static PySequenceMethods object_arrtype_as_sequence = ;object_arrtype_getcharbuf(PyObjectScalarObject *self, Py_ssize_t segment;object_arrtype_releasebuffer(PyObjectScalarObject *self, Py_buffer *view;NPY_NO_EXPORT PyTypeObject PyObjectArrType_Type = ;NPY_NO_EXPORT PyTypeObject Py@NAME@ArrType_Type = ;NPY_NO_EXPORT PyTypeObject Py@NAME@ArrType_Type = ;NPY_NO_EXPORT PyTypeObject Py@NAME@ArrType_Type = ;initialize_numeric_types(void;initialize_numeric_types(void;"
3516,1,28eadc0, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 12:08:49 -0600","ct: [PATCH] MAINT: Remove outdated version checks.Because Numpy 1.8.0 will no longer supports Python versions < 2.6 weno longer need to check for that and can also remove the code that isspecific to those earlier versions.To make this a bit safer, the toplevel setup.py file now contains acheck of the Python version number and raises an error when run by anunsupported version.",31,21,320,numpy/core/src/multiarray/sequence.c,[u'13'],0,5," -130,7 +130,6 ; -141,18 +140,6 ;","array_contains(PyArrayObject *self, PyObject *el;NPY_NO_EXPORT PySequenceMethods array_as_sequence = ;"
3516,1,28eadc0, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 12:08:49 -0600","ct: [PATCH] MAINT: Remove outdated version checks.Because Numpy 1.8.0 will no longer supports Python versions < 2.6 weno longer need to check for that and can also remove the code that isspecific to those earlier versions.To make this a bit safer, the toplevel setup.py file now contains acheck of the Python version number and raises an error when run by anunsupported version.",31,21,320,numpy/core/src/private/npy_pycompat.h,[u'10'],0,4," -3,14 +3,4 ;",;
3516,1,28eadc0, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 12:08:49 -0600","ct: [PATCH] MAINT: Remove outdated version checks.Because Numpy 1.8.0 will no longer supports Python versions < 2.6 weno longer need to check for that and can also remove the code that isspecific to those earlier versions.To make this a bit safer, the toplevel setup.py file now contains acheck of the Python version number and raises an error when run by anunsupported version.",31,21,320,numpy/core/src/scalarmathmodule.c.src,[u'9'],0,4," -1392,13 +1392,8 ; -1658,9 +1653,7 ; -1679,9 +1672,7 ;",emit_complexwarning(void;static PyNumberMethods @name@_as_number = ;add_scalarmath(void;
3516,1,28eadc0, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 12:08:49 -0600","ct: [PATCH] MAINT: Remove outdated version checks.Because Numpy 1.8.0 will no longer supports Python versions < 2.6 weno longer need to check for that and can also remove the code that isspecific to those earlier versions.To make this a bit safer, the toplevel setup.py file now contains acheck of the Python version number and raises an error when run by anunsupported version.",31,21,320,numpy/core/src/umath/test_rational.c.src,[u'2'],0,1," -716,9 +716,7 ;",static PyTypeObject PyRational_Type = ;
3516,1,28eadc0, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 12:08:49 -0600","ct: [PATCH] MAINT: Remove outdated version checks.Because Numpy 1.8.0 will no longer supports Python versions < 2.6 weno longer need to check for that and can also remove the code that isspecific to those earlier versions.To make this a bit safer, the toplevel setup.py file now contains acheck of the Python version number and raises an error when run by anunsupported version.",31,21,320,numpy/core/src/umath/ufunc_object.c,[u'2'],0,1," -5101,9 +5101,7 ;",NPY_NO_EXPORT PyTypeObject PyUFunc_Type = ;
3516,1,28eadc0, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 12:08:49 -0600","ct: [PATCH] MAINT: Remove outdated version checks.Because Numpy 1.8.0 will no longer supports Python versions < 2.6 weno longer need to check for that and can also remove the code that isspecific to those earlier versions.To make this a bit safer, the toplevel setup.py file now contains acheck of the Python version number and raises an error when run by anunsupported version.",31,21,320,numpy/f2py/src/fortranobject.h,[u'21'],0,8," -31,27 +31,6 ;","extern ""C"" ;"
3516,1,28eadc0, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 12:08:49 -0600","ct: [PATCH] MAINT: Remove outdated version checks.Because Numpy 1.8.0 will no longer supports Python versions < 2.6 weno longer need to check for that and can also remove the code that isspecific to those earlier versions.To make this a bit safer, the toplevel setup.py file now contains acheck of the Python version number and raises an error when run by anunsupported version.",31,21,320,numpy/lib/src/_compiled_base.c,[u'3'],0,2," -7,9 +7,6 ;",;
3516,1,28eadc0, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 12:08:49 -0600","ct: [PATCH] MAINT: Remove outdated version checks.Because Numpy 1.8.0 will no longer supports Python versions < 2.6 weno longer need to check for that and can also remove the code that isspecific to those earlier versions.To make this a bit safer, the toplevel setup.py file now contains acheck of the Python version number and raises an error when run by anunsupported version.",31,21,320,numpy/numarray/_capi.c,[u'4'],0,2," -996,9 +996,7 ; -2250,11 +2248,9 ;","static PyTypeObject CfuncType = ;_NA_maxType(PyObject *seq, int limit;"
3516,1,28eadc0, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Jul 2013 12:08:49 -0600","ct: [PATCH] MAINT: Remove outdated version checks.Because Numpy 1.8.0 will no longer supports Python versions < 2.6 weno longer need to check for that and can also remove the code that isspecific to those earlier versions.To make this a bit safer, the toplevel setup.py file now contains acheck of the Python version number and raises an error when run by anunsupported version.",31,21,320,setup.py,[u'3'],2,0," -23,6 +23,9 ;",;
3514,5,84831ca, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 10 Jul 2013 16:49:59 +0200","ct: [PATCH 1/5] FIX: Make object comparison ufuncs not include identity checkThe issue here is that PyObject_RichCompareBool does an identitycheck before doing any other checks. This is good, and is theway for example list comparisons are handled. However in numpycomparisons are elementwise, so that the identitycheck shouldnot be expected. The example for this is as follows:obj_array = np.arange(3)a = np.array([obj_array, 0], dtype=object)np.equal(a, a)If an identity check is done, this returns [True, True]. Butobj_array == obj_array itself cannot be cast to a bool.While this is slightly slower, not doing the identity check seemsmore logical in the light of elementwise operations.Closes gh-2117.",2,21,0,numpy/core/src/umath/loops.c.src,[u'11'],10,1," -2568,9 +2568,18 ;","OBJECT_@kind@(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY_UNU;"
3514,5,84831ca, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 10 Jul 2013 16:49:59 +0200","ct: [PATCH 1/5] FIX: Make object comparison ufuncs not include identity checkThe issue here is that PyObject_RichCompareBool does an identitycheck before doing any other checks. This is good, and is theway for example list comparisons are handled. However in numpycomparisons are elementwise, so that the identitycheck shouldnot be expected. The example for this is as follows:obj_array = np.arange(3)a = np.array([obj_array, 0], dtype=object)np.equal(a, a)If an identity check is done, this returns [True, True]. Butobj_array == obj_array itself cannot be cast to a bool.While this is slightly slower, not doing the identity check seemsmore logical in the light of elementwise operations.Closes gh-2117.",2,21,0,numpy/core/tests/test_umath.py,[u'11'],11,0," -1534,5 +1534,16 ;",def test_complex_nan_comparisons();
3514,5,9b8f6c7, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 25 Jul 2013 16:10:54 +0200","ct: [PATCH 2/5] DEP: Deprecate that comparisons ignore errors.This means that for example broadcasting errors get raised.The array_equiv function is changed to explicitely testif broadcasting is possible. It may be nice to do thistest differently, but I am not sure if that is possible.Create a FutureWarning for comparisons to None, whichshould result in areal elementwise (object) comparisons.Slightly adepted a wrong test.Poly changes: Some changes in the polycode was necessary,the one is probably a bug fix, the other needs to bethought over, since len check is not perfect maybe, sinceit is more liekly to raise raise an error.Closes gh-3759 and gh-1608",6,105,10,numpy/core/numeric.py,[u'6'],2,2," -2388,10 +2388,12 ;","def array_equiv(a1, a2);"
3514,5,9b8f6c7, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 25 Jul 2013 16:10:54 +0200","ct: [PATCH 2/5] DEP: Deprecate that comparisons ignore errors.This means that for example broadcasting errors get raised.The array_equiv function is changed to explicitely testif broadcasting is possible. It may be nice to do thistest differently, but I am not sure if that is possible.Create a FutureWarning for comparisons to None, whichshould result in areal elementwise (object) comparisons.Slightly adepted a wrong test.Poly changes: Some changes in the polycode was necessary,the one is probably a bug fix, the other needs to bethought over, since len check is not perfect maybe, sinceit is more liekly to raise raise an error.Closes gh-3759 and gh-1608",6,105,10,numpy/core/src/multiarray/arrayobject.c,[u'26'],16,0," -1292,6 +1292,10 ; -1347,13 +1351,26 ; -1404,7 +1421,16 ;","array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;"
3514,5,9b8f6c7, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 25 Jul 2013 16:10:54 +0200","ct: [PATCH 2/5] DEP: Deprecate that comparisons ignore errors.This means that for example broadcasting errors get raised.The array_equiv function is changed to explicitely testif broadcasting is possible. It may be nice to do thistest differently, but I am not sure if that is possible.Create a FutureWarning for comparisons to None, whichshould result in areal elementwise (object) comparisons.Slightly adepted a wrong test.Poly changes: Some changes in the polycode was necessary,the one is probably a bug fix, the other needs to bethought over, since len check is not perfect maybe, sinceit is more liekly to raise raise an error.Closes gh-3759 and gh-1608",6,105,10,numpy/core/tests/test_deprecations.py,[u'54'],32,1," -86,7 +86,7 ; -375,5 +375,57 ;","def assert_deprecated(self, function, num=1, ignore_others=False;def test(self);"
3514,5,9b8f6c7, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 25 Jul 2013 16:10:54 +0200","ct: [PATCH 2/5] DEP: Deprecate that comparisons ignore errors.This means that for example broadcasting errors get raised.The array_equiv function is changed to explicitely testif broadcasting is possible. It may be nice to do thistest differently, but I am not sure if that is possible.Create a FutureWarning for comparisons to None, whichshould result in areal elementwise (object) comparisons.Slightly adepted a wrong test.Poly changes: Some changes in the polycode was necessary,the one is probably a bug fix, the other needs to bethought over, since len check is not perfect maybe, sinceit is more liekly to raise raise an error.Closes gh-3759 and gh-1608",6,105,10,numpy/core/tests/test_multiarray.py,[u'5'],1,2," -561,8 +561,9 ;",def test_subarray_field_access(self);
3514,5,9b8f6c7, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 25 Jul 2013 16:10:54 +0200","ct: [PATCH 2/5] DEP: Deprecate that comparisons ignore errors.This means that for example broadcasting errors get raised.The array_equiv function is changed to explicitely testif broadcasting is possible. It may be nice to do thistest differently, but I am not sure if that is possible.Create a FutureWarning for comparisons to None, whichshould result in areal elementwise (object) comparisons.Slightly adepted a wrong test.Poly changes: Some changes in the polycode was necessary,the one is probably a bug fix, the other needs to bethought over, since len check is not perfect maybe, sinceit is more liekly to raise raise an error.Closes gh-3759 and gh-1608",6,105,10,numpy/lib/polynomial.py,[u'18'],9,2," -1193,10 +1193,24 ;","def __rdiv__(self, other);"
3514,5,9b8f6c7, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 25 Jul 2013 16:10:54 +0200","ct: [PATCH 2/5] DEP: Deprecate that comparisons ignore errors.This means that for example broadcasting errors get raised.The array_equiv function is changed to explicitely testif broadcasting is possible. It may be nice to do thistest differently, but I am not sure if that is possible.Create a FutureWarning for comparisons to None, whichshould result in areal elementwise (object) comparisons.Slightly adepted a wrong test.Poly changes: Some changes in the polycode was necessary,the one is probably a bug fix, the other needs to bethought over, since len check is not perfect maybe, sinceit is more liekly to raise raise an error.Closes gh-3759 and gh-1608",6,105,10,numpy/polynomial/polytemplate.py,[u'6'],2,2," -737,7 +737,7 ; -780,10 +780,10 ;","def fit(x, y, deg, domain=None, rcond=None, full=False, w=None;def fit(x, y, deg, domain=None, rcond=None, full=False, w=None;"
3514,5,ad0b975, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 5 Dec 2013 15:01:42 +0100",ct: [PATCH 3/5] DOC: Add (object) equality changes and error raising to release notes,1,20,0,doc/release/1.9.0-notes.rst,[u'20'],20,0," -352,6 +352,26 ;",considered an input error instead of returning the default;
3514,5,17e9ff8, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 26 Jan 2014 01:55:06 +0100","ct: [PATCH 4/5] DEP: Deprecate identity check in comparisons (not just removing)Instead of just removing it, raise Deprecation/Future warningswhen the comparison object ufunc and the identity check do notcoincide.",1,36,3,numpy/core/src/umath/loops.c.src,[u'39'],36,3," -2562,27 +2562,60 ;",NPY_NO_EXPORT voi;
3514,5,f40831a, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 26 Jan 2014 17:16:10 +0100","ct: [PATCH 5/5] MAINT: Comparison deprecation followup fixesMakes the identity check `a = np.array([np.nan], dtype=object)``a == a`, etc. a deprecation/futurewarning instead of justchanging it.Also fixes some smaller things.",6,80,39,numpy/core/src/umath/loops.c.src,[u'25'],11,5," -2562,22 +2562,28 ; -2588,10 +2594,12 ; -2603,19 +2611,22 ;","NPY_NO_EXPORT voi;OBJECT_@kind@(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY_UNU;OBJECT_@kind@(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY_UNU;"
3514,5,f40831a, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 26 Jan 2014 17:16:10 +0100","ct: [PATCH 5/5] MAINT: Comparison deprecation followup fixesMakes the identity check `a = np.array([np.nan], dtype=object)``a == a`, etc. a deprecation/futurewarning instead of justchanging it.Also fixes some smaller things.",6,80,39,numpy/core/tests/test_deprecations.py,[u'56'],33,2," -397,7 +397,8 ; -417,7 +418,6 ; -427,5 +427,57 ;",def test_normal_types(self);def test_none_comparison(self);def test_none_comparison(self);
3514,5,f40831a, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 26 Jan 2014 17:16:10 +0100","ct: [PATCH 5/5] MAINT: Comparison deprecation followup fixesMakes the identity check `a = np.array([np.nan], dtype=object)``a == a`, etc. a deprecation/futurewarning instead of justchanging it.Also fixes some smaller things.",6,80,39,numpy/core/tests/test_umath.py,[u'11'],0,7," -1534,16 +1534,5 ;",def test_complex_nan_comparisons();
3514,5,f40831a, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 26 Jan 2014 17:16:10 +0100","ct: [PATCH 5/5] MAINT: Comparison deprecation followup fixesMakes the identity check `a = np.array([np.nan], dtype=object)``a == a`, etc. a deprecation/futurewarning instead of justchanging it.Also fixes some smaller things.",6,80,39,numpy/lib/polynomial.py,[u'18'],2,9," -1193,24 +1193,12 ;","def __rdiv__(self, other);"
3514,5,f40831a, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 26 Jan 2014 17:16:10 +0100","ct: [PATCH 5/5] MAINT: Comparison deprecation followup fixesMakes the identity check `a = np.array([np.nan], dtype=object)``a == a`, etc. a deprecation/futurewarning instead of justchanging it.Also fixes some smaller things.",6,80,39,numpy/polynomial/_polybase.py,[u'5'],2,2," -438,6 +438,7 ; -792,7 +793,7 ; -836,7 +837,7 ;","def __eq__(self, other);class domain in NumPy 1.4 and ``None`` in later versions;def fromroots(cls, roots, domain=[], window=None);"
3514,5,f40831a, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 26 Jan 2014 17:16:10 +0100","ct: [PATCH 5/5] MAINT: Comparison deprecation followup fixesMakes the identity check `a = np.array([np.nan], dtype=object)``a == a`, etc. a deprecation/futurewarning instead of justchanging it.Also fixes some smaller things.",6,80,39,numpy/polynomial/polytemplate.py,[u'4'],1,2," -780,10 +780,10 ;","def fit(x, y, deg, domain=None, rcond=None, full=False, w=None;"
3513,1,fa55f4c, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 10 Jul 2013 14:19:42 +0200","ct: [PATCH] ENH: inv/solve work with empty inner and others empty outer arrayThis makes the inverse of a 0x0 array simply be 0x0 again. Italso modifies the no-empty array check in favor of a no-empty*inner* array, since the gufuncs seem to handle the other casefine.",2,82,16,numpy/linalg/linalg.py,[u'50'],26,13," -19,10 +19,11 ; -215,9 +216,9 ; -350,15 +351,28 ; -492,10 +506,14 ; -718,7 +736,7 ; -863,7 +881,7 ; -940,7 +958,7 ; -1279,7 +1297,7 ; -1556,7 +1574,7 ; -1643,7 +1661,7 ; -1697,7 +1715,7 ;",";def _assertFinite(*arrays);def solve(a, b);def inv(a);def qr(a, mode='reduced');def eigvals(a);def eigvalsh(a, UPLO='L');def svd(a, full_matrices=1, compute_uv=1);def pinv(a, rcond=1e-15 );def slogdet(a);def det(a);"
3513,1,fa55f4c, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 10 Jul 2013 14:19:42 +0200","ct: [PATCH] ENH: inv/solve work with empty inner and others empty outer arrayThis makes the inverse of a 0x0 array simply be 0x0 again. Italso modifies the no-empty array check in favor of a no-empty*inner* array, since the gufuncs seem to handle the other casefine.",2,82,16,numpy/linalg/tests/test_linalg.py,[u'48'],37,0," -204,6 +204,39 ; -219,6 +252,21 ;",def check(dtype);def check(dtype);
3510,1,64d5832, mwtoews <mwtoews@gmail.com>," Tue, 9 Jul 2013 22:45:46 +1200",ct: [PATCH] Add regression tests for pickleable record arrays,1,12,0,numpy/core/tests/test_records.py,[u'12'],12,0," -7,6 +7,7 ; -146,6 +147,17 ;",;def test_out_of_order_fields(self);
3509,6,7c46223, Arink Verma <arinkverma@gmail.com>," Sat, 6 Jul 2013 18:40:38 +0530","ct: [PATCH 1/6] ENH: added check for scalar array in get_ufunc_arguments from ufunc_object.c Check if object is of array dimension zero, then avoid heavy calls like PyArray_FromAny. Hence passing obj to out_op PyArrayObject unchanged. Also PyArray_FromAny(obj,NULL,0,0,0,NULL) calls PyArray_FromArray(obj,NULL,0) which return original obj",1,25,14,numpy/core/src/umath/ufunc_object.c,[u'39'],24,13," -753,22 +753,33 ;",static int get_ufunc_arguments(PyUFuncObject *ufunc;
3509,6,55bc296, Arink Verma <arinkverma@gmail.com>," Mon, 8 Jul 2013 15:00:00 +0530",ct: [PATCH 2/6] ENH: added check for scalar array in PyArray_FromArray from ctors.c Check if object is of array dimension zero with newtype is NULL. If so return it directly instead of checking for casting.,3,15,9,numpy/core/src/multiarray/ctors.c,[u'8'],8,0," -1798,6 +1798,14 ;","PyArray_FromArray(PyArrayObject *arr, PyArray_Descr *newtype, int flags;"
3509,6,55bc296, Arink Verma <arinkverma@gmail.com>," Mon, 8 Jul 2013 15:00:00 +0530",ct: [PATCH 2/6] ENH: added check for scalar array in PyArray_FromArray from ctors.c Check if object is of array dimension zero with newtype is NULL. If so return it directly instead of checking for casting.,3,15,9,numpy/core/src/umath/ufunc_object.c,[u'14'],5,9," -754,15 +754,11 ;",static int get_ufunc_arguments(PyUFuncObject *ufunc;
3509,6,55bc296, Arink Verma <arinkverma@gmail.com>," Mon, 8 Jul 2013 15:00:00 +0530",ct: [PATCH 2/6] ENH: added check for scalar array in PyArray_FromArray from ctors.c Check if object is of array dimension zero with newtype is NULL. If so return it directly instead of checking for casting.,3,15,9,numpy/core/src/umath/ufunc_type_resolution.c,[u'2'],2,0," -422,6 +422,7 ; -431,6 +432,7 ;",PyUFunc_SimpleBinaryOperationTypeResolver(PyUFuncObject *ufunc;PyUFunc_SimpleBinaryOperationTypeResolver(PyUFuncObject *ufunc;
3509,6,9b3e719, Arink Verma <arinkverma@gmail.com>," Mon, 8 Jul 2013 15:13:01 +0530",ct: [PATCH 3/6] ENH: added check for scalar array in PyArray_FromArray from ctors.c Check if object is of array dimension zero with newtype is NULL. If so return it directly instead of checking for casting.,1,0,2,numpy/core/src/umath/ufunc_type_resolution.c,[u'2'],0,2," -422,7 +422,6 ; -432,7 +431,6 ;",PyUFunc_SimpleBinaryOperationTypeResolver(PyUFuncObject *ufunc;PyUFunc_SimpleBinaryOperationTypeResolver(PyUFuncObject *ufunc;
3509,6,021d52a, Arink Verma <arinkverma@gmail.com>," Mon, 8 Jul 2013 23:06:03 +0530",ct: [PATCH 4/6] ENH: added check for scalar array in PyArray_FromArray from ctors.c Check if object is of array with newtype is NULL. If so return it directly instead of checking for casting.,1,3,4,numpy/core/src/multiarray/ctors.c,[u'7'],3,4," -1798,11 +1798,10 ;","PyArray_FromArray(PyArrayObject *arr, PyArray_Descr *newtype, int flags;"
3509,6,4c3ad43, Arink Verma <arinkverma@gmail.com>," Wed, 10 Jul 2013 19:52:31 +0530",ct: [PATCH 5/6] ENH: added check for scalar array in PyArray_FromArray from ctors.c Check if object is of array with newtype is NULL. If so return it directly instead of checking for casting.,1,2,0,numpy/core/src/multiarray/ctors.c,[u'3'],2,1," -1798,7 +1798,8 ;","PyArray_FromArray(PyArrayObject *arr, PyArray_Descr *newtype, int flags;"
3509,6,6815f86, Arink Verma <arinkverma@gmail.com>," Wed, 10 Jul 2013 20:53:47 +0530","ct: [PATCH 6/6] ENH: check for the same object in can_cast_scalar_to from convert_datatype.c Check if two dtypes references to the same object in can_cast_scalar_to from convert_datatype.c, then the result is always OK",1,5,0,numpy/core/src/multiarray/convert_datatype.c,[u'6'],5,1," -719,7 +719,11 ;","can_cast_scalar_to(PyArray_Descr *scal_type, char *scal_data;"
3507,1,01a9081, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 29 Jun 2013 17:02:53 +0200","ct: [PATCH] ENH: vectorize boolean comparisons of floatsthe new code will more often propagate the invalid floating pointexception if comparing against nan, so allclose now ignores it (butstill returns False)",4,238,2,numpy/core/numeric.py,[u'7'],1,1," -2124,7 +2124,12 ;","def allclose(a, b, rtol=1.e-5, atol=1.e-8);"
3507,1,01a9081, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 29 Jun 2013 17:02:53 +0200","ct: [PATCH] ENH: vectorize boolean comparisons of floatsthe new code will more often propagate the invalid floating pointexception if comparing against nan, so allclose now ignores it (butstill returns False)",4,238,2,numpy/core/src/umath/loops.c.src,[u'3'],1,0," -1351,6 +1351,9 ;",NPY_NO_EXPORT voi;
3507,1,01a9081, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 29 Jun 2013 17:02:53 +0200","ct: [PATCH] ENH: vectorize boolean comparisons of floatsthe new code will more often propagate the invalid floating pointexception if comparing against nan, so allclose now ignores it (butstill returns False)",4,238,2,numpy/core/src/umath/simd.inc.src,[u'183'],37,1," -24,6 +24,7 ; -59,6 +60,19 ; -72,6 +86,35 ; -122,7 +165,6 ; -168,6 +210,55 ; -281,7 +372,10 ; -407,6 +501,93 ;",";void PyUFunc_clearfperr(void);void PyUFunc_clearfperr(void);run_@name@_simd_@func@_@TYPE@(char **args, npy_intp *dimensions, npy_intp *step;run_binary_simd_@kind@_@TYPE@(char **args, npy_intp *dimensions, npy_intp *step;static NPY_INLINE npy_double sse2_horizontal_@VOP@___m128d(__m128d v;sse2_binary_scalar2_@kind@_@TYPE@(@type@ * op, @type@ * ip1, @type@ * ip2, npy_;"
3507,1,01a9081, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 29 Jun 2013 17:02:53 +0200","ct: [PATCH] ENH: vectorize boolean comparisons of floatsthe new code will more often propagate the invalid floating pointexception if comparing against nan, so allclose now ignores it (butstill returns False)",4,238,2,numpy/core/tests/test_numeric.py,[u'47'],10,0," -293,6 +293,53 ;",def test_logical_and_or_xor(self);
3506,2,c6ce294, =?UTF-8?q?Jostein=20B=C3=B8=20Fl=C3=B8ystad?=,tein.floystad@gmail.com>," Fri, 5 Jul 2013 17:35:45 +0200Subject: [PATCH 1/2] BUG: Allow to pad arrays by zero entries.np.pad will now accept a pad_width containing zeros. The functionalitywas already implemented, but validation of input was too strict.",1,0,0,numpy/lib/arraypad.py,[u'2'],1,1," -1079,7 +1079,7 ;","def _validate_lengths(narray, number_elements);"
3506,2,ea45134, =?UTF-8?q?Jostein=20B=C3=B8=20Fl=C3=B8ystad?=,tein.floystad@gmail.com>," Fri, 5 Jul 2013 18:17:26 +0200Subject: [PATCH 2/2] TST: New test to ensure np.pad allows pad_width of zero.",1,8,0,numpy/lib/tests/test_arraypad.py,[u'8'],8,0," -486,6 +486,14 ;",def test_check_simple(self);
3505,4,ea317e1, Arink Verma <arinkverma@gmail.com>," Fri, 5 Jul 2013 20:40:12 +0530","ct: [PATCH 1/4] ENH: added check for scalar array in get_ufunc_arguments from umath/ufunc_object.c Check if object is of zero dimension and scalar, then avoid heavy calls like PyArray_FromAny. Hence passing obj to out_op PyArrayObject unchanged",2,22,14,gmon.out,"[u'0', u'349']",0,1,,
3505,4,ea317e1, Arink Verma <arinkverma@gmail.com>," Fri, 5 Jul 2013 20:40:12 +0530","ct: [PATCH 1/4] ENH: added check for scalar array in get_ufunc_arguments from umath/ufunc_object.c Check if object is of zero dimension and scalar, then avoid heavy calls like PyArray_FromAny. Hence passing obj to out_op PyArrayObject unchanged",2,22,14,numpy/core/src/umath/ufunc_object.c,[u'36'],22,14," -753,22 +753,30 ;",static int get_ufunc_arguments(PyUFuncObject *ufunc;
3505,4,7045015, Arink Verma <arinkverma@gmail.com>," Fri, 5 Jul 2013 21:19:11 +0530","ct: [PATCH 2/4] ENH: added check for scalar array in get_ufunc_arguments from ufunc_object.c Check if object is of zero dimension and scalar, then avoid heavy calls like PyArray_FromAny. Hence passing obj to out_op PyArrayObject unchanged",1,0,0,gmon.out,"[u'349', u'0']",0,1,,
3505,4,98a4906, Arink Verma <arinkverma@gmail.com>," Sat, 6 Jul 2013 18:05:30 +0530","ct: [PATCH 3/4] ENH: added check for scalar array in get_ufunc_arguments from ufunc_object.c Check if object is of zero dimension and scalar, then avoid heavy calls like PyArray_FromAny. Hence passing obj to out_op PyArrayObject unchanged",2,2,2,numpy/core/src/umath/ufunc_object.c,[u'4'],2,2," -754,8 +754,8 ;",static int get_ufunc_arguments(PyUFuncObject *ufunc;
3505,4,98a4906, Arink Verma <arinkverma@gmail.com>," Sat, 6 Jul 2013 18:05:30 +0530","ct: [PATCH 3/4] ENH: added check for scalar array in get_ufunc_arguments from ufunc_object.c Check if object is of zero dimension and scalar, then avoid heavy calls like PyArray_FromAny. Hence passing obj to out_op PyArrayObject unchanged",2,2,2,numsub.py.prof,"[u'0', u'3867']",0,1,,
3505,4,ec97fc1, Arink Verma <arinkverma@gmail.com>," Sat, 6 Jul 2013 18:12:29 +0530","ct: [PATCH 4/4] ENH: added check for scalar array in get_ufunc_arguments from ufunc_object.c Check if object is of zero dimension and array, then avoid heavy calls like PyArray_FromAny. Hence passing obj to out_op PyArrayObject unchanged",1,0,0,numpy/core/src/umath/ufunc_object.c,[u'2'],1,1," -755,7 +755,7 ;",static int get_ufunc_arguments(PyUFuncObject *ufunc;
3501,1,4441bdd, Andreas Kloeckner <inform@tiker.net>," Mon, 8 Jul 2013 23:11:03 -0400","ct: [PATCH] BUG: Check earlier for higher priority in binary operators, add testFixes #3375",3,63,0,doc/release/1.8.0-notes.rst,[u'13'],13,0," -85,6 +85,19 ;",IO compatibility with large file;
3501,1,4441bdd, Andreas Kloeckner <inform@tiker.net>," Mon, 8 Jul 2013 23:11:03 -0400","ct: [PATCH] BUG: Check earlier for higher priority in binary operators, add testFixes #3375",3,63,0,numpy/core/src/multiarray/number.c,[u'20'],20,0," -209,6 +209,26 ;","PyArray_GenericBinaryFunction(PyArrayObject *m1, PyObject *m2, PyObject *op;"
3501,1,4441bdd, Andreas Kloeckner <inform@tiker.net>," Mon, 8 Jul 2013 23:11:03 -0400","ct: [PATCH] BUG: Check earlier for higher priority in binary operators, add testFixes #3375",3,63,0,numpy/core/tests/test_ufunc.py,[u'30'],30,0," -834,5 +834,35 ;",def test_custom_ufunc(self);
3500,4,0c1f94d, Fernando Perez <Fernando.Perez@berkeley.edu>," Tue, 25 Jun 2013 11:16:43 -0500",ct: [PATCH 1/4] BUG: Fix exceptions being swallowed by fromiter.All exceptions from underlying iterator were being collapsed into ageneric one. This allows the original exception to propagate.Closes gh-2592.,1,17,10,numpy/core/src/multiarray/ctors.c,[u'27'],17,10," -3466,9 +3466,9 ; -3477,8 +3477,8 ; -3505,7 +3505,7 ; -3513,16 +3513,21 ; -3531,11 +3536,13 ;","PyArray_FromIter(PyObject *obj, PyArray_Descr *dtype, npy_intp count;PyArray_FromIter(PyObject *obj, PyArray_Descr *dtype, npy_intp count;PyArray_FromIter(PyObject *obj, PyArray_Descr *dtype, npy_intp count;PyArray_FromIter(PyObject *obj, PyArray_Descr *dtype, npy_intp count;PyArray_FromIter(PyObject *obj, PyArray_Descr *dtype, npy_intp count;"
3500,4,fa9d813, Fernando Perez <Fernando.Perez@berkeley.edu>," Tue, 25 Jun 2013 11:42:42 -0500",ct: [PATCH 2/4] TST: Add tests for exceptions raised by fromiter.This improves the testing of the edge cases.Work done with @certik.,1,30,6,numpy/core/tests/test_numeric.py,[u'36'],30,6," -588,6 +588,11 ; -607,12 +612,8 ; -621,6 +622,29 ;",def test_can_cast(self);def test_lengths(self);def test_values(self);
3500,4,f2bec65, Charles Harris <charlesr.harris@gmail.com>," Wed, 3 Jul 2013 12:10:48 -0600",ct: [PATCH 3/4] BUG: Remove xrange that slipped into test_numeric.py.,1,0,0,numpy/core/tests/test_numeric.py,[u'2'],1,1," -626,7 +626,7 ;","def load_data(self, n, eindex);"
3500,4,b0f4e77, Charles Harris <charlesr.harris@gmail.com>," Wed, 3 Jul 2013 12:12:17 -0600",ct: [PATCH 4/4] STY: Fix trailing whitespace and replace test doctrings by comments.,1,13,13,numpy/core/tests/test_numeric.py,[u'26'],13,13," -346,13 +346,12 ; -360,7 +359,7 ; -476,9 +475,11 ; -612,7 +613,7 ; -623,22 +624,21 ;","def assert_raises_fpe(self, fpeerr, flop, x, y);def assert_op_raises_fpe(self, fpeerr, flop, sc1, sc2);def check_promotion_cases(self, promote_func);def test_lengths(self);def test_values(self);"
3497,3,1a4eabd, =?UTF-8?q?F=C3=A9lix=20Hartmann?= <felix.hartmann@crans.org>," Wed, 3 Jul 2013 00:16:58 +0200",ct: [PATCH 1/3] fixed bug in np.insert when axis=-1,1,0,0,numpy/lib/function_base.py,[u'2'],1,1," -3742,7 +3742,7 ;","def insert(arr, obj, values, axis=None);"
3497,3,c3be3a9, =?UTF-8?q?F=C3=A9lix=20Hartmann?= <felix.hartmann@crans.org>," Wed, 3 Jul 2013 15:15:55 +0200",ct: [PATCH 2/3] add test to the insert tests in the function_base test file,1,7,0,numpy/lib/tests/test_function_base.py,[u'7'],7,0," -211,6 +211,13 ;",def test_multidim(self);
3497,3,62e0d1b, =?UTF-8?q?F=C3=A9lix=20Hartmann?= <felix.hartmann@crans.org>," Tue, 9 Jul 2013 15:49:32 +0200",ct: [PATCH 3/3] change the way the axis argument is checked in np.insert and add tests accordingly to np.insert tests,2,10,0,numpy/lib/function_base.py,[u'7'],6,1," -3696,6 +3696,11 ; -3742,7 +3747,7 ;","def insert(arr, obj, values, axis=None);def insert(arr, obj, values, axis=None);"
3497,3,62e0d1b, =?UTF-8?q?F=C3=A9lix=20Hartmann?= <felix.hartmann@crans.org>," Tue, 9 Jul 2013 15:49:32 +0200",ct: [PATCH 3/3] change the way the axis argument is checked in np.insert and add tests accordingly to np.insert tests,2,10,0,numpy/lib/tests/test_function_base.py,[u'4'],4,0," -218,6 +218,10 ;",def test_multidim(self);
3496,1,2d5fd12, Christoph Gohlke <cgohlke@uci.edu>," Tue, 2 Jul 2013 20:24:13 -0700",ct: [PATCH] BUG: Restore compatibility with ISO CFixes msvc compile errors,1,5,5,numpy/core/src/multiarray/arrayobject.c,[u'10'],5,5," -1291,6 +1291,8 ; -1303,8 +1305,6 ; -1348,20 +1348,20 ;","array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;"
3495,1,0739b6b, Charles Harris <charlesr.harris@gmail.com>," Tue, 2 Jul 2013 18:30:06 -0600","ct: [PATCH] BUG: Fix failure to return monic polynomials from roots.This bug affected the various polynomial class methods fromroots due tothe ability to specify both window and domain. In that circumstance theroots are mapped from the domain to the window by the substitution`x = off + scl*x`. The polynomial that was being generated was monic inthe window before substitution, but if scl was not one it was not monicconsidered as a function of the variable x in the domain. The fix is todivide the generated coefficients by `scl ** deg` so that the scaling ofthe highest degree term after substitution is canceled.It might be better to make the scaling optional in the future, but thisfix makes the result match the documentation.Closes #3467.",2,15,3,numpy/polynomial/polytemplate.py,[u'14'],12,2," -806,6 +806,13 ; -817,10 +824,13 ;","def fromroots(roots, domain=$domain, window=$domain) ;def fromroots(roots, domain=$domain, window=$domain) ;"
3495,1,0739b6b, Charles Harris <charlesr.harris@gmail.com>," Tue, 2 Jul 2013 18:30:06 -0600","ct: [PATCH] BUG: Fix failure to return monic polynomials from roots.This bug affected the various polynomial class methods fromroots due tothe ability to specify both window and domain. In that circumstance theroots are mapped from the domain to the window by the substitution`x = off + scl*x`. The polynomial that was being generated was monic inthe window before substitution, but if scl was not one it was not monicconsidered as a function of the variable x in the domain. The fix is todivide the generated coefficients by `scl ** deg` so that the scaling ofthe highest degree term after substitution is canceled.It might be better to make the scaling optional in the future, but thisfix makes the result match the documentation.Closes #3467.",2,15,3,numpy/polynomial/tests/test_classes.py,[u'4'],3,1," -145,7 +145,9 ;",def check_fromroots(Poly);
3491,2,edd989e, Jay Bourque <jay.bourque@continuum.io>," Sat, 29 Jun 2013 15:14:11 -0500",ct: [PATCH 1/2] BUG: Fix creation of string arrays from object types,3,79,17,numpy/core/src/multiarray/convert_datatype.c,[u'50'],20,8," -226,24 +226,36 ; -256,6 +268,18 ;","PyArray_AdaptFlexibleDType(PyObject *data_obj, PyArray_Descr *data_dtype;PyArray_AdaptFlexibleDType(PyObject *data_obj, PyArray_Descr *data_dtype;"
3491,2,edd989e, Jay Bourque <jay.bourque@continuum.io>," Sat, 29 Jun 2013 15:14:11 -0500",ct: [PATCH 1/2] BUG: Fix creation of string arrays from object types,3,79,17,numpy/core/src/multiarray/ctors.c,[u'24'],10,3," -521,7 +521,7 ; -539,7 +539,19 ; -557,7 +569,7 ; -1528,7 +1540,11 ;","PyArray_AssignFromSequence(PyArrayObject *self, PyObject *v;discover_itemsize(PyObject *s, int nd, int *itemsize;discover_itemsize(PyObject *s, int nd, int *itemsize;PyArray_GetArrayParamsFromObject(PyObject *op;"
3491,2,edd989e, Jay Bourque <jay.bourque@continuum.io>," Sat, 29 Jun 2013 15:14:11 -0500",ct: [PATCH 1/2] BUG: Fix creation of string arrays from object types,3,79,17,numpy/core/tests/test_api.py,[u'22'],12,0," -259,6 +259,28 ;",def test_array_astype();
3491,2,97372db, Jay Bourque <jay.bourque@continuum.io>," Mon, 8 Jul 2013 12:24:24 -0500",ct: [PATCH 2/2] STY: Formatting changes,3,13,18,numpy/core/src/multiarray/convert_datatype.c,[u'2'],1,1," -249,7 +249,7 ;","PyArray_AdaptFlexibleDType(PyObject *data_obj, PyArray_Descr *data_dtype;"
3491,2,97372db, Jay Bourque <jay.bourque@continuum.io>," Mon, 8 Jul 2013 12:24:24 -0500",ct: [PATCH 2/2] STY: Formatting changes,3,13,18,numpy/core/src/multiarray/ctors.c,[u'11'],6,5," -532,11 +532,11 ; -569,7 +569,7 ; -1541,7 +1541,8 ;","discover_itemsize(PyObject *s, int nd, int *itemsize, int size_as_string;discover_itemsize(PyObject *s, int nd, int *itemsize, int size_as_string;PyArray_GetArrayParamsFromObject(PyObject *op;"
3491,2,97372db, Jay Bourque <jay.bourque@continuum.io>," Mon, 8 Jul 2013 12:24:24 -0500",ct: [PATCH 2/2] STY: Formatting changes,3,13,18,numpy/core/tests/test_api.py,[u'18'],6,12," -260,25 +260,19 ;",def test_array_astype();
3490,12,250c4d6, Frederic <nouiz@nouiz.org>," Fri, 10 May 2013 16:58:55 -0400","ct: [PATCH 01/12] Make comparison function (gt, ge, ...) respect __array_priority__.",1,44,0,numpy/core/src/multiarray/arrayobject.c,[u'44'],33,0," -1266,6 +1266,50 ;","array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;"
3490,12,e2105b2, Frederic <nouiz@nouiz.org>," Wed, 15 May 2013 11:59:34 -0400","ct: [PATCH 02/12] Revert ""Make comparison function (gt, ge, ...) respect __array_priority__.""This reverts commit aa7a04741146c44ab1735782a89a60b038028bf2.",1,0,44,numpy/core/src/multiarray/arrayobject.c,[u'44'],0,33," -1266,50 +1266,6 ;","array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;"
3490,12,18c4eaf, Frederic <nouiz@nouiz.org>," Wed, 15 May 2013 12:59:14 -0400",ct: [PATCH 03/12] Commit from @seberg to make comparison use respect __array_priority__,2,9,2,numpy/core/src/multiarray/arrayobject.c,[u'4'],2,2," -1298,7 +1298,7 ; -1354,7 +1354,7 ;","array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;"
3490,12,18c4eaf, Frederic <nouiz@nouiz.org>," Wed, 15 May 2013 12:59:14 -0400",ct: [PATCH 03/12] Commit from @seberg to make comparison use respect __array_priority__,2,9,2,numpy/core/src/umath/ufunc_object.c,[u'7'],7,0," -486,6 +486,13 ;","_has_reflected_op(PyObject *op, char *name;"
3490,12,8fb0ded, Frederic <nouiz@nouiz.org>," Wed, 15 May 2013 13:00:04 -0400",ct: [PATCH 04/12] Add test for the array_priority for comparison function.Conflicts:	numpy/core/tests/test_multiarray.py,1,147,0,numpy/core/tests/test_multiarray.py,[u'147'],36,0," -2870,5 +2870,152 ;",def test_mem_seteventhook(self);
3490,12,df388ac, Frederic <nouiz@nouiz.org>," Thu, 16 May 2013 14:49:43 -0400",ct: [PATCH 05/12] reorder code to remove not needed computation in some cases.,1,19,5,numpy/core/src/multiarray/arrayobject.c,[u'24'],19,5," -1280,6 +1280,16 ; -1297,9 +1307,6 ; -1337,6 +1344,15 ; -1354,8 +1370,6 ;","array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;"
3490,12,473e3e3, Frederic <nouiz@nouiz.org>," Thu, 16 May 2013 15:52:54 -0400",ct: [PATCH 06/12] fix comment style.,1,10,6,numpy/core/src/multiarray/arrayobject.c,[u'16'],10,6," -1286,9 +1286,11 ; -1349,9 +1351,11 ;","array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;"
3490,12,f77b43a, Frederic <nouiz@nouiz.org>," Thu, 16 May 2013 16:38:52 -0400",ct: [PATCH 07/12] remove comparison not needed as this is check above and we break in that case.,1,2,4,numpy/core/src/multiarray/arrayobject.c,[u'6'],2,4," -1309,8 +1309,7 ; -1374,8 +1373,7 ;","array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;"
3490,12,71858dd, Frederic <nouiz@nouiz.org>," Thu, 16 May 2013 16:51:12 -0400",ct: [PATCH 08/12] Move computation inside an if to speed it up.,1,35,36,numpy/core/src/multiarray/arrayobject.c,[u'71'],16,17," -1292,24 +1292,25 ; -1333,7 +1334,6 ; -1356,24 +1356,24 ; -1393,7 +1393,6 ;","array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;"
3490,12,91cb5e3, Frederic <nouiz@nouiz.org>," Fri, 17 May 2013 11:45:16 -0400",ct: [PATCH 09/12] use assert function instead of python keyword,1,42,42,numpy/core/tests/test_multiarray.py,[u'84'],18,19," -2918,13 +2918,13 ; -2936,13 +2936,13 ; -2954,13 +2954,13 ; -2972,13 +2972,13 ; -2990,13 +2990,13 ; -3008,13 +3008,13 ;",def test_lt(self);def test_gt(self);def test_le(self);def test_ge(self);def test_eq(self);def test_ne(self);
3490,12,b97f500, Frederic <nouiz@nouiz.org>," Fri, 17 May 2013 11:47:20 -0400",ct: [PATCH 10/12] updated the comment.,1,4,6,numpy/core/src/multiarray/arrayobject.c,[u'10'],4,6," -1287,9 +1287,8 ; -1351,9 +1350,8 ;","array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;"
3490,12,f66a406, Frederic <nouiz@nouiz.org>," Thu, 23 May 2013 11:45:40 -0400",ct: [PATCH 11/12] code clean up. Remove code that was never executed.@seberg saw this.,1,2,14,numpy/core/src/multiarray/arrayobject.c,[u'16'],2,14," -1264,7 +1264,6 ; -1292,13 +1291,7 ; -1355,12 +1348,7 ;","array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;"
3490,12,854776e, Blake Griffith <blake.a.griffith@gmail.com>," Mon, 1 Jul 2013 17:13:40 -0500",ct: [PATCH 12/12] BUG: Class should inherit from object.,1,0,0,numpy/core/tests/test_multiarray.py,[u'2'],1,1," -2870,7 +2870,7 ;",def test_mem_seteventhook(self);
3489,1,cb7c7be, Daniel <muellner@localhost.localdomain>," Mon, 1 Jul 2013 11:22:30 -0700",ct: [PATCH] Corrected typos in documentation for PyArray_GETPTR1.,1,7,7,doc/source/reference/c-api.array.rst,[u'14'],7,7," -165,13 +165,13 ; -1062,7 +1062,7 ; -1088,7 +1088,7 ; -1312,7 +1312,7 ;",with misaligned data;Converting data type;Converting data type;of the constant names is deprecated in 1.7;
3486,1,febf2e9, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 29 Jun 2013 15:53:03 +0200","ct: [PATCH] BUG: check full signature if dtype of ufunc is settype_tuple_type_resolver only checks the last type to determine amismatch. For true_divide with the signature (x, x, double) this causesit to use BYTE_divide for everything.To fix it check the full signature before accepting a match.Closes gh-3484.",2,16,2,numpy/core/src/umath/ufunc_type_resolution.c,[u'7'],5,2," -2089,8 +2089,11 ;",type_tuple_type_resolver(PyUFuncObject *self;
3486,1,febf2e9, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 29 Jun 2013 15:53:03 +0200","ct: [PATCH] BUG: check full signature if dtype of ufunc is settype_tuple_type_resolver only checks the last type to determine amismatch. For true_divide with the signature (x, x, double) this causesit to use BYTE_divide for everything.To fix it check the full signature before accepting a match.Closes gh-3484.",2,16,2,numpy/core/tests/test_ufunc.py,[u'11'],11,0," -164,6 +164,17 ;","def logical_xor(self, obj) ;"
3483,1,974d8e3, HaroldMills <harold.mills@gmail.com>," Fri, 28 Jun 2013 16:58:58 -0400",ct: [PATCH] BUG: numpy.random.binomial raised ValueError for n == 0Range test for n was incorrect.Closes #3480,3,1610,1559,numpy/random/mtrand/mtrand.c,[u'3146'],19,18," -1,4 +1,4 ; -261,17 +261,6 ; -854,11 +843,11 ; -976,114 +965,115 ; -1224,29 +1214,29 ; -1336,6 +1326,7 ; -1508,7 +1499,7 ; -1573,8 +1564,8 ; -1601,40 +1592,40 ; -1652,11 +1643,10 ; -1670,8 +1660,7 ; -1681,10 +1670,10 ; -1697,33 +1686,33 ; -1750,8 +1739,8 ; -1780,9 +1769,9 ; -1808,11 +1797,10 ; -1826,8 +1814,7 ; -1837,10 +1824,10 ; -1853,33 +1840,33 ; -1906,8 +1893,8 ; -1936,9 +1923,9 ; -1967,11 +1954,10 ; -1985,8 +1971,7 ; -1995,13 +1980,13 ; -2028,13 +2013,13 ; -2043,8 +2028,8 ; -2075,33 +2060,33 ; -2119,13 +2104,13 ; -2134,8 +2119,8 ; -2144,10 +2129,10 ; -2160,8 +2145,8 ; -2208,9 +2193,9 ; -2238,11 +2223,10 ; -2256,8 +2240,7 ; -2267,10 +2250,10 ; -2283,33 +2266,33 ; -2336,8 +2319,8 ; -2366,9 +2349,9 ; -2396,11 +2379,10 ; -2414,8 +2396,7 ; -2424,13 +2405,13 ; -2439,13 +2420,13 ; -2463,8 +2444,8 ; -2513,33 +2494,33 ; -2557,13 +2538,13 ; -2572,8 +2553,8 ; -2582,10 +2563,10 ; -2598,8 +2579,8 ; -2664,9 +2645,9 ; -2693,11 +2674,10 ; -2711,8 +2691,7 ; -2722,10 +2701,10 ; -2738,33 +2717,33 ; -2791,8 +2770,8 ; -2821,9 +2800,9 ; -2852,11 +2831,10 ; -2870,8 +2848,7 ; -2880,13 +2857,13 ; -2895,13 +2872,13 ; -2919,8 +2896,8 ; -2978,33 +2955,33 ; -3022,13 +2999,13 ; -3037,8 +3014,8 ; -3047,10 +3024,10 ; -3063,8 +3040,8 ; -3129,9 +3106,9 ; -3158,11 +3135,10 ; -3176,8 +3152,7 ; -3187,10 +3162,10 ; -3203,28 +3178,28 ; -3251,8 +3226,8 ; -3281,9 +3256,9 ; -3309,11 +3284,10 ; -3327,8 +3301,7 ; -3338,10 +3311,10 ; -3354,28 +3327,28 ; -3402,8 +3375,8 ; -3432,9 +3405,9 ; -3462,11 +3435,10 ; -3480,8 +3452,7 ; -3490,13 +3461,13 ; -3505,13 +3476,13 ; -3529,8 +3500,8 ; -3579,28 +3550,28 ; -3618,13 +3589,13 ; -3633,8 +3604,8 ; -3643,10 +3614,10 ; -3659,8 +3630,8 ; -3725,9 +3696,9 ; -3754,11 +3725,10 ; -3772,8 +3742,7 ; -3783,10 +3752,10 ; -3799,28 +3768,28 ; -3847,8 +3816,8 ; -3877,9 +3846,9 ; -3907,11 +3876,10 ; -3925,8 +3893,7 ; -3935,13 +3902,13 ; -3950,13 +3917,13 ; -3974,8 +3941,8 ; -4024,28 +3991,28 ; -4063,13 +4030,13 ; -4078,8 +4045,8 ; -4088,10 +4055,10 ; -4104,8 +4071,8 ; -4170,9 +4137,9 ; -4199,11 +4166,10 ; -4217,8 +4183,7 ; -4226,12 +4191,12 ; -4244,28 +4209,28 ; -4292,8 +4257,8 ; -4322,9 +4287,9 ; -4353,11 +4318,10 ; -4371,8 +4335,7 ; -4381,13 +4344,13 ; -4396,13 +4359,13 ; -4420,8 +4383,8 ; -4479,28 +4442,28 ; -4518,13 +4481,13 ; -4533,8 +4496,8 ; -4543,10 +4506,10 ; -4559,8 +4522,8 ; -4625,9 +4588,9 ; -4654,11 +4617,10 ; -4672,8 +4634,7 ; -4683,10 +4644,10 ; -4699,28 +4660,28 ; -4747,8 +4708,8 ; -4777,9 +4738,9 ; -4808,11 +4769,10 ; -4826,8 +4786,7 ; -4836,13 +4795,13 ; -4869,13 +4828,13 ; -4884,8 +4843,8 ; -4916,28 +4875,28 ; -4955,13 +4914,13 ; -4970,8 +4929,8 ; -4980,10 +4939,10 ; -4996,8 +4955,8 ; -5044,9 +5003,9 ; -5303,7 +5262,7 ; -5401,10 +5360,9 ; -5418,8 +5376,7 ; -5439,8 +5396,7 ; -5450,8 +5406,8 ; -5462,15 +5418,14 ; -5479,16 +5434,16 ; -5497,8 +5452,8 ; -5510,13 +5465,13 ; -5532,8 +5487,8 ; -5877,7 +5832,7 ; -6067,7 +6022,7 ; -6639,12 +6594,11 ; -6658,8 +6612,7 ; -6677,8 +6630,8 ; -6690,8 +6643,8 ; -6700,8 +6653,8 ; -6712,8 +6665,8 ; -6722,10 +6675,10 ; -6747,8 +6700,7 ; -6768,10 +6720,10 ; -6784,28 +6736,28 ; -6832,8 +6784,8 ; -6871,9 +6823,9 ; -7089,8 +7041,8 ; -7331,8 +7283,7 ; -7360,9 +7311,9 ; -7385,24 +7336,24 ; -7411,13 +7362,13 ; -7444,11 +7395,11 ; -7457,10 +7408,10 ; -7473,24 +7424,24 ; -7499,10 +7450,10 ; -7515,32 +7466,32 ; -7578,9 +7529,8 ; -7591,8 +7541,8 ; -7608,9 +7558,9 ; -7640,8 +7590,8 ; -7651,9 +7601,9 ; -7724,13 +7674,13 ; -7739,15 +7689,15 ; -7755,10 +7705,10 ; -7784,14 +7734,14 ; -7808,9 +7758,9 ; -7836,9 +7786,9 ; -7849,8 +7799,8 ; -7858,15 +7808,15 ; -7927,20 +7877,20 ; -7953,11 +7903,11 ; -7967,10 +7917,10 ; -7979,8 +7929,8 ; -7988,9 +7938,9 ; -8004,9 +7954,9 ; -8040,13 +7990,13 ; -8055,11 +8005,11 ; -8073,18 +8023,18 ; -8107,17 +8057,17 ; -8132,17 +8082,17 ; -8154,8 +8104,8 ; -8170,8 +8120,8 ; -8204,13 +8154,13 ; -8219,11 +8169,11 ; -8236,12 +8186,12 ; -8264,16 +8214,16 ; -8288,9 +8238,8 ; -8315,18 +8264,18 ; -8392,13 +8341,13 ; -8414,16 +8363,16 ; -8432,10 +8381,10 ; -8460,10 +8409,10 ; -8473,7 +8422,7 ; -8625,7 +8574,7 ; -8813,7 +8762,7 ; -8919,7 +8868,7 ; -9066,10 +9015,9 ; -9085,8 +9033,7 ; -9121,35 +9068,35 ; -9385,7 +9332,7 ; -9395,7 +9342,7 ; -9681,7 +9628,7 ; -9691,7 +9638,7 ; -9717,7 +9664,7 ; -10044,7 +9991,7 ; -10054,7 +10001,7 ; -10405,7 +10352,7 ; -10415,7 +10362,7 ; -10688,7 +10635,7 ; -10698,7 +10645,7 ; -10724,7 +10671,7 ; -11072,7 +11019,7 ; -11082,7 +11029,7 ; -11108,7 +11055,7 ; -11476,7 +11423,7 ; -11486,7 +11433,7 ; -11512,7 +11459,7 ; -11538,7 +11485,7 ; -11958,7 +11905,7 ; -11968,7 +11915,7 ; -12240,7 +12187,7 ; -12250,7 +12197,7 ; -12276,7 +12223,7 ; -12719,7 +12666,7 ; -12729,7 +12676,7 ; -13001,7 +12948,7 ; -13011,7 +12958,7 ; -13279,7 +13226,7 ; -13289,7 +13236,7 ; -13541,7 +13488,7 ; -13551,7 +13498,7 ; -13803,7 +13750,7 ; -13813,7 +13760,7 ; -14089,7 +14036,7 ; -14099,7 +14046,7 ; -14387,7 +14334,7 ; -14397,7 +14344,7 ; -14685,7 +14632,7 ; -14695,7 +14642,7 ; -14983,7 +14930,7 ; -14993,7 +14940,7 ; -15260,7 +15207,7 ; -15270,7 +15217,7 ; -15542,7 +15489,7 ; -15552,7 +15499,7 ; -15578,7 +15525,7 ; -15941,7 +15888,7 ; -15951,7 +15898,7 ; -15977,7 +15924,7 ; -16003,7 +15950,7 ; -16317,7 +16264,7 ; -16426,7 +16373,7 ; -16434,26 +16381,26 ; -16467,17 +16414,17 ; -16498,7 +16445,7 ; -16548,7 +16495,7 ; -16562,8 +16509,8 ; -16576,8 +16523,8 ; -16587,7 +16534,7 ; -16617,8 +16564,8 ; -16632,8 +16579,8 ; -16674,7 +16621,7 ; -16900,7 +16847,7 ; -16910,7 +16857,7 ; -16920,7 +16867,7 ; -16936,7 +16883,7 ; -16946,7 +16893,7 ; -16961,7 +16908,7 ; -16971,7 +16918,7 ; -17093,7 +17040,7 ; -17151,7 +17098,7 ; -17209,7 +17156,7 ; -17272,7 +17219,7 ; -17362,7 +17309,7 ; -17384,7 +17331,7 ; -17415,7 +17362,7 ; -17514,7 +17461,7 ; -17574,7 +17521,7 ; -17715,7 +17662,7 ; -17725,7 +17672,7 ; -17735,7 +17682,7 ; -17836,7 +17783,7 ; -17977,7 +17924,7 ; -17987,7 +17934,7 ; -17997,7 +17944,7 ; -18013,7 +17960,7 ; -18023,7 +17970,7 ; -18124,7 +18071,7 ; -18184,7 +18131,7 ; -18366,7 +18313,7 ; -18376,7 +18323,7 ; -18386,7 +18333,7 ; -18402,7 +18349,7 ; -18412,7 +18359,7 ; -18428,7 +18375,7 ; -18438,7 +18385,7 ; -18454,7 +18401,7 ; -18464,7 +18411,7 ; -18601,7 +18548,7 ; -18659,7 +18606,7 ; -18717,7 +18664,7 ; -18792,7 +18739,7 ; -18944,7 +18891,7 ; -18954,7 +18901,7 ; -18964,7 +18911,7 ; -18980,7 +18927,7 ; -18990,7 +18937,7 ; -19091,7 +19038,7 ; -19151,7 +19098,7 ; -19284,8 +19231,8 ; -19356,8 +19303,7 ; -19395,10 +19341,10 ; -19407,7 +19353,7 ; -19425,10 +19371,10 ; -19442,11 +19388,11 ; -19457,7 +19403,7 ; -19497,7 +19443,7 ; -19531,8 +19477,7 ; -19560,7 +19505,7 ; -19641,8 +19586,8 ; -19697,7 +19642,7 ; -20008,9 +19953,8 ; -20057,7 +20001,7 ; -20067,7 +20011,7 ; -20084,8 +20028,7 ; -20113,8 +20056,7 ; -20182,12 +20124,12 ; -20225,7 +20167,7 ; -20253,8 +20195,8 ; -20291,7 +20233,7 ; -20324,7 +20266,7 ; -20366,7 +20308,7 ; -20469,9 +20411,8 ; -20519,8 +20460,7 ; -20548,8 +20488,7 ; -20611,23 +20550,23 ; -20674,7 +20613,7 ; -20693,8 +20632,8 ; -20741,8 +20680,8 ; -20781,7 +20720,7 ; -20884,7 +20823,7 ; -20914,7 +20853,7 ; -20980,7 +20919,7 ; -21063,8 +21002,7 ; -21095,8 +21033,7 ; -21115,12 +21052,12 ; -21132,20 +21069,20 ; -21160,15 +21097,15 ; -21188,7 +21125,7 ; -21273,6 +21210,104 ; -21288,15 +21323,15 ; -21365,29 +21400,29 ; -21477,6 +21512,7 ; -22567,8 +22603,8 ; -22577,7 +22613,7 ; -22600,8 +22636,8 ; -22610,7 +22646,7 ; -22638,9 +22674,9 ; -22649,9 +22685,9 ; -22660,9 +22696,9 ; -22671,9 +22707,9 ; -22682,9 +22718,9 ; -22693,9 +22729,9 ; -22704,9 +22740,9 ; -22715,9 +22751,9 ; -22726,9 +22762,9 ; -22737,9 +22773,9 ; -22748,9 +22784,9 ; -22759,9 +22795,9 ; -22770,9 +22806,9 ; -22781,9 +22817,9 ; -22792,9 +22828,9 ; -22803,9 +22839,9 ; -22814,9 +22850,9 ; -22825,9 +22861,9 ; -22836,9 +22872,9 ; -22847,9 +22883,9 ; -22858,9 +22894,9 ; -22869,9 +22905,9 ; -22880,9 +22916,9 ; -22891,9 +22927,9 ; -22902,9 +22938,9 ; -22913,9 +22949,9 ; -22924,9 +22960,9 ; -22935,9 +22971,9 ; -22946,9 +22982,9 ; -22957,9 +22993,9 ; -22968,9 +23004,9 ; -22979,9 +23015,9 ; -22990,9 +23026,9 ; -23001,9 +23037,9 ; -23012,12 +23048,12 ; -23121,13 +23157,13 ; -23178,7 +23214,7 ; -23194,7 +23230,7 ; -23389,7 +23425,7 ; -23639,10 +23675,10 ; -23729,10 +23765,10 ; -24114,49 +24150,49 ; -25002,7 +25038,11 ;",";;static int __Pyx_InitStrings(__Pyx_StringTabEntry *t); /*proto*;static char __pyx_k_123[] = ""mean <= 0.0"";static PyObject *__pyx_kp_s_130;static PyObject *__pyx_kp_u_282;static PyObject *__pyx_k_107;static PyObject *__pyx_k_tuple_94;static PyObject *__pyx_k_tuple_140;static PyObject *__pyx_f_6mtrand_cont0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont1_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont1_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont1_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont1_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont1_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont2_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont2_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont2_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont2_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont2_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont3_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont3_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont3_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont3_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont3_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_disc0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_disc0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_disc0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_disc0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_disc0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_disc0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discnp_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discnp_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discnp_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discnp_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discnp_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discnp_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discdd_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discdd_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discdd_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discdd_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discdd_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnmN_array_sc(rk_state *__pyx_v_state, __py;static PyObject *__pyx_f_6mtrand_discnmN_array_sc(rk_state *__pyx_v_state, __py;static PyObject *__pyx_f_6mtrand_discnmN_array_sc(rk_state *__pyx_v_state, __py;static PyObject *__pyx_f_6mtrand_discnmN_array_sc(rk_state *__pyx_v_state, __py;static PyObject *__pyx_f_6mtrand_discnmN_array_sc(rk_state *__pyx_v_state, __py;static PyObject *__pyx_f_6mtrand_discnmN_array_sc(rk_state *__pyx_v_state, __py;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discd_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_discd_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_discd_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_discd_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_discd_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_discd_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static void __pyx_pf_6mtrand_11RandomState_2__dealloc__(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_4seed(struct __pyx_obj_6mtrand_;static PyObject *__pyx_pf_6mtrand_11RandomState_4seed(struct __pyx_obj_6mtrand_;static PyObject *__pyx_pf_6mtrand_11RandomState_4seed(struct __pyx_obj_6mtrand_;static PyObject *__pyx_pf_6mtrand_11RandomState_4seed(struct __pyx_obj_6mtrand_;static PyObject *__pyx_pf_6mtrand_11RandomState_4seed(struct __pyx_obj_6mtrand_;static PyObject *__pyx_pf_6mtrand_11RandomState_4seed(struct __pyx_obj_6mtrand_;static PyObject *__pyx_pf_6mtrand_11RandomState_4seed(struct __pyx_obj_6mtrand_;static PyObject *__pyx_pf_6mtrand_11RandomState_4seed(struct __pyx_obj_6mtrand_;static PyObject *__pyx_pf_6mtrand_11RandomState_4seed(struct __pyx_obj_6mtrand_;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_26uniform(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_28rand(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_30randn(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_32random_integers(struct __pyx_;static PyObject *__pyx_pf_6mtrand_11RandomState_32random_integers(struct __pyx_;static PyObject *__pyx_pf_6mtrand_11RandomState_32random_integers(struct __pyx_;static PyObject *__pyx_pf_6mtrand_11RandomState_36normal(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_36normal(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_38beta(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_38beta(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_38beta(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_40exponential(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_40exponential(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_44standard_gamma(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_44standard_gamma(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_46gamma(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_46gamma(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_46gamma(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_48f(struct __pyx_obj_6mtrand_Ra;static PyObject *__pyx_pf_6mtrand_11RandomState_48f(struct __pyx_obj_6mtrand_Ra;static PyObject *__pyx_pf_6mtrand_11RandomState_48f(struct __pyx_obj_6mtrand_Ra;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_52chisquare(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_52chisquare(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_54noncentral_chisquare(struct _;static PyObject *__pyx_pf_6mtrand_11RandomState_54noncentral_chisquare(struct _;static PyObject *__pyx_pf_6mtrand_11RandomState_54noncentral_chisquare(struct _;static PyObject *__pyx_pf_6mtrand_11RandomState_58standard_t(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_58standard_t(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_60vonmises(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_60vonmises(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_62pareto(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_62pareto(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_64weibull(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_64weibull(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_66power(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_66power(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_68laplace(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_68laplace(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_70gumbel(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_70gumbel(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_72logistic(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_72logistic(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_74lognormal(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_74lognormal(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_76rayleigh(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_76rayleigh(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_78wald(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_78wald(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_78wald(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pw_6mtrand_11RandomState_87poisson(PyObject *__pyx_v_sel;static PyObject *__pyx_pf_6mtrand_11RandomState_86poisson(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_86poisson(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_86poisson(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_86poisson(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_86poisson(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_88zipf(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_88zipf(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_88zipf(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_88zipf(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_90geometric(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_90geometric(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_90geometric(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_90geometric(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_90geometric(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_90geometric(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_90geometric(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_94logseries(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_94logseries(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_94logseries(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_94logseries(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_94logseries(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_94logseries(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_94logseries(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_102shuffle(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_102shuffle(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_102shuffle(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_104permutation(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_104permutation(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_104permutation(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_104permutation(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_104permutation(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_104permutation(struct __pyx_obj;static PyMethodDef __pyx_methods_6mtrand_RandomState[] = ;static PyTypeObject __pyx_type_6mtrand_RandomState = ;static __Pyx_StringTabEntry __pyx_string_tab[] = ;static __Pyx_StringTabEntry __pyx_string_tab[] = ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;static CYTHON_INLINE void __Pyx_crop_slice(Py_ssize_t* _start, Py_ssize_t* _sto;"
3483,1,974d8e3, HaroldMills <harold.mills@gmail.com>," Fri, 28 Jun 2013 16:58:58 -0400",ct: [PATCH] BUG: numpy.random.binomial raised ValueError for n == 0Range test for n was incorrect.Closes #3480,3,1610,1559,numpy/random/mtrand/mtrand.pyx,[u'12'],1,1," -3413,13 +3413,13 ; -3493,8 +3493,8 ; -3505,8 +3505,8 ;",cdef class RandomState;cdef class RandomState;cdef class RandomState;
3483,1,974d8e3, HaroldMills <harold.mills@gmail.com>," Fri, 28 Jun 2013 16:58:58 -0400",ct: [PATCH] BUG: numpy.random.binomial raised ValueError for n == 0Range test for n was incorrect.Closes #3480,3,1610,1559,numpy/random/tests/test_random.py,[u'11'],1,0," -7,6 +7,17 ;",;
3482,1,f8cdbba, Jonathan Helmus <jjhelmus@gmail.com>," Fri, 28 Jun 2013 12:19:25 -0500",ct: [PATCH] ENH: Add dtype parameter to linspace and logspace functions.Many NumPy functions such as arange allow users to define the dtype of thereturned type with a dtype parameter.  This adds this same functionalityto the logspace and linspace functions.,3,55,16,doc/release/1.9.0-notes.rst,[u'5'],5,0," -31,6 +31,10 ; -39,6 +43,7 ;","functions (ufuncs), ``numpy.core._dotblas.dot``, an;Improvement;"
3482,1,f8cdbba, Jonathan Helmus <jjhelmus@gmail.com>," Fri, 28 Jun 2013 12:19:25 -0500",ct: [PATCH] ENH: Add dtype parameter to linspace and logspace functions.Many NumPy functions such as arange allow users to define the dtype of thereturned type with a dtype parameter.  This adds this same functionalityto the logspace and linspace functions.,3,55,16,numpy/core/function_base.py,[u'36'],23,11," -3,9 +3,10 ; -31,6 +32,9 ; -74,23 +78,28 ; -116,6 +125,9 ; -136,7 +148,7 ; -165,4 +177,6 ;",";def linspace(start, stop, num=50, endpoint=True, retstep=False);def linspace(start, stop, num=50, endpoint=True, retstep=False);def logspace(start,stop,num=50,endpoint=True,base=10.0);def logspace(start,stop,num=50,endpoint=True,base=10.0);def logspace(start,stop,num=50,endpoint=True,base=10.0);"
3482,1,f8cdbba, Jonathan Helmus <jjhelmus@gmail.com>," Fri, 28 Jun 2013 12:19:25 -0500",ct: [PATCH] ENH: Add dtype parameter to linspace and logspace functions.Many NumPy functions such as arange allow users to define the dtype of thereturned type with a dtype parameter.  This adds this same functionalityto the logspace and linspace functions.,3,55,16,numpy/core/tests/test_function_base.py,[u'30'],23,5," -1,23 +1,35 ; -35,3 +47,11 ;",;def test_type(self);
3478,1,c4b6b05, prossahl <pross@ahl.com>," Thu, 27 Jun 2013 17:30:46 +0100",ct: [PATCH] Issue 3458,4,2775,2,numpy/core/src/multiarray/mapping.c,[u'4'],1,1," -806,8 +806,7 ; -816,6 +815,7 ;",array_ass_boolean_subscript(PyArrayObject *self;array_ass_boolean_subscript(PyArrayObject *self;
3478,1,c4b6b05, prossahl <pross@ahl.com>," Thu, 27 Jun 2013 17:30:46 +0100",ct: [PATCH] Issue 3458,4,2775,2,numpy/core/src/multiarray/mapping.c.orig,[u'2243'],30,0," -0,0 +1,2243 ;",;
3478,1,c4b6b05, prossahl <pross@ahl.com>," Thu, 27 Jun 2013 17:30:46 +0100",ct: [PATCH] Issue 3458,4,2775,2,numpy/core/tests/test_indexing.py,[u'23'],1,0," -503,5 +503,28 ;",def test_1d(self);
3478,1,c4b6b05, prossahl <pross@ahl.com>," Thu, 27 Jun 2013 17:30:46 +0100",ct: [PATCH] Issue 3458,4,2775,2,numpy/core/tests/test_indexing.py.orig,[u'507'],7,0," -0,0 +1,507 ;",;
3476,1,561c874, Julian Taylor <jtaylor.debian@googlemail.com>," Tue, 25 Jun 2013 19:13:38 +0200","ct: [PATCH] BUG: add module extensions to load_library search liston mac, windows and linux (with >= py3.2) shared libraries and loadablemodule have different extensions, so check both for all platforms.",1,5,11,numpy/ctypeslib.py,[u'16'],5,11," -100,17 +100,11 ;","def load_library(libname, loader_path);"
3472,1,6c433aa, Julian Taylor <jtaylor.debian@googlemail.com>," Tue, 25 Jun 2013 19:13:38 +0200","ct: [PATCH] BUG: add module extensions to load_library search liston mac, windows and linux (with >= py3.2) shared libraries and loadablemodule have different extensions, so check both for all platforms.",1,5,11,numpy/ctypeslib.py,[u'16'],5,11," -102,17 +102,11 ;","def load_library(libname, loader_path);"
3471,2,3d2a823, Fernando Perez <Fernando.Perez@berkeley.edu>," Tue, 25 Jun 2013 11:16:43 -0500",ct: [PATCH 1/2] Fix exceptions being swallowed by fromiter.All exceptions from underlying iterator were being collapsed into ageneric one. This allows the original exception to propagate.Closes gh-2592.,1,8,0,numpy/core/src/multiarray/ctors.c,[u'9'],8,1," -3522,7 +3522,14 ;","PyArray_FromIter(PyObject *obj, PyArray_Descr *dtype, npy_intp count;"
3471,2,fd38b4e, Fernando Perez <Fernando.Perez@berkeley.edu>," Tue, 25 Jun 2013 11:42:42 -0500","ct: [PATCH 2/2] Added tests for gh-2592, inlcuding edge case.Work done with @certik.",1,28,0,numpy/core/tests/test_numeric.py,[u'28'],28,0," -588,6 +588,11 ; -621,6 +626,29 ;",def test_can_cast(self);def test_values(self);
3470,1,624a4dd, pelson <pelson.pub@gmail.com>," Tue, 25 Jun 2013 09:09:33 -0500",ct: [PATCH] BUG: Fixed compile warning on shape.c,1,0,0,numpy/core/src/multiarray/shape.c,[u'2'],1,1," -35,7 +35,7 ;","_putzero(char *optr, PyObject *zero, PyArray_Descr *dtype);"
3468,1,2241e6c, Rob Ruana <rob@relentlessidiot.com>," Tue, 25 Jun 2013 01:29:56 -0400","ct: [PATCH] ENH: Allow unnamed return values in Returns section of doc stringDevelopers usually only need the type of a return valuefollowed by a brief description. However, in some casesproviding a name for a return value can make the documentationclearer. This enhancement changes the format of the Returnssection such that the type is required, and the name isoptional:    Returns    -------    int        Description of anonymous integer return value.    x : str        Description of string return value named `x`.With this change, if a colon is not present, then the entireline is interpreted as the return type. In all other cases,the Returns section is interpreted according to the currentrules.Consistent with the current format, if a colon is present, thenthe text to the left of the colon is interpreted as the name;and the text to the right of the colon is interpreted as thetype. This makes the proposed change backwards compatible withexisting documentation.",5,82,26,doc/HOWTO_DOCUMENT.rst.txt,[u'22'],13,3," -225,14 +225,30 ;",The sections of the docstring are;
3468,1,2241e6c, Rob Ruana <rob@relentlessidiot.com>," Tue, 25 Jun 2013 01:29:56 -0400","ct: [PATCH] ENH: Allow unnamed return values in Returns section of doc stringDevelopers usually only need the type of a return valuefollowed by a brief description. However, in some casesproviding a name for a return value can make the documentationclearer. This enhancement changes the format of the Returnssection such that the type is required, and the name isoptional:    Returns    -------    int        Description of anonymous integer return value.    x : str        Description of string return value named `x`.With this change, if a colon is not present, then the entireline is interpreted as the return type. In all other cases,the Returns section is interpreted according to the currentrules.Consistent with the current format, if a colon is present, thenthe text to the left of the colon is interpreted as the name;and the text to the right of the colon is interpreted as thetype. This makes the proposed change backwards compatible withexisting documentation.",5,82,26,doc/example.py,[u'12'],4,5," -57,14 +57,12 ;","def foo(var1, var2, long_var_name='hi') ;"
3468,1,2241e6c, Rob Ruana <rob@relentlessidiot.com>," Tue, 25 Jun 2013 01:29:56 -0400","ct: [PATCH] ENH: Allow unnamed return values in Returns section of doc stringDevelopers usually only need the type of a return valuefollowed by a brief description. However, in some casesproviding a name for a return value can make the documentationclearer. This enhancement changes the format of the Returnssection such that the type is required, and the name isoptional:    Returns    -------    int        Description of anonymous integer return value.    x : str        Description of string return value named `x`.With this change, if a colon is not present, then the entireline is interpreted as the return type. In all other cases,the Returns section is interpreted according to the currentrules.Consistent with the current format, if a colon is present, thenthe text to the left of the colon is interpreted as the name;and the text to the right of the colon is interpreted as thetype. This makes the proposed change backwards compatible withexisting documentation.",5,82,26,doc/sphinxext/numpydoc/docscrape.py,[u'5'],3,1," -334,7 +334,10 ;","def _str_param_list(self, name);"
3468,1,2241e6c, Rob Ruana <rob@relentlessidiot.com>," Tue, 25 Jun 2013 01:29:56 -0400","ct: [PATCH] ENH: Allow unnamed return values in Returns section of doc stringDevelopers usually only need the type of a return valuefollowed by a brief description. However, in some casesproviding a name for a return value can make the documentationclearer. This enhancement changes the format of the Returnssection such that the type is required, and the name isoptional:    Returns    -------    int        Description of anonymous integer return value.    x : str        Description of string return value named `x`.With this change, if a colon is not present, then the entireline is interpreted as the return type. In all other cases,the Returns section is interpreted according to the currentrules.Consistent with the current format, if a colon is present, thenthe text to the left of the colon is interpreted as the name;and the text to the right of the colon is interpreted as thetype. This makes the proposed change backwards compatible withexisting documentation.",5,82,26,doc/sphinxext/numpydoc/docscrape_sphinx.py,[u'36'],21,5," -42,16 +42,37 ; -196,8 +217,9 ;","def _str_summary(self);def __str__(self, indent=0, func_role=""obj"");"
3468,1,2241e6c, Rob Ruana <rob@relentlessidiot.com>," Tue, 25 Jun 2013 01:29:56 -0400","ct: [PATCH] ENH: Allow unnamed return values in Returns section of doc stringDevelopers usually only need the type of a return valuefollowed by a brief description. However, in some casesproviding a name for a return value can make the documentationclearer. This enhancement changes the format of the Returnssection such that the type is required, and the name isoptional:    Returns    -------    int        Description of anonymous integer return value.    x : str        Description of string return value named `x`.With this change, if a colon is not present, then the entireline is interpreted as the return type. In all other cases,the Returns section is interpreted according to the currentrules.Consistent with the current format, if a colon is present, thenthe text to the left of the colon is interpreted as the name;and the text to the right of the colon is interpreted as thetype. This makes the proposed change backwards compatible withexisting documentation.",5,82,26,doc/sphinxext/numpydoc/tests/test_docscrape.py,[u'33'],17,6," -47,6 +47,9 ; -148,13 +151,19 ; -218,6 +227,9 ; -226,12 +238,12 ; -334,6 +346,11 ; -342,13 +359,13 ; -698,11 +715,11 ;",;def test_other_parameters();def test_str();def test_str();def test_sphinx_str();def test_sphinx_str();def test_class_members_doc();
3466,2,e2a74ee, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 23 Jun 2013 12:25:43 +0200",ct: [PATCH 1/2] MAINT: make binary_scalar2 static and put __m128i into a template,1,6,7,numpy/core/src/umath/simd.inc.src,[u'13'],6,7," -363,7 +363,7 ; -518,7 +518,6 ; -550,8 +549,8 ; -562,7 +561,7 ; -589,7 +588,7 ; -600,7 +599,7 ;","sse2_binary_scalar1_@kind@_@TYPE@(@type@ * op, @type@ * ip1, @type@ * ip2, npy_;sse2_@kind@_@TYPE@(@type@ * ip, @type@ * op, const npy_intp n;sse2_binary_@kind@_BOOL(npy_bool * op, npy_bool * ip1, npy_bool * ip2, npy_int;sse2_binary_@kind@_BOOL(npy_bool * op, npy_bool * ip1, npy_bool * ip2, npy_int;sse2_@kind@_BOOL(@type@ * op, @type@ * ip, const npy_intp n;sse2_@kind@_BOOL(@type@ * op, @type@ * ip, const npy_intp n;"
3466,2,1ae0622, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 23 Jun 2013 12:27:56 +0200",ct: [PATCH 2/2] ENH: vectorize boolean reductionsImproves performance by a factor of 5 to 10 depending on the cpu.These operations currently can't be autovectorized by gcc 4.8.,2,54,0,numpy/core/src/umath/loops.c.src,[u'3'],3,0," -561,6 +561,9 ;",NPY_NO_EXPORT voi;
3466,2,1ae0622, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 23 Jun 2013 12:27:56 +0200",ct: [PATCH 2/2] ENH: vectorize boolean reductionsImproves performance by a factor of 5 to 10 depending on the cpu.These operations currently can't be autovectorized by gcc 4.8.,2,54,0,numpy/core/src/umath/simd.inc.src,[u'51'],39,0," -197,6 +197,23 ; -518,10 +535,12 ; -568,6 +587,38 ;","run_binary_simd_@kind@_BOOL(char **args, npy_intp *dimensions, npy_intp *steps;sse2_@kind@_@TYPE@(@type@ * ip, @type@ * op, const npy_intp n;sse2_binary_@kind@_BOOL(npy_bool * op, npy_bool * ip1, npy_bool * ip2, npy_int;"
3465,1,e62f61a, Charles Harris <charlesr.harris@gmail.com>," Sat, 22 Jun 2013 11:06:38 -0600","ct: [PATCH] BUG: _savez function broken by temporary file size limit.On Linux systems the  _savez function creates temporary files in the/tmp directory before adding them to the zip archive.  Recent Linuxdistros have started mounting tmpfs on /tmp and, because tmpfs residesin memory, file size is limited by memory size. The approach taken hereis to create the temporary files in the same directory as the outputfile when possible, otherwise fall back on the default directory usedby tempfile.mkstemp.The test_big_arrays test in test_npyio.py tests this, allthough it wasnot originally intended as a test for this specific problem.  It isfixed so that the big npz output file is put in the current workingdirectory.Closes #3464",2,21,7,numpy/lib/npyio.py,[u'17'],13,4," -534,8 +534,8 ; -573,8 +573,17 ;","def savez_compressed(file, *args, **kwds);def _savez(file, args, kwds, compress);"
3465,1,e62f61a, Charles Harris <charlesr.harris@gmail.com>," Sat, 22 Jun 2013 11:06:38 -0600","ct: [PATCH] BUG: _savez function broken by temporary file size limit.On Linux systems the  _savez function creates temporary files in the/tmp directory before adding them to the zip archive.  Recent Linuxdistros have started mounting tmpfs on /tmp and, because tmpfs residesin memory, file size is limited by memory size. The approach taken hereis to create the temporary files in the same directory as the outputfile when possible, otherwise fall back on the default directory usedby tempfile.mkstemp.The test_big_arrays test in test_npyio.py tests this, allthough it wasnot originally intended as a test for this specific problem.  It isfixed so that the big npz output file is put in the current workingdirectory.Closes #3464",2,21,7,numpy/lib/tests/test_io.py,[u'11'],8,3," -144,9 +144,14 ;","def roundtrip(self, *args, **kwargs);"
3463,8,5e71756, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 26 May 2013 17:08:27 +0200",ct: [PATCH 1/8] ENH: improve performance of byte_bounds for continous arraysreduces the memmap slicing performance issue in gh-3364 to only about a4 times slowdown compared to 10 times.,1,0,2,numpy/lib/utils.py,[u'3'],1,2," -255,12 +255,11 ;",def byte_bounds(a);
3463,8,d7a98ec, Julian Taylor <jtaylor.debian@googlemail.com>," Tue, 11 Jun 2013 23:50:05 +0200","ct: [PATCH 2/8] BUG: fix non-swapping strided copies in GetStridedCopySwapFixed PyArray_GetStridedCopySwap{Pair,}Fn returns paths that do not swapthe data.It never triggered because the alignment requirement for complex datawas too low (4-8 bytes) and always fullfiled by the memory allocator.As this is now fixed it caused failures on sparc with 16 byte longdoubles.",1,3,3,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,[u'6'],3,3," -555,7 +555,7 ; -603,7 +603,7 ; -620,7 +620,7 ;",NPY_NO_EXPORT PyArray_StridedUnaryOp ;NPY_NO_EXPORT PyArray_StridedUnaryOp ;NPY_NO_EXPORT PyArray_StridedUnaryOp ;
3463,8,d2a4cc7, Julian Taylor <jtaylor.debian@googlemail.com>," Mon, 27 May 2013 20:54:13 +0200",ct: [PATCH 3/8] BUG: fix small leak in datetime metadata initialization,1,0,0,numpy/core/src/multiarray/arraytypes.c.src,[u'2'],1,1," -3971,7 +3971,7 ;",initialize_builtin_datetime_metadata(void;
3463,8,ef4a746, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 25 May 2013 22:37:07 +0200",ct: [PATCH 4/8] BUG: set filename to None for memmaps of unnamed filesCloses gh-3302,2,13,2,numpy/core/memmap.py,[u'7'],6,1," -262,8 +262,13 ;","def __new__(subtype, filename, dtype=uint8, mode='r+', offset=0;"
3463,8,ef4a746, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 25 May 2013 22:37:07 +0200",ct: [PATCH 4/8] BUG: set filename to None for memmaps of unnamed filesCloses gh-3302,2,13,2,numpy/core/tests/test_memmap.py,[u'8'],7,1," -1,5 +1,5 ; -38,6 +38,12 ;",;def test_open_with_filename(self);
3463,8,3a587d7, Julian Taylor <jtaylor.debian@googlemail.com>," Tue, 26 Mar 2013 19:35:06 +0100",ct: [PATCH 5/8] BUG: fix undefined function and add integer divisions in numarray,1,18,5,numpy/numarray/functions.py,[u'23'],18,5," -216,8 +216,8 ; -228,7 +228,7 ; -259,20 +259,33 ;","def fromfile(infile, type=None, shape=None, sizing=STRICT;def fromfile(infile, type=None, shape=None, sizing=STRICT;def fromfile(infile, type=None, shape=None, sizing=STRICT;"
3463,8,c065d60, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 14 Dec 2012 14:30:05 +0100",ct: [PATCH 6/8] BUG: fix a spelling error in mtrand.beta docstring,1,0,0,numpy/random/mtrand/mtrand.pyx,[u'2'],1,1," -1517,7 +1517,7 ;",cdef class RandomState;
3463,8,de7a8f2, Julian Taylor <jtaylor.debian@googlemail.com>," Wed, 5 Dec 2012 19:57:38 +0100",ct: [PATCH 7/8] BUG: add platform specific python include directories to search pathsthe generic and platform specific path diverge in python3.3 in ubuntu 13.04,1,8,2,numpy/distutils/system_info.py,[u'10'],8,2," -1636,6 +1636,9 ; -1767,12 +1770,15 ;",def __init__(self);def calc_info(self);
3463,8,ba29f6a, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 29 Mar 2013 16:40:31 +0100","ct: [PATCH 8/8] BUG: hardcode some known shared library extensionsthe configuration variables are not a reliable mean to get the sharedlibrary extension. darwin, windows and debug linux are wrong in thesevariables.SHLIB_SUFFIX is also wrong as of python 3.3.1closes #3057",2,40,6,numpy/distutils/misc_util.py,[u'28'],23,5," -606,11 +606,29 ;",def get_shared_lib_extension(is_python_ext=False);
3463,8,ba29f6a, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 29 Mar 2013 16:40:31 +0100","ct: [PATCH 8/8] BUG: hardcode some known shared library extensionsthe configuration variables are not a reliable mean to get the sharedlibrary extension. darwin, windows and debug linux are wrong in thesevariables.SHLIB_SUFFIX is also wrong as of python 3.3.1closes #3057",2,40,6,numpy/distutils/tests/test_misc_util.py,[u'18'],17,1," -1,7 +1,8 ; -53,6 +54,21 ;",;def test_gpaths(self);
3461,1,2ea4cb3, Charles Harris <charlesr.harris@gmail.com>," Fri, 21 Jun 2013 16:20:04 -0600","ct: [PATCH] BUG: Make np.load transfer file ownership to the returned NpzFile.This assures that when the loaded file is closed it also closes thefile descriptor, avoiding a resource warning in Python3.Closes #3457.",2,22,5,numpy/lib/npyio.py,[u'13'],9,4," -377,15 +377,20 ;","def load(file, mmap_mode=None);"
3461,1,2ea4cb3, Charles Harris <charlesr.harris@gmail.com>," Fri, 21 Jun 2013 16:20:04 -0600","ct: [PATCH] BUG: Make np.load transfer file ownership to the returned NpzFile.This assures that when the loaded file is closed it also closes thefile descriptor, avoiding a resource warning in Python3.Closes #3457.",2,22,5,numpy/lib/tests/test_io.py,[u'14'],13,1," -221,7 +221,7 ; -250,6 +250,18 ;",def test_not_closing_opened_fid(self);def test_closing_fid(self);
3460,1,12e06a2, Charles Harris <charlesr.harris@gmail.com>," Thu, 20 Jun 2013 16:49:49 -0600","ct: [PATCH] BUG: Campanion Matrix was scalar, not matrix for degree 1.The companion matrices returned by the various polynomial types wasa scalar in the degree one case instead of a 2-D array. Fix that andadd a test to check for that result.Closes #3459.",12,102,6,numpy/polynomial/chebyshev.py,[u'2'],1,1," -1795,7 +1795,7 ;",def chebcompanion(c);
3460,1,12e06a2, Charles Harris <charlesr.harris@gmail.com>," Thu, 20 Jun 2013 16:49:49 -0600","ct: [PATCH] BUG: Campanion Matrix was scalar, not matrix for degree 1.The companion matrices returned by the various polynomial types wasa scalar in the degree one case instead of a 2-D array. Fix that andadd a test to check for that result.Closes #3459.",12,102,6,numpy/polynomial/hermite.py,[u'2'],1,1," -1573,7 +1573,7 ;",def hermcompanion(c);
3460,1,12e06a2, Charles Harris <charlesr.harris@gmail.com>," Thu, 20 Jun 2013 16:49:49 -0600","ct: [PATCH] BUG: Campanion Matrix was scalar, not matrix for degree 1.The companion matrices returned by the various polynomial types wasa scalar in the degree one case instead of a 2-D array. Fix that andadd a test to check for that result.Closes #3459.",12,102,6,numpy/polynomial/hermite_e.py,[u'2'],1,1," -1570,7 +1570,7 ;",def hermecompanion(c);
3460,1,12e06a2, Charles Harris <charlesr.harris@gmail.com>," Thu, 20 Jun 2013 16:49:49 -0600","ct: [PATCH] BUG: Campanion Matrix was scalar, not matrix for degree 1.The companion matrices returned by the various polynomial types wasa scalar in the degree one case instead of a 2-D array. Fix that andadd a test to check for that result.Closes #3459.",12,102,6,numpy/polynomial/laguerre.py,[u'2'],1,1," -1571,7 +1571,7 ;",def lagcompanion(c);
3460,1,12e06a2, Charles Harris <charlesr.harris@gmail.com>," Thu, 20 Jun 2013 16:49:49 -0600","ct: [PATCH] BUG: Campanion Matrix was scalar, not matrix for degree 1.The companion matrices returned by the various polynomial types wasa scalar in the degree one case instead of a 2-D array. Fix that andadd a test to check for that result.Closes #3459.",12,102,6,numpy/polynomial/legendre.py,[u'2'],1,1," -1596,7 +1596,7 ;",def legcompanion(c);
3460,1,12e06a2, Charles Harris <charlesr.harris@gmail.com>," Thu, 20 Jun 2013 16:49:49 -0600","ct: [PATCH] BUG: Campanion Matrix was scalar, not matrix for degree 1.The companion matrices returned by the various polynomial types wasa scalar in the degree one case instead of a 2-D array. Fix that andadd a test to check for that result.Closes #3459.",12,102,6,numpy/polynomial/polynomial.py,[u'3'],2,1," -39,6 +39,7 ; -1417,7 +1418,7 ;",;def polycompanion(c);
3460,1,12e06a2, Charles Harris <charlesr.harris@gmail.com>," Thu, 20 Jun 2013 16:49:49 -0600","ct: [PATCH] BUG: Campanion Matrix was scalar, not matrix for degree 1.The companion matrices returned by the various polynomial types wasa scalar in the degree one case instead of a 2-D array. Fix that andadd a test to check for that result.Closes #3459.",12,102,6,numpy/polynomial/tests/test_chebyshev.py,[u'16'],16,0," -440,6 +440,22 ;",def f(x) ;
3460,1,12e06a2, Charles Harris <charlesr.harris@gmail.com>," Thu, 20 Jun 2013 16:49:49 -0600","ct: [PATCH] BUG: Campanion Matrix was scalar, not matrix for degree 1.The companion matrices returned by the various polynomial types wasa scalar in the degree one case instead of a 2-D array. Fix that andadd a test to check for that result.Closes #3459.",12,102,6,numpy/polynomial/tests/test_hermite.py,[u'16'],16,0," -430,6 +430,22 ;",def f(x) ;
3460,1,12e06a2, Charles Harris <charlesr.harris@gmail.com>," Thu, 20 Jun 2013 16:49:49 -0600","ct: [PATCH] BUG: Campanion Matrix was scalar, not matrix for degree 1.The companion matrices returned by the various polynomial types wasa scalar in the degree one case instead of a 2-D array. Fix that andadd a test to check for that result.Closes #3459.",12,102,6,numpy/polynomial/tests/test_hermite_e.py,[u'16'],16,0," -427,6 +427,22 ;",def f(x) ;
3460,1,12e06a2, Charles Harris <charlesr.harris@gmail.com>," Thu, 20 Jun 2013 16:49:49 -0600","ct: [PATCH] BUG: Campanion Matrix was scalar, not matrix for degree 1.The companion matrices returned by the various polynomial types wasa scalar in the degree one case instead of a 2-D array. Fix that andadd a test to check for that result.Closes #3459.",12,102,6,numpy/polynomial/tests/test_laguerre.py,[u'16'],16,0," -425,6 +425,22 ;",def f(x) ;
3460,1,12e06a2, Charles Harris <charlesr.harris@gmail.com>," Thu, 20 Jun 2013 16:49:49 -0600","ct: [PATCH] BUG: Campanion Matrix was scalar, not matrix for degree 1.The companion matrices returned by the various polynomial types wasa scalar in the degree one case instead of a 2-D array. Fix that andadd a test to check for that result.Closes #3459.",12,102,6,numpy/polynomial/tests/test_legendre.py,[u'16'],16,0," -428,6 +428,22 ;",def f(x) ;
3460,1,12e06a2, Charles Harris <charlesr.harris@gmail.com>," Thu, 20 Jun 2013 16:49:49 -0600","ct: [PATCH] BUG: Campanion Matrix was scalar, not matrix for degree 1.The companion matrices returned by the various polynomial types wasa scalar in the degree one case instead of a 2-D array. Fix that andadd a test to check for that result.Closes #3459.",12,102,6,numpy/polynomial/tests/test_polynomial.py,[u'15'],15,0," -383,6 +383,21 ;",def test_polyvander3d(self) ;
3456,1,1b6926f, Julian Taylor <jtaylor.debian@googlemail.com>," Wed, 19 Jun 2013 21:53:57 +0200","ct: [PATCH] BUG: fix uninitialized-use on invalid sort kindorign is unset at that point but used in the fail goto,can probably only be triggered by using the C-api wrong.",1,2,3,numpy/core/src/multiarray/item_selection.c,[u'5'],2,3," -1045,6 +1045,8 ; -1061,9 +1063,6 ;","PyArray_Sort(PyArrayObject *op, int axis, NPY_SORTKIND which;PyArray_Sort(PyArrayObject *op, int axis, NPY_SORTKIND which;"
3455,1,c654c04, Andrew Horton <andrew.j.horton@gmail.com>," Sun, 16 Jun 2013 18:48:58 +0100","ct: [PATCH] Call to byte_swap_vector should use dst, not d1, because this is modified by the call to the strided memcpy and will end up pointing after the end of the destination buffer in that case.",1,6,7,numpy/core/src/multiarray/ctors.c,[u'13'],6,7," -373,15 +373,14 ; -390,7 +389,7 ;","NPY_NO_EXPORT voi;copy_and_swap(void *dst, void *src, int itemsize, npy_intp numitems;"
3453,1,ea0da13, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 17 Jun 2013 15:08:00 +0200",ct: [PATCH] BUG: Fix failing python long behaviour and possible heisen bugThe priority error fixes np.float_(64) + python_long not workinganymore. The second change reformats thePyArray_GetAttrString_SuppressException to avoid a possibleheisenbug decrefing an object before use.,3,35,28,numpy/core/src/multiarray/common.c,[u'46'],15,13," -49,31 +49,35 ;","PyArray_GetAttrString_SuppressException(PyObject *obj, char *name;"
3453,1,ea0da13, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 17 Jun 2013 15:08:00 +0200",ct: [PATCH] BUG: Fix failing python long behaviour and possible heisen bugThe priority error fixes np.float_(64) + python_long not workinganymore. The second change reformats thePyArray_GetAttrString_SuppressException to avoid a possibleheisenbug decrefing an object before use.,3,35,28,numpy/core/src/multiarray/multiarraymodule.c,[u'12'],3,5," -70,14 +70,12 ;","PyArray_GetPriority(PyObject *obj, double default_;"
3453,1,ea0da13, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 17 Jun 2013 15:08:00 +0200",ct: [PATCH] BUG: Fix failing python long behaviour and possible heisen bugThe priority error fixes np.float_(64) + python_long not workinganymore. The second change reformats thePyArray_GetAttrString_SuppressException to avoid a possibleheisenbug decrefing an object before use.,3,35,28,numpy/core/tests/test_regression.py,[u'5'],3,0," -263,6 +263,11 ;","def test_add_identity(self,level=rlevel);"
3452,2,48e2039, Eric Firing <efiring@hawaii.edu>," Sat, 15 Jun 2013 16:47:55 -1000",ct: [PATCH 1/2] BUG: np.ma.compress treated inputs in wrong order; closes #2495,2,21,2,numpy/ma/core.py,[u'10'],8,2," -5930,9 +5930,10 ; -5944,6 +5945,11 ; -5960,7 +5966,7 ;","class _frommethod;def getdoc(self);def __call__(self, a, *args, **params);"
3452,2,48e2039, Eric Firing <efiring@hawaii.edu>," Sat, 15 Jun 2013 16:47:55 -1000",ct: [PATCH 1/2] BUG: np.ma.compress treated inputs in wrong order; closes #2495,2,21,2,numpy/ma/tests/test_core.py,[u'13'],13,0," -3330,6 +3330,19 ;",def test_on_ndarray(self);
3452,2,0a950e6, Eric Firing <efiring@hawaii.edu>," Sat, 15 Jun 2013 15:31:52 -1000",ct: [PATCH 2/2] BUG: add __len__ method to ma.mvoid; closes #576,2,7,0,numpy/ma/core.py,[u'3'],3,0," -5593,6 +5593,9 ;",def __iter__(self);
3452,2,0a950e6, Eric Firing <efiring@hawaii.edu>," Sat, 15 Jun 2013 15:31:52 -1000",ct: [PATCH 2/2] BUG: add __len__ method to ma.mvoid; closes #576,2,7,0,numpy/ma/tests/test_core.py,[u'4'],4,0," -3489,6 +3489,10 ;",def test_setitem(self);
3451,18,c7fff1b, Bill Spotz <wfspotz@sandia.gov>," Mon, 11 Mar 2013 20:38:18 -0600","ct: [PATCH 01/18] Got rid of a unit testThis test fails after updating numpy.i to deal with deprecated code.My investigation into the source of the failure is that the test nevershould have passed, so I commented it out.  I could be wrong.",1,12,9,doc/swig/test/testFortran.py,[u'21'],12,9," -24,16 +24,19 ; -41,7 +44,7 ;","def __init__(self, methodName=""runTests"");def testSecondElementFortran(self);"
3451,18,671cde1, Bill Spotz <wfspotz@sandia.gov>," Mon, 11 Mar 2013 20:39:27 -0600","ct: [PATCH 02/18] Upgrade numpy.iThe numpy.i file is now compliant with version 1.7 deprecations, butalso works with previous versions of numpy.  I have tested back tonumpy 1.4.1.Added 4D typemaps and memory-managed typemaps.  These were supplied byEgor Zindy.Fixed bugs in 3D typemaps.  I was referencing $3 when I should havebeen referencing $4.  Thanks to Egor Zindy for catching this.",1,1030,140,doc/swig/numpy.i,[u'1170'],47,7," -6,11 +6,23 ; -23,24 +35,45 ; -50,42 +83,59 ; -94,7 +144,8 ; -113,11 +164,12 ; -128,11 +180,12 ; -141,7 +194,7 ; -154,8 +207,10 ; -166,9 +221,9 ; -180,8 +235,10 ; -191,8 +248,10 ; -204,13 +263,14 ; -231,13 +291,14 ; -251,13 +312,12 ; -298,14 +358,16 ; -316,7 +378,9 ; -340,7 +404,8 ; -349,7 +414,9 ; -389,104 +456,144 ; -546,7 +653,8 ; -573,7 +681,8 ; -601,7 +710,8 ; -629,7 +739,8 ; -685,7 +796,8 ; -714,7 +826,8 ; -743,7 +856,8 ; -772,7 +886,8 ; -893,7 +1008,8 ; -909,6 +1025,161 ; -1204,6 +1475,127 ; -1213,7 +1605,7 ; -1231,7 +1623,7 ; -1259,7 +1651,7 ; -1287,7 +1679,7 ; -1305,7 +1697,7 ; -1318,6 +1710,24 ; -1336,7 +1746,7 ; -1355,7 +1765,7 ; -1375,7 +1785,7 ; -1395,7 +1805,7 ; -1415,8 +1825,8 ; -1436,8 +1846,8 ; -1459,7 +1869,7 ; -1481,7 +1891,7 ; -1503,8 +1913,8 ; -1526,12 +1936,492 ;",;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
3451,18,37e75e6, Bill Spotz <wfspotz@sandia.gov>," Mon, 11 Mar 2013 20:40:46 -0600","ct: [PATCH 03/18] Removed doc from list of sub-directoriesThe doc directory has been moved elsewhere, so I removed the referenceto it in the Makefile.",1,0,0,doc/swig/Makefile,[u'2'],1,1," -1,5 +1,5 ;",;
3451,18,cdf04e9, Bill Spotz <wfspotz@sandia.gov>," Mon, 11 Mar 2013 21:06:36 -0600",ct: [PATCH 04/18] Re-instated a Python 3 fix,1,2,0,doc/swig/numpy.i,[u'2'],2,0," -83,9 +83,11 ;",;
3451,18,64d04cd, Bill Spotz <wfspotz@sandia.gov>," Mon, 11 Mar 2013 21:16:42 -0600",ct: [PATCH 05/18] Added Egor's ARGOUTVIEWM_ARRAY3 typemaps,1,110,0,doc/swig/numpy.i,[u'110'],55,0," -2196,6 +2196,116 ;",;
3451,18,ed4c76b, Bill Spotz <wfspotz@sandia.gov>," Mon, 11 Mar 2013 21:31:16 -0600",ct: [PATCH 06/18] Initialize all DATA_TYPE* data_temp variables to NULL,1,53,53,doc/swig/numpy.i,[u'106'],27,28," -1738,7 +1738,7 ; -1757,7 +1757,7 ; -1776,7 +1776,7 ; -1796,7 +1796,7 ; -1816,7 +1816,7 ; -1837,7 +1837,7 ; -1858,8 +1858,8 ; -1881,7 +1881,7 ; -1902,8 +1902,8 ; -1925,8 +1925,8 ; -1948,8 +1948,8 ; -1972,8 +1972,8 ; -1996,8 +1996,8 ; -2021,8 +2021,8 ; -2050,7 +2050,7 ; -2074,7 +2074,7 ; -2098,7 +2098,7 ; -2123,7 +2123,7 ; -2148,7 +2148,7 ; -2174,7 +2174,7 ; -2200,8 +2200,8 ; -2227,8 +2227,8 ; -2254,8 +2254,8 ; -2282,8 +2282,8 ; -2310,8 +2310,8 ; -2338,8 +2338,8 ; -2366,8 +2366,8 ; -2395,8 +2395,8 ; -2421,11 +2421,11 ; -2448,12 +2448,12 ; -2480,8 +2480,8 ; -2509,8 +2509,8 ;",;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
3451,18,897f335, Bill Spotz <wfspotz@sandia.gov>," Thu, 14 Mar 2013 15:45:09 -0600","ct: [PATCH 07/18] Updated the numpy.i documentationThe RST documentation file is now consistent with the C macros, Cfunctions, and list of typemap signatures of the latest numpy.i file.",1,163,37,doc/source/reference/swig.interface-file.rst,[u'200'],22,5," -49,13 +49,13 ; -76,16 +76,16 ; -169,8 +169,7 ; -232,7 +231,7 ; -266,6 +265,14 ; -302,6 +309,14 ; -335,6 +350,10 ; -345,8 +364,8 ; -354,7 +373,7 ; -383,9 +402,50 ; -556,10 +616,34 ; -576,7 +660,7 ; -587,7 +671,7 ; -668,6 +752,23 ; -688,6 +789,26 ; -772,9 +893,9 ; -848,7 +969,7 ; -857,10 +978,10 ; -903,27 +1024,32 ;","internally convert it to a NumPy array before extracting its dat;either by type or by type and name.  We will refer to such lists a;Using numpy.;could be any of the C data types listed above, and ``DIM_TYPE`` whic;of array.  The input array signatures ar;signatures ar;argument.  The argout signatures ar;or 3D.  This is because of a quirk with the `SWIG`_ typemap syntax an;the user.  This can be dangerous.  There is almost no way to guarante;typemap signatures are therefor;Macro;Routine;Routine;Routine;Routine;Routine;There are other wrapping situations in which ``numpy.i`` may b;helpful when you encounter them;between NumPy arrays and C arrays;"
3451,18,179985f, Bill Spotz <wfspotz@sandia.gov>," Thu, 14 Mar 2013 15:47:17 -0600",ct: [PATCH 08/18] Updated numpy.i testing documentationSimple updates to include proper statistics on the number of typemapsignatures supported and the number of individual unit testsimplemented.,1,3,3,doc/source/reference/swig.testing.rst,[u'6'],3,3," -6,11 +6,11 ;",Introductio;
3451,18,4dcb067, Bill Spotz <wfspotz@sandia.gov>," Thu, 14 Mar 2013 15:50:32 -0600","ct: [PATCH 09/18] Minor adjustments to numpy.iThis includes so formatting adjustments, the removal of two unusedarguments for the make_fortran() function, fixing the number ofsupported typemap signatures, including the ARGOUT_ARRAY4 typemapsignature in the comments section, and renumbering the typemapsignatures.",1,34,34,doc/swig/numpy.i,[u'68'],28,28," -183,7 +183,7 ; -238,9 +238,7 ; -304,7 +302,7 ; -501,7 +499,7 ; -556,41 +554,43 ;",;;;;;
3451,18,91f083a, Egor Zindy <ezindy@gmail.com>," Sat, 16 Mar 2013 12:31:39 +0000",ct: [PATCH 10/18] fixed the testResize1 test in testArray.py -- Changed order of the resize arguments in Array2.h and replaced len(XXXnumpyarray) with XXXnumpyarray.size,2,7,7,doc/swig/test/Array2.h,[u'2'],1,1," -32,7 +32,7 ;",class Array;
3451,18,91f083a, Egor Zindy <ezindy@gmail.com>," Sat, 16 Mar 2013 12:31:39 +0000",ct: [PATCH 10/18] fixed the testResize1 test in testArray.py -- Changed order of the resize arguments in Array2.h and replaced len(XXXnumpyarray) with XXXnumpyarray.size,2,7,7,doc/swig/test/testArray.py,[u'12'],6,6," -69,7 +69,7 ; -177,11 +177,11 ;",def testResize1(self);def testResize0(self);
3451,18,1402d2c, Egor Zindy <ezindy@gmail.com>," Sat, 16 Mar 2013 12:40:34 +0000",ct: [PATCH 11/18] removed the note about testResize1 failing in testArray.py,1,0,5,doc/swig/test/Array.i,[u'5'],0,5," -50,11 +50,6 ;",;
3451,18,0caf9d7, zindy <ezindy@gmail.com>," Sat, 8 Jun 2013 23:27:28 +0200",ct: [PATCH 12/18] Fixed the capsule / cobject memory destructor. Added types to deal with lists of arrays and lists of tensors as input and inplace types.,1,676,165,doc/swig/numpy.i,[u'841'],44,11," -3,7 +3,7 ; -132,6 +132,16 ; -499,7 +509,7 ; -514,83 +524,87 ; -933,6 +947,90 ; -1085,6 +1183,91 ; -1405,6 +1588,74 ; -1523,6 +1774,76 ; -1617,7 +1938,7 ; -1645,7 +1966,7 ; -1673,7 +1994,7 ; -1691,7 +2012,7 ; -1709,7 +2030,7 ; -1717,7 +2038,7 ; -1727,7 +2048,7 ; -1748,9 +2069,11 ; -1767,9 +2090,11 ; -1787,9 +2112,11 ; -1807,9 +2134,11 ; -1829,6 +2158,7 ; -1850,6 +2180,7 ; -1871,9 +2202,11 ; -1893,9 +2226,11 ; -1917,6 +2252,7 ; -1940,6 +2276,7 ; -1951,7 +2288,6 ; -1963,9 +2299,11 ; -1975,7 +2313,6 ; -1987,9 +2324,11 ; -1999,7 +2338,6 ; -2011,8 +2349,9 ; -2024,7 +2363,6 ; -2036,8 +2374,9 ; -2052,7 +2391,6 ; -2061,13 +2399,24 ; -2076,7 +2425,6 ; -2085,13 +2433,24 ; -2100,7 +2459,6 ; -2110,13 +2468,24 ; -2125,7 +2494,6 ; -2135,13 +2503,24 ; -2150,7 +2529,6 ; -2160,12 +2538,22 ; -2176,7 +2564,6 ; -2186,12 +2573,22 ; -2203,7 +2600,6 ; -2214,13 +2610,24 ; -2230,7 +2637,6 ; -2241,13 +2647,24 ; -2257,7 +2674,6 ; -2268,12 +2684,22 ; -2285,7 +2711,6 ; -2296,12 +2721,22 ; -2313,7 +2748,6 ; -2325,13 +2759,24 ; -2341,7 +2786,6 ; -2353,13 +2797,24 ; -2369,7 +2824,6 ; -2381,12 +2835,22 ; -2398,7 +2862,6 ; -2410,12 +2873,22 ; -2427,7 +2900,6 ; -2439,13 +2911,24 ; -2455,7 +2938,6 ; -2467,13 +2949,24 ; -2483,7 +2976,6 ; -2495,12 +2987,22 ; -2512,7 +3014,6 ; -2524,12 +3025,22 ;",;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
3451,18,938f586, Egor Zindy <ezindy@gmail.com>," Sat, 8 Jun 2013 22:52:53 +0100",ct: [PATCH 13/18] cosmetic changes to numpy.i,1,0,8,doc/swig/numpy.i,[u'9'],1,8," -947,7 +947,6 ; -1029,7 +1028,6 ; -1183,7 +1181,7 ; -1267,7 +1265,6 ; -1588,7 +1585,6 ; -1654,7 +1650,6 ; -1774,7 +1769,6 ; -1842,7 +1836,6 ;",;;;;;;;;
3451,18,a21d825, Egor Zindy <ezindy@gmail.com>," Sat, 8 Jun 2013 22:59:48 +0100",ct: [PATCH 14/18] cleaned-up loop indexes in Tensor.cxx,3,52,52,doc/swig/test/Tensor.cxx,[u'80'],24,24," -7,11 +7,11 ; -35,32 +35,32 ; -68,31 +68,31 ; -104,14 +104,14 ;",";TYPE SNAME ## Norm(TYPE tensor[2][2][2]) {	     ;TYPE SNAME ## Min(int rows, int cols, int num, TYPE * tensor) {	;void SNAME ## LUSplit(TYPE tensor[2][2][2], TYPE lower[2][2][2], ;"
3451,18,a21d825, Egor Zindy <ezindy@gmail.com>," Sat, 8 Jun 2013 22:59:48 +0100",ct: [PATCH 14/18] cleaned-up loop indexes in Tensor.cxx,3,52,52,doc/swig/test/Tensor.h,[u'16'],5,5," -5,11 +5,11 ; -29,11 +29,11 ;",;;
3451,18,a21d825, Egor Zindy <ezindy@gmail.com>," Sat, 8 Jun 2013 22:59:48 +0100",ct: [PATCH 14/18] cleaned-up loop indexes in Tensor.cxx,3,52,52,doc/swig/test/Tensor.i,[u'8'],2,3," -17,15 +17,15 ;",;
3451,18,a2bac9d, Egor Zindy <ezindy@gmail.com>," Sat, 8 Jun 2013 23:02:15 +0100","ct: [PATCH 15/18] Added tests for 4D tensors. Now using a consistant cubes,slices,rows,columns index order everywhere.",4,635,0,doc/swig/test/SuperTensor.cxx,[u'144'],15,0," -0,0 +1,144 ;",;
3451,18,a2bac9d, Egor Zindy <ezindy@gmail.com>," Sat, 8 Jun 2013 23:02:15 +0100","ct: [PATCH 15/18] Added tests for 4D tensors. Now using a consistant cubes,slices,rows,columns index order everywhere.",4,635,0,doc/swig/test/SuperTensor.h,[u'53'],6,0," -0,0 +1,53 ;",;
3451,18,a2bac9d, Egor Zindy <ezindy@gmail.com>," Sat, 8 Jun 2013 23:02:15 +0100","ct: [PATCH 15/18] Added tests for 4D tensors. Now using a consistant cubes,slices,rows,columns index order everywhere.",4,635,0,doc/swig/test/SuperTensor.i,[u'50'],5,0," -0,0 +1,50 ;",;
3451,18,a2bac9d, Egor Zindy <ezindy@gmail.com>," Sat, 8 Jun 2013 23:02:15 +0100","ct: [PATCH 15/18] Added tests for 4D tensors. Now using a consistant cubes,slices,rows,columns index order everywhere.",4,635,0,doc/swig/test/testSuperTensor.py,[u'388'],39,0," -0,0 +1,388 ;",;
3451,18,1ed31cd, Egor Zindy <ezindy@gmail.com>," Sun, 16 Jun 2013 21:46:36 +0100","ct: [PATCH 16/18] =?UTF-8?q?Removed=20'static'=20keyword=20from=20pyf?= =?UTF-8?q?ragments.swg=20altoghether.=20I've=20had=20the=20following=20er?= =?UTF-8?q?rors=20In=20function=20=E2=80=98SWIG=5FAsVal=5Flong=E2=80=99:?= =?UTF-8?q?=20error:=20initialiser=20element=20is=20not=20constant=20In=20?= =?UTF-8?q?function=20=E2=80=98SWIG=5FAsVal=5Funsigned=5FSS=5Flong?= =?UTF-8?q?=E2=80=99:=20error:=20initialiser=20element=20is=20not=20consta?= =?UTF-8?q?nt,=20BOTH=20in=20Windows/MinGW=20and=20Linux=20when=20compilin?= =?UTF-8?q?g=20with=20gcc?=MIME-Version: 1.0Content-Type: text/plain; charset=UTF-8Content-Transfer-Encoding: 8bit",1,2,2,doc/swig/pyfragments.swg,[u'4'],2,2," -22,7 +22,7 ; -74,7 +74,7 ;",;;
3451,18,f56411b, Egor Zindy <ezindy@gmail.com>," Sun, 16 Jun 2013 21:59:27 +0100",ct: [PATCH 17/18] Added mention of the SuperTensor tests in the README file,1,40,20,doc/swig/README,[u'60'],38,19," -9,8 +9,8 ; -32,6 +32,11 ; -72,8 +77,21 ; -87,25 +105,27 ;",distribution;The files related to testing are are in the test subdirectory:;Tensor.h:;The objective for the INPLACE_ARRAY signatures is for SWIG to generat;
3451,18,f70632f, Egor Zindy <ezindy@gmail.com>," Sun, 16 Jun 2013 22:50:40 +0100",ct: [PATCH 18/18] Added more mentions of the SuperTensor tests and corrected the number of typemaps and tests (currently 1427 unit tests passed with 'make test': 372+324+324+324+40+19+24),2,10,8,doc/source/reference/swig.interface-file.rst,[u'4'],2,2," -1024,7 +1024,7 ; -1043,7 +1043,7 ;",between NumPy arrays and C arrays;The ``numpy.i`` interface file also provides additional tools fo;
3451,18,f70632f, Egor Zindy <ezindy@gmail.com>," Sun, 16 Jun 2013 22:50:40 +0100",ct: [PATCH 18/18] Added more mentions of the SuperTensor tests and corrected the number of typemaps and tests (currently 1427 unit tests passed with 'make test': 372+324+324+324+40+19+24),2,10,8,doc/source/reference/swig.testing.rst,[u'14'],8,6," -6,11 +6,11 ; -56,9 +56,11 ;",Introductio;each data type supported;
3450,1,fe62f17, Eric Firing <efiring@hawaii.edu>," Sat, 15 Jun 2013 21:33:17 -1000","ct: [PATCH] BUG: field assignment in masked array did not reset mask; closes #2403The previous behavior when setting a field after indexing toselect an element was suitable for the hard mask case, butnot for the default soft mask.  In addition, the _hardmaskvalue was not being set at all in the mvoid instance.  Withthis changeset, the _hardmask is passed in and __setitem__takes it into account.Conflicts:	numpy/ma/core.py",2,32,3,numpy/ma/core.py,[u'11'],8,3," -2951,7 +2951,7 ; -5509,11 +5509,13 ; -5543,7 +5545,10 ;","def __getitem__(self, indx);class mvoid(MaskedArray);def __getitem__(self, indx);"
3450,1,fe62f17, Eric Firing <efiring@hawaii.edu>," Sat, 15 Jun 2013 21:33:17 -1000","ct: [PATCH] BUG: field assignment in masked array did not reset mask; closes #2403The previous behavior when setting a field after indexing toselect an element was suitable for the hard mask case, butnot for the default soft mask.  In addition, the _hardmaskvalue was not being set at all in the mvoid instance.  Withthis changeset, the _hardmask is passed in and __setitem__takes it into account.Conflicts:	numpy/ma/core.py",2,32,3,numpy/ma/tests/test_core.py,[u'24'],24,0," -3453,6 +3453,30 ;",def test_getitem(self);
3449,1,fb4edf7, Eric Firing <efiring@hawaii.edu>," Sat, 15 Jun 2013 21:33:17 -1000","ct: [PATCH] BUG: field assignment in masked array did not reset mask; closes #2403The previous behavior when setting a field after indexing toselect an element was suitable for the hard mask case, butnot for the default soft mask.  In addition, the _hardmaskvalue was not being set at all in the mvoid instance.  Withthis changeset, the _hardmask is passed in and __setitem__takes it into account.",2,32,3,numpy/ma/core.py,[u'11'],8,3," -3003,7 +3003,7 ; -5560,10 +5560,12 ; -5593,7 +5595,10 ;","def __getitem__(self, indx);class mvoid(MaskedArray);def __getitem__(self, indx);"
3449,1,fb4edf7, Eric Firing <efiring@hawaii.edu>," Sat, 15 Jun 2013 21:33:17 -1000","ct: [PATCH] BUG: field assignment in masked array did not reset mask; closes #2403The previous behavior when setting a field after indexing toselect an element was suitable for the hard mask case, butnot for the default soft mask.  In addition, the _hardmaskvalue was not being set at all in the mvoid instance.  Withthis changeset, the _hardmask is passed in and __setitem__takes it into account.",2,32,3,numpy/ma/tests/test_core.py,[u'24'],24,0," -3504,6 +3504,30 ;",def test_getitem(self);
3448,1,c2465b6, Eric Firing <efiring@hawaii.edu>," Sat, 15 Jun 2013 16:47:55 -1000",ct: [PATCH] BUG: np.ma.compress treated inputs in wrong order; closes #2495,2,21,2,numpy/ma/core.py,[u'10'],8,2," -5975,9 +5975,10 ; -5989,6 +5990,11 ; -6005,7 +6011,7 ;","class _frommethod;def getdoc(self);def __call__(self, a, *args, **params);"
3448,1,c2465b6, Eric Firing <efiring@hawaii.edu>," Sat, 15 Jun 2013 16:47:55 -1000",ct: [PATCH] BUG: np.ma.compress treated inputs in wrong order; closes #2495,2,21,2,numpy/ma/tests/test_core.py,[u'13'],13,0," -3381,6 +3381,19 ;",def test_on_ndarray(self);
3447,1,216d8cb, Eric Firing <efiring@hawaii.edu>," Sat, 15 Jun 2013 15:31:52 -1000",ct: [PATCH] BUG: add __len__ method to ma.mvoid; closes #576,2,7,0,numpy/ma/core.py,[u'3'],3,0," -5643,6 +5643,9 ;",def __iter__(self);
3447,1,216d8cb, Eric Firing <efiring@hawaii.edu>," Sat, 15 Jun 2013 15:31:52 -1000",ct: [PATCH] BUG: add __len__ method to ma.mvoid; closes #576,2,7,0,numpy/ma/tests/test_core.py,[u'4'],4,0," -3527,6 +3527,10 ;",def test_setitem(self);
3445,1,9871460, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 16 Jun 2013 00:18:12 +0200","ct: [PATCH] BUG: Revert ""ENH: enable unaligned loads on x86""This reverts commit aef286debfd11a62f1c337dea55624cee7fd4d9e.x86 platform works with unaligned access but the compiler is allowed to assumeall data is aligned to its size by the C standard. This means it can vectorizeinstructions peeling only by the size of the type, if the data is not alignedto this size one ends up with data not correctly aligned for SSE instructions(16 byte).So this flag can only be enabled if autovectorization is disabled.",1,7,2,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,[u'9'],7,2," -21,10 +21,15 ;",;
3444,2,c1f5859, jmozmoz <Joachim.Herb@gmx.de>," Sat, 15 Jun 2013 20:55:30 +0200",ct: [PATCH 1/2] Fix compilation issue #3443.,1,2,2,numpy/core/include/numpy/ufuncobject.h,[u'4'],2,2," -212,7 +212,7 ; -406,7 +406,7 ;",typedef struct _tagPyUFuncObject ;typedef struct _loop1d_info ;
3444,2,0994d00, jmozmoz <Joachim.Herb@gmx.de>," Sat, 15 Jun 2013 21:06:38 +0200",ct: [PATCH 2/2] Merged with master,2,117,68,numpy/ma/extras.py,[u'14'],2,2," -455,7 +455,8 ; -515,7 +516,7 ; -531,14 +532,14 ; -547,7 +548,7 ; -555,7 +556,7 ; -580,7 +581,6 ;","def average(a, axis=None, weights=None, returned=False);def average(a, axis=None, weights=None, returned=False);def average(a, axis=None, weights=None, returned=False);def average(a, axis=None, weights=None, returned=False);def average(a, axis=None, weights=None, returned=False);def average(a, axis=None, weights=None, returned=False);"
3444,2,0994d00, jmozmoz <Joachim.Herb@gmx.de>," Sat, 15 Jun 2013 21:06:38 +0200",ct: [PATCH 2/2] Merged with master,2,117,68,numpy/ma/tests/test_extras.py,[u'171'],27,15," -16,9 +16,18 ; -53,7 +62,6 ; -132,10 +140,10 ; -167,12 +175,12 ; -193,6 +201,50 ; -206,7 +258,7 ; -230,7 +282,6 ; -270,7 +321,6 ; -295,12 +345,12 ; -316,21 +366,31 ; -338,7 +398,7 ; -410,9 +470,7 ; -422,21 +480,20 ; -452,7 +509,7 ; -461,7 +518,7 ; -474,7 +531,6 ; -528,16 +584,18 ; -550,7 +608,6 ; -576,7 +633,8 ; -604,7 +662,6 ; -620,7 +677,8 ; -634,7 +692,7 ; -647,7 +705,7 ; -696,7 +754,7 ; -711,7 +769,7 ; -726,7 +784,7 ; -737,11 +795,12 ; -758,7 +817,6 ; -767,7 +825,6 ; -794,7 +851,6 ; -809,7 +865,6 ; -822,7 +877,6 ; -833,7 +887,6 ; -845,7 +898,6 ; -853,9 +905,6 ;",;def test_masked_all(self);def test_testAverage2(self);def test_testAverage3(self);def test_onintegers_with_mask(self);def test_1d(self);def test_2d(self);def test_edges(self);def test_contiguous(self);def test_compress2d(self);def test_mask_rowcols(self);def test_dot(self);def myfunc(b);def test_2d(self);def test_2d_waxis(self);def test_3d(self);def test_2d_w_missing(self);def test_ddof(self);def test_1d_w_missing(self);def test_2d_w_missing(self);def test_polyfit(self);def test_polyfit(self);def test_polyfit(self);def test_ediff1d(self);def test_ediff1d_tobegin(self);def test_ediff1d_toend(self);def test_ediff1d_tobegin_toend(self);def test_ediff1d_ndarray(self);def test_intersect1d(self);def test_setxor1d(self);def test_in1d(self);def test_in1d_invert(self);def test_union1d(self);def test_setdiff1d(self);def test_setdiff1d_char_array(self);
3441,2,e823627, Warren Weckesser <warren.weckesser@gmail.com>," Sat, 15 Jun 2013 01:42:36 -0400",ct: [PATCH 1/2] MAINT: ma: clean up ma/test_extras.py: don't use 'import *'; PEP8 whitespaceThis commit was cherry-picked from 4a7f27601.The test for the new 'invert' option of 'in1d' was removed to resolve the conflict.Conflicts:	numpy/ma/tests/test_extras.py,1,67,60,numpy/ma/tests/test_extras.py,[u'127'],22,20," -13,9 +13,19 ; -50,7 +60,6 ; -129,10 +138,10 ; -164,12 +173,12 ; -203,7 +212,7 ; -227,7 +236,6 ; -267,7 +275,6 ; -292,12 +299,12 ; -313,21 +320,31 ; -335,7 +352,7 ; -407,9 +424,7 ; -419,21 +434,20 ; -449,7 +463,7 ; -458,7 +472,7 ; -471,7 +485,6 ; -525,16 +538,18 ; -547,7 +562,6 ; -573,7 +587,8 ; -601,7 +616,6 ; -617,7 +631,8 ; -631,7 +646,7 ; -644,7 +659,7 ; -693,7 +708,7 ; -708,7 +723,7 ; -723,7 +738,7 ; -734,11 +749,12 ; -755,7 +771,6 ; -764,7 +779,6 ; -791,7 +805,6 ; -806,7 +819,6 ; -817,7 +829,6 ; -829,7 +840,6 ; -837,9 +847,6 ;",;def test_masked_all(self);def test_testAverage2(self);def test_testAverage3(self);def test_1d(self);def test_2d(self);def test_edges(self);def test_contiguous(self);def test_compress2d(self);def test_mask_rowcols(self);def test_dot(self);def myfunc(b);def test_2d(self);def test_2d_waxis(self);def test_3d(self);def test_2d_w_missing(self);def test_ddof(self);def test_1d_w_missing(self);def test_2d_w_missing(self);def test_polyfit(self);def test_polyfit(self);def test_polyfit(self);def test_ediff1d(self);def test_ediff1d_tobegin(self);def test_ediff1d_toend(self);def test_ediff1d_tobegin_toend(self);def test_ediff1d_ndarray(self);def test_intersect1d(self);def test_setxor1d(self);def test_in1d(self);def test_union1d(self);def test_setdiff1d(self);def test_setdiff1d_char_array(self);
3441,2,db3e229, Warren Weckesser <warren.weckesser@gmail.com>," Sat, 15 Jun 2013 11:22:05 -0400",ct: [PATCH 2/2] BUG: ma: ma.average didn't handle complex arrays correctly (issue gh-2684),2,52,9,numpy/ma/extras.py,[u'14'],6,7," -453,7 +453,8 ; -513,7 +514,7 ; -529,14 +530,14 ; -545,7 +546,7 ; -553,7 +554,7 ; -578,7 +579,6 ;","def average(a, axis=None, weights=None, returned=False);def average(a, axis=None, weights=None, returned=False);def average(a, axis=None, weights=None, returned=False);def average(a, axis=None, weights=None, returned=False);def average(a, axis=None, weights=None, returned=False);def average(a, axis=None, weights=None, returned=False);"
3441,2,db3e229, Warren Weckesser <warren.weckesser@gmail.com>," Sat, 15 Jun 2013 11:22:05 -0400",ct: [PATCH 2/2] BUG: ma: ma.average didn't handle complex arrays correctly (issue gh-2684),2,52,9,numpy/ma/tests/test_extras.py,[u'47'],41,2," -24,8 +24,7 ; -199,6 +198,50 ;",;def test_onintegers_with_mask(self);
3440,2,4a7f2b7, Warren Weckesser <warren.weckesser@gmail.com>," Sat, 15 Jun 2013 01:42:36 -0400",ct: [PATCH 1/2] MAINT: ma: clean up ma/test_extras.py: don't use 'import *'; PEP8 whitespace,1,67,61,numpy/ma/tests/test_extras.py,[u'128'],22,20," -16,9 +16,19 ; -53,7 +63,6 ; -132,10 +141,10 ; -167,12 +176,12 ; -206,7 +215,7 ; -230,7 +239,6 ; -270,7 +278,6 ; -295,12 +302,12 ; -316,21 +323,31 ; -338,7 +355,7 ; -410,9 +427,7 ; -422,21 +437,20 ; -452,7 +466,7 ; -461,7 +475,7 ; -474,7 +488,6 ; -528,16 +541,18 ; -550,7 +565,6 ; -576,7 +590,8 ; -604,7 +619,6 ; -620,7 +634,8 ; -634,7 +649,7 ; -647,7 +662,7 ; -696,7 +711,7 ; -711,7 +726,7 ; -726,7 +741,7 ; -737,11 +752,12 ; -758,7 +774,6 ; -767,7 +782,6 ; -794,7 +808,6 ; -809,7 +822,6 ; -822,7 +834,6 ; -833,7 +844,6 ; -845,7 +855,6 ; -853,9 +862,6 ;",;def test_masked_all(self);def test_testAverage2(self);def test_testAverage3(self);def test_1d(self);def test_2d(self);def test_edges(self);def test_contiguous(self);def test_compress2d(self);def test_mask_rowcols(self);def test_dot(self);def myfunc(b);def test_2d(self);def test_2d_waxis(self);def test_3d(self);def test_2d_w_missing(self);def test_ddof(self);def test_1d_w_missing(self);def test_2d_w_missing(self);def test_polyfit(self);def test_polyfit(self);def test_polyfit(self);def test_ediff1d(self);def test_ediff1d_tobegin(self);def test_ediff1d_toend(self);def test_ediff1d_tobegin_toend(self);def test_ediff1d_ndarray(self);def test_intersect1d(self);def test_setxor1d(self);def test_in1d(self);def test_in1d_invert(self);def test_union1d(self);def test_setdiff1d(self);def test_setdiff1d_char_array(self);
3440,2,ace8ee7, Warren Weckesser <warren.weckesser@gmail.com>," Sat, 15 Jun 2013 11:22:05 -0400",ct: [PATCH 2/2] BUG: ma: ma.average didn't handle complex arrays correctly (issue gh-2684),2,52,9,numpy/ma/extras.py,[u'14'],6,7," -455,7 +455,8 ; -515,7 +516,7 ; -531,14 +532,14 ; -547,7 +548,7 ; -555,7 +556,7 ; -580,7 +581,6 ;","def average(a, axis=None, weights=None, returned=False);def average(a, axis=None, weights=None, returned=False);def average(a, axis=None, weights=None, returned=False);def average(a, axis=None, weights=None, returned=False);def average(a, axis=None, weights=None, returned=False);def average(a, axis=None, weights=None, returned=False);"
3440,2,ace8ee7, Warren Weckesser <warren.weckesser@gmail.com>," Sat, 15 Jun 2013 11:22:05 -0400",ct: [PATCH 2/2] BUG: ma: ma.average didn't handle complex arrays correctly (issue gh-2684),2,52,9,numpy/ma/tests/test_extras.py,[u'47'],41,2," -27,8 +27,7 ; -202,6 +201,50 ;",;def test_onintegers_with_mask(self);
3439,2,1f11d79, Pauli Virtanen <pav@iki.fi>," Thu, 13 Jun 2013 22:53:18 +0300","ct: [PATCH 1/2] BUG: distutils: check Fortran ABI for BLAS librariesMake numpy.distutils to check that the BLAS libraries could actually beused from Fortran, with the currently active Fortran compilerconfiguration.Failing to check this can result to several commonly used functions suchas SDOT, DDOT, ... return invalid results if called from 3rd partyFortran code that links to the BLAS library using numpy.distutils.(Known occurrence: Scipy's ARPACK routines failed consistently on OSXdue to Fortran ABI mismatch.)",2,157,10,numpy/distutils/command/config.py,[u'6'],0,2," -406,12 +406,6 ;","def get_output(self, body, headers=None, include_dirs=None;"
3439,2,1f11d79, Pauli Virtanen <pav@iki.fi>," Thu, 13 Jun 2013 22:53:18 +0300","ct: [PATCH 1/2] BUG: distutils: check Fortran ABI for BLAS librariesMake numpy.distutils to check that the BLAS libraries could actually beused from Fortran, with the currently active Fortran compilerconfiguration.Failing to check this can result to several commonly used functions suchas SDOT, DDOT, ... return invalid results if called from 3rd partyFortran code that links to the BLAS library using numpy.distutils.(Known occurrence: Scipy's ARPACK routines failed consistently on OSXdue to Fortran ABI mismatch.)",2,157,10,numpy/distutils/system_info.py,[u'161'],37,1," -963,6 +963,10 ; -980,6 +984,7 ; -1032,6 +1037,8 ; -1121,6 +1128,9 ; -1389,10 +1399,12 ; -1533,6 +1545,10 ; -2156,5 +2172,142 ;",def calc_info(self);def calc_info(self);def calc_info(self);def calc_info(self);def calc_info(self);def calc_info(self);def show_all(argv=None);
3439,2,6d770a2, Pauli Virtanen <pav@iki.fi>," Wed, 26 Jun 2013 21:52:28 +0300",ct: [PATCH 2/2] BUG: distutils: fix an incorrect env var recommendation,1,5,4,numpy/distutils/system_info.py,[u'9'],5,4," -2291,16 +2291,17 ;","def new_link(self, target_desc, objects;"
3438,1,3e95144, Kumar Appaiah <a.kumar@alumni.iitm.ac.in>," Sat, 15 Jun 2013 01:17:14 -0400",ct: [PATCH] Fix minor typos in Polynomial class documentationSigned-Off-By: Kumar Appaiah <a.kumar@alumni.iitm.ac.in>,1,17,17,.../reference/routines.polynomials.classes.rst,[u'34'],11,11," -30,10 +30,10 ; -47,7 +47,7 ; -93,7 +93,7 ; -182,7 +182,7 ; -199,7 +199,7 ; -227,7 +227,7 ; -244,9 +244,9 ; -276,8 +276,8 ; -291,17 +291,17 ;",and more generall;Basic;Powers:;and window casting:;Polynomial instances can be integrated and differentiated.:;Constructing polynomials by specifying coefficients is just one way o;The convert method can also convert domain and window:;polynomials up to degree 5 are plotted below;The same plots over the range -2 <= x <= 2 look very different;
3436,1,4b4a736, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 14 Jun 2013 20:23:18 +0200","ct: [PATCH] ENH: vectorize boolean logical &&, ||, abs and notThe code ensures the result is identical to a boolean operation eventhough this might be unnecessary if bools are used correctly everywhere.The overhead doesn't matter much as vectorizing single byte operationshits the memory bandwidth limit very quickly.Improves performance by about a factor of 5 to 10 depending on the cpu.These operations currently can't be autovectorized by gcc 4.8.",4,262,10,doc/release/1.8.0-notes.rst,[u'27'],4,2," -159,14 +159,27 ;",advantage of compiler builtins to avoid expensive calls to libc;
3436,1,4b4a736, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 14 Jun 2013 20:23:18 +0200","ct: [PATCH] ENH: vectorize boolean logical &&, ||, abs and notThe code ensures the result is identical to a boolean operation eventhough this might be unnecessary if bools are used correctly everywhere.The overhead doesn't matter much as vectorizing single byte operationshits the memory bandwidth limit very quickly.Improves performance by about a factor of 5 to 10 depending on the cpu.These operations currently can't be autovectorized by gcc 4.8.",4,262,10,numpy/core/src/umath/loops.c.src,[u'6'],2,0," -571,6 +571,9 ; -613,6 +616,9 ;","BOOL_@kind@(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY_UNUSE;BOOL_@kind@(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY_UNUSE;"
3436,1,4b4a736, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 14 Jun 2013 20:23:18 +0200","ct: [PATCH] ENH: vectorize boolean logical &&, ||, abs and notThe code ensures the result is identical to a boolean operation eventhough this might be unnecessary if bools are used correctly everywhere.The overhead doesn't matter much as vectorizing single byte operationshits the memory bandwidth limit very quickly.Improves performance by about a factor of 5 to 10 depending on the cpu.These operations currently can't be autovectorized by gcc 4.8.",4,262,10,numpy/core/src/umath/simd.inc.src,[u'169'],37,1," -19,6 +19,9 ; -75,6 +78,12 ; -161,13 +170,66 ; -446,6 +508,107 ;",";void PyUFunc_clearfperr(void);run_binary_simd_@kind@_@TYPE@(char **args, npy_intp *dimensions, npy_intp *step;sse2_@kind@_@TYPE@(@type@ * ip, @type@ * op, const npy_intp n;"
3436,1,4b4a736, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 14 Jun 2013 20:23:18 +0200","ct: [PATCH] ENH: vectorize boolean logical &&, ||, abs and notThe code ensures the result is identical to a boolean operation eventhough this might be unnecessary if bools are used correctly everywhere.The overhead doesn't matter much as vectorizing single byte operationshits the memory bandwidth limit very quickly.Improves performance by about a factor of 5 to 10 depending on the cpu.These operations currently can't be autovectorized by gcc 4.8.",4,262,10,numpy/core/tests/test_numeric.py,[u'70'],16,0," -223,6 +223,76 ;",def test_bitwise_xor(self);
3435,1,c6e4020, Robert Costa <zabbarob@gmail.com>," Fri, 14 Jun 2013 19:11:18 +0300",ct: [PATCH] Updated info about sphinx.ext.autosummary.,1,2,3,doc/HOWTO_BUILD_DOCS.rst.txt,[u'5'],2,3," -85,9 +85,8 ;",The following extensions are available;
3432,3,486542a, Fazlul Shahriar <fshahriar@gmail.com>," Thu, 13 Jun 2013 03:02:37 -0400",ct: [PATCH 1/3] DOC: fix typo in linalg.lstsq doc string,1,2,2,numpy/linalg/linalg.py,[u'4'],2,2," -1732,9 +1732,9 ;","def lstsq(a, b, rcond=-1);"
3432,3,d596d6d, Fazlul Shahriar <fshahriar@gmail.com>," Thu, 13 Jun 2013 14:33:11 -0400",ct: [PATCH 2/3] DOC: minor tweak of linalg.lstsq doc string,1,0,2,numpy/linalg/linalg.py,[u'3'],1,2," -1733,8 +1733,7 ;","def lstsq(a, b, rcond=-1);"
3432,3,7189c63, Fazlul Shahriar <fshahriar@gmail.com>," Thu, 13 Jun 2013 23:58:14 -0400",ct: [PATCH 3/3] DOC: another minor tweak of linalg.lstsq doc string,1,2,0,numpy/linalg/linalg.py,[u'3'],2,1," -1733,7 +1733,8 ;","def lstsq(a, b, rcond=-1);"
3431,1,2220700, Warren Weckesser <warren.weckesser@gmail.com>," Wed, 12 Jun 2013 21:28:07 -0400",ct: [PATCH] ENH: random: Allow ngood=0 or nbad=0 in mtrand.hypergeometric.Also edited the 'Parameters' section of the docstring to complywith the numpy docstring standard.,3,259,252,numpy/random/mtrand/mtrand.c,[u'453'],19,19," -1,4 +1,4 ; -264,7 +264,7 ; -854,11 +854,11 ; -985,8 +985,8 ; -1071,7 +1071,7 ; -18225,7 +18225,7 ; -18332,7 +18332,7 ; -18341,7 +18341,7 ; -18350,142 +18350,131 ; -18493,24 +18482,24 ; -18525,92 +18514,92 ; -18622,51 +18611,51 ; -18680,8 +18669,8 ; -18693,8 +18682,8 ; -18704,34 +18693,34 ; -18744,54 +18733,54 ; -22818,65 +22807,65 ; -22885,7 +22874,7 ; -23132,13 +23121,13 ;",";;static int __Pyx_InitStrings(__Pyx_StringTabEntry *t); /*proto*;static char __pyx_k_156[] = ""lam value too large."";static char __pyx_k_269[] = ""\n        zipf(a, size=None)\n\n        Draw sampl;static PyObject *__pyx_pf_6mtrand_11RandomState_90geometric(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;PyMODINIT_FUNC PyInit_mtrand(void;"
3431,1,2220700, Warren Weckesser <warren.weckesser@gmail.com>," Wed, 12 Jun 2013 21:28:07 -0400",ct: [PATCH] ENH: random: Allow ngood=0 or nbad=0 in mtrand.hypergeometric.Also edited the 'Parameters' section of the docstring to complywith the numpy docstring standard.,3,259,252,numpy/random/mtrand/mtrand.pyx,[u'40'],2,2," -3846,20 +3846,21 ; -3924,27 +3925,26 ;",cdef class RandomState;cdef class RandomState;
3431,1,2220700, Warren Weckesser <warren.weckesser@gmail.com>," Wed, 12 Jun 2013 21:28:07 -0400",ct: [PATCH] ENH: random: Allow ngood=0 or nbad=0 in mtrand.hypergeometric.Also edited the 'Parameters' section of the docstring to complywith the numpy docstring standard.,3,259,252,numpy/random/tests/test_random.py,[u'18'],2,0," -303,6 +303,24 ;",def test_hypergeometric(self);
3429,1,75df68b, Julian Taylor <jtaylor.debian@googlemail.com>," Mon, 10 Jun 2013 23:02:36 +0200","ct: [PATCH] ENH: tell gcc to unroll strided copy loopsThe strided copy loops profit a lot from unrolling as the number ofoperations executed is in each iterations very small.GCC needs to be told explicitly to do unrolling even on O3.Unrolling is only profitable if the move can be done in a singleinstruction, else the increased code size makes it slower, thus the flagis only used for operations on element sizes less equal the nativepointer size.Tested to improve performance of by 20-50% on intel core2duo, xeon5xxx/7xxx and amd phenom x4.",4,40,2,numpy/core/include/numpy/npy_common.h,[u'14'],14,0," -3,6 +3,20 ;",;
3429,1,75df68b, Julian Taylor <jtaylor.debian@googlemail.com>," Mon, 10 Jun 2013 23:02:36 +0200","ct: [PATCH] ENH: tell gcc to unroll strided copy loopsThe strided copy loops profit a lot from unrolling as the number ofoperations executed is in each iterations very small.GCC needs to be told explicitly to do unrolling even on O3.Unrolling is only profitable if the move can be done in a singleinstruction, else the increased code size makes it slower, thus the flagis only used for operations on element sizes less equal the nativepointer size.Tested to improve performance of by 20-50% on intel core2duo, xeon5xxx/7xxx and amd phenom x4.",4,40,2,numpy/core/setup.py,[u'7'],6,1," -161,7 +161,6 ; -170,6 +169,12 ;",def check_funcs(funcs_name);def check_funcs(funcs_name);
3429,1,75df68b, Julian Taylor <jtaylor.debian@googlemail.com>," Mon, 10 Jun 2013 23:02:36 +0200","ct: [PATCH] ENH: tell gcc to unroll strided copy loopsThe strided copy loops profit a lot from unrolling as the number ofoperations executed is in each iterations very small.GCC needs to be told explicitly to do unrolling even on O3.Unrolling is only profitable if the move can be done in a singleinstruction, else the increased code size makes it slower, thus the flagis only used for operations on element sizes less equal the nativepointer size.Tested to improve performance of by 20-50% on intel core2duo, xeon5xxx/7xxx and amd phenom x4.",4,40,2,numpy/core/setup_common.py,[u'7'],7,0," -113,6 +113,13 ;","def check_api_version(apiversion, codegen_dir);"
3429,1,75df68b, Julian Taylor <jtaylor.debian@googlemail.com>," Mon, 10 Jun 2013 23:02:36 +0200","ct: [PATCH] ENH: tell gcc to unroll strided copy loopsThe strided copy loops profit a lot from unrolling as the number ofoperations executed is in each iterations very small.GCC needs to be told explicitly to do unrolling even on O3.Unrolling is only profitable if the move can be done in a singleinstruction, else the increased code size makes it slower, thus the flagis only used for operations on element sizes less equal the nativepointer size.Tested to improve performance of by 20-50% on intel core2duo, xeon5xxx/7xxx and amd phenom x4.",4,40,2,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,[u'14'],13,1," -99,7 +99,15 ; -156,7 +164,11 ;",;static voi;
3422,1,a9a470c, Charles Harris <charlesr.harris@gmail.com>," Sun, 9 Jun 2013 21:44:06 -0600","ct: [PATCH] DEP: Deprecate the oldnumeric and numarray modules.The numarray and oldnumeric modules are deprecated. This is a bit trickyas raising a DeprecationWarning on import causes an error when tests arerun. To deal with that, a ModuleDeprecationWarning class is added tonumpy and NoseTester is modified to ignore that warning during testing.Closes #2905",5,30,0,numpy/__init__.py,[u'15'],14,1," -108,6 +108,19 ; -138,7 +151,7 ;",";def pkgload(*packages, **options);"
3422,1,a9a470c, Charles Harris <charlesr.harris@gmail.com>," Sun, 9 Jun 2013 21:44:06 -0600","ct: [PATCH] DEP: Deprecate the oldnumeric and numarray modules.The numarray and oldnumeric modules are deprecated. This is a bit trickyas raising a DeprecationWarning on import causes an error when tests arerun. To deal with that, a ModuleDeprecationWarning class is added tonumpy and NoseTester is modified to ignore that warning during testing.Closes #2905",5,30,0,numpy/numarray/__init__.py,[u'6'],6,0," -1,5 +1,8 ; -14,6 +17,9 ;",;;
3422,1,a9a470c, Charles Harris <charlesr.harris@gmail.com>," Sun, 9 Jun 2013 21:44:06 -0600","ct: [PATCH] DEP: Deprecate the oldnumeric and numarray modules.The numarray and oldnumeric modules are deprecated. This is a bit trickyas raising a DeprecationWarning on import causes an error when tests arerun. To deal with that, a ModuleDeprecationWarning class is added tonumpy and NoseTester is modified to ignore that warning during testing.Closes #2905",5,30,0,numpy/oldnumeric/__init__.py,[u'6'],6,0," -3,8 +3,14 ;",;
3422,1,a9a470c, Charles Harris <charlesr.harris@gmail.com>," Sun, 9 Jun 2013 21:44:06 -0600","ct: [PATCH] DEP: Deprecate the oldnumeric and numarray modules.The numarray and oldnumeric modules are deprecated. This is a bit trickyas raising a DeprecationWarning on import causes an error when tests arerun. To deal with that, a ModuleDeprecationWarning class is added tonumpy and NoseTester is modified to ignore that warning during testing.Closes #2905",5,30,0,numpy/testing/nosetester.py,[u'2'],2,0," -11,6 +11,7 ; -378,6 +379,7 ;",";def test(self, label='fast', verbose=1, extra_argv=None;"
3422,1,a9a470c, Charles Harris <charlesr.harris@gmail.com>," Sun, 9 Jun 2013 21:44:06 -0600","ct: [PATCH] DEP: Deprecate the oldnumeric and numarray modules.The numarray and oldnumeric modules are deprecated. This is a bit trickyas raising a DeprecationWarning on import causes an error when tests arerun. To deal with that, a ModuleDeprecationWarning class is added tonumpy and NoseTester is modified to ignore that warning during testing.Closes #2905",5,30,0,numpy/testing/utils.py,[u'2'],2,0," -26,8 +26,10 ;",;
3421,3,c9bf9b0, Julian Taylor <jtaylor.debian@googlemail.com>," Mon, 10 Jun 2013 19:06:44 +0200","ct: [PATCH 1/3] ENH: properly fix unaligned load of complex typesthe workaround of setting the aligned to false unconditionally makescopying strided complex data extremely slow as it will always dounaligned elementwise memmoves.Instead set the alignment requirement for complex types correct in thedtype to begin with.Note that on 32 bit gcc complex double will still be aligned to 8 bytesunless compiled with -malign-double.It is possible this will introduce new segfaults on architectureswithout unaligned loads, but this now indicates a missing alignmentcheck in the affected code as the array description is correct.",2,4,17,numpy/core/src/multiarray/arraytypes.c.src,[u'7'],4,3," -3817,9 +3817,9 ; -4150,6 +4150,7 ; -4160,7 +4161,7 ;",NPY_NO_EXPORT PyArray_Descr @from@_Descr = ;set_typeinfo(PyObject *dict;set_typeinfo(PyObject *dict;
3421,3,c9bf9b0, Julian Taylor <jtaylor.debian@googlemail.com>," Mon, 10 Jun 2013 19:06:44 +0200","ct: [PATCH 1/3] ENH: properly fix unaligned load of complex typesthe workaround of setting the aligned to false unconditionally makescopying strided complex data extremely slow as it will always dounaligned elementwise memmoves.Instead set the alignment requirement for complex types correct in thedtype to begin with.Note that on 32 bit gcc complex double will still be aligned to 8 bytesunless compiled with -malign-double.It is possible this will introduce new segfaults on architectureswithout unaligned loads, but this now indicates a missing alignmentcheck in the affected code as the array description is correct.",2,4,17,numpy/core/src/multiarray/dtype_transfer.c,[u'14'],0,14," -3574,13 +3574,6 ; -3677,13 +3670,6 ;",PyArray_GetDTypeTransferFunction(int aligned;PyArray_GetDTypeTransferFunction(int aligned;
3421,3,aef286d, Julian Taylor <jtaylor.debian@googlemail.com>," Mon, 10 Jun 2013 19:38:58 +0200",ct: [PATCH 2/3] ENH: enable unaligned loads on x86x86 can handle unaligned load and there is no hand vectorized code inthis file. It would be a serious compiler bug if it adds vectorizationwithout checking for alignment.Enables fast complex128 copies which are unaligned on 32 bit gcc unlesscompiled with -malign-double.,1,2,4,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,[u'6'],2,4," -21,12 +21,10 ;",;
3421,3,e2dd429, Julian Taylor <jtaylor.debian@googlemail.com>," Tue, 11 Jun 2013 23:50:05 +0200","ct: [PATCH 3/3] BUG: fix non-swapping strided copies in GetStridedCopySwapFixed PyArray_GetStridedCopySwap{Pair,}Fn returns paths that do not swapthe data.It never triggered because the alignment requirement for complex datawas too low (4-8 bytes) and always fullfiled by the memory allocator.As this is now fixed it caused failures on sparc with 16 byte longdoubles.",1,3,3,numpy/core/src/multiarray/lowlevel_strided_loops.c.src,[u'6'],3,3," -532,7 +532,7 ; -580,7 +580,7 ; -597,7 +597,7 ;",NPY_NO_EXPORT PyArray_StridedUnaryOp ;NPY_NO_EXPORT PyArray_StridedUnaryOp ;NPY_NO_EXPORT PyArray_StridedUnaryOp ;
3420,1,a9a470c, Charles Harris <charlesr.harris@gmail.com>," Sun, 9 Jun 2013 21:44:06 -0600","ct: [PATCH] DEP: Deprecate the oldnumeric and numarray modules.The numarray and oldnumeric modules are deprecated. This is a bit trickyas raising a DeprecationWarning on import causes an error when tests arerun. To deal with that, a ModuleDeprecationWarning class is added tonumpy and NoseTester is modified to ignore that warning during testing.Closes #2905",5,30,0,numpy/__init__.py,[u'15'],14,1," -108,6 +108,19 ; -138,7 +151,7 ;",";def pkgload(*packages, **options);"
3420,1,a9a470c, Charles Harris <charlesr.harris@gmail.com>," Sun, 9 Jun 2013 21:44:06 -0600","ct: [PATCH] DEP: Deprecate the oldnumeric and numarray modules.The numarray and oldnumeric modules are deprecated. This is a bit trickyas raising a DeprecationWarning on import causes an error when tests arerun. To deal with that, a ModuleDeprecationWarning class is added tonumpy and NoseTester is modified to ignore that warning during testing.Closes #2905",5,30,0,numpy/numarray/__init__.py,[u'6'],6,0," -1,5 +1,8 ; -14,6 +17,9 ;",;;
3420,1,a9a470c, Charles Harris <charlesr.harris@gmail.com>," Sun, 9 Jun 2013 21:44:06 -0600","ct: [PATCH] DEP: Deprecate the oldnumeric and numarray modules.The numarray and oldnumeric modules are deprecated. This is a bit trickyas raising a DeprecationWarning on import causes an error when tests arerun. To deal with that, a ModuleDeprecationWarning class is added tonumpy and NoseTester is modified to ignore that warning during testing.Closes #2905",5,30,0,numpy/oldnumeric/__init__.py,[u'6'],6,0," -3,8 +3,14 ;",;
3420,1,a9a470c, Charles Harris <charlesr.harris@gmail.com>," Sun, 9 Jun 2013 21:44:06 -0600","ct: [PATCH] DEP: Deprecate the oldnumeric and numarray modules.The numarray and oldnumeric modules are deprecated. This is a bit trickyas raising a DeprecationWarning on import causes an error when tests arerun. To deal with that, a ModuleDeprecationWarning class is added tonumpy and NoseTester is modified to ignore that warning during testing.Closes #2905",5,30,0,numpy/testing/nosetester.py,[u'2'],2,0," -11,6 +11,7 ; -378,6 +379,7 ;",";def test(self, label='fast', verbose=1, extra_argv=None;"
3420,1,a9a470c, Charles Harris <charlesr.harris@gmail.com>," Sun, 9 Jun 2013 21:44:06 -0600","ct: [PATCH] DEP: Deprecate the oldnumeric and numarray modules.The numarray and oldnumeric modules are deprecated. This is a bit trickyas raising a DeprecationWarning on import causes an error when tests arerun. To deal with that, a ModuleDeprecationWarning class is added tonumpy and NoseTester is modified to ignore that warning during testing.Closes #2905",5,30,0,numpy/testing/utils.py,[u'2'],2,0," -26,8 +26,10 ;",;
3419,5,eb6cf4b, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 9 Jun 2013 19:03:07 +0200",ct: [PATCH 1/5] ENH: Vectorize float min/max operation with sse2Improves performance by ~1.5/3.0 for float/double.,4,138,25,doc/release/1.8.0-notes.rst,[u'8'],1,2," -149,10 +149,10 ;",advantage of compiler builtins to avoid expensive calls to libc;
3419,5,eb6cf4b, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 9 Jun 2013 19:03:07 +0200",ct: [PATCH 1/5] ENH: Vectorize float min/max operation with sse2Improves performance by ~1.5/3.0 for float/double.,4,138,25,numpy/core/src/umath/loops.c.src,[u'3'],1,0," -1418,6 +1418,9 ;",NPY_NO_EXPORT voi;
3419,5,eb6cf4b, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 9 Jun 2013 19:03:07 +0200",ct: [PATCH 1/5] ENH: Vectorize float min/max operation with sse2Improves performance by ~1.5/3.0 for float/double.,4,138,25,numpy/core/src/umath/simd.inc.src,[u'131'],32,6," -17,9 +17,14 ; -29,21 +34,23 ; -58,28 +65,31 ; -89,6 +99,34 ; -97,40 +135,38 ; -140,34 +176,87 ;",";;;run_unary_simd_@func@_@TYPE@(char **args, npy_intp *dimensions, npy_intp *steps;run_unary_simd_@func@_@TYPE@(char **args, npy_intp *dimensions, npy_intp *steps;sse2_absolute_@TYPE@(@type@ * op, const @type@ * ip, const npy_intp n;"
3419,5,eb6cf4b, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 9 Jun 2013 19:03:07 +0200",ct: [PATCH 1/5] ENH: Vectorize float min/max operation with sse2Improves performance by ~1.5/3.0 for float/double.,4,138,25,numpy/core/tests/test_umath.py,[u'21'],6,0," -687,6 +687,27 ;",def test_sign(self);
3419,5,6bcba96, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 9 Jun 2013 21:03:34 +0200",ct: [PATCH 2/5] ENH: vectorize base math with SSE2Improves performance by ~1.5/3.0 for float/double for inplace or cpucached operations,4,239,3,doc/release/1.8.0-notes.rst,[u'7'],1,1," -149,10 +149,11 ;",advantage of compiler builtins to avoid expensive calls to libc;
3419,5,6bcba96, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 9 Jun 2013 21:03:34 +0200",ct: [PATCH 2/5] ENH: vectorize base math with SSE2Improves performance by ~1.5/3.0 for float/double for inplace or cpucached operations,4,239,3,numpy/core/src/umath/loops.c.src,[u'14'],3,0," -1322,6 +1322,9 ; -1491,6 +1494,11 ; -1500,6 +1508,12 ;",NPY_NO_EXPORT voi;NPY_NO_EXPORT voi;NPY_NO_EXPORT voi;
3419,5,6bcba96, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 9 Jun 2013 21:03:34 +0200",ct: [PATCH 2/5] ENH: vectorize base math with SSE2Improves performance by ~1.5/3.0 for float/double for inplace or cpucached operations,4,239,3,numpy/core/src/umath/simd.inc.src,[u'189'],36,0," -37,6 +37,24 ; -92,6 +110,55 ; -139,6 +206,128 ;","void PyUFunc_clearfperr(void);run_@name@_simd_@func@_@TYPE@(char **args, npy_intp *dimensions, npy_intp *step;static NPY_INLINE npy_double sse2_horizontal_@VOP@___m128d(__m128d v;"
3419,5,6bcba96, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 9 Jun 2013 21:03:34 +0200",ct: [PATCH 2/5] ENH: vectorize base math with SSE2Improves performance by ~1.5/3.0 for float/double for inplace or cpucached operations,4,239,3,numpy/core/tests/test_scalarmath.py,[u'32'],6,0," -2,6 +2,7 ; -44,6 +45,37 ;",";def test_type_create(self, level=1);"
3419,5,c20531c, Julian Taylor <jtaylor.debian@googlemail.com>," Tue, 11 Jun 2013 00:46:51 +0200",ct: [PATCH 3/5] MAINT: guard prototypes with HAVE_EMMINTRIN_Havoids declared but not defined warnings,1,2,2,numpy/core/src/umath/simd.inc.src,[u'4'],2,2," -88,7 +88,7 ; -116,7 +116,7 ;","void PyUFunc_clearfperr(void);run_@name@_simd_@func@_@TYPE@(char **args, npy_intp *dimensions, npy_intp *step;"
3419,5,88b459b, Julian Taylor <jtaylor.debian@googlemail.com>," Tue, 11 Jun 2013 18:21:36 +0200",ct: [PATCH 4/5] MAINT: fix an uninitialized use in the no fenv fallback,1,0,0,numpy/core/src/umath/simd.inc.src,[u'2'],1,1," -408,7 +408,7 ;","sse2_@kind@_@TYPE@(@type@ * ip, @type@ * op, const npy_intp n;"
3419,5,ffa0130, Julian Taylor <jtaylor.debian@googlemail.com>," Tue, 11 Jun 2013 19:00:47 +0200",ct: [PATCH 5/5] DOC: use full ufunc names,1,7,7,doc/release/1.8.0-notes.rst,[u'14'],7,7," -149,18 +149,18 ;",advantage of compiler builtins to avoid expensive calls to libc;
3418,1,f502acf, Christoph Gohlke <cgohlke@uci.edu>," Sun, 9 Jun 2013 12:33:15 -0600",ct: [PATCH] MAINT: use PyOS_snprintf instead of snprintfPyOS_snprintf is portable and more secure than snprintf.,1,0,0,numpy/linalg/lapack_lite/python_xerbla.c,[u'2'],1,1," -33,7 +33,7 ;","int xerbla_(char *srname, integer *info;"
3417,2,0a01586, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 9 Jun 2013 19:14:39 +0200","ct: [PATCH 1/2] BUG: Decref subspace when subspace is 0-d in fancy indexingNot decrefing it causes a major memory leak. This adapts theautomated tests to cover this case as well and adds refcountingto it. Replaces some 'skip' with 0s, but I believe the skiptests are not that important. Added 1-d special case testsusing the same indices as the multi-dim test though.Thanks to Julian Taylor for noting the bug.",2,56,12,numpy/core/src/multiarray/mapping.c,[u'1'],1,0," -1821,6 +1821,7 ;","PyArray_MapIterBind(PyArrayMapIterObject *mit, PyArrayObject *arr;"
3417,2,0a01586, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 9 Jun 2013 19:14:39 +0200","ct: [PATCH 1/2] BUG: Decref subspace when subspace is 0-d in fancy indexingNot decrefing it causes a major memory leak. This adapts theautomated tests to cover this case as well and adds refcountingto it. Replaces some 'skip' with 0s, but I believe the skiptests are not that important. Added 1-d special case testsusing the same indices as the multi-dim test though.Thanks to Julian Taylor for noting the bug.",2,56,12,numpy/core/tests/test_indexing.py,[u'67'],30,7," -19,6 +19,8 ; -153,7 +155,7 ; -264,6 +266,10 ; -371,6 +377,26 ; -378,8 +404,13 ; -411,16 +442,20 ; -431,5 +466,13 ;","def test_empty_tuple_index(self);def setUp(self);def _get_multi_index(self, arr, indices);def _check_multi_index(self, arr, index);def _check_multi_index(self, arr, index);def test_boolean(self);def test_multidim(self);"
3417,2,16c47cf, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 9 Jun 2013 23:30:48 +0200",ct: [PATCH 2/2] TST: Refactor some test_indexing doc strings,1,40,11,numpy/core/tests/test_indexing.py,[u'51'],30,9," -159,11 +159,28 ; -365,9 +382,14 ; -381,8 +403,15 ; -395,7 +424,7 ;","def setUp(self);def _get_multi_index(self, arr, indices);def _check_multi_index(self, arr, index);def _check_single_index(self, arr, index);"
3416,6,79f91c3, Benjamin Root <ben.v.root@gmail.com>," Thu, 2 May 2013 00:50:39 -0400","ct: [PATCH 1/6] Adding np.nanmean(), np.nanstd(), np.nanvar()",2,340,2,numpy/core/_methods.py,[u'79'],13,1," -7,7 +7,7 ; -61,6 +61,26 ; -101,6 +121,52 ; -111,3 +177,14 ;",";def _mean(a, axis=None, dtype=None, out=None, keepdims=False);def _var(a, axis=None, dtype=None, out=None, ddof=0;def _std(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);"
3416,6,79f91c3, Benjamin Root <ben.v.root@gmail.com>," Thu, 2 May 2013 00:50:39 -0400","ct: [PATCH 1/6] Adding np.nanmean(), np.nanstd(), np.nanvar()",2,340,2,numpy/core/fromnumeric.py,[u'263'],45,1," -21,7 +21,8 ; -2517,6 +2518,8 ; -2563,6 +2566,80 ; -2605,6 +2682,7 ; -2665,6 +2743,97 ; -2767,3 +2936,95 ;",";def mean(a, axis=None, dtype=None, out=None, keepdims=False);def mean(a, axis=None, dtype=None, out=None, keepdims=False);def std(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);def std(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);def var(a, axis=None, dtype=None, out=None, ddof=0;"
3416,6,64d2b20, Benjamin Root <ben.v.root@gmail.com>," Wed, 15 May 2013 22:09:23 -0400","ct: [PATCH 2/6] Added tests for nanmean(), nanvar(), nanstd()",1,65,0,numpy/core/tests/test_numeric.py,[u'65'],40,0," -177,18 +177,36 ; -1367,6 +1385,23 ; -1389,6 +1424,36 ;",def test_mean(self);def test_no_parameter_modification(self);def test_ddof2(self);
3416,6,f58f894, Benjamin Root <ben.v.root@gmail.com>," Sun, 19 May 2013 14:27:13 -0400",ct: [PATCH 3/6] Tests now checks the warning state,1,34,10,numpy/core/tests/test_numeric.py,[u'44'],31,9," -3,6 +3,7 ; -177,6 +178,11 ; -189,6 +195,11 ; -201,6 +212,11 ; -1395,13 +1411,16 ; -1447,13 +1466,18 ;",;def test_mean(self);def test_std(self);def test_var(self);def test_basic(self);def test_ddof2(self);
3416,6,7c67eee, Benjamin Root <ben.v.root@gmail.com>," Thu, 30 May 2013 22:38:56 -0400",ct: [PATCH 4/6] Updated comments and dtype tests in _methods.py,2,45,10,numpy/core/_methods.py,[u'29'],19,10," -7,7 +7,8 ; -46,8 +47,9 ; -62,11 +64,14 ; -86,7 +91,8 ; -101,7 +107,7 ; -123,11 +129,14 ; -142,10 +151,10 ;",";def _count_reduce_items(arr, axis);def _mean(a, axis=None, dtype=None, out=None, keepdims=False);def _var(a, axis=None, dtype=None, out=None, ddof=0;def _var(a, axis=None, dtype=None, out=None, ddof=0;def _var(a, axis=None, dtype=None, out=None, ddof=0;def _nanvar(a, axis=None, dtype=None, out=None, ddof=0;"
3416,6,7c67eee, Benjamin Root <ben.v.root@gmail.com>," Thu, 30 May 2013 22:38:56 -0400",ct: [PATCH 4/6] Updated comments and dtype tests in _methods.py,2,45,10,numpy/core/tests/test_numeric.py,[u'26'],26,0," -1410,6 +1410,19 ; -1453,6 +1466,19 ;",def setUp(self);def test_basic(self);
3416,6,8f2cbf7, Charles Harris <charlesr.harris@gmail.com>," Thu, 20 Jun 2013 20:44:54 -0600","ct: [PATCH 5/6] MAINT: Separate nan functions into their own module.New files lib/nanfunctions.py and lib/tests/test_nanfunctions.py areadded and both the previous and new nan functions and tests are movedinto them.The existing nan functions moved from lib/function_base are:    nansum, nanmin, nanmax, nanargmin, nanargmaxThe added nan functions moved from core/numeric are:    nanmean, nanvar, nanstd",8,943,914,numpy/core/_methods.py,[u'84'],1,4," -7,7 +7,7 ; -63,29 +63,6 ; -127,55 +104,6 ; -187,13 +115,3 ;",";def _mean(a, axis=None, dtype=None, out=None, keepdims=False);def _var(a, axis=None, dtype=None, out=None, ddof=0;def _std(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);"
3416,6,8f2cbf7, Charles Harris <charlesr.harris@gmail.com>," Thu, 20 Jun 2013 20:44:54 -0600","ct: [PATCH 5/6] MAINT: Separate nan functions into their own module.New files lib/nanfunctions.py and lib/tests/test_nanfunctions.py areadded and both the previous and new nan functions and tests are movedinto them.The existing nan functions moved from lib/function_base are:    nansum, nanmin, nanmax, nanargmin, nanargmaxThe added nan functions moved from core/numeric are:    nanmean, nanvar, nanstd",8,943,914,numpy/core/fromnumeric.py,[u'274'],1,13," -15,16 +15,13 ; -2566,81 +2563,6 ; -2743,97 +2665,6 ; -2937,94 +2768,3 ;",";def mean(a, axis=None, dtype=None, out=None, keepdims=False);def std(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);def var(a, axis=None, dtype=None, out=None, ddof=0;"
3416,6,8f2cbf7, Charles Harris <charlesr.harris@gmail.com>," Thu, 20 Jun 2013 20:44:54 -0600","ct: [PATCH 5/6] MAINT: Separate nan functions into their own module.New files lib/nanfunctions.py and lib/tests/test_nanfunctions.py areadded and both the previous and new nan functions and tests are movedinto them.The existing nan functions moved from lib/function_base are:    nansum, nanmin, nanmax, nanargmin, nanargmaxThe added nan functions moved from core/numeric are:    nanmean, nanvar, nanstd",8,943,914,numpy/core/tests/test_numeric.py,[u'101'],0,5," -183,12 +183,6 ; -200,12 +194,6 ; -217,12 +205,6 ; -1401,40 +1383,6 ; -1456,55 +1404,6 ;",def test_mean(self);def test_std(self);def test_var(self);def test_no_parameter_modification(self);def test_ddof2(self);
3416,6,8f2cbf7, Charles Harris <charlesr.harris@gmail.com>," Thu, 20 Jun 2013 20:44:54 -0600","ct: [PATCH 5/6] MAINT: Separate nan functions into their own module.New files lib/nanfunctions.py and lib/tests/test_nanfunctions.py areadded and both the previous and new nan functions and tests are movedinto them.The existing nan functions moved from lib/function_base are:    nansum, nanmin, nanmax, nanargmin, nanargmaxThe added nan functions moved from core/numeric are:    nanmean, nanvar, nanstd",8,943,914,numpy/lib/__init__.py,[u'5'],1,1," -1,11 +1,14 ; -18,7 +21,6 ; -36,6 +38,7 ;",;;;
3416,6,8f2cbf7, Charles Harris <charlesr.harris@gmail.com>," Thu, 20 Jun 2013 20:44:54 -0600","ct: [PATCH 5/6] MAINT: Separate nan functions into their own module.New files lib/nanfunctions.py and lib/tests/test_nanfunctions.py areadded and both the previous and new nan functions and tests are movedinto them.The existing nan functions moved from lib/function_base are:    nansum, nanmin, nanmax, nanargmin, nanargmaxThe added nan functions moved from core/numeric are:    nanmean, nanvar, nanstd",8,943,914,numpy/lib/function_base.py,[u'342'],1,16," -1,15 +1,14 ; -1361,331 +1360,6 ;",";def place(arr, mask, vals);"
3416,6,8f2cbf7, Charles Harris <charlesr.harris@gmail.com>," Thu, 20 Jun 2013 20:44:54 -0600","ct: [PATCH 5/6] MAINT: Separate nan functions into their own module.New files lib/nanfunctions.py and lib/tests/test_nanfunctions.py areadded and both the previous and new nan functions and tests are movedinto them.The existing nan functions moved from lib/function_base are:    nansum, nanmin, nanmax, nanargmin, nanargmaxThe added nan functions moved from core/numeric are:    nanmean, nanvar, nanstd",8,943,914,numpy/lib/nanfunctions.py,[u'678'],34,0," -0,0 +1,678 ;",;
3416,6,8f2cbf7, Charles Harris <charlesr.harris@gmail.com>," Thu, 20 Jun 2013 20:44:54 -0600","ct: [PATCH 5/6] MAINT: Separate nan functions into their own module.New files lib/nanfunctions.py and lib/tests/test_nanfunctions.py areadded and both the previous and new nan functions and tests are movedinto them.The existing nan functions moved from lib/function_base are:    nansum, nanmin, nanmax, nanargmin, nanargmaxThe added nan functions moved from core/numeric are:    nanmean, nanvar, nanstd",8,943,914,numpy/lib/tests/test_function_base.py,[u'133'],1,6," -3,10 +3,10 ; -1103,127 +1103,6 ; -1270,7 +1149,7 ; -1541,7 +1420,5 ;",;def test_dtype_order(self);def test_empty(self);def test_string_arg(self);
3416,6,8f2cbf7, Charles Harris <charlesr.harris@gmail.com>," Thu, 20 Jun 2013 20:44:54 -0600","ct: [PATCH 5/6] MAINT: Separate nan functions into their own module.New files lib/nanfunctions.py and lib/tests/test_nanfunctions.py areadded and both the previous and new nan functions and tests are movedinto them.The existing nan functions moved from lib/function_base are:    nansum, nanmin, nanmax, nanargmin, nanargmaxThe added nan functions moved from core/numeric are:    nanmean, nanvar, nanstd",8,943,914,numpy/lib/tests/test_nanfunctions.py,[u'240'],12,0," -0,0 +1,240 ;",;
3416,6,997a48f, Charles Harris <charlesr.harris@gmail.com>," Fri, 21 Jun 2013 10:28:41 -0600",ct: [PATCH 6/6] MAINT: Clean up core/_methods.py and core/fromnumeric.pyUse issubclass instead of issubdtype.Add some blank lines.Remove trailing whitespace.Remove uneeded float casts since true_divide is default.Clean up documentation a bit.,4,328,210,doc/source/reference/routines.statistics.rst,[u'5'],1,1," -23,11 +23,14 ;",Averages and variance;
3416,6,997a48f, Charles Harris <charlesr.harris@gmail.com>," Fri, 21 Jun 2013 10:28:41 -0600",ct: [PATCH 6/6] MAINT: Clean up core/_methods.py and core/fromnumeric.pyUse issubclass instead of issubdtype.Add some blank lines.Remove trailing whitespace.Remove uneeded float casts since true_divide is default.Clean up documentation a bit.,4,328,210,numpy/core/_methods.py,[u'19'],1,1," -7,7 +7,7 ; -48,19 +48,20 ; -68,23 +69,23 ; -100,7 +101,7 ;",";def _mean(a, axis=None, dtype=None, out=None, keepdims=False);def _var(a, axis=None, dtype=None, out=None, ddof=0;def _var(a, axis=None, dtype=None, out=None, ddof=0;"
3416,6,997a48f, Charles Harris <charlesr.harris@gmail.com>," Fri, 21 Jun 2013 10:28:41 -0600",ct: [PATCH 6/6] MAINT: Clean up core/_methods.py and core/fromnumeric.pyUse issubclass instead of issubdtype.Add some blank lines.Remove trailing whitespace.Remove uneeded float casts since true_divide is default.Clean up documentation a bit.,4,328,210,numpy/core/fromnumeric.py,[u'13'],1,1," -60,9 +60,9 ; -2515,8 +2515,7 ; -2603,8 +2602,7 ; -2707,8 +2705,7 ;","def take(a, indices, axis=None, out=None, mode='raise');def mean(a, axis=None, dtype=None, out=None, keepdims=False);def std(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);def var(a, axis=None, dtype=None, out=None, ddof=0;"
3416,6,997a48f, Charles Harris <charlesr.harris@gmail.com>," Fri, 21 Jun 2013 10:28:41 -0600",ct: [PATCH 6/6] MAINT: Clean up core/_methods.py and core/fromnumeric.pyUse issubclass instead of issubdtype.Add some blank lines.Remove trailing whitespace.Remove uneeded float casts since true_divide is default.Clean up documentation a bit.,4,328,210,numpy/lib/nanfunctions.py,[u'501'],17,10," -3,6 +3,7 ; -18,7 +19,7 ; -89,125 +90,111 ; -219,6 +206,25 ; -271,11 +277,7 ; -311,10 +313,14 ; -326,6 +332,25 ; -378,11 +403,7 ; -418,7 +439,91 ; -429,6 +534,8 ; -485,14 +592,111 ; -504,6 +708,8 ; -587,92 +793,3 ;",";def _nanmean(a, axis=None, dtype=None, out=None, keepdims=False);def _nanstd(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);def nanmin(a, axis=None);def nanmin(a, axis=None);def nanargmin(a, axis=None);def nanmax(a, axis=None);def nanmax(a, axis=None);def nanargmax(a, axis=None);def nanmean(a, axis=None, dtype=None, out=None, keepdims=False);def nanmean(a, axis=None, dtype=None, out=None, keepdims=False);def nanstd(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);def nanstd(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);"
3415,2,d661960, David Warde-Farley <wardefar@iro.umontreal.ca>," Thu, 25 Oct 2012 15:32:25 -0400","ct: [PATCH 1/2] BUG: copy.(deep)copy should preserve F-contiguityCurrently, copy.deepcopy() on certain objects in scikit-learn resultsin the copied object being broken, as underlying methods depend onmembers being F-contiguous. I can think of no reason that F-contiguousarrays should not remain F-contiguous through a copy.copy/copy.deepcopy,therefore this alters the methods to use NPY_KEEPORDER when allocatingthe copy.",2,21,4,numpy/core/src/multiarray/methods.c,[u'16'],13,3," -1027,6 +1027,16 ; -1291,7 +1301,7 ; -2160,8 +2170,8 ;","array_copy(PyArrayObject *self, PyObject *args, PyObject *kwds;array_deepcopy(PyArrayObject *self, PyObject *args;NPY_NO_EXPORT PyMethodDef array_methods[] = ;"
3415,2,d661960, David Warde-Farley <wardefar@iro.umontreal.ca>," Thu, 25 Oct 2012 15:32:25 -0400","ct: [PATCH 1/2] BUG: copy.(deep)copy should preserve F-contiguityCurrently, copy.deepcopy() on certain objects in scikit-learn resultsin the copied object being broken, as underlying methods depend onmembers being F-contiguous. I can think of no reason that F-contiguousarrays should not remain F-contiguous through a copy.copy/copy.deepcopy,therefore this alters the methods to use NPY_KEEPORDER when allocatingthe copy.",2,21,4,numpy/core/tests/test_regression.py,[u'9'],8,1," -1903,7 +1903,14 ;",def test_structured_count_nonzero(self);
3415,2,18e7f40, David Warde-Farley <wardefar@iro.umontreal.ca>," Thu, 25 Oct 2012 18:57:53 -0400",ct: [PATCH 2/2] TST: expected behaviour of .copy(),1,24,0,numpy/core/tests/test_multiarray.py,[u'24'],24,0," -642,6 +642,30 ;",def test_sort(self);
3414,1,7af95b0, Joon Ro <joonhyoung.ro@gmail.com>," Sat, 8 Jun 2013 12:33:15 -0500",ct: [PATCH] A minor cleanup- 4 indent instead of 2 for equation example- Fixed Syntax::,1,2,4,doc/HOWTO_DOCUMENT.rst.txt,[u'6'],2,4," -551,13 +551,11 ;",Other points to keep in min;
3412,1,fc92221, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 7 Jun 2013 00:12:13 +0200",ct: [PATCH] BUG: import longdouble instead of float128i386 does not have 16 byte long double by default (only 12 byte/float96)so the import prevents numpy startup.Introduced in 1.8.0dev 40000f508,1,3,3,numpy/linalg/linalg.py,[u'6'],3,3," -22,7 +22,7 ; -2058,9 +2058,9 ;",";def norm(x, ord=None, axis=None);"
3411,8,abad5e3, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 7 Jun 2013 19:21:03 +0200",ct: [PATCH 1/8] MAINT: move vectorized sqrt to own static function,1,34,19,numpy/core/src/umath/loops.c.src,[u'53'],26,14," -1305,30 +1305,45 ;","TIMEDELTA_mm_d_divide(char **args, npy_intp *dimensions, npy_intp *steps, void ;"
3411,8,9d5884b, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 7 Jun 2013 19:22:51 +0200",ct: [PATCH 2/8] ENH: Vectorize float absolute operation with sse2fabs on x86 can be implemented by masking out the sign bit.Obtaining such a bit pattern is best done by a bitwise not on thenegative zero.This is the same operation the compiler will convert fabs to on amd64.Improves performance by ~1.7/3.5 for float/double for cached dataand ~1.4/1.1 for non-cached data.If one simplifies the loops gcc could also autovectorize it but with allhints its almost the same code length and slightly worse assembly.The code can easily be extended to support AVX by changing vpre andvtype to 256.,2,76,5,numpy/core/src/umath/loops.c.src,[u'55'],36,4," -1302,8 +1302,11 ; -1335,6 +1338,40 ; -1582,11 +1619,19 ;","TIMEDELTA_mm_d_divide(char **args, npy_intp *dimensions, npy_intp *steps, void ;sse2_sqrt_@TYPE@(char **args, npy_intp *dimensions, npy_intp *steps;NPY_NO_EXPORT voi;"
3411,8,9d5884b, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 7 Jun 2013 19:22:51 +0200",ct: [PATCH 2/8] ENH: Vectorize float absolute operation with sse2fabs on x86 can be implemented by masking out the sign bit.Obtaining such a bit pattern is best done by a bitwise not on thenegative zero.This is the same operation the compiler will convert fabs to on amd64.Improves performance by ~1.7/3.5 for float/double for cached dataand ~1.4/1.1 for non-cached data.If one simplifies the loops gcc could also autovectorize it but with allhints its almost the same code length and slightly worse assembly.The code can easily be extended to support AVX by changing vpre andvtype to 256.,2,76,5,numpy/core/tests/test_umath.py,[u'26'],19,0," -687,6 +687,32 ;",def test_sign(self);
3411,8,987dc32, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 7 Jun 2013 19:24:11 +0200",ct: [PATCH 3/8] MAINT: fix shape mismatch issue in alignment data generator,1,4,4,numpy/testing/utils.py,[u'8'],4,4," -1580,13 +1580,13 ;","def gen_alignment_data(dtype=float32, type='binary', max_size=24);"
3411,8,564aa53, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 7 Jun 2013 19:44:41 +0200",ct: [PATCH 4/8] MAINT: make the simd function signature more specific,1,28,29,numpy/core/src/umath/loops.c.src,[u'57'],20,20," -67,12 +67,9 ; -1314,32 +1311,33 ; -1348,27 +1346,28 ; -1380,7 +1379,7 ; -1621,7 +1620,7 ;",";TIMEDELTA_mm_d_divide(char **args, npy_intp *dimensions, npy_intp *steps, void ;sse2_absolute_@TYPE@(char **args, npy_intp *dimensions, npy_intp *steps;NPY_NO_EXPORT voi;NPY_NO_EXPORT voi;"
3411,8,0defe6d, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 7 Jun 2013 19:49:23 +0200",ct: [PATCH 5/8] MAINT: use @vpre@ for simd sqrt intrinsic prefixallows simple extension to AVX,1,4,4,numpy/core/src/umath/loops.c.src,[u'8'],4,4," -1320,14 +1320,14 ;","sse2_sqrt_@TYPE@(@type@ * op, const @type@ * ip, const npy_intp n;"
3411,8,fe4c882, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 7 Jun 2013 20:43:33 +0200",ct: [PATCH 6/8] MAINT: remove duplicate vtype template,1,0,0,numpy/core/src/umath/loops.c.src,[u'1'],0,1," -1303,7 +1303,6 ;","TIMEDELTA_mm_d_divide(char **args, npy_intp *dimensions, npy_intp *steps, void ;"
3411,8,6312353, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 7 Jun 2013 22:44:27 +0200",ct: [PATCH 7/8] MAINT: move simd functions to new file simd.inc.srcSIMD functions are called via a minimal dispatcher function.Minizes extra code in loops.c.src and hopefully transparently allows tosimply enable more complex (runtime) dispatching rules.,4,205,124,numpy/core/bscript,[u'6'],1,1," -492,8 +492,10 ;",def pre_build(context);
3411,8,6312353, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 7 Jun 2013 22:44:27 +0200",ct: [PATCH 7/8] MAINT: move simd functions to new file simd.inc.srcSIMD functions are called via a minimal dispatcher function.Minizes extra code in loops.c.src and hopefully transparently allows tosimply enable more complex (runtime) dispatching rules.,4,205,124,numpy/core/setup.py,[u'7'],1,1," -837,7 +837,9 ; -864,12 +866,14 ; -877,6 +881,7 ;","def generate_umath_templated_sources(ext, build_dir);def generate_umath_c(ext, build_dir);def generate_umath_c(ext, build_dir);"
3411,8,6312353, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 7 Jun 2013 22:44:27 +0200",ct: [PATCH 7/8] MAINT: move simd functions to new file simd.inc.srcSIMD functions are called via a minimal dispatcher function.Minizes extra code in loops.c.src and hopefully transparently allows tosimply enable more complex (runtime) dispatching rules.,4,205,124,numpy/core/src/umath/loops.c.src,[u'143'],5,26," -19,11 +19,15 ; -37,15 +41,6 ; -67,19 +62,6 ; -1294,101 +1276,25 ; -1617,19 +1523,14 ;",";;;TIMEDELTA_mm_d_divide(char **args, npy_intp *dimensions, npy_intp *steps, void ;NPY_NO_EXPORT voi;"
3411,8,6312353, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 7 Jun 2013 22:44:27 +0200",ct: [PATCH 7/8] MAINT: move simd functions to new file simd.inc.srcSIMD functions are called via a minimal dispatcher function.Minizes extra code in loops.c.src and hopefully transparently allows tosimply enable more complex (runtime) dispatching rules.,4,205,124,numpy/core/src/umath/simd.inc.src,[u'173'],38,0," -0,0 +1,173 ;",;
3411,8,7fb8b71, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 8 Jun 2013 23:13:34 +0200",ct: [PATCH 8/8] DOC: document isnan/bswap and SSE2 improvements,1,18,0,doc/release/1.8.0-notes.rst,[u'18'],18,0," -142,6 +142,24 ;","The `pad` function has a new implementation, greatly improving performance fo;"
3410,21,16c55ba, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 14:55:31 -0400",ct: [PATCH 01/21] TST: Add basic tests for np.array,1,149,0,numpy/core/tests/test_api.py,[u'150'],42,1," -9,7 +9,155 ;",;
3410,21,5f5f4b1, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 14:57:16 -0400",ct: [PATCH 02/21] ENH: Optimize array creation by avoiding errors,3,114,50,numpy/core/src/multiarray/common.c,[u'107'],28,9," -27,6 +27,48 ; -156,8 +198,17 ; -308,32 +359,35 ; -369,7 +423,7 ; -407,7 +461,9 ; -420,6 +476,9 ;",";PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;"
3410,21,5f5f4b1, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 14:57:16 -0400",ct: [PATCH 02/21] ENH: Optimize array creation by avoiding errors,3,114,50,numpy/core/src/multiarray/common.h,[u'3'],2,0," -25,6 +25,9 ;",NPY_NO_EXPORT in;
3410,21,5f5f4b1, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 14:57:16 -0400",ct: [PATCH 02/21] ENH: Optimize array creation by avoiding errors,3,114,50,numpy/core/src/multiarray/ctors.c,[u'54'],10,9," -646,32 +646,34 ; -698,7 +700,7 ; -1024,7 +1026,7 ; -1934,7 +1936,7 ; -2009,7 +2011,7 ; -2226,7 +2228,7 ; -3268,7 +3270,7 ;","discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;PyArray_NewFromDescr(PyTypeObject *subtype, PyArray_Descr *descr, int nd;PyArray_FromStructInterface(PyObject *input;PyArray_FromInterface(PyObject *origin;PyArray_FromArrayAttr(PyObject *op, PyArray_Descr *typecode, PyObject *context;PyArray_FromBuffer(PyObject *buf, PyArray_Descr *type;"
3410,21,c9c20d4, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 16:30:47 -0400",ct: [PATCH 03/21] ENH: Optimize array creation by avoiding errors,3,6,2,numpy/core/src/multiarray/common.c,[u'3'],2,1," -359,7 +359,8 ;","PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;"
3410,21,c9c20d4, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 16:30:47 -0400",ct: [PATCH 03/21] ENH: Optimize array creation by avoiding errors,3,6,2,numpy/core/src/multiarray/common.h,[u'2'],2,0," -25,6 +25,8 ;",NPY_NO_EXPORT in;
3410,21,c9c20d4, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 16:30:47 -0400",ct: [PATCH 03/21] ENH: Optimize array creation by avoiding errors,3,6,2,numpy/core/src/multiarray/ctors.c,[u'3'],2,1," -646,7 +646,8 ;","discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;"
3410,21,2ebf198, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 16:39:05 -0400",ct: [PATCH 04/21] ENH: Optimize array creation by avoiding errors,1,0,0,numpy/core/src/multiarray/common.h,[u'2'],1,1," -25,7 +25,7 ;",NPY_NO_EXPORT in;
3410,21,a49d6a0, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 14:57:16 -0400",ct: [PATCH 05/21] ENH: Optimize array creation by avoiding errors,3,118,50,numpy/core/src/multiarray/common.c,[u'108'],28,9," -27,6 +27,48 ; -156,8 +198,17 ; -308,32 +359,36 ; -369,7 +424,7 ; -407,7 +462,9 ; -420,6 +477,9 ;",";PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;"
3410,21,a49d6a0, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 14:57:16 -0400",ct: [PATCH 05/21] ENH: Optimize array creation by avoiding errors,3,118,50,numpy/core/src/multiarray/common.h,[u'5'],2,0," -25,6 +25,11 ;",NPY_NO_EXPORT in;
3410,21,a49d6a0, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 14:57:16 -0400",ct: [PATCH 05/21] ENH: Optimize array creation by avoiding errors,3,118,50,numpy/core/src/multiarray/ctors.c,[u'55'],10,9," -646,32 +646,35 ; -698,7 +701,7 ; -1024,7 +1027,7 ; -1934,7 +1937,7 ; -2009,7 +2012,7 ; -2226,7 +2229,7 ; -3268,7 +3271,7 ;","discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;PyArray_NewFromDescr(PyTypeObject *subtype, PyArray_Descr *descr, int nd;PyArray_FromStructInterface(PyObject *input;PyArray_FromInterface(PyObject *origin;PyArray_FromArrayAttr(PyObject *op, PyArray_Descr *typecode, PyObject *context;PyArray_FromBuffer(PyObject *buf, PyArray_Descr *type;"
3410,21,f0cd760, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 17:18:42 -0400",ct: [PATCH 06/21] ENH: Optimize array creation by avoiding errors,2,2,2,numpy/core/src/multiarray/common.c,[u'2'],1,1," -360,7 +360,7 ;","PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;"
3410,21,f0cd760, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 17:18:42 -0400",ct: [PATCH 06/21] ENH: Optimize array creation by avoiding errors,2,2,2,numpy/core/src/multiarray/ctors.c,[u'2'],1,1," -647,7 +647,7 ;","discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;"
3410,21,4b9d2a6, m-d-w <mw9050@gmail.com>," Fri, 7 Jun 2013 11:32:03 -0400",ct: [PATCH 07/21] ENH: Optimize array creation by avoiding errors,3,6,4,numpy/core/src/multiarray/common.c,[u'4'],3,1," -359,7 +359,9 ;","PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;"
3410,21,4b9d2a6, m-d-w <mw9050@gmail.com>," Fri, 7 Jun 2013 11:32:03 -0400",ct: [PATCH 07/21] ENH: Optimize array creation by avoiding errors,3,6,4,numpy/core/src/multiarray/common.h,[u'2'],0,2," -25,8 +25,6 ;",NPY_NO_EXPORT in;
3410,21,4b9d2a6, m-d-w <mw9050@gmail.com>," Fri, 7 Jun 2013 11:32:03 -0400",ct: [PATCH 07/21] ENH: Optimize array creation by avoiding errors,3,6,4,numpy/core/src/multiarray/ctors.c,[u'4'],3,1," -646,7 +646,9 ;","discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;"
3410,21,a6650e5, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 14:57:16 -0400",ct: [PATCH 08/21] ENH: Optimize array creation by avoiding errors,3,120,50,numpy/core/src/multiarray/common.c,[u'110'],29,8," -27,6 +27,48 ; -156,8 +198,17 ; -308,32 +359,38 ; -369,7 +426,7 ; -407,7 +464,9 ; -420,6 +479,9 ;",";PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;"
3410,21,a6650e5, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 14:57:16 -0400",ct: [PATCH 08/21] ENH: Optimize array creation by avoiding errors,3,120,50,numpy/core/src/multiarray/common.h,[u'3'],1,0," -25,6 +25,9 ;",NPY_NO_EXPORT in;
3410,21,a6650e5, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 14:57:16 -0400",ct: [PATCH 08/21] ENH: Optimize array creation by avoiding errors,3,120,50,numpy/core/src/multiarray/ctors.c,[u'57'],10,9," -646,32 +646,37 ; -698,7 +703,7 ; -1024,7 +1029,7 ; -1934,7 +1939,7 ; -2009,7 +2014,7 ; -2226,7 +2231,7 ; -3268,7 +3273,7 ;","discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;PyArray_NewFromDescr(PyTypeObject *subtype, PyArray_Descr *descr, int nd;PyArray_FromStructInterface(PyObject *input;PyArray_FromInterface(PyObject *origin;PyArray_FromArrayAttr(PyObject *op, PyArray_Descr *typecode, PyObject *context;PyArray_FromBuffer(PyObject *buf, PyArray_Descr *type;"
3410,21,5bdd643, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 14:57:16 -0400",ct: [PATCH 09/21] ENH: Optimize array creation by avoiding errors,3,118,63,numpy/core/src/multiarray/common.c,[u'117'],27,10," -27,6 +27,55 ; -156,8 +205,17 ; -308,32 +366,35 ; -364,12 +425,9 ; -389,9 +447,6 ; -407,7 +462,9 ;",";PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;"
3410,21,5bdd643, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 14:57:16 -0400",ct: [PATCH 09/21] ENH: Optimize array creation by avoiding errors,3,118,63,numpy/core/src/multiarray/common.h,[u'3'],1,0," -25,6 +25,9 ;",NPY_NO_EXPORT in;
3410,21,5bdd643, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 14:57:16 -0400",ct: [PATCH 09/21] ENH: Optimize array creation by avoiding errors,3,118,63,numpy/core/src/multiarray/ctors.c,[u'61'],9,10," -646,32 +646,35 ; -693,12 +696,10 ; -728,9 +729,6 ; -1934,9 +1932,8 ; -2009,9 +2006,8 ; -2226,9 +2222,8 ;","discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;PyArray_FromStructInterface(PyObject *input;PyArray_FromInterface(PyObject *origin;PyArray_FromArrayAttr(PyObject *op, PyArray_Descr *typecode, PyObject *context;"
3410,21,1beff0a, m-d-w <mw9050@gmail.com>," Fri, 7 Jun 2013 15:42:41 -0400",ct: [PATCH 10/21] ENH: Optimize array creation by avoiding errors,1,2,2,numpy/core/src/multiarray/ctors.c,[u'4'],2,2," -1022,7 +1022,7 ; -3263,7 +3263,7 ;","PyArray_NewFromDescr(PyTypeObject *subtype, PyArray_Descr *descr, int nd;PyArray_FromBuffer(PyObject *buf, PyArray_Descr *type;"
3410,21,e174510, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 14:57:16 -0400",ct: [PATCH 11/21] ENH: Optimize array creation by avoiding errors,3,118,63,numpy/core/src/multiarray/common.c,[u'117'],27,10," -27,6 +27,55 ; -156,8 +205,17 ; -308,32 +366,35 ; -364,12 +425,9 ; -389,9 +447,6 ; -407,7 +462,9 ;",";PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;"
3410,21,e174510, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 14:57:16 -0400",ct: [PATCH 11/21] ENH: Optimize array creation by avoiding errors,3,118,63,numpy/core/src/multiarray/common.h,[u'3'],1,0," -25,6 +25,9 ;",NPY_NO_EXPORT in;
3410,21,e174510, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 14:57:16 -0400",ct: [PATCH 11/21] ENH: Optimize array creation by avoiding errors,3,118,63,numpy/core/src/multiarray/ctors.c,[u'61'],9,10," -646,32 +646,35 ; -693,12 +696,10 ; -728,9 +729,6 ; -1934,9 +1932,8 ; -2009,9 +2006,8 ; -2226,9 +2222,8 ;","discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;PyArray_FromStructInterface(PyObject *input;PyArray_FromInterface(PyObject *origin;PyArray_FromArrayAttr(PyObject *op, PyArray_Descr *typecode, PyObject *context;"
3410,21,e46c593, m-d-w <mw9050@gmail.com>," Fri, 7 Jun 2013 17:30:53 -0400",ct: [PATCH 12/21] ENH: Optimize array creation by avoiding errors,1,0,0,numpy/core/src/multiarray/multiarraymodule.c,[u'2'],1,1," -68,7 +68,7 ;","PyArray_GetPriority(PyObject *obj, double default_;"
3410,21,6a2f920, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 14:57:16 -0400",ct: [PATCH 13/21] ENH: Optimize array creation by avoiding errors,4,119,64,numpy/core/src/multiarray/common.c,[u'117'],20,7," -27,6 +27,55 ; -156,8 +205,17 ; -308,32 +366,35 ; -364,12 +425,9 ; -389,9 +447,6 ; -407,7 +462,9 ;",";PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;"
3410,21,6a2f920, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 14:57:16 -0400",ct: [PATCH 13/21] ENH: Optimize array creation by avoiding errors,4,119,64,numpy/core/src/multiarray/common.h,[u'3'],1,0," -25,6 +25,9 ;",NPY_NO_EXPORT in;
3410,21,6a2f920, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 14:57:16 -0400",ct: [PATCH 13/21] ENH: Optimize array creation by avoiding errors,4,119,64,numpy/core/src/multiarray/ctors.c,[u'61'],7,7," -646,32 +646,35 ; -693,12 +696,10 ; -728,9 +729,6 ; -1934,9 +1932,8 ; -2009,9 +2006,8 ; -2226,9 +2222,8 ;","discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;PyArray_FromStructInterface(PyObject *input;PyArray_FromInterface(PyObject *origin;PyArray_FromArrayAttr(PyObject *op, PyArray_Descr *typecode, PyObject *context;"
3410,21,6a2f920, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 14:57:16 -0400",ct: [PATCH 13/21] ENH: Optimize array creation by avoiding errors,4,119,64,numpy/core/src/multiarray/multiarraymodule.c,[u'2'],1,1," -68,7 +68,7 ;","PyArray_GetPriority(PyObject *obj, double default_;"
3410,21,7ebdaf2, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 14:57:16 -0400",ct: [PATCH 14/21] ENH: Optimize array creation by avoiding errors,4,121,64,numpy/core/src/multiarray/common.c,[u'117'],20,7," -27,6 +27,55 ; -156,8 +205,17 ; -308,32 +366,35 ; -364,12 +425,9 ; -389,9 +447,6 ; -407,7 +462,9 ;",";PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;"
3410,21,7ebdaf2, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 14:57:16 -0400",ct: [PATCH 14/21] ENH: Optimize array creation by avoiding errors,4,121,64,numpy/core/src/multiarray/common.h,[u'3'],1,0," -25,6 +25,9 ;",NPY_NO_EXPORT in;
3410,21,7ebdaf2, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 14:57:16 -0400",ct: [PATCH 14/21] ENH: Optimize array creation by avoiding errors,4,121,64,numpy/core/src/multiarray/ctors.c,[u'62'],7,7," -646,32 +646,35 ; -693,12 +696,10 ; -728,9 +729,6 ; -1934,9 +1932,8 ; -2009,9 +2006,9 ; -2226,9 +2223,8 ;","discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;PyArray_FromStructInterface(PyObject *input;PyArray_FromInterface(PyObject *origin;PyArray_FromArrayAttr(PyObject *op, PyArray_Descr *typecode, PyObject *context;"
3410,21,7ebdaf2, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 14:57:16 -0400",ct: [PATCH 14/21] ENH: Optimize array creation by avoiding errors,4,121,64,numpy/core/src/multiarray/multiarraymodule.c,[u'3'],1,1," -52,6 +52,7 ; -68,7 +69,7 ;","NPY_NO_EXPORT int NPY_NUMUSERTYPES = 0;PyArray_GetPriority(PyObject *obj, double default_;"
3410,21,a1cce4d, m-d-w <mw9050@gmail.com>," Mon, 10 Jun 2013 16:08:38 -0400",ct: [PATCH 15/21] ENH: Optimize array creation by avoiding errors,1,0,3,numpy/core/src/multiarray/common.c,[u'3'],0,3," -477,9 +477,6 ;","PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;"
3410,21,1a252e6, m-d-w <mw9050@gmail.com>," Mon, 10 Jun 2013 16:13:36 -0400",ct: [PATCH 16/21] ENH: Optimize array creation by avoiding errors,1,11,6,numpy/core/src/multiarray/common.c,[u'17'],11,6," -45,17 +45,22 ; -64,8 +69,8 ;",";PyArray_GetAttrString_SuppressException(PyObject *v, char *name;"
3410,21,04add8e, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 14:57:16 -0400",ct: [PATCH 17/21] ENH: Optimize array creation by avoiding errors,4,126,64,numpy/core/src/multiarray/common.c,[u'122'],20,7," -27,6 +27,60 ; -156,8 +210,17 ; -308,32 +371,35 ; -364,12 +430,9 ; -389,9 +452,6 ; -407,7 +467,9 ;",";PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;"
3410,21,04add8e, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 14:57:16 -0400",ct: [PATCH 17/21] ENH: Optimize array creation by avoiding errors,4,126,64,numpy/core/src/multiarray/common.h,[u'3'],1,0," -25,6 +25,9 ;",NPY_NO_EXPORT in;
3410,21,04add8e, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 14:57:16 -0400",ct: [PATCH 17/21] ENH: Optimize array creation by avoiding errors,4,126,64,numpy/core/src/multiarray/ctors.c,[u'62'],7,7," -646,32 +646,35 ; -693,12 +696,10 ; -728,9 +729,6 ; -1934,9 +1932,8 ; -2009,9 +2006,9 ; -2226,9 +2223,8 ;","discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;PyArray_FromStructInterface(PyObject *input;PyArray_FromInterface(PyObject *origin;PyArray_FromArrayAttr(PyObject *op, PyArray_Descr *typecode, PyObject *context;"
3410,21,04add8e, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 14:57:16 -0400",ct: [PATCH 17/21] ENH: Optimize array creation by avoiding errors,4,126,64,numpy/core/src/multiarray/multiarraymodule.c,[u'3'],1,1," -52,6 +52,7 ; -68,7 +69,7 ;","NPY_NO_EXPORT int NPY_NUMUSERTYPES = 0;PyArray_GetPriority(PyObject *obj, double default_;"
3410,21,fda333b, m-d-w <mw9050@gmail.com>," Mon, 10 Jun 2013 18:07:30 -0400",ct: [PATCH 18/21] ENH: Optimize array creation by avoiding errors,1,3,3,numpy/core/src/multiarray/common.c,[u'6'],3,3," -49,18 +49,18 ;","PyArray_GetAttrString_SuppressException(PyObject *obj, char *name;"
3410,21,cc149b2, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 14:57:16 -0400",ct: [PATCH 19/21] ENH: Optimize array creation by avoiding errors,4,126,64,numpy/core/src/multiarray/common.c,[u'122'],20,7," -27,6 +27,60 ; -156,8 +210,17 ; -308,32 +371,35 ; -364,12 +430,9 ; -389,9 +452,6 ; -407,7 +467,9 ;",";PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;"
3410,21,cc149b2, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 14:57:16 -0400",ct: [PATCH 19/21] ENH: Optimize array creation by avoiding errors,4,126,64,numpy/core/src/multiarray/common.h,[u'3'],1,0," -25,6 +25,9 ;",NPY_NO_EXPORT in;
3410,21,cc149b2, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 14:57:16 -0400",ct: [PATCH 19/21] ENH: Optimize array creation by avoiding errors,4,126,64,numpy/core/src/multiarray/ctors.c,[u'62'],7,7," -646,32 +646,35 ; -693,12 +696,10 ; -728,9 +729,6 ; -1934,9 +1932,8 ; -2009,9 +2006,9 ; -2226,9 +2223,8 ;","discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;PyArray_FromStructInterface(PyObject *input;PyArray_FromInterface(PyObject *origin;PyArray_FromArrayAttr(PyObject *op, PyArray_Descr *typecode, PyObject *context;"
3410,21,cc149b2, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 14:57:16 -0400",ct: [PATCH 19/21] ENH: Optimize array creation by avoiding errors,4,126,64,numpy/core/src/multiarray/multiarraymodule.c,[u'3'],1,1," -52,6 +52,7 ; -68,7 +69,7 ;","NPY_NO_EXPORT int NPY_NUMUSERTYPES = 0;PyArray_GetPriority(PyObject *obj, double default_;"
3410,21,37b55c0, m-d-w <mw9050@gmail.com>," Mon, 10 Jun 2013 18:17:02 -0400",ct: [PATCH 20/21] ENH: Optimize array creation by avoiding errors,1,0,0,numpy/core/src/multiarray/common.c,[u'2'],1,1," -38,7 +38,7 ;",;
3410,21,3abe4fd, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 14:57:16 -0400",ct: [PATCH 21/21] ENH: Optimize array creation by avoiding errors,4,126,64,numpy/core/src/multiarray/common.c,[u'122'],20,7," -27,6 +27,60 ; -156,8 +210,17 ; -308,32 +371,35 ; -364,12 +430,9 ; -389,9 +452,6 ; -407,7 +467,9 ;",";PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;"
3410,21,3abe4fd, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 14:57:16 -0400",ct: [PATCH 21/21] ENH: Optimize array creation by avoiding errors,4,126,64,numpy/core/src/multiarray/common.h,[u'3'],1,0," -25,6 +25,9 ;",NPY_NO_EXPORT in;
3410,21,3abe4fd, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 14:57:16 -0400",ct: [PATCH 21/21] ENH: Optimize array creation by avoiding errors,4,126,64,numpy/core/src/multiarray/ctors.c,[u'62'],7,7," -646,32 +646,35 ; -693,12 +696,10 ; -728,9 +729,6 ; -1934,9 +1932,8 ; -2009,9 +2006,9 ; -2226,9 +2223,8 ;","discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;PyArray_FromStructInterface(PyObject *input;PyArray_FromInterface(PyObject *origin;PyArray_FromArrayAttr(PyObject *op, PyArray_Descr *typecode, PyObject *context;"
3410,21,3abe4fd, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 14:57:16 -0400",ct: [PATCH 21/21] ENH: Optimize array creation by avoiding errors,4,126,64,numpy/core/src/multiarray/multiarraymodule.c,[u'3'],1,1," -52,6 +52,7 ; -68,7 +69,7 ;","NPY_NO_EXPORT int NPY_NUMUSERTYPES = 0;PyArray_GetPriority(PyObject *obj, double default_;"
3407,1,424d84b, John Benediktsson <mrjbq7@gmail.com>," Thu, 6 Jun 2013 08:28:40 -0700",ct: [PATCH] DOC: fix comments in min and ptp.,1,2,2,numpy/ma/core.py,[u'4'],2,2," -5937,7 +5937,7 ; -5956,7 +5956,7 ;","def min(obj, axis=None, out=None, fill_value=None);def ptp(obj, axis=None, out=None, fill_value=None);"
3404,3,a5a3457, Kyungdahm Yun <tomyun@gmail.com>," Wed, 5 Jun 2013 16:01:01 +0900","ct: [PATCH 1/3] Force empty/ones/zeros_like() to copy maskAs underlying `empty_like()` knows nothing about mask, it would be`_convert2ma`'s job to properly set up the output mask. `copy` argumentis added to figure out which functions need this behavior.`ones_like()` and `zeros_like()` which were mere aliases of regularnumpy functions now go through `_convert2ma` as well.Hopefully this fixes #3145, #2572.",1,7,4,numpy/ma/core.py,[u'11'],7,4," -7179,10 +7179,11 ; -7208,21 +7209,23 ;","class _convert2ma;def __call__(self, a, *args, **params);"
3404,3,0908295, Kyungdahm Yun <tomyun@gmail.com>," Thu, 6 Jun 2013 10:42:59 +0900","ct: [PATCH 2/3] Include ones_like, zeros_like public for import *",1,2,2,numpy/ma/core.py,[u'4'],2,2," -75,7 +75,7 ; -84,7 +84,7 ;",;;
3404,3,9543818, Kyungdahm Yun <tomyun@gmail.com>," Thu, 6 Jun 2013 10:48:46 +0900",ct: [PATCH 3/3] Add a regression test for #3145,1,12,0,numpy/ma/tests/test_regression.py,[u'12'],12,0," -70,5 +70,17 ;",def test_ddof_corrcoef(self);
3403,1,37723a5, Julian Taylor <jtaylor.debian@googlemail.com>," Wed, 5 Jun 2013 22:07:11 +0200",ct: [PATCH] TST: fix some function name conflictsenables a few extra tests,4,4,4,numpy/core/tests/test_multiarray.py,[u'2'],1,1," -1207,7 +1207,7 ;",def test_assign_mask(self);
3403,1,37723a5, Julian Taylor <jtaylor.debian@googlemail.com>," Wed, 5 Jun 2013 22:07:11 +0200",ct: [PATCH] TST: fix some function name conflictsenables a few extra tests,4,4,4,numpy/core/tests/test_umath.py,[u'2'],1,1," -348,7 +348,7 ;",def test_nan_outputs(self);
3403,1,37723a5, Julian Taylor <jtaylor.debian@googlemail.com>," Wed, 5 Jun 2013 22:07:11 +0200",ct: [PATCH] TST: fix some function name conflictsenables a few extra tests,4,4,4,numpy/ma/tests/test_old_ma.py,[u'2'],1,1," -423,7 +423,7 ;",def test_testOddFeatures(self);
3403,1,37723a5, Julian Taylor <jtaylor.debian@googlemail.com>," Wed, 5 Jun 2013 22:07:11 +0200",ct: [PATCH] TST: fix some function name conflictsenables a few extra tests,4,4,4,numpy/ma/tests/test_subclassing.py,[u'2'],1,1," -116,7 +116,7 ;",def test_masked_binary_operations(self);
3402,1,1d96fd3, argriffing <argriffing@gmail.com>," Wed, 5 Jun 2013 12:55:05 -0300",ct: [PATCH] typo,1,0,0,numpy/linalg/linalg.py,[u'2'],1,1," -1867,7 +1867,7 ;","def lstsq(a, b, rcond=-1);"
3401,2,ab2741a, Ralf Gommers <ralf.gommers@googlemail.com>," Tue, 4 Jun 2013 21:08:36 +0200","ct: [PATCH 1/2] DOC: remove module index from reference guide.It was broken, and after fixing it looked quite useless.Update in conf.py is because `html_use_modindex` is deprecated.",2,0,3,doc/source/_templates/indexcontent.html,[u'2'],0,2," -15,8 +15,6 ;",;
3401,2,ab2741a, Ralf Gommers <ralf.gommers@googlemail.com>," Tue, 4 Jun 2013 21:08:36 +0200","ct: [PATCH 1/2] DOC: remove module index from reference guide.It was broken, and after fixing it looked quite useless.Update in conf.py is because `html_use_modindex` is deprecated.",2,0,3,doc/source/conf.py,[u'2'],1,1," -121,7 +121,7 ;",;
3401,2,0155f8d, Ralf Gommers <ralf.gommers@googlemail.com>," Tue, 4 Jun 2013 21:31:10 +0200",ct: [PATCH 2/2] DOC: add missing release notes to the reference guide.,1,3,0,doc/source/release.rst,[u'3'],3,0," -8,3 +8,6 ;",Release Note;
3400,1,a32335e, Warren Weckesser <warren.weckesser@gmail.com>," Tue, 4 Jun 2013 14:42:05 -0400",ct: [PATCH] TST: linalg: loosen the requirements of some tests in test_blasdot.py.  Addresses part of gh-3399.,1,9,9,numpy/core/tests/test_blasdot.py,[u'18'],9,9," -111,15 +111,15 ; -135,10 +135,10 ; -147,7 +147,7 ;",def test_dot_array_order();def test_dot_array_order();def test_dot_array_order();
3397,3,736e5bc, Daniel <dabi@blazemail.com>," Tue, 4 Jun 2013 07:20:09 +0200","ct: [PATCH 1/3] savetxt with file like objectssavetxt now accepts any object with method ""write"", which is the only method needed.",1,0,0,numpy/lib/npyio.py,[u'2'],1,1," -997,7 +997,7 ;","def savetxt(fname, X, fmt='%.18e', delimiter=' ', newline='\n', header='';"
3397,3,85952d5, Daniel <dabi@blazemail.com>," Thu, 6 Jun 2013 00:42:55 +0200",ct: [PATCH 2/3] new test for savetxt with file like objects,1,13,0,numpy/lib/tests/test_io.py,[u'13'],13,0," -375,6 +375,19 ;",def test_complex_arrays(self);
3397,3,1684d9b, Daniel <dabi@blazemail.com>," Sat, 15 Jun 2013 11:46:03 +0200",ct: [PATCH 3/3] test for savetxt with file like objects,1,0,0,numpy/lib/tests/test_io.py,[u'2'],1,1," -379,7 +379,7 ;",def test_custom_writer(self);
3396,29,3005596, m-d-w <mw9050@gmail.com>," Mon, 3 Jun 2013 13:51:25 -0400",ct: [PATCH 01/31] Avoid extra error creation,3,99,50,numpy/core/src/multiarray/common.c,[u'92'],28,10," -27,6 +27,39 ; -156,8 +189,17 ; -308,32 +350,34 ; -369,7 +413,7 ; -407,7 +451,7 ;",";PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;"
3396,29,3005596, m-d-w <mw9050@gmail.com>," Mon, 3 Jun 2013 13:51:25 -0400",ct: [PATCH 01/31] Avoid extra error creation,3,99,50,numpy/core/src/multiarray/common.h,[u'3'],2,0," -25,6 +25,9 ;",NPY_NO_EXPORT in;
3396,29,3005596, m-d-w <mw9050@gmail.com>," Mon, 3 Jun 2013 13:51:25 -0400",ct: [PATCH 01/31] Avoid extra error creation,3,99,50,numpy/core/src/multiarray/ctors.c,[u'54'],11,11," -646,32 +646,34 ; -698,7 +700,7 ; -1024,7 +1026,7 ; -1934,7 +1936,7 ; -2009,7 +2011,7 ; -2226,7 +2228,7 ; -3268,7 +3270,7 ;","discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;PyArray_NewFromDescr(PyTypeObject *subtype, PyArray_Descr *descr, int nd;PyArray_FromStructInterface(PyObject *input;PyArray_FromInterface(PyObject *origin;PyArray_FromArrayAttr(PyObject *op, PyArray_Descr *typecode, PyObject *context;PyArray_FromBuffer(PyObject *buf, PyArray_Descr *type;"
3396,29,68c359a, m-d-w <mw9050@gmail.com>," Mon, 3 Jun 2013 18:31:11 -0400",ct: [PATCH 02/31] Avoid extra error creation,2,25,19,numpy/core/src/multiarray/common.c,[u'42'],22,16," -39,23 +39,28 ; -350,9 +355,10 ;",";PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;"
3396,29,68c359a, m-d-w <mw9050@gmail.com>," Mon, 3 Jun 2013 18:31:11 -0400",ct: [PATCH 02/31] Avoid extra error creation,2,25,19,numpy/core/src/multiarray/ctors.c,[u'2'],1,1," -646,7 +646,7 ;","discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;"
3396,29,5e30338, m-d-w <mw9050@gmail.com>," Mon, 3 Jun 2013 19:52:59 -0400",ct: [PATCH 03/31] Avoid extra error creation,1,22,17,numpy/core/src/multiarray/common.c,[u'39'],21,17," -44,22 +44,22 ; -196,12 +196,12 ; -457,7 +457,9 ; -470,6 +472,9 ;","PyArray_GetAttrString_Lite(PyObject *v, char *name;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;"
3396,29,bcc6d04, m-d-w <mw9050@gmail.com>," Mon, 3 Jun 2013 20:06:50 -0400",ct: [PATCH 04/31] Add PyUnicode_InternFromString for 3.0,1,4,0,numpy/core/src/multiarray/common.c,[u'4'],4,0," -51,7 +51,11 ;","PyArray_GetAttrString_Lite(PyObject *v, char *name;"
3396,29,e1484ed, m-d-w <mw9050@gmail.com>," Mon, 3 Jun 2013 20:12:44 -0400",ct: [PATCH 05/31] untabify,1,0,0,numpy/core/src/multiarray/common.c,[u'2'],1,1," -52,7 +52,7 ;","PyArray_GetAttrString_Lite(PyObject *v, char *name;"
3396,29,b3154e4, m-d-w <mw9050@gmail.com>," Tue, 4 Jun 2013 08:42:36 -0400",ct: [PATCH 06/31] untabify,1,0,0,numpy/core/src/multiarray/common.c,[u'2'],1,1," -462,7 +462,7 ;","PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;"
3396,29,272cae2, m-d-w <mw9050@gmail.com>," Tue, 4 Jun 2013 10:00:25 -0400",ct: [PATCH 07/31] add spaces in conditional,1,0,0,numpy/core/src/multiarray/common.c,[u'2'],1,1," -43,7 +43,7 ;",PyObject ;
3396,29,387d112, m-d-w <mw9050@gmail.com>," Tue, 4 Jun 2013 14:08:50 -0400",ct: [PATCH 08/31] added unit test for numpy.array(),1,86,0,numpy/core/tests/test_api.py,[u'86'],44,0," -11,6 +11,92 ;",;
3396,29,b45b2fc, m-d-w <mw9050@gmail.com>," Tue, 4 Jun 2013 15:00:13 -0400",ct: [PATCH 09/31] Fix some tests,1,10,6,numpy/core/tests/test_api.py,[u'16'],10,6," -35,11 +35,14 ; -49,12 +52,13 ;",def test_array_array();def test_array_array();
3396,29,ded50c1, m-d-w <mw9050@gmail.com>," Tue, 4 Jun 2013 15:21:01 -0400",ct: [PATCH 10/31] Fix some tests,1,7,5,numpy/core/tests/test_api.py,[u'12'],7,5," -35,9 +35,11 ; -53,8 +55,8 ;",def test_array_array();def test_array_array();
3396,29,0055402, m-d-w <mw9050@gmail.com>," Tue, 4 Jun 2013 15:29:21 -0400",ct: [PATCH 11/31] Fix some tests,1,0,0,numpy/core/tests/test_api.py,[u'2'],1,1," -35,7 +35,7 ;",def test_array_array();
3396,29,7cfc767, m-d-w <mw9050@gmail.com>," Tue, 4 Jun 2013 15:49:29 -0400",ct: [PATCH 12/31] Fix some tests,1,7,5,numpy/core/tests/test_api.py,[u'12'],7,5," -35,10 +35,12 ; -55,7 +57,7 ;",def test_array_array();def test_array_array();
3396,29,bf73618, m-d-w <mw9050@gmail.com>," Tue, 4 Jun 2013 16:07:40 -0400",ct: [PATCH 13/31] Fix some tests,1,16,14,numpy/core/tests/test_api.py,[u'30'],16,14," -35,25 +35,26 ; -62,8 +63,9 ;",def test_array_array();def test_array_array();
3396,29,3489568, m-d-w <mw9050@gmail.com>," Tue, 4 Jun 2013 16:09:09 -0400",ct: [PATCH 14/31] Fix some tests,1,4,4,numpy/core/tests/test_api.py,[u'8'],4,4," -63,12 +63,12 ;",def test_array_array();
3396,29,20b2ed2, m-d-w <mw9050@gmail.com>," Tue, 4 Jun 2013 16:32:19 -0400",ct: [PATCH 15/31] Fix some tests,1,24,13,numpy/core/tests/test_api.py,[u'37'],24,13," -38,10 +38,9 ; -50,17 +49,29 ;",def test_array_array();def test_array_array();
3396,29,1c0c8b1, m-d-w <mw9050@gmail.com>," Tue, 4 Jun 2013 17:03:19 -0400",ct: [PATCH 16/31] Fix some tests,1,10,12,numpy/core/tests/test_api.py,[u'22'],10,12," -6,7 +6,7 ; -38,10 +38,6 ; -49,8 +45,11 ; -58,19 +57,18 ;",;def test_array_array();def test_array_array();def test_array_array();
3396,29,a1fc66d, m-d-w <mw9050@gmail.com>," Tue, 4 Jun 2013 17:12:42 -0400",ct: [PATCH 17/31] Fix some tests,1,7,3,numpy/core/tests/test_api.py,[u'10'],7,3," -6,7 +6,7 ; -84,12 +84,16 ;",;def test_array_array();
3396,29,1885285, m-d-w <mw9050@gmail.com>," Tue, 4 Jun 2013 17:21:37 -0400",ct: [PATCH 18/31] Fix some tests,1,0,0,numpy/core/tests/test_api.py,[u'2'],1,1," -85,7 +85,7 ;",def test_array_array();
3396,29,d6a5b08, m-d-w <mw9050@gmail.com>," Tue, 4 Jun 2013 17:36:15 -0400",ct: [PATCH 19/31] Fix some tests,1,68,39,numpy/core/tests/test_api.py,[u'107'],27,16," -6,7 +6,6 ; -23,13 +22,15 ; -38,7 +39,8 ; -50,37 +52,50 ; -92,33 +107,45 ; -205,6 +232,8 ;",;def test_array_array();def test_array_array();def test_array_array();def test_array_array();def test_array_astype();
3396,29,61f73c7, m-d-w <mw9050@gmail.com>," Tue, 4 Jun 2013 17:44:44 -0400",ct: [PATCH 20/31] Fix some tests,1,4,5,numpy/core/tests/test_api.py,[u'9'],4,5," -84,11 +84,10 ;",def test_array_array();
3396,29,15d5089, m-d-w <mw9050@gmail.com>," Wed, 5 Jun 2013 08:20:04 -0400",ct: [PATCH 21/31] Fix some tests,1,6,5,numpy/core/tests/test_api.py,[u'11'],6,5," -47,8 +47,8 ; -62,7 +62,8 ; -72,8 +73,8 ;",def test_array_array();def test_array_array();def test_array_array();
3396,29,8bc18ab, m-d-w <mw9050@gmail.com>," Wed, 5 Jun 2013 09:15:26 -0400",ct: [PATCH 22/31] Fix some tests,1,12,6,numpy/core/tests/test_api.py,[u'18'],12,6," -61,10 +61,12 ; -73,14 +75,12 ; -91,7 +91,13 ;",def test_array_array();def test_array_array();def test_array_array();
3396,29,b6e289d, m-d-w <mw9050@gmail.com>," Wed, 5 Jun 2013 09:26:30 -0400",ct: [PATCH 23/31] Fix some tests,1,3,3,numpy/core/tests/test_api.py,[u'6'],3,3," -77,11 +77,11 ;",def test_array_array();
3396,29,84b60be, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 10:41:37 -0400",ct: [PATCH 24/31] Fix some style errors as per seberg Jun6,2,61,56,numpy/core/src/multiarray/common.c,[u'2'],1,1," -199,7 +199,7 ;","PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;"
3396,29,84b60be, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 10:41:37 -0400",ct: [PATCH 24/31] Fix some style errors as per seberg Jun6,2,61,56,numpy/core/tests/test_api.py,[u'115'],19,18," -6,39 +6,41 ; -49,9 +51,9 ; -77,10 +79,13 ; -91,8 +96,8 ; -101,13 +106,13 ; -116,42 +121,43 ; -239,7 +245,6 ;",;def test_array_array();def test_array_array();def test_array_array();def test_array_array();def test_array_array();def test_array_astype();
3396,29,746aacc, m-d-w <mw9050@gmail.com>," Mon, 3 Jun 2013 13:51:25 -0400",ct: [PATCH 25/31] Avoid extra error creationAvoid extra error creationAvoid extra error creationAdd PyUnicode_InternFromString for 3.0untabifyuntabifyadd spaces in conditionaladded unit test for numpy.array()Fix some testsFix some testsFix some testsFix some testsFix some testsFix some testsFix some testsFix some testsFix some testsFix some testsFix some testsFix some testsFix some testsFix some testsFix some testsFix some style errors as per seberg Jun6Revert test_api.py prior to rebase,3,114,50,numpy/core/src/multiarray/common.c,[u'107'],28,9," -27,6 +27,48 ; -156,8 +198,17 ; -308,32 +359,35 ; -369,7 +423,7 ; -407,7 +461,9 ; -420,6 +476,9 ;",";PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;"
3396,29,746aacc, m-d-w <mw9050@gmail.com>," Mon, 3 Jun 2013 13:51:25 -0400",ct: [PATCH 25/31] Avoid extra error creationAvoid extra error creationAvoid extra error creationAdd PyUnicode_InternFromString for 3.0untabifyuntabifyadd spaces in conditionaladded unit test for numpy.array()Fix some testsFix some testsFix some testsFix some testsFix some testsFix some testsFix some testsFix some testsFix some testsFix some testsFix some testsFix some testsFix some testsFix some testsFix some testsFix some style errors as per seberg Jun6Revert test_api.py prior to rebase,3,114,50,numpy/core/src/multiarray/common.h,[u'3'],2,0," -25,6 +25,9 ;",NPY_NO_EXPORT in;
3396,29,746aacc, m-d-w <mw9050@gmail.com>," Mon, 3 Jun 2013 13:51:25 -0400",ct: [PATCH 25/31] Avoid extra error creationAvoid extra error creationAvoid extra error creationAdd PyUnicode_InternFromString for 3.0untabifyuntabifyadd spaces in conditionaladded unit test for numpy.array()Fix some testsFix some testsFix some testsFix some testsFix some testsFix some testsFix some testsFix some testsFix some testsFix some testsFix some testsFix some testsFix some testsFix some testsFix some testsFix some style errors as per seberg Jun6Revert test_api.py prior to rebase,3,114,50,numpy/core/src/multiarray/ctors.c,[u'54'],10,9," -646,32 +646,34 ; -698,7 +700,7 ; -1024,7 +1026,7 ; -1934,7 +1936,7 ; -2009,7 +2011,7 ; -2226,7 +2228,7 ; -3268,7 +3270,7 ;","discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;PyArray_NewFromDescr(PyTypeObject *subtype, PyArray_Descr *descr, int nd;PyArray_FromStructInterface(PyObject *input;PyArray_FromInterface(PyObject *origin;PyArray_FromArrayAttr(PyObject *op, PyArray_Descr *typecode, PyObject *context;PyArray_FromBuffer(PyObject *buf, PyArray_Descr *type;"
3396,29,bb344d3, m-d-w <mw9050@gmail.com>," Mon, 3 Jun 2013 13:51:25 -0400",ct: [PATCH 27/31] ENH: Optimize array creation by avoiding errors,3,114,50,numpy/core/src/multiarray/common.c,[u'107'],28,9," -27,6 +27,48 ; -156,8 +198,17 ; -308,32 +359,35 ; -369,7 +423,7 ; -407,7 +461,9 ; -420,6 +476,9 ;",";PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;"
3396,29,bb344d3, m-d-w <mw9050@gmail.com>," Mon, 3 Jun 2013 13:51:25 -0400",ct: [PATCH 27/31] ENH: Optimize array creation by avoiding errors,3,114,50,numpy/core/src/multiarray/common.h,[u'3'],2,0," -25,6 +25,9 ;",NPY_NO_EXPORT in;
3396,29,bb344d3, m-d-w <mw9050@gmail.com>," Mon, 3 Jun 2013 13:51:25 -0400",ct: [PATCH 27/31] ENH: Optimize array creation by avoiding errors,3,114,50,numpy/core/src/multiarray/ctors.c,[u'54'],10,9," -646,32 +646,34 ; -698,7 +700,7 ; -1024,7 +1026,7 ; -1934,7 +1936,7 ; -2009,7 +2011,7 ; -2226,7 +2228,7 ; -3268,7 +3270,7 ;","discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;PyArray_NewFromDescr(PyTypeObject *subtype, PyArray_Descr *descr, int nd;PyArray_FromStructInterface(PyObject *input;PyArray_FromInterface(PyObject *origin;PyArray_FromArrayAttr(PyObject *op, PyArray_Descr *typecode, PyObject *context;PyArray_FromBuffer(PyObject *buf, PyArray_Descr *type;"
3396,29,ecd7aa4, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 12:27:15 -0400",ct: [PATCH 29/31] TST: Add basic tests for np.array,1,0,0,numpy/core/tests/test_api.py,[u'1'],0,1," -244,7 +244,6 ;",def test_array_astype();
3396,29,4467491, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 12:34:36 -0400",ct: [PATCH 30/31] TST: Add basic tests for np.array,1,0,149,numpy/core/tests/test_api.py,[u'150'],1,42," -9,155 +9,7 ;",;
3396,29,acd8675, m-d-w <mw9050@gmail.com>," Thu, 6 Jun 2013 12:35:53 -0400",ct: [PATCH 31/31] TST: Add basic tests for np.array,1,149,0,numpy/core/tests/test_api.py,[u'150'],42,1," -9,7 +9,155 ;",;
3394,1,54c1471, Julian Taylor <jtaylor.debian@googlemail.com>," Mon, 3 Jun 2013 18:48:26 +0200",ct: [PATCH] BUG: fix typo on npy_config.h include guardWas overlooked as loops.c.src where np.isnan lives includes it directly.Now all isnan calls in numpy profit from the improvement.,2,0,2,numpy/core/include/numpy/npy_math.h,[u'2'],1,1," -6,7 +6,7 ;","extern ""C"" ;"
3394,1,54c1471, Julian Taylor <jtaylor.debian@googlemail.com>," Mon, 3 Jun 2013 18:48:26 +0200",ct: [PATCH] BUG: fix typo on npy_config.h include guardWas overlooked as loops.c.src where np.isnan lives includes it directly.Now all isnan calls in numpy profit from the improvement.,2,0,2,numpy/core/src/umath/loops.c.src,[u'1'],0,1," -5,7 +5,6 ;",;
3393,1,7ece0dd, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 3 Jun 2013 18:07:13 +0200","ct: [PATCH] DOC: Clarify and add C-compatible integer types to list of dtypesAlso mention np.intp, which at least personally I think is not anunimportant type.",1,18,11,numpy/doc/basics.py,[u'29'],18,11," -9,11 +9,15 ; -22,19 +26,22 ; -43,7 +50,7 ; -90,9 +97,9 ;",;;;;
3387,6,40000f5, Warren Weckesser <warren.weckesser@gmail.com>," Sat, 1 Jun 2013 17:51:51 -0400","ct: [PATCH 1/6] ENH: linalg: Add the `axis` keyword to linalg.norm.Also fixed a bug that occurred with integer arrays and negative ord.  For example,norm([1, 3], -1) returned 1.0, but the correct value is 0.75.",2,66,19,numpy/linalg/linalg.py,[u'56'],29,10," -22,8 +22,9 ; -1865,7 +1866,8 ; -1880,11 +1882,14 ; -1967,29 +1972,52 ;",";def lstsq(a, b, rcond=-1);def norm(x, ord=None);def norm(x, ord=None);"
3387,6,40000f5, Warren Weckesser <warren.weckesser@gmail.com>," Sat, 1 Jun 2013 17:51:51 -0400","ct: [PATCH 1/6] ENH: linalg: Add the `axis` keyword to linalg.norm.Also fixed a bug that occurred with integer arrays and negative ord.  For example,norm([1, 3], -1) returned 1.0, but the correct value is 0.75.",2,66,19,numpy/linalg/tests/test_linalg.py,[u'29'],16,4," -523,9 +523,9 ; -548,8 +548,7 ; -563,6 +562,21 ; -574,6 +588,11 ;",def test_empty(self);def _test(v);def test_matrix(self);class TestNormSingle(_TestNorm);
3387,6,3bdb609, Warren Weckesser <warren.weckesser@gmail.com>," Sat, 1 Jun 2013 18:38:48 -0400",ct: [PATCH 2/6] MAINT: linalg: removed unused imports from linalg.py,1,4,5,numpy/linalg/linalg.py,[u'9'],4,5," -20,10 +20,9 ; -1980,7 +1979,7 ;",";def norm(x, ord=None, axis=None);"
3387,6,6eb57a7, Warren Weckesser <warren.weckesser@gmail.com>," Sun, 2 Jun 2013 13:38:11 -0400",ct: [PATCH 3/6] DOC: linalg: Improve the docstring of the new norm function.,1,4,3,numpy/linalg/linalg.py,[u'7'],4,3," -1876,14 +1876,15 ;","def norm(x, ord=None, axis=None);"
3387,6,a292614, Warren Weckesser <warren.weckesser@gmail.com>," Tue, 4 Jun 2013 09:21:13 -0400","ct: [PATCH 4/6] ENH: linalg: allow the 'axis' argument of linalg.norm to be a 2-tuple, in which case matrix norms of the collection of 2-D matrices are computed.",2,134,19,numpy/linalg/linalg.py,[u'101'],32,6," -22,7 +22,7 ; -1866,6 +1866,44 ; -1881,10 +1919,12 ; -1972,7 +2012,7 ; -1983,6 +2023,14 ; -1991,8 +2039,14 ; -2018,21 +2072,36 ;",";def lstsq(a, b, rcond=-1);def norm(x, ord=None, axis=None);def norm(x, ord=None, axis=None);def norm(x, ord=None, axis=None);def norm(x, ord=None, axis=None);def norm(x, ord=None, axis=None);"
3387,6,a292614, Warren Weckesser <warren.weckesser@gmail.com>," Tue, 4 Jun 2013 09:21:13 -0400","ct: [PATCH 4/6] ENH: linalg: allow the 'axis' argument of linalg.norm to be a 2-tuple, in which case matrix norms of the collection of 2-D matrices are computed.",2,134,19,numpy/linalg/tests/test_linalg.py,[u'52'],18,2," -563,6 +563,7 ; -572,10 +573,55 ;",def test_matrix(self);def test_axis(self);
3387,6,8a170dc, Warren Weckesser <warren.weckesser@gmail.com>," Tue, 4 Jun 2013 09:30:47 -0400",ct: [PATCH 5/6] STY: linalg: some PEP8 clean up.,2,40,36,numpy/linalg/linalg.py,[u'4'],1,2," -1896,12 +1896,12 ;","def _multi_svd_norm(x, row_axis, col_axis, op);"
3387,6,8a170dc, Warren Weckesser <warren.weckesser@gmail.com>," Tue, 4 Jun 2013 09:30:47 -0400",ct: [PATCH 5/6] STY: linalg: some PEP8 clean up.,2,40,36,numpy/linalg/tests/test_linalg.py,[u'72'],21,18," -515,8 +515,10 ; -528,17 +530,22 ; -550,13 +557,13 ; -574,36 +581,33 ; -615,18 +619,18 ;",def check(dtype);def test_vector(self);def _test(v);def test_axis(self);def test_bad_args(self);
3387,6,1d9607a, Warren Weckesser <warren.weckesser@gmail.com>," Wed, 5 Jun 2013 11:01:52 -0400","ct: [PATCH 6/6] MAINT: linalg: simplify the computation of the svd-based matrix norms, and tweak the norm function's docstring.",1,3,11,numpy/linalg/linalg.py,[u'14'],3,11," -1892,15 +1892,7 ; -2026,9 +2018,9 ;","def _multi_svd_norm(x, row_axis, col_axis, op);def norm(x, ord=None, axis=None);"
3385,1,ee2f7b4, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 31 May 2013 18:36:53 +0200",ct: [PATCH] BUG: fix memory leak and double execution in dotintroduced in 1.8.0dev 914294a42acloses gh-3384,1,3,0,numpy/core/src/multiarray/methods.c,[u'4'],3,1," -1868,7 +1868,9 ;","array_dot(PyArrayObject *self, PyObject *args, PyObject *kwds;"
3383,1,900edb3, Warren Weckesser <warren.weckesser@gmail.com>," Thu, 30 May 2013 17:54:49 -0400",ct: [PATCH] DOC: fix a word in HOWTO_DOCUMENT.rst.txt.,1,0,0,doc/HOWTO_DOCUMENT.rst.txt,[u'2'],1,1," -544,7 +544,7 ;",Other points to keep in min;
3380,1,0dd48a7, Richard Hattersley <rhattersley@gmail.com>," Wed, 29 May 2013 14:49:34 +0100",ct: [PATCH] BUG: Use correct return value when ufunc loop matched,1,3,2,numpy/core/src/umath/ufunc_object.c,[u'5'],3,2," -1114,7 +1114,8 ; -1178,7 +1179,7 ;","set_ufunc_loop_data_types(PyUFuncObject *self, PyArrayObject **op;find_ufunc_matching_userloop(PyUFuncObject *self;"
3379,3,db23c0c, Tim Burgess <timburgess@mac.com>," Wed, 29 May 2013 10:40:40 +1000",ct: [PATCH 1/3] Fix for issue #3213,2,21,8,numpy/ma/core.py,[u'8'],5,3," -417,13 +417,15 ;","def _check_fill_value(fill_value, ndtype);"
3379,3,db23c0c, Tim Burgess <timburgess@mac.com>," Wed, 29 May 2013 10:40:40 +1000",ct: [PATCH 1/3] Fix for issue #3213,2,21,8,numpy/ma/tests/test_core.py,[u'21'],16,5," -1342,19 +1342,30 ;",class TestFillingValues(TestCase);
3379,3,897d84e, Tim Burgess <timburgess@mac.com>," Tue, 25 Feb 2014 15:38:09 +1000",ct: [PATCH 2/3] BUG: Closes #3213. Throw TypeError instead of OverflowError,2,6,18,numpy/ma/core.py,[u'2'],1,1," -425,7 +425,7 ;","def _check_fill_value(fill_value, ndtype);"
3379,3,897d84e, Tim Burgess <timburgess@mac.com>," Tue, 25 Feb 2014 15:38:09 +1000",ct: [PATCH 2/3] BUG: Closes #3213. Throw TypeError instead of OverflowError,2,6,18,numpy/ma/tests/test_core.py,[u'22'],5,17," -1340,32 +1340,20 ;",def test_flat(self);
3379,3,9af7acb, Tim Burgess <timburgess@mac.com>," Wed, 26 Feb 2014 09:20:40 +1000",ct: [PATCH 3/3] Expand test description,1,0,0,numpy/ma/tests/test_core.py,[u'2'],1,1," -1295,7 +1295,7 ;",def test_flat(self);
3378,1,db3b081, Julian Taylor <jtaylor.debian@googlemail.com>," Tue, 28 May 2013 23:00:11 +0200",ct: [PATCH] BUG: include mtrand cython files in sdistthe files are required to do a full source rebuild.,1,2,0,MANIFEST.in,[u'2'],2,0," -9,6 +9,8 ;",include *.tx;
3376,3,f52cc7d, Julian Taylor <jtaylor.debian@googlemail.com>," Tue, 28 May 2013 20:44:46 +0200",ct: [PATCH 1/3] MAINT: move byteswap macros to inlines in headerremoves some duplication and allows older gcc that can't detect thebyteswap pattern to use the faster swapping instructions.,3,82,32,.../src/multiarray/lowlevel_strided_loops.c.src,[u'33'],2,8," -36,27 +36,16 ; -67,21 +56,11 ;",;;
3376,3,f52cc7d, Julian Taylor <jtaylor.debian@googlemail.com>," Tue, 28 May 2013 20:44:46 +0200",ct: [PATCH 1/3] MAINT: move byteswap macros to inlines in headerremoves some duplication and allows older gcc that can't detect thebyteswap pattern to use the faster swapping instructions.,3,82,32,numpy/core/src/private/lowlevel_strided_loops.h,[u'76'],22,0," -1,5 +1,6 ; -396,6 +397,14 ; -441,6 +450,73 ;",";PyArray_PrepareThreeRawArrayIter(int ndim, npy_intp *shape;npy_blocked_end(const npy_intp offset, const npy_intp esize;"
3376,3,f52cc7d, Julian Taylor <jtaylor.debian@googlemail.com>," Tue, 28 May 2013 20:44:46 +0200",ct: [PATCH 1/3] MAINT: move byteswap macros to inlines in headerremoves some duplication and allows older gcc that can't detect thebyteswap pattern to use the faster swapping instructions.,3,82,32,numpy/core/src/umath/loops.c.src,[u'5'],0,2," -34,11 +34,6 ;",;
3376,3,80befa1, Julian Taylor <jtaylor.debian@googlemail.com>," Tue, 28 May 2013 20:45:59 +0200",ct: [PATCH 2/3] BUG: check alignment before loading the datasome cpus don't support loads that are not aligned to the elementsize.regression introduced in 99cb95f7379a9.,1,30,26,numpy/core/src/multiarray/ctors.c,[u'56'],21,18," -311,38 +311,42 ;","_strided_byte_swap(void *p, npy_intp stride, npy_intp n, int size;"
3376,3,0258a3e, Julian Taylor <jtaylor.debian@googlemail.com>," Tue, 28 May 2013 20:53:01 +0200",ct: [PATCH 3/3] MAINT: use npy_is_aligned in a few more places,2,5,4,numpy/core/src/multiarray/array_assign.c,[u'3'],2,1," -22,6 +22,7 ; -92,7 +93,7 ;",";raw_array_is_aligned(int ndim, char *data, npy_intp *strides, int alignment;"
3376,3,0258a3e, Julian Taylor <jtaylor.debian@googlemail.com>," Tue, 28 May 2013 20:53:01 +0200",ct: [PATCH 3/3] MAINT: use npy_is_aligned in a few more places,2,5,4,numpy/core/src/multiarray/array_assign_scalar.c,[u'6'],3,3," -48,7 +48,7 ; -119,7 +119,7 ; -220,7 +220,7 ;","raw_array_assign_scalar(int ndim, npy_intp *shape;raw_array_wheremasked_assign_scalar(int ndim, npy_intp *shape;PyArray_AssignRawScalar(PyArrayObject *dst;"
3374,2,6f8b7c0, Christoph Gohlke <cgohlke@uci.edu>," Mon, 27 May 2013 13:37:35 -0600",ct: [PATCH 1/2] TST: rename one test_hypergeometric_range functionThere are two test functions named `test_hypergeometric_range`,1,0,0,numpy/random/tests/test_regression.py,[u'2'],1,1," -46,7 +46,7 ;",def test_permutation_longs(self);
3374,2,96bb036, Christoph Gohlke <cgohlke@uci.edu>," Mon, 27 May 2013 14:42:33 -0600",ct: [PATCH 2/2] TST: remove docstring from test_randint_range functionSee doc/TESTS.rst.txt for the reason.,1,0,0,numpy/random/tests/test_regression.py,[u'2'],1,1," -47,7 +47,7 ;",def test_permutation_longs(self);
3373,2,cec1d41, Christoph Gohlke <cgohlke@uci.edu>," Mon, 27 May 2013 12:22:02 -0700",ct: [PATCH 1/2] BUG: Fix multivariate_normal issue with 'size' argumentEnsure that the multivariate_normal size argument can be a numpy integer. Add regression test. Apply PEP8 to test_regression.py. Regenerate mtrand.c.,3,5566,4803,numpy/random/mtrand/mtrand.c,[u'10344'],17,15," -1,6 +1,18 ; -53,12 +65,15 ; -113,6 +128,9 ; -152,6 +170,14 ; -224,6 +250,40 ; -264,21 +324,6 ; -292,30 +337,130 ; -330,8 +475,9 ; -496,7 +642,24 ; -512,91 +675,30 ; -608,63 +710,79 ; -736,11 +854,11 ; -817,154 +935,155 ; -1071,6 +1190,7 ; -1092,44 +1212,39 ; -1217,26 +1332,32 ; -1367,25 +1488,27 ; -1393,10 +1516,11 ; -1406,72 +1530,73 ; -1480,34 +1605,36 ; -1525,10 +1652,11 ; -1542,7 +1670,8 ; -1552,10 +1681,10 ; -1568,31 +1697,33 ; -1619,8 +1750,8 ; -1649,9 +1780,9 ; -1677,10 +1808,11 ; -1694,7 +1826,8 ; -1704,10 +1837,10 ; -1720,31 +1853,33 ; -1771,8 +1906,8 ; -1801,9 +1936,9 ; -1832,10 +1967,11 ; -1849,7 +1985,8 ; -1858,11 +1995,13 ; -1889,11 +2028,13 ; -1902,8 +2043,8 ; -1934,31 +2075,33 ; -1976,11 +2119,13 ; -1989,8 +2134,8 ; -1999,10 +2144,10 ; -2015,8 +2160,8 ; -2063,9 +2208,9 ; -2093,10 +2238,11 ; -2110,7 +2256,8 ; -2120,10 +2267,10 ; -2136,31 +2283,33 ; -2187,8 +2336,8 ; -2217,9 +2366,9 ; -2247,10 +2396,11 ; -2264,7 +2414,8 ; -2273,11 +2424,13 ; -2286,11 +2439,13 ; -2308,8 +2463,8 ; -2358,31 +2513,33 ; -2400,11 +2557,13 ; -2413,8 +2572,8 ; -2423,10 +2582,10 ; -2439,8 +2598,8 ; -2505,9 +2664,9 ; -2534,10 +2693,11 ; -2551,7 +2711,8 ; -2561,10 +2722,10 ; -2577,31 +2738,33 ; -2628,8 +2791,8 ; -2658,9 +2821,9 ; -2689,10 +2852,11 ; -2706,7 +2870,8 ; -2715,11 +2880,13 ; -2728,11 +2895,13 ; -2750,8 +2919,8 ; -2809,31 +2978,33 ; -2851,11 +3022,13 ; -2864,8 +3037,8 ; -2874,10 +3047,10 ; -2890,8 +3063,8 ; -2956,9 +3129,9 ; -2985,10 +3158,11 ; -3002,7 +3176,8 ; -3012,10 +3187,10 ; -3028,26 +3203,28 ; -3074,8 +3251,8 ; -3104,9 +3281,9 ; -3132,10 +3309,11 ; -3149,7 +3327,8 ; -3159,10 +3338,10 ; -3175,26 +3354,28 ; -3221,8 +3402,8 ; -3251,9 +3432,9 ; -3281,10 +3462,11 ; -3298,7 +3480,8 ; -3307,11 +3490,13 ; -3320,11 +3505,13 ; -3342,8 +3529,8 ; -3392,26 +3579,28 ; -3429,11 +3618,13 ; -3442,8 +3633,8 ; -3452,10 +3643,10 ; -3468,8 +3659,8 ; -3534,9 +3725,9 ; -3563,10 +3754,11 ; -3580,7 +3772,8 ; -3590,10 +3783,10 ; -3606,26 +3799,28 ; -3652,8 +3847,8 ; -3682,9 +3877,9 ; -3712,10 +3907,11 ; -3729,7 +3925,8 ; -3738,11 +3935,13 ; -3751,11 +3950,13 ; -3773,8 +3974,8 ; -3823,26 +4024,28 ; -3860,11 +4063,13 ; -3873,8 +4078,8 ; -3883,10 +4088,10 ; -3899,8 +4104,8 ; -3965,9 +4170,9 ; -3994,10 +4199,11 ; -4011,7 +4217,8 ; -4021,10 +4228,10 ; -4037,26 +4244,28 ; -4083,8 +4292,8 ; -4113,9 +4322,9 ; -4144,10 +4353,11 ; -4161,7 +4371,8 ; -4170,11 +4381,13 ; -4183,11 +4396,13 ; -4205,8 +4420,8 ; -4264,26 +4479,28 ; -4301,11 +4518,13 ; -4314,8 +4533,8 ; -4324,10 +4543,10 ; -4340,8 +4559,8 ; -4406,9 +4625,9 ; -4435,10 +4654,11 ; -4452,7 +4672,8 ; -4462,10 +4683,10 ; -4478,26 +4699,28 ; -4524,8 +4747,8 ; -4554,9 +4777,9 ; -4585,10 +4808,11 ; -4602,7 +4826,8 ; -4611,11 +4836,13 ; -4642,11 +4869,13 ; -4655,8 +4884,8 ; -4687,26 +4916,28 ; -4724,11 +4955,13 ; -4737,8 +4970,8 ; -4747,10 +4980,10 ; -4763,8 +4996,8 ; -4811,9 +5044,9 ; -4929,6 +5162,9 ; -5012,7 +5248,7 ; -5067,7 +5303,7 ; -5099,6 +5335,9 ; -5162,9 +5401,10 ; -5178,7 +5418,8 ; -5198,7 +5439,8 ; -5208,8 +5450,8 ; -5220,14 +5462,15 ; -5236,16 +5479,16 ; -5254,8 +5497,8 ; -5267,11 +5510,13 ; -5287,8 +5532,8 ; -5339,14 +5584,14 ; -5361,9 +5606,11 ; -5381,32 +5628,34 ; -5416,8 +5665,8 ; -5426,10 +5675,10 ; -5438,15 +5687,15 ; -5507,7 +5756,8 ; -5520,7 +5770,7 ; -5560,7 +5810,7 ; -5586,7 +5836,9 ; -5625,7 +5877,7 ; -5660,7 +5912,7 ; -5686,7 +5938,9 ; -5741,9 +5995,11 ; -5752,8 +6008,8 ; -5765,9 +6021,9 ; -5779,12 +6035,14 ; -5809,7 +6067,7 ; -5819,7 +6077,7 ; -5863,8 +6121,8 ; -5873,6 +6131,7 ; -5923,7 +6182,7 ; -5982,7 +6241,7 ; -6047,15 +6306,15 ; -6094,6 +6353,9 ; -6190,6 +6452,9 ; -6288,6 +6553,9 ; -6371,11 +6639,12 ; -6389,7 +6658,8 ; -6407,8 +6677,8 ; -6420,8 +6690,8 ; -6430,8 +6700,8 ; -6442,8 +6712,8 ; -6452,10 +6722,10 ; -6477,7 +6747,8 ; -6497,10 +6768,10 ; -6513,26 +6784,28 ; -6559,8 +6832,8 ; -6598,9 +6871,9 ; -6615,6 +6888,9 ; -6705,6 +6981,9 ; -6720,7 +6999,7 ; -6810,12 +7089,10 ; -6831,9 +7108,9 ; -6863,7 +7140,7 ; -6892,12 +7169,12 ; -6946,7 +7223,7 ; -6989,7 +7266,7 ; -7007,7 +7284,7 ; -7022,7 +7299,7 ; -7038,9 +7315,9 ; -7054,7 +7331,8 ; -7063,7 +7341,7 ; -7082,9 +7360,9 ; -7093,9 +7371,9 ; -7105,26 +7383,26 ; -7133,13 +7411,13 ; -7148,7 +7426,7 ; -7164,13 +7442,13 ; -7179,10 +7457,10 ; -7195,24 +7473,24 ; -7221,10 +7499,10 ; -7237,32 +7515,32 ; -7271,7 +7549,7 ; -7300,8 +7578,9 ; -7310,10 +7589,10 ; -7322,16 +7601,16 ; -7361,8 +7640,8 ; -7372,9 +7651,9 ; -7383,7 +7662,7 ; -7398,7 +7677,7 ; -7414,7 +7693,7 ; -7435,7 +7714,7 ; -7445,13 +7724,13 ; -7460,15 +7739,15 ; -7476,10 +7755,10 ; -7495,7 +7774,7 ; -7505,14 +7784,14 ; -7529,9 +7808,9 ; -7540,7 +7819,7 ; -7557,9 +7836,9 ; -7568,10 +7847,10 ; -7579,15 +7858,15 ; -7596,7 +7875,7 ; -7622,7 +7901,7 ; -7638,9 +7917,9 ; -7648,20 +7927,20 ; -7672,13 +7951,13 ; -7688,10 +7967,10 ; -7700,8 +7979,8 ; -7709,9 +7988,9 ; -7725,9 +8004,9 ; -7736,8 +8015,7 ; -7752,9 +8030,9 ; -7762,13 +8040,13 ; -7777,11 +8055,11 ; -7793,20 +8071,20 ; -7819,9 +8097,9 ; -7829,17 +8107,17 ; -7854,17 +8132,19 ; -7873,25 +8153,25 ; -7903,7 +8183,7 ; -7917,20 +8197,20 ; -7939,15 +8219,13 ; -7956,14 +8234,14 ; -7986,19 +8264,18 ; -8011,8 +8288,9 ; -8021,7 +8299,7 ; -8037,20 +8315,20 ; -8059,9 +8337,9 ; -8078,13 +8356,13 ; -8108,19 +8386,19 ; -8129,23 +8407,23 ; -8154,10 +8432,10 ; -8182,10 +8460,10 ; -8195,7 +8473,7 ; -8227,14 +8505,17 ; -8344,7 +8625,7 ; -8382,9 +8663,11 ; -8393,11 +8676,13 ; -8406,9 +8691,9 ; -8444,9 +8729,11 ; -8456,10 +8743,10 ; -8526,7 +8813,7 ; -8537,7 +8824,7 ; -8557,7 +8844,7 ; -8632,7 +8919,7 ; -8643,7 +8930,7 ; -8663,7 +8950,7 ; -8701,6 +8988,9 ; -8776,9 +9066,10 ; -8794,7 +9085,8 ; -8829,35 +9121,35 ; -8873,6 +9165,9 ; -8971,14 +9266,17 ; -9087,7 +9385,7 ; -9097,7 +9395,7 ; -9107,7 +9405,7 ; -9151,9 +9449,11 ; -9162,11 +9462,13 ; -9175,14 +9477,14 ; -9217,7 +9519,7 ; -9264,6 +9566,9 ; -9376,7 +9681,7 ; -9386,7 +9691,7 ; -9396,7 +9701,7 ; -9412,7 +9717,7 ; -9422,7 +9727,7 ; -9466,9 +9771,11 ; -9477,11 +9784,13 ; -9490,14 +9799,14 ; -9532,7 +9841,7 ; -9548,14 +9857,14 ; -9590,7 +9899,7 ; -9636,13 +9945,16 ; -9732,7 +10044,7 ; -9742,7 +10054,7 ; -9752,7 +10064,7 ; -9796,9 +10108,11 ; -9807,41 +10121,41 ; -9851,10 +10165,10 ; -9868,10 +10182,10 ; -9895,6 +10209,9 ; -9992,6 +10309,9 ; -10085,7 +10405,7 ; -10095,7 +10415,7 ; -10105,7 +10425,7 ; -10149,9 +10469,11 ; -10160,41 +10482,41 ; -10204,10 +10526,10 ; -10221,10 +10543,10 ; -10250,13 +10572,16 ; -10363,7 +10688,7 ; -10373,7 +10698,7 ; -10383,7 +10708,7 ; -10399,7 +10724,7 ; -10409,7 +10734,7 ; -10453,9 +10778,11 ; -10464,11 +10791,13 ; -10477,14 +10806,14 ; -10521,7 +10850,7 ; -10537,14 +10866,14 ; -10581,7 +10910,7 ; -10623,11 +10952,14 ; -10715,7 +11047,7 ; -10724,7 +11056,7 ; -10733,69 +11065,69 ; -10803,7 +11135,7 ; -10812,7 +11144,7 ; -10821,52 +11153,56 ; -10874,59 +11210,59 ; -10934,40 +11270,40 ; -10975,7 +11311,7 ; -11006,6 +11342,9 ; -11013,7 +11352,7 ; -11040,12 +11379,12 ; -11054,7 +11393,7 ; -11073,7 +11412,7 ; -11103,7 +11442,7 ; -11112,7 +11451,7 ; -11121,7 +11460,7 ; -11130,95 +11469,95 ; -11227,14 +11566,14 ; -11243,7 +11582,7 ; -11252,226 +11591,232 ; -11480,17 +11825,17 ; -11517,6 +11862,9 ; -11524,7 +11872,7 ; -11553,7 +11901,7 ; -11568,7 +11916,7 ; -11594,7 +11942,7 ; -11603,43 +11951,43 ; -11647,7 +11995,7 ; -11656,7 +12004,7 ; -11665,80 +12013,82 ; -11746,10 +12096,10 ; -11775,6 +12125,9 ; -11782,7 +12135,7 ; -11808,7 +12161,7 ; -11817,7 +12170,7 ; -11834,7 +12187,7 ; -11862,7 +12215,7 ; -11871,7 +12224,7 ; -11880,69 +12233,69 ; -11951,14 +12304,14 ; -11967,7 +12320,7 ; -11976,52 +12329,56 ; -12029,59 +12386,59 ; -12089,40 +12446,40 ; -12131,14 +12488,14 ; -12166,6 +12523,9 ; -12173,7 +12533,7 ; -12198,7 +12558,7 ; -12211,7 +12571,7 ; -12231,7 +12591,7 ; -12239,7 +12599,7 ; -12263,6 +12623,9 ; -12270,7 +12633,7 ; -12299,7 +12662,7 ; -12314,7 +12677,7 ; -12340,7 +12703,7 ; -12349,43 +12712,43 ; -12393,7 +12756,7 ; -12402,7 +12765,7 ; -12411,80 +12774,82 ; -12492,10 +12857,10 ; -12521,14 +12886,17 ; -12554,7 +12922,7 ; -12563,7 +12931,7 ; -12580,7 +12948,7 ; -12608,7 +12976,7 ; -12617,7 +12985,7 ; -12626,43 +12994,43 ; -12670,7 +13038,7 ; -12679,7 +13047,7 ; -12688,52 +13056,56 ; -12741,40 +13113,40 ; -12782,7 +13154,7 ; -12811,6 +13183,9 ; -12818,7 +13193,7 ; -12847,7 +13222,7 ; -12862,7 +13237,7 ; -12888,7 +13263,7 ; -12897,43 +13272,43 ; -12941,7 +13316,7 ; -12950,7 +13325,7 ; -12959,80 +13334,82 ; -13040,10 +13417,10 ; -13068,6 +13445,9 ; -13075,7 +13455,7 ; -13104,7 +13484,7 ; -13119,7 +13499,7 ; -13145,7 +13525,7 ; -13154,43 +13534,43 ; -13198,7 +13578,7 ; -13207,7 +13587,7 ; -13216,80 +13596,82 ; -13297,10 +13679,10 ; -13325,6 +13707,9 ; -13332,7 +13717,7 ; -13361,7 +13746,7 ; -13376,7 +13761,7 ; -13402,7 +13787,7 ; -13411,43 +13796,43 ; -13455,7 +13840,7 ; -13464,7 +13849,7 ; -13473,80 +13858,82 ; -13554,10 +13941,10 ; -13583,16 +13970,19 ; -13629,7 +14019,7 ; -13646,7 +14036,7 ; -13674,7 +14064,7 ; -13683,7 +14073,7 ; -13692,43 +14082,43 ; -13736,7 +14126,7 ; -13745,7 +14135,7 ; -13754,52 +14144,52 ; -13807,40 +14197,40 ; -13848,7 +14238,7 ; -13878,16 +14268,19 ; -13924,7 +14317,7 ; -13941,7 +14334,7 ; -13969,7 +14362,7 ; -13978,7 +14371,7 ; -13987,43 +14380,43 ; -14031,7 +14424,7 ; -14040,7 +14433,7 ; -14049,52 +14442,52 ; -14102,40 +14495,40 ; -14143,7 +14536,7 ; -14173,16 +14566,19 ; -14219,7 +14615,7 ; -14236,7 +14632,7 ; -14264,7 +14660,7 ; -14273,7 +14669,7 ; -14282,43 +14678,43 ; -14326,7 +14722,7 ; -14335,7 +14731,7 ; -14344,52 +14740,52 ; -14397,40 +14793,40 ; -14438,7 +14834,7 ; -14468,16 +14864,19 ; -14514,7 +14913,7 ; -14531,7 +14930,7 ; -14559,7 +14958,7 ; -14568,7 +14967,7 ; -14577,43 +14976,43 ; -14621,7 +15020,7 ; -14630,7 +15029,7 ; -14639,52 +15038,52 ; -14692,40 +15091,40 ; -14733,7 +15132,7 ; -14762,15 +15161,18 ; -14801,7 +15203,7 ; -14816,7 +15218,7 ; -14842,7 +15244,7 ; -14851,43 +15253,43 ; -14895,7 +15297,7 ; -14904,7 +15306,7 ; -14913,80 +15315,82 ; -14994,10 +15398,10 ; -15023,6 +15427,9 ; -15030,7 +15437,7 ; -15056,7 +15463,7 ; -15065,7 +15472,7 ; -15082,7 +15489,7 ; -15110,7 +15517,7 ; -15119,7 +15526,7 ; -15128,69 +15535,69 ; -15198,7 +15605,7 ; -15207,7 +15614,7 ; -15216,52 +15623,52 ; -15269,58 +15676,58 ; -15328,40 +15735,40 ; -15369,7 +15776,7 ; -15400,6 +15807,9 ; -15407,7 +15817,7 ; -15434,12 +15844,12 ; -15448,7 +15858,7 ; -15467,7 +15877,7 ; -15497,7 +15907,7 ; -15506,7 +15916,7 ; -15515,7 +15925,7 ; -15524,95 +15934,95 ; -15621,14 +16031,14 ; -15637,7 +16047,7 ; -15646,121 +16056,127 ; -15768,57 +16184,57 ; -15826,40 +16242,40 ; -15868,17 +16284,17 ; -15906,6 +16322,9 ; -15913,7 +16332,7 ; -15939,7 +16358,7 ; -15948,7 +16367,7 ; -15965,7 +16384,7 ; -15993,7 +16412,7 ; -16002,7 +16421,7 ; -16011,94 +16430,94 ; -16106,7 +16525,7 ; -16115,7 +16534,7 ; -16124,50 +16543,54 ; -16175,57 +16598,57 ; -16233,57 +16656,57 ; -16291,40 +16714,40 ; -16332,7 +16755,7 ; -16362,6 +16785,9 ; -16369,7 +16795,7 ; -16395,7 +16821,7 ; -16404,7 +16830,7 ; -16421,7 +16847,7 ; -16449,7 +16875,7 ; -16458,7 +16884,7 ; -16467,94 +16893,94 ; -16563,14 +16989,14 ; -16579,7 +17005,7 ; -16588,50 +17014,54 ; -16639,57 +17069,57 ; -16697,57 +17127,57 ; -16755,40 +17185,40 ; -16797,14 +17227,14 ; -16833,15 +17263,18 ; -16872,7 +17305,7 ; -16887,7 +17320,7 ; -16913,7 +17346,7 ; -16922,76 +17355,76 ; -16999,7 +17432,7 ; -17008,7 +17441,7 ; -17017,97 +17450,99 ; -17115,40 +17550,40 ; -17156,7 +17591,7 ; -17184,6 +17619,9 ; -17191,7 +17629,7 ; -17220,7 +17658,7 ; -17235,7 +17673,7 ; -17261,7 +17699,7 ; -17270,43 +17708,43 ; -17314,7 +17752,7 ; -17323,7 +17761,7 ; -17332,80 +17770,82 ; -17413,10 +17853,10 ; -17441,6 +17881,9 ; -17448,7 +17891,7 ; -17477,7 +17920,7 ; -17492,7 +17935,7 ; -17518,7 +17961,7 ; -17527,69 +17970,69 ; -17597,7 +18040,7 ; -17606,7 +18049,7 ; -17615,140 +18058,142 ; -17756,10 +18201,10 ; -17786,6 +18231,9 ; -17793,7 +18241,7 ; -17820,12 +18268,12 ; -17834,7 +18282,7 ; -17853,7 +18301,7 ; -17884,7 +18332,7 ; -17893,7 +18341,7 ; -17902,7 +18350,7 ; -17911,132 +18359,132 ; -18045,14 +18493,14 ; -18061,7 +18509,7 ; -18070,121 +18518,127 ; -18192,57 +18646,57 ; -18250,115 +18704,115 ; -18367,14 +18821,14 ; -18405,6 +18859,9 ; -18412,7 +18869,7 ; -18441,7 +18898,7 ; -18456,7 +18913,7 ; -18482,7 +18939,7 ; -18491,69 +18948,69 ; -18561,7 +19018,7 ; -18570,7 +19027,7 ; -18579,140 +19036,142 ; -18720,10 +19179,10 ; -18744,11 +19203,14 ; -18756,7 +19218,7 ; -18782,7 +19244,7 ; -18791,7 +19253,7 ; -18808,7 +19270,7 ; -18833,8 +19295,8 ; -18847,24 +19309,24 ; -18872,24 +19334,24 ; -18897,7 +19359,7 ; -18905,16 +19367,17 ; -18922,7 +19385,7 ; -18934,147 +19397,162 ; -19086,120 +19564,120 ; -19208,55 +19686,51 ; -19269,7 +19743,7 ; -19285,15 +19759,18 ; -19303,7 +19780,7 ; -19311,7 +19788,7 ; -19321,36 +19798,36 ; -19358,7 +19835,7 ; -19366,19 +19843,19 ; -19389,25 +19866,25 ; -19451,6 +19928,9 ; -19458,7 +19938,7 ; -19484,7 +19964,7 ; -19493,7 +19973,7 ; -19504,13 +19984,13 ; -19537,39 +20017,42 ; -19578,144 +20061,146 ; -19725,7 +20210,7 ; -19734,7 +20219,7 ; -19743,7 +20228,7 ; -19751,10 +20236,10 ; -19763,7 +20248,7 ; -19772,17 +20257,17 ; -19790,12 +20275,18 ; -19804,17 +20295,17 ; -19826,7 +20317,7 ; -19837,17 +20328,17 ; -19859,7 +20350,7 ; -19869,7 +20360,7 ; -19885,8 +20376,8 ; -19905,6 +20396,9 ; -19912,7 +20406,7 ; -19941,7 +20435,7 ; -19956,7 +20450,7 ; -19984,39 +20478,42 ; -20025,123 +20522,125 ; -20151,7 +20650,7 ; -20160,7 +20659,7 ; -20169,7 +20668,7 ; -20178,7 +20677,7 ; -20186,10 +20685,10 ; -20198,17 +20697,17 ; -20217,7 +20716,7 ; -20227,7 +20726,7 ; -20235,22 +20734,28 ; -20260,7 +20765,7 ; -20270,7 +20775,7 ; -20286,8 +20791,8 ; -20312,7 +20817,7 ; -20339,36 +20844,36 ; -20376,35 +20881,35 ; -20412,7 +20917,7 ; -20420,10 +20925,10 ; -20432,40 +20937,40 ; -20478,7 +20983,7 ; -20486,10 +20991,10 ; -20498,23 +21003,23 ; -20554,7 +21059,7 ; -20569,25 +21074,26 ; -20598,84 +21104,85 ; -20692,7 +21199,7 ; -20703,8 +21210,9 ; -20776,104 +21284,6 ; -20889,16 +21299,16 ; -20936,7 +21346,11 ; -20950,44 +21364,39 ; -21075,26 +21484,32 ; -21226,8 +21641,8 ; -21244,11 +21659,8 ; -21258,11 +21670,8 ; -21272,11 +21681,8 ; -21286,11 +21692,8 ; -21300,11 +21703,8 ; -21314,11 +21714,8 ; -21328,11 +21725,8 ; -21342,13 +21736,32 ; -21356,12 +21769,9 ; -21370,12 +21780,9 ; -21384,12 +21791,9 ; -21398,12 +21802,9 ; -21412,12 +21813,9 ; -21426,12 +21824,9 ; -21440,12 +21835,9 ; -21454,12 +21846,9 ; -21468,12 +21857,9 ; -21482,12 +21868,9 ; -21496,12 +21879,9 ; -21510,12 +21890,9 ; -21524,12 +21901,9 ; -21538,12 +21912,9 ; -21552,12 +21923,9 ; -21566,12 +21934,9 ; -21580,12 +21945,9 ; -21594,12 +21956,9 ; -21608,12 +21967,9 ; -21622,12 +21978,9 ; -21636,12 +21989,9 ; -21650,12 +22000,9 ; -21664,12 +22011,9 ; -21678,12 +22022,9 ; -21692,12 +22033,9 ; -21706,12 +22044,9 ; -21720,12 +22055,9 ; -21734,1188 +22066,955 ; -22924,18 +23023,12 ; -22947,6 +23040,8 ; -22966,6 +23061,9 ; -23003,6 +23101,16 ; -23010,6 +23118,9 ; -23021,13 +23132,13 ; -23051,7 +23162,7 ; -23063,7 +23174,7 ; -23073,31 +23184,31 ; -23129,7 +23240,7 ; -23142,12 +23253,12 ; -23160,12 +23271,12 ; -23178,7 +23289,7 ; -23191,820 +23302,820 ; -24014,8 +24125,6 ; -24057,7 +24166,9 ; -24097,17 +24208,32 ; -24181,24 +24307,23 ; -24236,8 +24361,7 ; -24258,18 +24382,22 ; -24378,58 +24506,233 ; -24545,6 +24848,104 ; -24596,6 +24997,125 ; -24627,16 +25147,18 ; -24656,13 +25178,17 ; -24673,12 +25199,17 ; -24690,8 +25221,10 ; -24725,9 +25258,13 ; -24744,19 +25281,11 ; -24972,10 +25501,15 ; -24988,6 +25522,16 ; -24995,6 +25539,17 ; -25007,10 +25562,15 ; -25023,6 +25583,16 ; -25030,6 +25600,17 ; -25042,10 +25623,15 ; -25058,6 +25644,16 ; -25065,6 +25661,17 ; -25077,10 +25684,15 ; -25093,6 +25705,16 ; -25100,6 +25722,17 ; -25112,10 +25745,15 ; -25128,6 +25766,16 ; -25135,6 +25783,17 ; -25147,10 +25806,15 ; -25163,6 +25827,16 ; -25170,6 +25844,17 ; -25227,6 +25912,10 ; -25246,7 +25935,19 ; -25256,7 +25957,7 ; -25462,27 +26163,82 ; -25498,7 +26254,7 ; -25516,7 +26272,6 ; -25525,7 +26280,6 ; -25539,14 +26293,12 ;",";;;;;;;static CYTHON_INLINE size_t __Pyx_PyInt_AsSize_t(PyObject*);struct __pyx_obj_6mtrand_RandomState ;static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[], ;static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected);static int __Pyx_InitStrings(__Pyx_StringTabEntry *t); /*proto*;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static char __pyx_k__lognormal[] = ""lognormal"";static char __pyx_k__negative_binomial[] = ""negative_binomial"";static PyObject *__pyx_kp_u_279;static PyObject *__pyx_n_s__zeros;static PyObject *__pyx_k_tuple_5;static PyObject *__pyx_k_tuple_29;static PyObject *__pyx_k_tuple_144;static PyObject *__pyx_f_6mtrand_cont0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont1_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont1_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont1_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont1_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont1_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont2_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont2_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont2_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont2_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont2_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont3_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont3_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont3_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont3_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont3_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_disc0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_disc0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_disc0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_disc0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_disc0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_disc0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discnp_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discnp_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discnp_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discnp_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discnp_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discnp_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discdd_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discdd_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discdd_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discdd_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discdd_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnmN_array_sc(rk_state *__pyx_v_state, __py;static PyObject *__pyx_f_6mtrand_discnmN_array_sc(rk_state *__pyx_v_state, __py;static PyObject *__pyx_f_6mtrand_discnmN_array_sc(rk_state *__pyx_v_state, __py;static PyObject *__pyx_f_6mtrand_discnmN_array_sc(rk_state *__pyx_v_state, __py;static PyObject *__pyx_f_6mtrand_discnmN_array_sc(rk_state *__pyx_v_state, __py;static PyObject *__pyx_f_6mtrand_discnmN_array_sc(rk_state *__pyx_v_state, __py;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discd_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_discd_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_discd_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_discd_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_discd_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_discd_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static double __pyx_f_6mtrand_kahan_sum(double *__pyx_v_darr, npy_intp __pyx_v_;static int __pyx_pf_6mtrand_11RandomState___init__(struct __pyx_obj_6mtrand_Ran;static void __pyx_pf_6mtrand_11RandomState_2__dealloc__(struct __pyx_obj_6mtran;static PyObject *__pyx_pw_6mtrand_11RandomState_5seed(PyObject *__pyx_v_self, P;static PyObject *__pyx_pf_6mtrand_11RandomState_4seed(struct __pyx_obj_6mtrand_;static PyObject *__pyx_pf_6mtrand_11RandomState_4seed(struct __pyx_obj_6mtrand_;static PyObject *__pyx_pf_6mtrand_11RandomState_4seed(struct __pyx_obj_6mtrand_;static PyObject *__pyx_pf_6mtrand_11RandomState_4seed(struct __pyx_obj_6mtrand_;static PyObject *__pyx_pf_6mtrand_11RandomState_4seed(struct __pyx_obj_6mtrand_;static PyObject *__pyx_pf_6mtrand_11RandomState_4seed(struct __pyx_obj_6mtrand_;static PyObject *__pyx_pf_6mtrand_11RandomState_4seed(struct __pyx_obj_6mtrand_;static PyObject *__pyx_pf_6mtrand_11RandomState_4seed(struct __pyx_obj_6mtrand_;static PyObject *__pyx_pf_6mtrand_11RandomState_4seed(struct __pyx_obj_6mtrand_;static PyObject *__pyx_pf_6mtrand_11RandomState_6get_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_6get_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_6get_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_6get_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_6get_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_6get_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_10__getstate__(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_12__setstate__(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_14__reduce__(struct __pyx_obj_6;static PyObject *__pyx_pw_6mtrand_11RandomState_17random_sample(PyObject *__pyx;static PyObject *__pyx_pw_6mtrand_11RandomState_19tomaxint(PyObject *__pyx_v_se;static PyObject *__pyx_pw_6mtrand_11RandomState_21randint(PyObject *__pyx_v_sel;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pw_6mtrand_11RandomState_23bytes(PyObject *__pyx_v_self;static PyObject *__pyx_pw_6mtrand_11RandomState_25choice(PyObject *__pyx_v_self;static PyObject *__pyx_pw_6mtrand_11RandomState_25choice(PyObject *__pyx_v_self;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pw_6mtrand_11RandomState_27uniform(PyObject *__pyx_v_sel;static PyObject *__pyx_pf_6mtrand_11RandomState_26uniform(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_26uniform(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_26uniform(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_26uniform(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_26uniform(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_26uniform(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_28rand(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_28rand(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_28rand(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_30randn(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_30randn(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_30randn(struct __pyx_obj_6mtran;static PyObject *__pyx_pw_6mtrand_11RandomState_33random_integers(PyObject *__p;static PyObject *__pyx_pf_6mtrand_11RandomState_32random_integers(struct __pyx_;static PyObject *__pyx_pf_6mtrand_11RandomState_32random_integers(struct __pyx_;static PyObject *__pyx_pf_6mtrand_11RandomState_32random_integers(struct __pyx_;static PyObject *__pyx_pw_6mtrand_11RandomState_35standard_normal(PyObject *__p;static PyObject *__pyx_pw_6mtrand_11RandomState_37normal(PyObject *__pyx_v_self;static PyObject *__pyx_pf_6mtrand_11RandomState_36normal(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_36normal(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_36normal(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_36normal(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_36normal(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_36normal(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_36normal(struct __pyx_obj_6mtra;static PyObject *__pyx_pw_6mtrand_11RandomState_39beta(PyObject *__pyx_v_self, ;static PyObject *__pyx_pf_6mtrand_11RandomState_38beta(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_38beta(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_38beta(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_38beta(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_38beta(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_38beta(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_38beta(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_38beta(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_38beta(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_38beta(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_38beta(struct __pyx_obj_6mtrand;static char __pyx_doc_6mtrand_11RandomState_40exponential[] = ""\n        expone;static PyObject *__pyx_pf_6mtrand_11RandomState_40exponential(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_40exponential(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_40exponential(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_40exponential(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_40exponential(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_40exponential(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_40exponential(struct __pyx_obj_;static PyObject *__pyx_pw_6mtrand_11RandomState_43standard_exponential(PyObjec;static char __pyx_doc_6mtrand_11RandomState_44standard_gamma[] = ""\n        sta;static PyObject *__pyx_pf_6mtrand_11RandomState_44standard_gamma(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_44standard_gamma(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_44standard_gamma(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_44standard_gamma(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_44standard_gamma(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_44standard_gamma(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_44standard_gamma(struct __pyx_o;static PyObject *__pyx_pw_6mtrand_11RandomState_47gamma(PyObject *__pyx_v_self;static PyObject *__pyx_pf_6mtrand_11RandomState_46gamma(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_46gamma(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_46gamma(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_46gamma(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_46gamma(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_46gamma(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_46gamma(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_46gamma(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_46gamma(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_46gamma(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_46gamma(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_46gamma(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_48f(struct __pyx_obj_6mtrand_Ra;static PyObject *__pyx_pf_6mtrand_11RandomState_48f(struct __pyx_obj_6mtrand_Ra;static PyObject *__pyx_pf_6mtrand_11RandomState_48f(struct __pyx_obj_6mtrand_Ra;static PyObject *__pyx_pf_6mtrand_11RandomState_48f(struct __pyx_obj_6mtrand_Ra;static PyObject *__pyx_pf_6mtrand_11RandomState_48f(struct __pyx_obj_6mtrand_Ra;static PyObject *__pyx_pf_6mtrand_11RandomState_48f(struct __pyx_obj_6mtrand_Ra;static PyObject *__pyx_pf_6mtrand_11RandomState_48f(struct __pyx_obj_6mtrand_Ra;static PyObject *__pyx_pf_6mtrand_11RandomState_48f(struct __pyx_obj_6mtrand_Ra;static PyObject *__pyx_pf_6mtrand_11RandomState_48f(struct __pyx_obj_6mtrand_Ra;static PyObject *__pyx_pw_6mtrand_11RandomState_51noncentral_f(PyObject *__pyx_;static PyObject *__pyx_pw_6mtrand_11RandomState_51noncentral_f(PyObject *__pyx_;static PyObject *__pyx_pw_6mtrand_11RandomState_51noncentral_f(PyObject *__pyx_;static PyObject *__pyx_pw_6mtrand_11RandomState_51noncentral_f(PyObject *__pyx_;static PyObject *__pyx_pw_6mtrand_11RandomState_51noncentral_f(PyObject *__pyx_;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static char __pyx_doc_6mtrand_11RandomState_52chisquare[] = ""\n        chisquar;static PyObject *__pyx_pw_6mtrand_11RandomState_53chisquare(PyObject *__pyx_v_s;static PyObject *__pyx_pw_6mtrand_11RandomState_53chisquare(PyObject *__pyx_v_s;static PyObject *__pyx_pw_6mtrand_11RandomState_53chisquare(PyObject *__pyx_v_s;static PyObject *__pyx_pf_6mtrand_11RandomState_52chisquare(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_52chisquare(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_52chisquare(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_52chisquare(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_52chisquare(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_52chisquare(struct __pyx_obj_6m;static PyObject *__pyx_pw_6mtrand_11RandomState_55noncentral_chisquare(PyObjec;static PyObject *__pyx_pw_6mtrand_11RandomState_55noncentral_chisquare(PyObjec;static PyObject *__pyx_pw_6mtrand_11RandomState_55noncentral_chisquare(PyObjec;static PyObject *__pyx_pw_6mtrand_11RandomState_55noncentral_chisquare(PyObjec;static PyObject *__pyx_pw_6mtrand_11RandomState_55noncentral_chisquare(PyObjec;static PyObject *__pyx_pf_6mtrand_11RandomState_54noncentral_chisquare(struct _;static PyObject *__pyx_pf_6mtrand_11RandomState_54noncentral_chisquare(struct _;static PyObject *__pyx_pf_6mtrand_11RandomState_54noncentral_chisquare(struct _;static PyObject *__pyx_pf_6mtrand_11RandomState_54noncentral_chisquare(struct _;static PyObject *__pyx_pf_6mtrand_11RandomState_54noncentral_chisquare(struct _;static PyObject *__pyx_pf_6mtrand_11RandomState_54noncentral_chisquare(struct _;static PyObject *__pyx_pf_6mtrand_11RandomState_54noncentral_chisquare(struct _;static PyObject *__pyx_pf_6mtrand_11RandomState_54noncentral_chisquare(struct _;static PyObject *__pyx_pf_6mtrand_11RandomState_54noncentral_chisquare(struct _;static PyObject *__pyx_pw_6mtrand_11RandomState_57standard_cauchy(PyObject *__p;static PyObject *__pyx_pw_6mtrand_11RandomState_57standard_cauchy(PyObject *__p;static PyObject *__pyx_pw_6mtrand_11RandomState_57standard_cauchy(PyObject *__p;static PyObject *__pyx_pw_6mtrand_11RandomState_57standard_cauchy(PyObject *__p;static PyObject *__pyx_pf_6mtrand_11RandomState_56standard_cauchy(struct __pyx_;static PyObject *__pyx_pf_6mtrand_11RandomState_56standard_cauchy(struct __pyx_;static char __pyx_doc_6mtrand_11RandomState_58standard_t[] = ""\n        standar;static PyObject *__pyx_pw_6mtrand_11RandomState_59standard_t(PyObject *__pyx_v_;static PyObject *__pyx_pw_6mtrand_11RandomState_59standard_t(PyObject *__pyx_v_;static PyObject *__pyx_pw_6mtrand_11RandomState_59standard_t(PyObject *__pyx_v_;static PyObject *__pyx_pf_6mtrand_11RandomState_58standard_t(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_58standard_t(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_58standard_t(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_58standard_t(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_58standard_t(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_58standard_t(struct __pyx_obj_6;static PyObject *__pyx_pw_6mtrand_11RandomState_61vonmises(PyObject *__pyx_v_se;static PyObject *__pyx_pw_6mtrand_11RandomState_61vonmises(PyObject *__pyx_v_se;static PyObject *__pyx_pw_6mtrand_11RandomState_61vonmises(PyObject *__pyx_v_se;static PyObject *__pyx_pw_6mtrand_11RandomState_61vonmises(PyObject *__pyx_v_se;static PyObject *__pyx_pf_6mtrand_11RandomState_60vonmises(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_60vonmises(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_60vonmises(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_60vonmises(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_60vonmises(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_60vonmises(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_60vonmises(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_60vonmises(struct __pyx_obj_6mt;static char __pyx_doc_6mtrand_11RandomState_62pareto[] = ""\n        pareto(a, s;static PyObject *__pyx_pw_6mtrand_11RandomState_63pareto(PyObject *__pyx_v_self;static PyObject *__pyx_pw_6mtrand_11RandomState_63pareto(PyObject *__pyx_v_self;static PyObject *__pyx_pw_6mtrand_11RandomState_63pareto(PyObject *__pyx_v_self;static PyObject *__pyx_pf_6mtrand_11RandomState_62pareto(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_62pareto(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_62pareto(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_62pareto(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_62pareto(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_62pareto(struct __pyx_obj_6mtra;static char __pyx_doc_6mtrand_11RandomState_64weibull[] = ""\n        weibull(a;static PyObject *__pyx_pw_6mtrand_11RandomState_65weibull(PyObject *__pyx_v_sel;static PyObject *__pyx_pw_6mtrand_11RandomState_65weibull(PyObject *__pyx_v_sel;static PyObject *__pyx_pw_6mtrand_11RandomState_65weibull(PyObject *__pyx_v_sel;static PyObject *__pyx_pf_6mtrand_11RandomState_64weibull(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_64weibull(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_64weibull(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_64weibull(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_64weibull(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_64weibull(struct __pyx_obj_6mtr;static char __pyx_doc_6mtrand_11RandomState_66power[] = ""\n        power(a, siz;static PyObject *__pyx_pw_6mtrand_11RandomState_67power(PyObject *__pyx_v_self;static PyObject *__pyx_pw_6mtrand_11RandomState_67power(PyObject *__pyx_v_self;static PyObject *__pyx_pw_6mtrand_11RandomState_67power(PyObject *__pyx_v_self;static PyObject *__pyx_pf_6mtrand_11RandomState_66power(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_66power(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_66power(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_66power(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_66power(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_66power(struct __pyx_obj_6mtran;static PyObject *__pyx_pw_6mtrand_11RandomState_69laplace(PyObject *__pyx_v_sel;static PyObject *__pyx_pw_6mtrand_11RandomState_69laplace(PyObject *__pyx_v_sel;static PyObject *__pyx_pw_6mtrand_11RandomState_69laplace(PyObject *__pyx_v_sel;static PyObject *__pyx_pf_6mtrand_11RandomState_68laplace(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_68laplace(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_68laplace(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_68laplace(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_68laplace(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_68laplace(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_68laplace(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_68laplace(struct __pyx_obj_6mtr;static PyObject *__pyx_pw_6mtrand_11RandomState_71gumbel(PyObject *__pyx_v_self;static PyObject *__pyx_pw_6mtrand_11RandomState_71gumbel(PyObject *__pyx_v_self;static PyObject *__pyx_pw_6mtrand_11RandomState_71gumbel(PyObject *__pyx_v_self;static PyObject *__pyx_pf_6mtrand_11RandomState_70gumbel(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_70gumbel(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_70gumbel(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_70gumbel(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_70gumbel(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_70gumbel(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_70gumbel(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_70gumbel(struct __pyx_obj_6mtra;static PyObject *__pyx_pw_6mtrand_11RandomState_73logistic(PyObject *__pyx_v_se;static PyObject *__pyx_pw_6mtrand_11RandomState_73logistic(PyObject *__pyx_v_se;static PyObject *__pyx_pw_6mtrand_11RandomState_73logistic(PyObject *__pyx_v_se;static PyObject *__pyx_pf_6mtrand_11RandomState_72logistic(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_72logistic(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_72logistic(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_72logistic(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_72logistic(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_72logistic(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_72logistic(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_72logistic(struct __pyx_obj_6mt;static PyObject *__pyx_pw_6mtrand_11RandomState_75lognormal(PyObject *__pyx_v_s;static PyObject *__pyx_pw_6mtrand_11RandomState_75lognormal(PyObject *__pyx_v_s;static PyObject *__pyx_pw_6mtrand_11RandomState_75lognormal(PyObject *__pyx_v_s;static PyObject *__pyx_pf_6mtrand_11RandomState_74lognormal(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_74lognormal(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_74lognormal(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_74lognormal(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_74lognormal(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_74lognormal(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_74lognormal(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_74lognormal(struct __pyx_obj_6m;static char __pyx_doc_6mtrand_11RandomState_76rayleigh[] = ""\n        rayleigh(;static PyObject *__pyx_pw_6mtrand_11RandomState_77rayleigh(PyObject *__pyx_v_se;static PyObject *__pyx_pw_6mtrand_11RandomState_77rayleigh(PyObject *__pyx_v_se;static PyObject *__pyx_pf_6mtrand_11RandomState_76rayleigh(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_76rayleigh(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_76rayleigh(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_76rayleigh(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_76rayleigh(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_76rayleigh(struct __pyx_obj_6mt;static PyObject *__pyx_pw_6mtrand_11RandomState_79wald(PyObject *__pyx_v_self, ;static PyObject *__pyx_pw_6mtrand_11RandomState_79wald(PyObject *__pyx_v_self, ;static PyObject *__pyx_pw_6mtrand_11RandomState_79wald(PyObject *__pyx_v_self, ;static PyObject *__pyx_pw_6mtrand_11RandomState_79wald(PyObject *__pyx_v_self, ;static PyObject *__pyx_pw_6mtrand_11RandomState_79wald(PyObject *__pyx_v_self, ;static PyObject *__pyx_pf_6mtrand_11RandomState_78wald(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_78wald(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_78wald(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_78wald(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_78wald(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_78wald(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_78wald(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_78wald(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_78wald(struct __pyx_obj_6mtrand;static PyObject *__pyx_pw_6mtrand_11RandomState_81triangular(PyObject *__pyx_v_;static PyObject *__pyx_pw_6mtrand_11RandomState_81triangular(PyObject *__pyx_v_;static PyObject *__pyx_pw_6mtrand_11RandomState_81triangular(PyObject *__pyx_v_;static PyObject *__pyx_pw_6mtrand_11RandomState_81triangular(PyObject *__pyx_v_;static PyObject *__pyx_pw_6mtrand_11RandomState_81triangular(PyObject *__pyx_v_;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pw_6mtrand_11RandomState_83binomial(PyObject *__pyx_v_se;static PyObject *__pyx_pw_6mtrand_11RandomState_83binomial(PyObject *__pyx_v_se;static PyObject *__pyx_pw_6mtrand_11RandomState_83binomial(PyObject *__pyx_v_se;static PyObject *__pyx_pw_6mtrand_11RandomState_83binomial(PyObject *__pyx_v_se;static PyObject *__pyx_pw_6mtrand_11RandomState_83binomial(PyObject *__pyx_v_se;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pw_6mtrand_11RandomState_85negative_binomial(PyObject *_;static PyObject *__pyx_pw_6mtrand_11RandomState_85negative_binomial(PyObject *_;static PyObject *__pyx_pw_6mtrand_11RandomState_85negative_binomial(PyObject *_;static PyObject *__pyx_pw_6mtrand_11RandomState_85negative_binomial(PyObject *_;static PyObject *__pyx_pw_6mtrand_11RandomState_85negative_binomial(PyObject *_;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static char __pyx_doc_6mtrand_11RandomState_86poisson[] = ""\n        poisson(la;static PyObject *__pyx_pw_6mtrand_11RandomState_87poisson(PyObject *__pyx_v_sel;static PyObject *__pyx_pw_6mtrand_11RandomState_87poisson(PyObject *__pyx_v_sel;static PyObject *__pyx_pf_6mtrand_11RandomState_86poisson(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_86poisson(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_86poisson(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_86poisson(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_86poisson(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_86poisson(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_86poisson(struct __pyx_obj_6mtr;static char __pyx_doc_6mtrand_11RandomState_88zipf[] = ""\n        zipf(a, size=;static PyObject *__pyx_pw_6mtrand_11RandomState_89zipf(PyObject *__pyx_v_self, ;static PyObject *__pyx_pw_6mtrand_11RandomState_89zipf(PyObject *__pyx_v_self, ;static PyObject *__pyx_pw_6mtrand_11RandomState_89zipf(PyObject *__pyx_v_self, ;static PyObject *__pyx_pf_6mtrand_11RandomState_88zipf(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_88zipf(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_88zipf(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_88zipf(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_88zipf(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_88zipf(struct __pyx_obj_6mtrand;static char __pyx_doc_6mtrand_11RandomState_90geometric[] = ""\n        geometri;static PyObject *__pyx_pw_6mtrand_11RandomState_91geometric(PyObject *__pyx_v_s;static PyObject *__pyx_pw_6mtrand_11RandomState_91geometric(PyObject *__pyx_v_s;static PyObject *__pyx_pw_6mtrand_11RandomState_91geometric(PyObject *__pyx_v_s;static PyObject *__pyx_pf_6mtrand_11RandomState_90geometric(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_90geometric(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_90geometric(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_90geometric(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_90geometric(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_90geometric(struct __pyx_obj_6m;static PyObject *__pyx_pw_6mtrand_11RandomState_93hypergeometric(PyObject *__py;static PyObject *__pyx_pw_6mtrand_11RandomState_93hypergeometric(PyObject *__py;static PyObject *__pyx_pw_6mtrand_11RandomState_93hypergeometric(PyObject *__py;static PyObject *__pyx_pw_6mtrand_11RandomState_93hypergeometric(PyObject *__py;static PyObject *__pyx_pw_6mtrand_11RandomState_93hypergeometric(PyObject *__py;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static char __pyx_doc_6mtrand_11RandomState_94logseries[] = ""\n        logserie;static PyObject *__pyx_pw_6mtrand_11RandomState_95logseries(PyObject *__pyx_v_s;static PyObject *__pyx_pw_6mtrand_11RandomState_95logseries(PyObject *__pyx_v_s;static PyObject *__pyx_pw_6mtrand_11RandomState_95logseries(PyObject *__pyx_v_s;static PyObject *__pyx_pf_6mtrand_11RandomState_94logseries(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_94logseries(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_94logseries(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_94logseries(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_94logseries(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_94logseries(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_94logseries(struct __pyx_obj_6m;static PyObject *__pyx_pw_6mtrand_11RandomState_97multivariate_normal(PyObject ;static PyObject *__pyx_pw_6mtrand_11RandomState_97multivariate_normal(PyObject ;static PyObject *__pyx_pw_6mtrand_11RandomState_97multivariate_normal(PyObject ;static PyObject *__pyx_pw_6mtrand_11RandomState_97multivariate_normal(PyObject ;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pw_6mtrand_11RandomState_99multinomial(PyObject *__pyx_v;static PyObject *__pyx_pw_6mtrand_11RandomState_99multinomial(PyObject *__pyx_v;static PyObject *__pyx_pw_6mtrand_11RandomState_99multinomial(PyObject *__pyx_v;static PyObject *__pyx_pw_6mtrand_11RandomState_99multinomial(PyObject *__pyx_v;static PyObject *__pyx_pw_6mtrand_11RandomState_99multinomial(PyObject *__pyx_v;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static char __pyx_doc_6mtrand_11RandomState_100dirichlet[] = ""\n        dirichl;static PyObject *__pyx_pw_6mtrand_11RandomState_101dirichlet(PyObject *__pyx_v_;static PyObject *__pyx_pw_6mtrand_11RandomState_101dirichlet(PyObject *__pyx_v_;static PyObject *__pyx_pw_6mtrand_11RandomState_101dirichlet(PyObject *__pyx_v_;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pw_6mtrand_11RandomState_103shuffle(PyObject *__pyx_v_se;static PyObject *__pyx_pf_6mtrand_11RandomState_102shuffle(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_102shuffle(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_102shuffle(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_102shuffle(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_102shuffle(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_102shuffle(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_102shuffle(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_102shuffle(struct __pyx_obj_6mt;static PyObject *__pyx_pw_6mtrand_11RandomState_105permutation(PyObject *__pyx_;static PyObject *__pyx_pf_6mtrand_11RandomState_104permutation(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_104permutation(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_104permutation(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_104permutation(struct __pyx_obj;static PyMethodDef __pyx_methods_6mtrand_RandomState[] = ;static PyTypeObject __pyx_type_6mtrand_RandomState = ;static PyMethodDef __pyx_methods[] = ;static struct PyModuleDef __pyx_moduledef = ;static __Pyx_StringTabEntry __pyx_string_tab[] = ;static __Pyx_StringTabEntry __pyx_string_tab[] = ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitGlobals(void) ;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) ;static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb;static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObjec;static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObjec;static int __Pyx_ParseOptionalKeywords;static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb;static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) ;static void __Pyx_ExceptionReset(PyObject *type, PyObject *value, PyObject *tb;static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, long level) ;static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, long level) ;static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, long level) ;static CYTHON_INLINE npy_intp __Pyx_PyInt_from_py_npy_intp(PyObject* x) ;static CYTHON_INLINE npy_intp __Pyx_PyInt_from_py_npy_intp(PyObject* x) ;static CYTHON_INLINE int __Pyx_PyInt_AsLongDouble(PyObject* x) ;static CYTHON_INLINE unsigned long __Pyx_PyInt_AsUnsignedLong(PyObject* x) ;static CYTHON_INLINE unsigned long __Pyx_PyInt_AsUnsignedLong(PyObject* x) ;static CYTHON_INLINE unsigned long __Pyx_PyInt_AsUnsignedLong(PyObject* x) ;static CYTHON_INLINE unsigned PY_LONG_LONG __Pyx_PyInt_AsUnsignedLongLong(PyObj;static CYTHON_INLINE unsigned PY_LONG_LONG __Pyx_PyInt_AsUnsignedLongLong(PyObj;static CYTHON_INLINE unsigned PY_LONG_LONG __Pyx_PyInt_AsUnsignedLongLong(PyObj;static CYTHON_INLINE long __Pyx_PyInt_AsLong(PyObject* x) ;static CYTHON_INLINE long __Pyx_PyInt_AsLong(PyObject* x) ;static CYTHON_INLINE long __Pyx_PyInt_AsLong(PyObject* x) ;static CYTHON_INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject* x) ;static CYTHON_INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject* x) ;static CYTHON_INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject* x) ;static CYTHON_INLINE signed long __Pyx_PyInt_AsSignedLong(PyObject* x) ;static CYTHON_INLINE signed long __Pyx_PyInt_AsSignedLong(PyObject* x) ;static CYTHON_INLINE signed long __Pyx_PyInt_AsSignedLong(PyObject* x) ;static CYTHON_INLINE signed PY_LONG_LONG __Pyx_PyInt_AsSignedLongLong(PyObject;static CYTHON_INLINE signed PY_LONG_LONG __Pyx_PyInt_AsSignedLongLong(PyObject;static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *clas;static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *clas;static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *clas;static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) ;static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x) ;static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x) ;static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) ;static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) ;"
3373,2,cec1d41, Christoph Gohlke <cgohlke@uci.edu>," Mon, 27 May 2013 12:22:02 -0700",ct: [PATCH 1/2] BUG: Fix multivariate_normal issue with 'size' argumentEnsure that the multivariate_normal size argument can be a numpy integer. Add regression test. Apply PEP8 to test_regression.py. Regenerate mtrand.c.,3,5566,4803,numpy/random/mtrand/mtrand.pyx,[u'4'],1,1," -4067,7 +4067,7 ; -4152,7 +4152,7 ;",cdef class RandomState;cdef class RandomState;
3373,2,cec1d41, Christoph Gohlke <cgohlke@uci.edu>," Mon, 27 May 2013 12:22:02 -0700",ct: [PATCH 1/2] BUG: Fix multivariate_normal issue with 'size' argumentEnsure that the multivariate_normal size argument can be a numpy integer. Add regression test. Apply PEP8 to test_regression.py. Regenerate mtrand.c.,3,5566,4803,numpy/random/tests/test_regression.py,[u'21'],1,1," -1,7 +1,7 ; -15,15 +15,15 ; -76,5 +76,16 ;",;def test_VonMises_range(self);def test_call_within_randomstate(self);
3373,2,420f609, Christoph Gohlke <cgohlke@uci.edu>," Mon, 27 May 2013 13:39:15 -0700",ct: [PATCH 2/2] TST: remove docstrings from test_ functionsSee doc/TESTS.rst.txt for the reason.,1,8,13,numpy/random/tests/test_regression.py,[u'21'],8,13," -10,21 +10,19 ; -56,7 +54,7 ; -77,12 +75,9 ;",;def test_randint_range(self) ;def test_call_within_randomstate(self);
3372,1,4eff7cb, Julian Taylor <jtaylor.debian@googlemail.com>," Mon, 27 May 2013 20:54:13 +0200",ct: [PATCH] BUG: fix leak and possible null dereference,1,0,0,numpy/core/src/multiarray/arraytypes.c.src,[u'2'],1,1," -3971,7 +3971,7 ;",initialize_builtin_datetime_metadata(void;
3371,3,fae8369, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 26 May 2013 17:03:51 +0200",ct: [PATCH 1/3] ENH: implement may_share_memory in Cmemmap needs to call it in __array_finalize__ to determine if it candrop the references on copies.The python version if may_share_memory caused significant slowdowns whenslicing these maps.closes gh-3364,5,73,32,numpy/add_newdocs.py,[u'26'],22,0," -3648,6 +3648,32 ;","def luf(lamdaexpr, *args, **kwargs);"
3371,3,fae8369, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 26 May 2013 17:03:51 +0200",ct: [PATCH 1/3] ENH: implement may_share_memory in Cmemmap needs to call it in __array_finalize__ to determine if it candrop the references on copies.The python version if may_share_memory caused significant slowdowns whenslicing these maps.closes gh-3364,5,73,32,numpy/core/numeric.py,[u'3'],2,1," -40,7 +40,7 ; -252,6 +252,7 ;",;def extend_all(module);
3371,3,fae8369, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 26 May 2013 17:03:51 +0200",ct: [PATCH 1/3] ENH: implement may_share_memory in Cmemmap needs to call it in __array_finalize__ to determine if it candrop the references on copies.The python version if may_share_memory caused significant slowdowns whenslicing these maps.closes gh-3364,5,73,32,numpy/core/src/multiarray/multiarraymodule.c,[u'29'],25,0," -3544,6 +3544,32 ; -3644,6 +3670,9 ;","PyDataMem_RENEW(void *ptr, size_t size;static struct PyMethodDef array_module_methods[] = ;"
3371,3,fae8369, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 26 May 2013 17:03:51 +0200",ct: [PATCH 1/3] ENH: implement may_share_memory in Cmemmap needs to call it in __array_finalize__ to determine if it candrop the references on copies.The python version if may_share_memory caused significant slowdowns whenslicing these maps.closes gh-3364,5,73,32,numpy/lib/tests/test_shape_base.py,[u'15'],13,0," -315,6 +315,21 ;",def test_kroncompare(self);
3371,3,fae8369, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 26 May 2013 17:03:51 +0200",ct: [PATCH 1/3] ENH: implement may_share_memory in Cmemmap needs to call it in __array_finalize__ to determine if it candrop the references on copies.The python version if may_share_memory caused significant slowdowns whenslicing these maps.closes gh-3364,5,73,32,numpy/lib/utils.py,[u'32'],1,27," -11,7 +11,7 ; -266,36 +266,6 ;",;def byte_bounds(a);
3371,3,19e0562, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 26 May 2013 17:08:27 +0200",ct: [PATCH 2/3] ENH: improve performance of byte_bounds for continous arrays,1,0,2,numpy/lib/utils.py,[u'3'],1,2," -250,12 +250,11 ;",def byte_bounds(a);
3371,3,5448d7f, Julian Taylor <jtaylor.debian@googlemail.com>," Tue, 28 May 2013 20:26:55 +0200",ct: [PATCH 3/3] MAINT: remove duplicated array extent calculation,2,12,30,numpy/core/src/multiarray/array_assign.c,[u'37'],7,25," -21,6 +21,7 ; -102,36 +103,14 ;",";raw_array_is_aligned(int ndim, char *data, npy_intp *strides, int alignment;"
3371,3,5448d7f, Julian Taylor <jtaylor.debian@googlemail.com>," Tue, 28 May 2013 20:26:55 +0200",ct: [PATCH 3/3] MAINT: remove duplicated array extent calculation,2,12,30,numpy/core/src/multiarray/common.c,[u'5'],4,1," -688,6 +688,7 ; -699,11 +700,12 ; -712,6 +714,7 ;","_IsWriteable(PyArrayObject *ap;offset_bounds_from_strides(const int itemsize, const int nd;offset_bounds_from_strides(const int itemsize, const int nd;"
3369,2,587c531, mwtoews <mwtoews@gmail.com>," Sun, 26 May 2013 23:28:50 +1200","ct: [PATCH 1/2] Handle a vrersion string from a custom-built mingw64::    GNU Fortran (rubenvb-4.8.0) 4.8.0which incorrectly determined a version '-4.8.0', and added -mno-cygwinSee related: http://cens.ioc.ee/pipermail/f2py-users/2010-October/002092.html",1,0,0,numpy/distutils/fcompiler/gnu.py,[u'2'],1,1," -41,7 +41,7 ;","def gnu_version_match(self, version_string);"
3369,2,d21f5bd, mwtoews <mwtoews@gmail.com>," Mon, 27 May 2013 00:19:34 +1200",ct: [PATCH 2/2] Add version string to test suite,1,0,0,numpy/distutils/tests/test_fcompiler_gnu.py,[u'1'],1,0," -19,6 +19,7 ;",;
3366,1,7475208, Dan Miller <dnmiller@gmail.com>," Sat, 25 May 2013 17:12:05 -0700",ct: [PATCH] DOC: Correcting docstring for asscalar,1,2,0,numpy/lib/type_check.py,[u'3'],2,1," -451,7 +451,8 ;",def asscalar(a);
3365,1,5f1e731, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 25 May 2013 22:37:07 +0200",ct: [PATCH] BUG: set filename to None for memmaps of unnamed filesCloses gh-3302,2,12,2,numpy/core/memmap.py,[u'7'],6,1," -261,8 +261,13 ;","def __new__(subtype, filename, dtype=uint8, mode='r+', offset=0;"
3365,1,5f1e731, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 25 May 2013 22:37:07 +0200",ct: [PATCH] BUG: set filename to None for memmaps of unnamed filesCloses gh-3302,2,12,2,numpy/core/tests/test_memmap.py,[u'7'],6,1," -1,7 +1,7 ; -40,6 +40,11 ;",;def test_open_with_filename(self);
3362,1,cf57492, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 25 May 2013 10:28:07 +0200","ct: [PATCH] MAINT: fix some compiler warningsimplicit declarations, wrong declarations, unused variables and fixes acomparison typo bug in multiarraymodule.c",13,19,17,numpy/core/src/multiarray/_datetime.h,[u'2'],1,1," -10,7 +10,7 ;",NPY_NO_EXPORT int _days_per_month_table[2][12];
3362,1,cf57492, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 25 May 2013 10:28:07 +0200","ct: [PATCH] MAINT: fix some compiler warningsimplicit declarations, wrong declarations, unused variables and fixes acomparison typo bug in multiarraymodule.c",13,19,17,numpy/core/src/multiarray/arrayobject.c,[u'3'],1,2," -49,6 +49,7 ; -1464,8 +1465,6 ;",maintainer email:  oliphant.travis@ieee.or;NPY_NO_EXPORT npy_boo;
3362,1,cf57492, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 25 May 2013 10:28:07 +0200","ct: [PATCH] MAINT: fix some compiler warningsimplicit declarations, wrong declarations, unused variables and fixes acomparison typo bug in multiarraymodule.c",13,19,17,numpy/core/src/multiarray/calculation.c,[u'1'],1,0," -14,6 +14,7 ;",;
3362,1,cf57492, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 25 May 2013 10:28:07 +0200","ct: [PATCH] MAINT: fix some compiler warningsimplicit declarations, wrong declarations, unused variables and fixes acomparison typo bug in multiarraymodule.c",13,19,17,numpy/core/src/multiarray/convert.h,[u'4'],4,0," -1,4 +1,8 ;",;
3362,1,cf57492, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 25 May 2013 10:28:07 +0200","ct: [PATCH] MAINT: fix some compiler warningsimplicit declarations, wrong declarations, unused variables and fixes acomparison typo bug in multiarraymodule.c",13,19,17,numpy/core/src/multiarray/convert_datatype.c,[u'2'],1,1," -141,7 +141,7 ;","PyArray_AdaptFlexibleDType(PyObject *data_obj, PyArray_Descr *data_dtype;"
3362,1,cf57492, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 25 May 2013 10:28:07 +0200","ct: [PATCH] MAINT: fix some compiler warningsimplicit declarations, wrong declarations, unused variables and fixes acomparison typo bug in multiarraymodule.c",13,19,17,numpy/core/src/multiarray/item_selection.c,[u'2'],1,1," -1319,7 +1319,7 ;","PyArray_LexSort(PyObject *sort_keys, int axis;"
3362,1,cf57492, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 25 May 2013 10:28:07 +0200","ct: [PATCH] MAINT: fix some compiler warningsimplicit declarations, wrong declarations, unused variables and fixes acomparison typo bug in multiarraymodule.c",13,19,17,numpy/core/src/multiarray/multiarraymodule.c,[u'3'],2,1," -51,6 +51,7 ; -338,7 +339,7 ;","NPY_NO_EXPORT int NPY_NUMUSERTYPES = 0;PyArray_ConcatenateArrays(int narrays, PyArrayObject **arrays, int axis;"
3362,1,cf57492, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 25 May 2013 10:28:07 +0200","ct: [PATCH] MAINT: fix some compiler warningsimplicit declarations, wrong declarations, unused variables and fixes acomparison typo bug in multiarraymodule.c",13,19,17,numpy/core/src/multiarray/nditer_constr.c,[u'1'],0,1," -1027,7 +1027,6 ;",npyiter_prepare_one_operand(PyArrayObject **op;
3362,1,cf57492, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 25 May 2013 10:28:07 +0200","ct: [PATCH] MAINT: fix some compiler warningsimplicit declarations, wrong declarations, unused variables and fixes acomparison typo bug in multiarraymodule.c",13,19,17,numpy/core/src/multiarray/ucsnarrow.c,[u'1'],1,0," -13,6 +13,7 ;",;
3362,1,cf57492, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 25 May 2013 10:28:07 +0200","ct: [PATCH] MAINT: fix some compiler warningsimplicit declarations, wrong declarations, unused variables and fixes acomparison typo bug in multiarraymodule.c",13,19,17,numpy/core/src/scalarmathmodule.c.src,[u'2'],1,1," -1381,7 +1381,7 ;",NONZERO_NAME(@name@_)(PyObject *a;
3362,1,cf57492, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 25 May 2013 10:28:07 +0200","ct: [PATCH] MAINT: fix some compiler warningsimplicit declarations, wrong declarations, unused variables and fixes acomparison typo bug in multiarraymodule.c",13,19,17,numpy/core/src/umath/test_rational.c.src,[u'1'],0,1," -1138,7 +1138,6 ;",PyMODINIT_FUNC inittest_rational(void) ;
3362,1,cf57492, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 25 May 2013 10:28:07 +0200","ct: [PATCH] MAINT: fix some compiler warningsimplicit declarations, wrong declarations, unused variables and fixes acomparison typo bug in multiarraymodule.c",13,19,17,numpy/core/src/umath/ufunc_object.c,[u'6'],2,4," -727,7 +727,7 ; -1743,7 +1743,6 ; -1875,7 +1874,7 ; -2081,7 +2080,6 ;",static int get_ufunc_arguments(PyUFuncObject *ufunc;PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;
3362,1,cf57492, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 25 May 2013 10:28:07 +0200","ct: [PATCH] MAINT: fix some compiler warningsimplicit declarations, wrong declarations, unused variables and fixes acomparison typo bug in multiarraymodule.c",13,19,17,numpy/linalg/umath_linalg.c.src,[u'8'],4,4," -375,7 +375,7 ; -434,7 +434,7 ; -1177,8 +1177,8 ;","offset_ptr(void* ptr, ptrdiff_t offset;static DOUBLECOMPLEX_t z_minus_one;matrix_desc_init(matrix_desc *mtxd;"
3361,1,4209975, Dan Miller <dnmiller@gmail.com>," Fri, 24 May 2013 02:16:56 -0700","ct: [PATCH] DOC: Fix URL for ""How to Build API/Reference Documentation""",1,0,0,doc/HOWTO_DOCUMENT.rst.txt,[u'2'],1,1," -601,7 +601,7 ;",Conclusio;
3360,2,9c4c1c4, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 18 May 2013 07:45:04 +0200",ct: [PATCH 1/2] ENH: add quickselect algorithm and expose it via partitionA partition sorts the kth element into its sorted order and moves allsmaller elements before the kth element and all equal or greaterelements behind it.The ordering of all elements in the partitions is undefined.It is implemented via the introselection algorithm which has worst caselinear complexity compared to a full sort that has linearithmiccomplexity.The introselect algorithm uses a quickselect with median of three pivotand falls back to a quickselect with median of median of five pivot ifno sufficient progress is made.The pivots used during the search for the wanted kth element canoptionally be stored and reused for further partitionings of the array.This is used by the python interface if an array of kth is provided tothe partitions function. This improves the performance of median andwhich need to select two elements if the size of the array is even. Apercentile function interpolating between values also profits from this.String selection is implemented in terms of quicksort which has the sameproperties as a selection for now.,17,2291,34,doc/release/1.8.0-notes.rst,[u'10'],1,0," -141,6 +141,16 ;",New functions `full` and `full_like;
3360,2,9c4c1c4, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 18 May 2013 07:45:04 +0200",ct: [PATCH 1/2] ENH: add quickselect algorithm and expose it via partitionA partition sorts the kth element into its sorted order and moves allsmaller elements before the kth element and all equal or greaterelements behind it.The ordering of all elements in the partitions is undefined.It is implemented via the introselection algorithm which has worst caselinear complexity compared to a full sort that has linearithmiccomplexity.The introselect algorithm uses a quickselect with median of three pivotand falls back to a quickselect with median of median of five pivot ifno sufficient progress is made.The pivots used during the search for the wanted kth element canoptionally be stored and reused for further partitionings of the array.This is used by the python interface if an array of kth is provided tothe partitions function. This improves the performance of median andwhich need to select two elements if the size of the array is even. Apercentile function interpolating between values also profits from this.String selection is implemented in terms of quicksort which has the sameproperties as a selection for now.,17,2291,34,doc/source/reference/arrays.ndarray.rst,[u'20'],1,1," -273,15 +273,15 ; -339,6 +339,8 ;",more complete description.;the operation should proceed;
3360,2,9c4c1c4, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 18 May 2013 07:45:04 +0200",ct: [PATCH 1/2] ENH: add quickselect algorithm and expose it via partitionA partition sorts the kth element into its sorted order and moves allsmaller elements before the kth element and all equal or greaterelements behind it.The ordering of all elements in the partitions is undefined.It is implemented via the introselection algorithm which has worst caselinear complexity compared to a full sort that has linearithmiccomplexity.The introselect algorithm uses a quickselect with median of three pivotand falls back to a quickselect with median of median of five pivot ifno sufficient progress is made.The pivots used during the search for the wanted kth element canoptionally be stored and reused for further partitionings of the array.This is used by the python interface if an array of kth is provided tothe partitions function. This improves the performance of median andwhich need to select two elements if the size of the array is even. Apercentile function interpolating between values also profits from this.String selection is implemented in terms of quicksort which has the sameproperties as a selection for now.,17,2291,34,doc/source/reference/c-api.array.rst,[u'21'],1,0," -1810,6 +1810,27 ;",Item selection and manipulatio;
3360,2,9c4c1c4, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 18 May 2013 07:45:04 +0200",ct: [PATCH 1/2] ENH: add quickselect algorithm and expose it via partitionA partition sorts the kth element into its sorted order and moves allsmaller elements before the kth element and all equal or greaterelements behind it.The ordering of all elements in the partitions is undefined.It is implemented via the introselection algorithm which has worst caselinear complexity compared to a full sort that has linearithmiccomplexity.The introselect algorithm uses a quickselect with median of three pivotand falls back to a quickselect with median of median of five pivot ifno sufficient progress is made.The pivots used during the search for the wanted kth element canoptionally be stored and reused for further partitionings of the array.This is used by the python interface if an array of kth is provided tothe partitions function. This improves the performance of median andwhich need to select two elements if the size of the array is even. Apercentile function interpolating between values also profits from this.String selection is implemented in terms of quicksort which has the sameproperties as a selection for now.,17,2291,34,numpy/add_newdocs.py,[u'69'],4,0," -3045,6 +3045,23 ; -4201,6 +4218,58 ;","def luf(lamdaexpr, *args, **kwargs);def luf(lamdaexpr, *args, **kwargs);"
3360,2,9c4c1c4, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 18 May 2013 07:45:04 +0200",ct: [PATCH 1/2] ENH: add quickselect algorithm and expose it via partitionA partition sorts the kth element into its sorted order and moves allsmaller elements before the kth element and all equal or greaterelements behind it.The ordering of all elements in the partitions is undefined.It is implemented via the introselection algorithm which has worst caselinear complexity compared to a full sort that has linearithmiccomplexity.The introselect algorithm uses a quickselect with median of three pivotand falls back to a quickselect with median of median of five pivot ifno sufficient progress is made.The pivots used during the search for the wanted kth element canoptionally be stored and reused for further partitionings of the array.This is used by the python interface if an array of kth is provided tothe partitions function. This improves the performance of median andwhich need to select two elements if the size of the array is even. Apercentile function interpolating between values also profits from this.String selection is implemented in terms of quicksort which has the sameproperties as a selection for now.,17,2291,34,numpy/core/bento.info,[u'1'],1,0," -13,6 +13,7 ;",Library;
3360,2,9c4c1c4, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 18 May 2013 07:45:04 +0200",ct: [PATCH 1/2] ENH: add quickselect algorithm and expose it via partitionA partition sorts the kth element into its sorted order and moves allsmaller elements before the kth element and all equal or greaterelements behind it.The ordering of all elements in the partitions is undefined.It is implemented via the introselection algorithm which has worst caselinear complexity compared to a full sort that has linearithmiccomplexity.The introselect algorithm uses a quickselect with median of three pivotand falls back to a quickselect with median of median of five pivot ifno sufficient progress is made.The pivots used during the search for the wanted kth element canoptionally be stored and reused for further partitionings of the array.This is used by the python interface if an array of kth is provided tothe partitions function. This improves the performance of median andwhich need to select two elements if the size of the array is even. Apercentile function interpolating between values also profits from this.String selection is implemented in terms of quicksort which has the sameproperties as a selection for now.,17,2291,34,numpy/core/code_generators/numpy_api.py,[u'4'],1,0," -335,6 +335,10 ;",;
3360,2,9c4c1c4, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 18 May 2013 07:45:04 +0200",ct: [PATCH 1/2] ENH: add quickselect algorithm and expose it via partitionA partition sorts the kth element into its sorted order and moves allsmaller elements before the kth element and all equal or greaterelements behind it.The ordering of all elements in the partitions is undefined.It is implemented via the introselection algorithm which has worst caselinear complexity compared to a full sort that has linearithmiccomplexity.The introselect algorithm uses a quickselect with median of three pivotand falls back to a quickselect with median of median of five pivot ifno sufficient progress is made.The pivots used during the search for the wanted kth element canoptionally be stored and reused for further partitionings of the array.This is used by the python interface if an array of kth is provided tothe partitions function. This improves the performance of median andwhich need to select two elements if the size of the array is even. Apercentile function interpolating between values also profits from this.String selection is implemented in terms of quicksort which has the sameproperties as a selection for now.,17,2291,34,numpy/core/fromnumeric.py,[u'147'],6,1," -16,7 +16,8 ; -534,6 +535,150 ;",";def transpose(a, axes=None);"
3360,2,9c4c1c4, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 18 May 2013 07:45:04 +0200",ct: [PATCH 1/2] ENH: add quickselect algorithm and expose it via partitionA partition sorts the kth element into its sorted order and moves allsmaller elements before the kth element and all equal or greaterelements behind it.The ordering of all elements in the partitions is undefined.It is implemented via the introselection algorithm which has worst caselinear complexity compared to a full sort that has linearithmiccomplexity.The introselect algorithm uses a quickselect with median of three pivotand falls back to a quickselect with median of median of five pivot ifno sufficient progress is made.The pivots used during the search for the wanted kth element canoptionally be stored and reused for further partitionings of the array.This is used by the python interface if an array of kth is provided tothe partitions function. This improves the performance of median andwhich need to select two elements if the size of the array is even. Apercentile function interpolating between values also profits from this.String selection is implemented in terms of quicksort which has the sameproperties as a selection for now.,17,2291,34,numpy/core/include/numpy/ndarraytypes.h,[u'12'],1,0," -156,6 +156,12 ; -391,6 +397,12 ;","typedef enum ;typedef int (PyArray_FillFunc)(void *, npy_intp, void *);"
3360,2,9c4c1c4, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 18 May 2013 07:45:04 +0200",ct: [PATCH 1/2] ENH: add quickselect algorithm and expose it via partitionA partition sorts the kth element into its sorted order and moves allsmaller elements before the kth element and all equal or greaterelements behind it.The ordering of all elements in the partitions is undefined.It is implemented via the introselection algorithm which has worst caselinear complexity compared to a full sort that has linearithmiccomplexity.The introselect algorithm uses a quickselect with median of three pivotand falls back to a quickselect with median of median of five pivot ifno sufficient progress is made.The pivots used during the search for the wanted kth element canoptionally be stored and reused for further partitionings of the array.This is used by the python interface if an array of kth is provided tothe partitions function. This improves the performance of median andwhich need to select two elements if the size of the array is even. Apercentile function interpolating between values also profits from this.String selection is implemented in terms of quicksort which has the sameproperties as a selection for now.,17,2291,34,numpy/core/setup.py,[u'3'],1,1," -693,7 +693,8 ;",def get_mathlib_info(*args);
3360,2,9c4c1c4, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 18 May 2013 07:45:04 +0200",ct: [PATCH 1/2] ENH: add quickselect algorithm and expose it via partitionA partition sorts the kth element into its sorted order and moves allsmaller elements before the kth element and all equal or greaterelements behind it.The ordering of all elements in the partitions is undefined.It is implemented via the introselection algorithm which has worst caselinear complexity compared to a full sort that has linearithmiccomplexity.The introselect algorithm uses a quickselect with median of three pivotand falls back to a quickselect with median of median of five pivot ifno sufficient progress is made.The pivots used during the search for the wanted kth element canoptionally be stored and reused for further partitionings of the array.This is used by the python interface if an array of kth is provided tothe partitions function. This improves the performance of median andwhich need to select two elements if the size of the array is even. Apercentile function interpolating between values also profits from this.String selection is implemented in terms of quicksort which has the sameproperties as a selection for now.,17,2291,34,numpy/core/src/multiarray/conversion_utils.c,[u'39'],2,0," -406,6 +406,45 ;","PyArray_SortkindConverter(PyObject *obj, NPY_SORTKIND *sortkind;"
3360,2,9c4c1c4, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 18 May 2013 07:45:04 +0200",ct: [PATCH 1/2] ENH: add quickselect algorithm and expose it via partitionA partition sorts the kth element into its sorted order and moves allsmaller elements before the kth element and all equal or greaterelements behind it.The ordering of all elements in the partitions is undefined.It is implemented via the introselection algorithm which has worst caselinear complexity compared to a full sort that has linearithmiccomplexity.The introselect algorithm uses a quickselect with median of three pivotand falls back to a quickselect with median of median of five pivot ifno sufficient progress is made.The pivots used during the search for the wanted kth element canoptionally be stored and reused for further partitionings of the array.This is used by the python interface if an array of kth is provided tothe partitions function. This improves the performance of median andwhich need to select two elements if the size of the array is even. Apercentile function interpolating between values also profits from this.String selection is implemented in terms of quicksort which has the sameproperties as a selection for now.,17,2291,34,numpy/core/src/multiarray/item_selection.c,[u'419'],19,1," -20,6 +20,7 ; -768,14 +769,19 ; -785,7 +791,10 ; -805,9 +814,22 ; -820,8 +842,20 ; -839,7 +873,11 ; -849,7 +887,8 ; -868,7 +907,12 ; -900,10 +944,25 ; -919,8 +978,22 ; -945,7 +1018,6 ; -1036,7 +1108,7 ; -1113,6 +1185,175 ; -1160,7 +1401,8 ; -1255,6 +1497,143 ;",";PyArray_Choose(PyArrayObject *ip, PyObject *op, PyArrayObject *out;_new_sort(PyArrayObject *op, int axis, NPY_SORTKIND which;_new_sort(PyArrayObject *op, int axis, NPY_SORTKIND which;_new_sort(PyArrayObject *op, int axis, NPY_SORTKIND which;_new_sort(PyArrayObject *op, int axis, NPY_SORTKIND which;_new_argsort(PyArrayObject *op, int axis, NPY_SORTKIND which;_new_argsort(PyArrayObject *op, int axis, NPY_SORTKIND which;_new_argsort(PyArrayObject *op, int axis, NPY_SORTKIND which;_new_argsort(PyArrayObject *op, int axis, NPY_SORTKIND which;_new_argsort(PyArrayObject *op, int axis, NPY_SORTKIND which;PyArray_Sort(PyArrayObject *op, int axis, NPY_SORTKIND which;PyArray_Sort(PyArrayObject *op, int axis, NPY_SORTKIND which;PyArray_ArgSort(PyArrayObject *op, int axis, NPY_SORTKIND which;PyArray_ArgSort(PyArrayObject *op, int axis, NPY_SORTKIND which;"
3360,2,9c4c1c4, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 18 May 2013 07:45:04 +0200",ct: [PATCH 1/2] ENH: add quickselect algorithm and expose it via partitionA partition sorts the kth element into its sorted order and moves allsmaller elements before the kth element and all equal or greaterelements behind it.The ordering of all elements in the partitions is undefined.It is implemented via the introselection algorithm which has worst caselinear complexity compared to a full sort that has linearithmiccomplexity.The introselect algorithm uses a quickselect with median of three pivotand falls back to a quickselect with median of median of five pivot ifno sufficient progress is made.The pivots used during the search for the wanted kth element canoptionally be stored and reused for further partitionings of the array.This is used by the python interface if an array of kth is provided tothe partitions function. This improves the performance of median andwhich need to select two elements if the size of the array is even. Apercentile function interpolating between values also profits from this.String selection is implemented in terms of quicksort which has the sameproperties as a selection for now.,17,2291,34,numpy/core/src/multiarray/methods.c,[u'136'],7,0," -1180,6 +1180,75 ; -1229,6 +1298,67 ; -2203,6 +2333,9 ; -2272,6 +2405,9 ;","array_sort(PyArrayObject *self, PyObject *args, PyObject *kwds;array_argsort(PyArrayObject *self, PyObject *args, PyObject *kwds;NPY_NO_EXPORT PyMethodDef array_methods[] = ;NPY_NO_EXPORT PyMethodDef array_methods[] = ;"
3360,2,9c4c1c4, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 18 May 2013 07:45:04 +0200",ct: [PATCH 1/2] ENH: add quickselect algorithm and expose it via partitionA partition sorts the kth element into its sorted order and moves allsmaller elements before the kth element and all equal or greaterelements behind it.The ordering of all elements in the partitions is undefined.It is implemented via the introselection algorithm which has worst caselinear complexity compared to a full sort that has linearithmiccomplexity.The introselect algorithm uses a quickselect with median of three pivotand falls back to a quickselect with median of median of five pivot ifno sufficient progress is made.The pivots used during the search for the wanted kth element canoptionally be stored and reused for further partitionings of the array.This is used by the python interface if an array of kth is provided tothe partitions function. This improves the performance of median andwhich need to select two elements if the size of the array is even. Apercentile function interpolating between values also profits from this.String selection is implemented in terms of quicksort which has the sameproperties as a selection for now.,17,2291,34,numpy/core/src/npysort/selection.c.src,[u'459'],22,0," -0,0 +1,459 ;",;
3360,2,9c4c1c4, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 18 May 2013 07:45:04 +0200",ct: [PATCH 1/2] ENH: add quickselect algorithm and expose it via partitionA partition sorts the kth element into its sorted order and moves allsmaller elements before the kth element and all equal or greaterelements behind it.The ordering of all elements in the partitions is undefined.It is implemented via the introselection algorithm which has worst caselinear complexity compared to a full sort that has linearithmiccomplexity.The introselect algorithm uses a quickselect with median of three pivotand falls back to a quickselect with median of median of five pivot ifno sufficient progress is made.The pivots used during the search for the wanted kth element canoptionally be stored and reused for further partitionings of the array.This is used by the python interface if an array of kth is provided tothe partitions function. This improves the performance of median andwhich need to select two elements if the size of the array is even. Apercentile function interpolating between values also profits from this.String selection is implemented in terms of quicksort which has the sameproperties as a selection for now.,17,2291,34,numpy/core/src/private/npy_partition.h,[u'559'],27,0," -0,0 +1,559 ;",;
3360,2,9c4c1c4, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 18 May 2013 07:45:04 +0200",ct: [PATCH 1/2] ENH: add quickselect algorithm and expose it via partitionA partition sorts the kth element into its sorted order and moves allsmaller elements before the kth element and all equal or greaterelements behind it.The ordering of all elements in the partitions is undefined.It is implemented via the introselection algorithm which has worst caselinear complexity compared to a full sort that has linearithmiccomplexity.The introselect algorithm uses a quickselect with median of three pivotand falls back to a quickselect with median of median of five pivot ifno sufficient progress is made.The pivots used during the search for the wanted kth element canoptionally be stored and reused for further partitionings of the array.This is used by the python interface if an array of kth is provided tothe partitions function. This improves the performance of median andwhich need to select two elements if the size of the array is even. Apercentile function interpolating between values also profits from this.String selection is implemented in terms of quicksort which has the sameproperties as a selection for now.,17,2291,34,numpy/core/src/private/npy_partition.h.src,[u'131'],7,0," -0,0 +1,131 ;",;
3360,2,9c4c1c4, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 18 May 2013 07:45:04 +0200",ct: [PATCH 1/2] ENH: add quickselect algorithm and expose it via partitionA partition sorts the kth element into its sorted order and moves allsmaller elements before the kth element and all equal or greaterelements behind it.The ordering of all elements in the partitions is undefined.It is implemented via the introselection algorithm which has worst caselinear complexity compared to a full sort that has linearithmiccomplexity.The introselect algorithm uses a quickselect with median of three pivotand falls back to a quickselect with median of median of five pivot ifno sufficient progress is made.The pivots used during the search for the wanted kth element canoptionally be stored and reused for further partitionings of the array.This is used by the python interface if an array of kth is provided tothe partitions function. This improves the performance of median andwhich need to select two elements if the size of the array is even. Apercentile function interpolating between values also profits from this.String selection is implemented in terms of quicksort which has the sameproperties as a selection for now.,17,2291,34,numpy/core/tests/test_multiarray.py,[u'290'],13,1," -18,7 +18,8 ; -921,6 +922,293 ;",;def test_searchsorted_with_sorter(self);
3360,2,9c4c1c4, Julian Taylor <jtaylor.debian@googlemail.com>," Sat, 18 May 2013 07:45:04 +0200",ct: [PATCH 1/2] ENH: add quickselect algorithm and expose it via partitionA partition sorts the kth element into its sorted order and moves allsmaller elements before the kth element and all equal or greaterelements behind it.The ordering of all elements in the partitions is undefined.It is implemented via the introselection algorithm which has worst caselinear complexity compared to a full sort that has linearithmiccomplexity.The introselect algorithm uses a quickselect with median of three pivotand falls back to a quickselect with median of median of five pivot ifno sufficient progress is made.The pivots used during the search for the wanted kth element canoptionally be stored and reused for further partitionings of the array.This is used by the python interface if an array of kth is provided tothe partitions function. This improves the performance of median andwhich need to select two elements if the size of the array is even. Apercentile function interpolating between values also profits from this.String selection is implemented in terms of quicksort which has the sameproperties as a selection for now.,17,2291,34,numpy/matrixlib/tests/test_defmatrix.py,[u'5'],1,1," -283,8 +283,9 ;",def test_instance_methods(self);
3360,2,4d9cd69, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 23 May 2013 23:53:23 +0200",ct: [PATCH 2/2] ENH: implement median in terms of partitionPartitioning is sufficient to obtain the median and is much faster.In the case of overwrite_input=True the resulting array will not befully sorted anymore.,3,90,12,doc/release/1.8.0-notes.rst,[u'11'],8,0," -98,6 +98,10 ; -215,6 +219,13 ;",a (potentially expensive) array conversion of ``<non-array-subclass>`` had bee;at compile time. It is enabled by default on x86_64 systems. On x86_32 with ;
3360,2,4d9cd69, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 23 May 2013 23:53:23 +0200",ct: [PATCH 2/2] ENH: implement median in terms of partitionPartitioning is sufficient to obtain the median and is much faster.In the case of overwrite_input=True the resulting array will not befully sorted anymore.,3,90,12,numpy/lib/function_base.py,[u'44'],23,9," -22,7 +22,7 ; -2996,30 +2996,50 ;",";def median(a, axis=None, out=None, overwrite_input=False);"
3360,2,4d9cd69, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 23 May 2013 23:53:23 +0200",ct: [PATCH 2/2] ENH: implement median in terms of partitionPartitioning is sufficient to obtain the median and is much faster.In the case of overwrite_input=True the resulting array will not befully sorted anymore.,3,90,12,numpy/lib/tests/test_function_base.py,[u'47'],35,0," -1537,6 +1537,53 ;",def test_median();
3358,1,fc4ade2, Leon Weber <leon@leonweber.de>," Thu, 23 May 2013 19:24:28 +0200","ct: [PATCH] ENH: Fix SyntaxError when matrix() is called with invalid stringThe numpy.matrix constructor uses eval(str.translate(table)) to convertinput strings to numeric matrix contents. str.translate(table) willreturn empty string if str consists only of invalid characters, causingSyntaxError in eval(). This is confusing, as one would expect anexception like TypeError when trying to construct a matrix from invalidinput.This fix makes sure eval() is only called if str is not empty andTypeError is raised otherwise.",2,15,2,numpy/matrixlib/defmatrix.py,[u'13'],11,2," -19,7 +19,12 ; -34,7 +39,11 ;","def __getitem__(self, i);def _eval(astr);"
3358,1,fc4ade2, Leon Weber <leon@leonweber.de>," Thu, 23 May 2013 19:24:28 +0200","ct: [PATCH] ENH: Fix SyntaxError when matrix() is called with invalid stringThe numpy.matrix constructor uses eval(str.translate(table)) to convertinput strings to numeric matrix contents. str.translate(table) willreturn empty string if str consists only of invalid characters, causingSyntaxError in eval(). This is confusing, as one would expect anexception like TypeError when trying to construct a matrix from invalidinput.This fix makes sure eval() is only called if str is not empty andTypeError is raised otherwise.",2,15,2,numpy/matrixlib/tests/test_defmatrix.py,[u'4'],4,0," -31,6 +31,10 ;",def test_basic(self);
3356,1,e6a1ab9, Carwyn Pelley <cpelley.pub@gmail.com>," Thu, 23 May 2013 14:41:19 +0100","ct: [PATCH] BUG: f2py script shebang may refer to wrong pythonThe f2py executable has a shebang which uses the default python, ratherthan the python it was compiled for.  This causes issues for deploymentof numpy (+f2py) across systems which have different environments.This fix uses sys.executable to determine the resulting hardcodedpython to use.",1,2,2,numpy/f2py/setup.py,[u'4'],2,2," -53,7 +53,7 ; -77,7 +77,7 ;",def generate_f2py_py(build_dir);def generate_f2py_py(build_dir);
3350,1,414983e," ""Nathaniel J. Smith"" <njs@pobox.com>"," Wed, 22 May 2013 11:39:22 +0100",ct: [PATCH] DOC: Remove confusing comment about warnings from top-level README.,1,0,3,README.txt,[u'3'],0,3," -16,9 +16,6 ;","After installation, tests can be run with;"
3349,1,af306bf," ""Nathaniel J. Smith"" <njs@pobox.com>"," Wed, 22 May 2013 11:49:26 +0100","ct: [PATCH] MAINT: Remove tools/osxbuildThese scripts have been broken for years (build.py errors outimmediately if not running from an *svn* checkout), so I'm sureno-one's using them, and they only attract pointless maintenance fixes(py3 changes, keeping the pointless extra copy of the top-levelREADME.txt up to date as in #3288). Let's just remove them.",4,0,214,tools/osxbuild/README.txt,[u'32'],0,11," -1,32 +0,0 ;",;
3349,1,af306bf," ""Nathaniel J. Smith"" <njs@pobox.com>"," Wed, 22 May 2013 11:49:26 +0100","ct: [PATCH] MAINT: Remove tools/osxbuildThese scripts have been broken for years (build.py errors outimmediately if not running from an *svn* checkout), so I'm sureno-one's using them, and they only attract pointless maintenance fixes(py3 changes, keeping the pointless extra copy of the top-levelREADME.txt up to date as in #3288). Let's just remove them.",4,0,214,tools/osxbuild/build.py,[u'105'],0,37," -1,105 +0,0 ;",;
3349,1,af306bf," ""Nathaniel J. Smith"" <njs@pobox.com>"," Wed, 22 May 2013 11:49:26 +0100","ct: [PATCH] MAINT: Remove tools/osxbuildThese scripts have been broken for years (build.py errors outimmediately if not running from an *svn* checkout), so I'm sureno-one's using them, and they only attract pointless maintenance fixes(py3 changes, keeping the pointless extra copy of the top-levelREADME.txt up to date as in #3288). Let's just remove them.",4,0,214,tools/osxbuild/docs/README.txt,[u'25'],0,9," -1,25 +0,0 ;",;
3349,1,af306bf," ""Nathaniel J. Smith"" <njs@pobox.com>"," Wed, 22 May 2013 11:49:26 +0100","ct: [PATCH] MAINT: Remove tools/osxbuildThese scripts have been broken for years (build.py errors outimmediately if not running from an *svn* checkout), so I'm sureno-one's using them, and they only attract pointless maintenance fixes(py3 changes, keeping the pointless extra copy of the top-levelREADME.txt up to date as in #3288). Let's just remove them.",4,0,214,tools/osxbuild/install_and_test.py,[u'52'],0,18," -1,52 +0,0 ;",;
3347,1,4971121, Mark Dickinson <mdickinson@enthought.com>," Wed, 22 May 2013 08:44:27 +0200",ct: [PATCH] Fix references to already freed buffer.,1,2,2,numpy/core/src/multiarray/buffer.c,[u'4'],2,2," -785,13 +785,13 ;",_descriptor_from_pep3118_format(char *s;
3346,1,63a35d4, bebert218 <guillaume.viry@gmail.com>," Wed, 22 May 2013 13:58:38 +0900","ct: [PATCH] BUG:#649update financial.py in order to correct the implementation of the npv function, its documentation and incidentally the mirr function that depends on ittest_financial.py has also be corrected to take into account those modificationsthe npv function behavior was wrong since contrary to what the documentation stated, it started the summation from indexes 1 to M instead of 0 to M-1the mirr function used a work around to get the correct result in spite of this, so the corrective coefficients were removed",2,6,6,numpy/lib/financial.py,[u'10'],5,5," -675,7 +675,7 ; -685,13 +685,13 ; -720,8 +720,8 ;","def npv(rate, values);def npv(rate, values);def mirr(values, finance_rate, reinvest_rate);"
3346,1,63a35d4, bebert218 <guillaume.viry@gmail.com>," Wed, 22 May 2013 13:58:38 +0900","ct: [PATCH] BUG:#649update financial.py in order to correct the implementation of the npv function, its documentation and incidentally the mirr function that depends on ittest_financial.py has also be corrected to take into account those modificationsthe npv function behavior was wrong since contrary to what the documentation stated, it started the summation from indexes 1 to M instead of 0 to M-1the mirr function used a work around to get the correct result in spite of this, so the corrective coefficients were removed",2,6,6,numpy/lib/tests/test_financial.py,[u'2'],1,1," -41,7 +41,7 ;",def test_nper2(self);
3345,1,ee51dd6, Christoph Gohlke <cgohlke@uci.edu>," Tue, 21 May 2013 18:51:21 -0600",ct: [PATCH] ENH: Export randomkit functions from mtrand.pydWindows requires the __declspec(dllexport) specifier to export functions in DLLs.,2,60,53,numpy/random/mtrand/distributions.h,[u'79'],18,19," -48,17 +48,17 ; -66,120 +66,119 ;","extern ""C"" ;extern double rk_uniform(rk_state *state, double loc, double scale);"
3345,1,ee51dd6, Christoph Gohlke <cgohlke@uci.edu>," Tue, 21 May 2013 18:51:21 -0600",ct: [PATCH] ENH: Export randomkit functions from mtrand.pydWindows requires the __declspec(dllexport) specifier to export functions in DLLs.,2,60,53,numpy/random/mtrand/randomkit.h,[u'34'],10,6," -61,6 +61,14 ; -104,7 +112,7 ; -116,7 +124,7 ; -126,37 +134,37 ; -166,7 +174,7 ; -174,13 +182,13 ;",";typedef enum ;extern ""C"" ;extern void rk_seed(unsigned long seed, rk_state *state);extern void rk_fill(void *buffer, size_t size, rk_state *state);extern rk_error rk_devfill(void *buffer, size_t size, int strong);"
3344,1,dea0fe5, Christoph Gohlke <cgohlke@uci.edu>," Tue, 21 May 2013 17:28:24 -0600",ct: [PATCH] MAINT: Remove msvc_on_amd64 functionThis function is no longer required for building with msvc on AMD64,2,0,15,numpy/distutils/ccompiler.py,[u'5'],1,4," -16,7 +16,7 ; -654,6 +654,3 ;",;def split_quoted(s);
3344,1,dea0fe5, Christoph Gohlke <cgohlke@uci.edu>," Tue, 21 May 2013 17:28:24 -0600",ct: [PATCH] MAINT: Remove msvc_on_amd64 functionThis function is no longer required for building with msvc on AMD64,2,0,15,numpy/distutils/misc_util.py,[u'11'],0,11," -367,17 +367,6 ;",def msvc_runtime_library();
3342,1,eec5e48, Ralf Gommers <ralf.gommers@googlemail.com>," Sun, 19 May 2013 22:15:09 +0200","ct: [PATCH] BLD: fix setuptools-specific easy_install issue.  Closes gh-3160.An error is raised by setuptools when trying to write to /dev/null.  Was fixedin distribute, but not in setuptools.No multi-arch support with plain setuptools should be OK, because multi-arch isUbuntu specific (at least for now), and they ship distribute.",1,4,2,numpy/distutils/system_info.py,[u'6'],4,2," -223,8 +223,10 ;","def libpaths(paths, bits);"
3341,2,0adccaa, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 19 May 2013 17:04:27 +0200","ct: [PATCH 1/2] ENH: vectorize sqrt ufunc using SSE2specialize the sqrt ufunc for float and double and vectorize it usingSSE2.improves performance by 4/2 for float/double if one is not memory bounddue to non-cached data.performance is always better on all tested machines (amd phenom X2,intel xeon 5xxx/7xxx, core2duo, corei7)This version will not set errno on invalid input, but numpy only checksthe fpu flags so the behavior is the same.In principle the compiler could autovectorize it when setting ffast-math(for no errno) and specializing the loop for the vectorizable stridesand giving it some hints (restrict, __builtin_assume_aligned, etc.),but its simpler and more reliable to simply vectorize it by hand.",10,417,176,numpy/core/code_generators/generate_umath.py,[u'2'],1,0," -207,6 +207,7 ; -686,6 +687,7 ;",def english_upper(s);def english_upper(s);
3341,2,0adccaa, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 19 May 2013 17:04:27 +0200","ct: [PATCH 1/2] ENH: vectorize sqrt ufunc using SSE2specialize the sqrt ufunc for float and double and vectorize it usingSSE2.improves performance by 4/2 for float/double if one is not memory bounddue to non-cached data.performance is always better on all tested machines (amd phenom X2,intel xeon 5xxx/7xxx, core2duo, corei7)This version will not set errno on invalid input, but numpy only checksthe fpu flags so the behavior is the same.In principle the compiler could autovectorize it when setting ffast-math(for no errno) and specializing the loop for the vectorizable stridesand giving it some hints (restrict, __builtin_assume_aligned, etc.),but its simpler and more reliable to simply vectorize it by hand.",10,417,176,numpy/core/setup.py,[u'5'],1,0," -161,6 +161,11 ;",def check_funcs(funcs_name);
3341,2,0adccaa, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 19 May 2013 17:04:27 +0200","ct: [PATCH 1/2] ENH: vectorize sqrt ufunc using SSE2specialize the sqrt ufunc for float and double and vectorize it usingSSE2.improves performance by 4/2 for float/double if one is not memory bounddue to non-cached data.performance is always better on all tested machines (amd phenom X2,intel xeon 5xxx/7xxx, core2duo, corei7)This version will not set errno on invalid input, but numpy only checksthe fpu flags so the behavior is the same.In principle the compiler could autovectorize it when setting ffast-math(for no errno) and specializing the loop for the vectorizable stridesand giving it some hints (restrict, __builtin_assume_aligned, etc.),but its simpler and more reliable to simply vectorize it by hand.",10,417,176,numpy/core/setup_common.py,[u'4'],1,0," -97,6 +97,10 ;","def check_api_version(apiversion, codegen_dir);"
3341,2,0adccaa, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 19 May 2013 17:04:27 +0200","ct: [PATCH 1/2] ENH: vectorize sqrt ufunc using SSE2specialize the sqrt ufunc for float and double and vectorize it usingSSE2.improves performance by 4/2 for float/double if one is not memory bounddue to non-cached data.performance is always better on all tested machines (amd phenom X2,intel xeon 5xxx/7xxx, core2duo, corei7)This version will not set errno on invalid input, but numpy only checksthe fpu flags so the behavior is the same.In principle the compiler could autovectorize it when setting ffast-math(for no errno) and specializing the loop for the vectorizable stridesand giving it some hints (restrict, __builtin_assume_aligned, etc.),but its simpler and more reliable to simply vectorize it by hand.",10,417,176,numpy/core/src/private/lowlevel_strided_loops.h,[u'46'],3,0," -396,6 +396,52 ;","PyArray_PrepareThreeRawArrayIter(int ndim, npy_intp *shape;"
3341,2,0adccaa, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 19 May 2013 17:04:27 +0200","ct: [PATCH 1/2] ENH: vectorize sqrt ufunc using SSE2specialize the sqrt ufunc for float and double and vectorize it usingSSE2.improves performance by 4/2 for float/double if one is not memory bounddue to non-cached data.performance is always better on all tested machines (amd phenom X2,intel xeon 5xxx/7xxx, core2duo, corei7)This version will not set errno on invalid input, but numpy only checksthe fpu flags so the behavior is the same.In principle the compiler could autovectorize it when setting ffast-math(for no errno) and specializing the loop for the vectorizable stridesand giving it some hints (restrict, __builtin_assume_aligned, etc.),but its simpler and more reliable to simply vectorize it by hand.",10,417,176,numpy/core/src/scalarmathmodule.c.src,[u'10'],1,1," -1766,8 +1766,14 ;",get_functions(void;
3341,2,0adccaa, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 19 May 2013 17:04:27 +0200","ct: [PATCH 1/2] ENH: vectorize sqrt ufunc using SSE2specialize the sqrt ufunc for float and double and vectorize it usingSSE2.improves performance by 4/2 for float/double if one is not memory bounddue to non-cached data.performance is always better on all tested machines (amd phenom X2,intel xeon 5xxx/7xxx, core2duo, corei7)This version will not set errno on invalid input, but numpy only checksthe fpu flags so the behavior is the same.In principle the compiler could autovectorize it when setting ffast-math(for no errno) and specializing the loop for the vectorizable stridesand giving it some hints (restrict, __builtin_assume_aligned, etc.),but its simpler and more reliable to simply vectorize it by hand.",10,417,176,numpy/core/src/umath/loops.c.src,[u'81'],6,0," -15,10 +15,16 ; -27,10 +33,25 ; -52,6 +73,22 ; -1268,6 +1305,50 ;",";;;TIMEDELTA_mm_d_divide(char **args, npy_intp *dimensions, npy_intp *steps, void ;"
3341,2,0adccaa, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 19 May 2013 17:04:27 +0200","ct: [PATCH 1/2] ENH: vectorize sqrt ufunc using SSE2specialize the sqrt ufunc for float and double and vectorize it usingSSE2.improves performance by 4/2 for float/double if one is not memory bounddue to non-cached data.performance is always better on all tested machines (amd phenom X2,intel xeon 5xxx/7xxx, core2duo, corei7)This version will not set errno on invalid input, but numpy only checksthe fpu flags so the behavior is the same.In principle the compiler could autovectorize it when setting ffast-math(for no errno) and specializing the loop for the vectorizable stridesand giving it some hints (restrict, __builtin_assume_aligned, etc.),but its simpler and more reliable to simply vectorize it by hand.",10,417,176,numpy/core/src/umath/loops.h,[u'356'],12,12," -1541,56 +1541,64 ; -1601,49 +1609,49 ; -1696,55 +1704,55 ; -1755,49 +1763,49 ; -1850,55 +1858,55 ; -1909,49 +1917,49 ; -2004,55 +2012,55 ; -2063,49 +2071,49 ; -2173,14 +2181,14 ; -2195,36 +2203,36 ; -2234,15 +2242,15 ; -2268,20 +2276,20 ; -2289,14 +2297,14 ; -2311,36 +2319,36 ; -2350,15 +2358,15 ; -2384,20 +2392,20 ; -2405,14 +2413,14 ; -2427,36 +2435,36 ; -2466,15 +2474,15 ; -2500,20 +2508,20 ; -2544,81 +2552,81 ; -2683,27 +2691,27 ;","ULONGLONG_remainder(char **args, npy_intp *dimensions, npy_intp *steps, void *N;HALF_logical_xor(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY_;HALF_ldexp_long(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY_U;FLOAT_logical_xor(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY;FLOAT_ldexp_long(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY_;DOUBLE_logical_xor(char **args, npy_intp *dimensions, npy_intp *steps, void *NP;DOUBLE_ldexp_long(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY;LONGDOUBLE_logical_xor(char **args, npy_intp *dimensions, npy_intp *steps, voi;LONGDOUBLE_ldexp_long(char **args, npy_intp *dimensions, npy_intp *steps, void ;CFLOAT_divide(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY_UNU;CFLOAT_logical_xor(char **args, npy_intp *dimensions, npy_intp *steps, void *NP;CFLOAT__arg(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY_UNUSE;CFLOAT_fmin(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY_UNUSE;CDOUBLE_divide(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY_UN;CDOUBLE_logical_xor(char **args, npy_intp *dimensions, npy_intp *steps, void *N;CDOUBLE__arg(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY_UNUS;CDOUBLE_fmin(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY_UNUS;CLONGDOUBLE_divide(char **args, npy_intp *dimensions, npy_intp *steps, void *NP;CLONGDOUBLE_logical_xor(char **args, npy_intp *dimensions, npy_intp *steps, voi;CLONGDOUBLE__arg(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY_;TIMEDELTA_absolute(char **args, npy_intp *dimensions, npy_intp *steps, void *NP;TIMEDELTA_mm_d_divide(char **args, npy_intp *dimensions, npy_intp *steps, void ;"
3341,2,0adccaa, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 19 May 2013 17:04:27 +0200","ct: [PATCH 1/2] ENH: vectorize sqrt ufunc using SSE2specialize the sqrt ufunc for float and double and vectorize it usingSSE2.improves performance by 4/2 for float/double if one is not memory bounddue to non-cached data.performance is always better on all tested machines (amd phenom X2,intel xeon 5xxx/7xxx, core2duo, corei7)This version will not set errno on invalid input, but numpy only checksthe fpu flags so the behavior is the same.In principle the compiler could autovectorize it when setting ffast-math(for no errno) and specializing the loop for the vectorizable stridesand giving it some hints (restrict, __builtin_assume_aligned, etc.),but its simpler and more reliable to simply vectorize it by hand.",10,417,176,numpy/core/src/umath/loops.h.src,[u'6'],1,0," -181,6 +181,12 ;","U@TYPE@_remainder(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY;"
3341,2,0adccaa, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 19 May 2013 17:04:27 +0200","ct: [PATCH 1/2] ENH: vectorize sqrt ufunc using SSE2specialize the sqrt ufunc for float and double and vectorize it usingSSE2.improves performance by 4/2 for float/double if one is not memory bounddue to non-cached data.performance is always better on all tested machines (amd phenom X2,intel xeon 5xxx/7xxx, core2duo, corei7)This version will not set errno on invalid input, but numpy only checksthe fpu flags so the behavior is the same.In principle the compiler could autovectorize it when setting ffast-math(for no errno) and specializing the loop for the vectorizable stridesand giving it some hints (restrict, __builtin_assume_aligned, etc.),but its simpler and more reliable to simply vectorize it by hand.",10,417,176,numpy/core/tests/test_umath.py,[u'16'],2,0," -4,6 +4,7 ; -100,6 +101,21 ;",;def test_power_float(self);
3341,2,0adccaa, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 19 May 2013 17:04:27 +0200","ct: [PATCH 1/2] ENH: vectorize sqrt ufunc using SSE2specialize the sqrt ufunc for float and double and vectorize it usingSSE2.improves performance by 4/2 for float/double if one is not memory bounddue to non-cached data.performance is always better on all tested machines (amd phenom X2,intel xeon 5xxx/7xxx, core2duo, corei7)This version will not set errno on invalid input, but numpy only checksthe fpu flags so the behavior is the same.In principle the compiler could autovectorize it when setting ffast-math(for no errno) and specializing the loop for the vectorizable stridesand giving it some hints (restrict, __builtin_assume_aligned, etc.),but its simpler and more reliable to simply vectorize it by hand.",10,417,176,numpy/testing/utils.py,[u'67'],5,0," -10,6 +10,7 ; -1523,3 +1524,69 ;",";def assert_no_warnings(func, *args, **kw);"
3341,2,fe69102, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 19 May 2013 17:44:13 +0200",ct: [PATCH 2/2] MAINT: use sse header macros for einsum sse activation,2,7,3,numpy/core/setup_common.py,[u'5'],4,1," -98,7 +98,10 ;","def check_api_version(apiversion, codegen_dir);"
3341,2,fe69102, Julian Taylor <jtaylor.debian@googlemail.com>," Sun, 19 May 2013 17:44:13 +0200",ct: [PATCH 2/2] MAINT: use sse header macros for einsum sse activation,2,7,3,numpy/core/src/multiarray/einsum.c.src,[u'5'],3,2," -17,12 +17,13 ; -31,7 +32,7 ;",;;
3340,1,79904ac, Ralf Gommers <ralf.gommers@googlemail.com>," Sun, 19 May 2013 12:16:38 +0200","ct: [PATCH] DOC: update numpy.distutils documentation, remove info.py details.Addresses https://github.com/scipy/scipy/issues/2492",1,16,49,doc/DISTUTILS.rst.txt,[u'65'],13,38," -10,7 +10,7 ; -38,7 +38,6 ; -398,64 +397,32 ;","SciPy structur;A SciPy package contains, in addition to its sources, the followin;Useful functions in ``numpy.distutils.misc_util`;"
3339,3,bb6eb76, endolith <endolith@gmail.com>," Thu, 16 May 2013 23:51:02 -0400","ct: [PATCH 1/3] DOC: Mention all min/max functions from all others, clarify differences",3,91,35,numpy/core/code_generators/ufunc_docstrings.py,[u'50'],16,10," -2194,13 +2194,15 ; -2249,11 +2251,15 ; -2300,11 +2306,15 ; -2355,11 +2365,15 ;","def add_newdoc(place, name, doc);def add_newdoc(place, name, doc);def add_newdoc(place, name, doc);def add_newdoc(place, name, doc);"
3339,3,bb6eb76, endolith <endolith@gmail.com>," Thu, 16 May 2013 23:51:02 -0400","ct: [PATCH 1/3] DOC: Mention all min/max functions from all others, clarify differences",3,91,35,numpy/core/fromnumeric.py,[u'38'],16,4," -1922,15 +1922,28 ; -1991,17 +2004,28 ;","def amax(a, axis=None, out=None, keepdims=False);def amin(a, axis=None, out=None, keepdims=False);"
3339,3,bb6eb76, endolith <endolith@gmail.com>," Thu, 16 May 2013 23:51:02 -0400","ct: [PATCH 1/3] DOC: Mention all min/max functions from all others, clarify differences",3,91,35,numpy/lib/function_base.py,[u'38'],14,6," -1495,11 +1495,20 ; -1592,11 +1601,20 ;","def nanmin(a, axis=None);def nanmax(a, axis=None);"
3339,3,f40e9d5, endolith <endolith@gmail.com>," Fri, 17 May 2013 00:03:24 -0400",ct: [PATCH 2/3] DOC: Harmonize max and min docstrings with each other,3,40,38,numpy/core/code_generators/ufunc_docstrings.py,[u'24'],8,9," -2170,14 +2170,12 ; -2206,15 +2204,15 ; -2277,6 +2275,8 ; -2339,8 +2339,6 ;","def add_newdoc(place, name, doc);def add_newdoc(place, name, doc);def add_newdoc(place, name, doc);def add_newdoc(place, name, doc);"
3339,3,f40e9d5, endolith <endolith@gmail.com>," Fri, 17 May 2013 00:03:24 -0400",ct: [PATCH 2/3] DOC: Harmonize max and min docstrings with each other,3,40,38,numpy/core/fromnumeric.py,[u'36'],14,12," -1903,11 +1903,11 ; -1938,7 +1938,7 ; -1951,11 +1951,11 ; -1972,7 +1972,7 ; -1987,7 +1987,7 ; -1999,8 +1999,10 ; -2019,9 +2021,9 ; -2035,9 +2037,9 ;","def amax(a, axis=None, out=None, keepdims=False);def amax(a, axis=None, out=None, keepdims=False);def amax(a, axis=None, out=None, keepdims=False);def amax(a, axis=None, out=None, keepdims=False);def amin(a, axis=None, out=None, keepdims=False);def amin(a, axis=None, out=None, keepdims=False);def amin(a, axis=None, out=None, keepdims=False);def amin(a, axis=None, out=None, keepdims=False);"
3339,3,f40e9d5, endolith <endolith@gmail.com>," Fri, 17 May 2013 00:03:24 -0400",ct: [PATCH 2/3] DOC: Harmonize max and min docstrings with each other,3,40,38,numpy/lib/function_base.py,[u'18'],7,6," -1478,20 +1478,23 ; -1519,7 +1522,6 ; -1581,7 +1583,7 ; -1596,8 +1598,8 ;","def nansum(a, axis=None);def nanmin(a, axis=None);def nanargmin(a, axis=None);def nanmax(a, axis=None);"
3339,3,0a079b0, endolith <endolith@gmail.com>," Sun, 19 May 2013 21:50:35 -0400",ct: [PATCH 3/3] DOC: add fmax/fmin to ufuncs list and math routines list,2,6,0,doc/source/reference/routines.math.rst,[u'2'],2,0," -143,6 +143,8 ;",Miscellaneou;
3339,3,0a079b0, endolith <endolith@gmail.com>," Sun, 19 May 2013 21:50:35 -0400",ct: [PATCH 3/3] DOC: add fmax/fmin to ufuncs list and math routines list,2,6,0,doc/source/reference/ufuncs.rst,[u'4'],4,0," -604,6 +604,10 ;",Comparison function;
3337,1,4c291f3, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 16 May 2013 18:06:30 +0200","ct: [PATCH] BUG: Correctly pass on ddof paramter on inside np.ma.corrcoefWhile ddof has basically no effect on corrcoef, it exists,but it was not passed on correctly (instead only bias wouldbe passed on). Fixes gh-3336",2,11,4,numpy/ma/extras.py,[u'7'],3,4," -1402,14 +1402,13 ;","def corrcoef(x, y=None, rowvar=True, bias=False, allow_masked=True, ddof=None);"
3337,1,4c291f3, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 16 May 2013 18:06:30 +0200","ct: [PATCH] BUG: Correctly pass on ddof paramter on inside np.ma.corrcoefWhile ddof has basically no effect on corrcoef, it exists,but it was not passed on correctly (instead only bias wouldbe passed on). Fixes gh-3336",2,11,4,numpy/ma/tests/test_regression.py,[u'8'],8,0," -61,6 +61,14 ;",def test_var_sets_maskedarray_scalar(self);
3335,1,e71e08c, Jay Bourque <jay.bourque@continuum.io>," Tue, 14 May 2013 16:08:13 -0500",ct: [PATCH] Fix segfaultouter_steps array should be size 4 since op_count can be either 2 or 4,1,0,0,numpy/linalg/umath_linalg.c.src,[u'2'],1,1," -3029,7 +3029,7 ;",static inline voi;
3333,1,f7dd423, Mark Wiebe <mwwiebe@gmail.com>," Mon, 13 May 2013 14:06:23 -0700",ct: [PATCH] BLD: Fixes for building on win32 with MSVC 2008,4,186,150,numpy/core/src/umath/operand_flag_tests.c.src,[u'1'],0,1," -1,6 +1,5 ;",;
3333,1,f7dd423, Mark Wiebe <mwwiebe@gmail.com>," Mon, 13 May 2013 14:06:23 -0700",ct: [PATCH] BLD: Fixes for building on win32 with MSVC 2008,4,186,150,numpy/core/src/umath/test_rational.c.src,[u'327'],14,12," -2,13 +2,12 ; -47,63 +46,67 ; -114,17 +117,17 ; -132,17 +135,18 ; -157,20 +161,20 ; -191,29 +195,29 ; -223,10 +227,10 ; -245,14 +249,14 ; -267,13 +271,14 ; -294,7 +299,7 ; -312,7 +317,7 ; -331,10 +336,11 ; -352,7 +358,7 ; -374,18 +380,24 ; -409,9 +421,9 ; -423,11 +435,11 ; -440,7 +452,7 ; -452,41 +464,46 ; -538,9 +555,10 ; -644,9 +662,9 ; -720,14 +738,16 ; -744,11 +764,11 ; -759,10 +779,10 ; -783,10 +803,11 ; -805,13 +826,17 ; -910,9 +935,9 ; -955,8 +980,8 ; -979,8 +1004,8 ; -1059,8 +1084,8 ; -1095,6 +1120,10 ; -1104,11 +1133,11 ; -1137,7 +1166,7 ; -1149,21 +1178,23 ; -1179,10 +1210,10 ; -1244,42 +1275,46 ;",";set_zero_divide(void) ;lcm(int64_t x, int64_t y) ;make_rational_int(int64_t n) ;make_rational_slow(int64_t n_, int64_t d_) ;rational_add(rational x, rational y) ;rational_floor(rational x) ;rational_abs(rational x) ;rational_inverse(rational x) ;rational_ne(rational x, rational y) ;rational_ge(rational x, rational y) ;static in;scan_rational(const char** s, rational* x) ;PyRational_FromRational(rational x) ;pyrational_new(PyTypeObject* type, PyObject* args, PyObject* kwds) ;pyrational_new(PyTypeObject* type, PyObject* args, PyObject* kwds) ;pyrational_new(PyTypeObject* type, PyObject* args, PyObject* kwds) ;pyrational_new(PyTypeObject* type, PyObject* args, PyObject* kwds) ;pyrational_hash(PyObject* self) ;static PyGetSetDef pyrational_getset[] = ;npyrational_setitem(PyObject* item, void* data, void* arr) ;npyrational_setitem(PyObject* item, void* data, void* arr) ;static voi;npyrational_copyswapn(void* dst_, npy_intp dstride, void* src_;npyrational_compare(const void* d0, const void* d1, void* arr) ;PyArray_Descr npyrational_descr = ;RATIONAL_BINARY_UFUNC(greater,npy_bool,rational_gt(x,y);UNARY_UFUNC(square,rational,rational_multiply(x,x);rational_ufunc_test_add(char** args, npy_intp* dimensions;PyMODINIT_FUNC inittest_rational(void) ;PyMODINIT_FUNC inittest_rational(void) ;PyMODINIT_FUNC inittest_rational(void) ;PyMODINIT_FUNC inittest_rational(void) ;PyMODINIT_FUNC inittest_rational(void) ;PyMODINIT_FUNC inittest_rational(void) ;"
3333,1,f7dd423, Mark Wiebe <mwwiebe@gmail.com>," Mon, 13 May 2013 14:06:23 -0700",ct: [PATCH] BLD: Fixes for building on win32 with MSVC 2008,4,186,150,numpy/core/src/umath/ufunc_type_resolution.c,[u'6'],1,1," -1180,13 +1180,14 ; -1594,13 +1595,14 ;",find_userloop(PyUFuncObject *ufunc;linear_search_userloop_type_resolver(PyUFuncObject *self;
3333,1,f7dd423, Mark Wiebe <mwwiebe@gmail.com>," Mon, 13 May 2013 14:06:23 -0700",ct: [PATCH] BLD: Fixes for building on win32 with MSVC 2008,4,186,150,numpy/linalg/umath_linalg.c.src,[u'2'],1,1," -1196,11 +1196,11 ;",init_gemm_params(GEMM_PARAMS_t *params;
3330,1,a8dacf0, Pauli Virtanen <pav@iki.fi>," Sun, 12 May 2013 15:07:22 +0300",ct: [PATCH] TST: linalg: make sure that running the xerbla test is safe,1,43,0,numpy/linalg/tests/test_linalg.py,[u'44'],38,1," -2,6 +2,7 ; -750,8 +751,49 ;",;def test_generalized_raise_multiloop();
3329,1,246c06d," ""Josh Warner (Mac)"" <warner.joshua@mayo.edu>"," Wed, 8 May 2013 00:13:41 -0500","ct: [PATCH] ENH: improved, faster algorithm for array paddingNew padding method which scales much better with dimensionality.This new implementation is fully vectorized, builds each abstractedn-dimensional padding block in a single step, and takes advantageof separability. The API is completely preserved, and the oldalgorithm is used if a vector function is input for `mode`.The new algorithm is faster for all tested combinations of inputs,and scales much better with dimensionality. Execution time reductionsfrom ~25% for small rank 1 arrays to >99% for rank 4+ arrays observed.",3,1114,429,doc/release/1.8.0-notes.rst,[u'12'],1,0," -121,6 +121,16 ; -145,6 +155,8 ;","Now the correct ufunc loop is found, as long as the user provides an outpu;Several changes to np.insert and np.delete;"
3329,1,246c06d," ""Josh Warner (Mac)"" <warner.joshua@mayo.edu>"," Wed, 8 May 2013 00:13:41 -0500","ct: [PATCH] ENH: improved, faster algorithm for array paddingNew padding method which scales much better with dimensionality.This new implementation is fully vectorized, builds each abstractedn-dimensional padding block in a single step, and takes advantageof separability. The API is completely preserved, and the oldalgorithm is used if a vector function is input for `mode`.The new algorithm is faster for all tested combinations of inputs,and scales much better with dimensionality. Execution time reductionsfrom ~25% for small rank 1 arrays to >99% for rank 4+ arrays observed.",3,1114,429,numpy/lib/arraypad.py,[u'1501'],27,11," -15,508 +15,1075 ; -714,19 +1281,6 ; -748,8 +1302,6 ; -762,35 +1314,156 ;",";def pad(array, pad_width, mode=None, **kwargs);def pad(array, pad_width, mode=None, **kwargs);def pad(array, pad_width, mode=None, **kwargs);"
3329,1,246c06d," ""Josh Warner (Mac)"" <warner.joshua@mayo.edu>"," Wed, 8 May 2013 00:13:41 -0500","ct: [PATCH] ENH: improved, faster algorithm for array paddingNew padding method which scales much better with dimensionality.This new implementation is fully vectorized, builds each abstractedn-dimensional padding block in a single step, and takes advantageof separability. The API is completely preserved, and the oldalgorithm is used if a vector function is input for `mode`.The new algorithm is faster for all tested combinations of inputs,and scales much better with dimensionality. Execution time reductionsfrom ~25% for small rank 1 arrays to >99% for rank 4+ arrays observed.",3,1114,429,numpy/lib/tests/test_arraypad.py,[u'30'],1,1," -178,21 +178,21 ;",def test_check_mean_shape_one(self);
3328,2,21feedd, Pauli Virtanen <pav@iki.fi>," Sat, 11 May 2013 14:24:45 +0300",ct: [PATCH 1/2] ENH: Add a runtests.py script for running the test suiteThe script builds Numpy and runs the test suite of the built version.This is useful for development.,1,197,0,runtests.py,[u'197'],60,0," -0,0 +1,197 ;",;
3328,2,19102b0, Pauli Virtanen <pav@iki.fi>," Sun, 12 May 2013 11:45:34 +0300",ct: [PATCH 2/2] DOC: mention runtests.py in release notes,1,6,0,doc/release/1.8.0-notes.rst,[u'6'],6,0," -120,6 +120,12 ;",loop signature matching logic wasn't looking at the output operand type;
3327,1,7f8aefc, Pauli Virtanen <pav@iki.fi>," Sat, 11 May 2013 14:28:42 +0300","ct: [PATCH] MAINT: update tox.iniRemove unsupported Python versions, flip the NPY_SEPARATE_COMPILATIONflags, and add NPY_RELAXED_STRIDES, mirroring the travis configuration.",1,19,11,tox.ini,[u'30'],19,11," -13,7 +13,7 ; -22,27 +22,35 ;",;;
3325,1,2a2f91f, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 10 May 2013 23:40:32 +0200",ct: [PATCH] MAINT: Remove unnecessary 0-d special case.This special case was made unnecessary by changes to the nditer.,2,6,12,numpy/core/src/umath/ufunc_object.c,[u'12'],0,12," -2008,18 +2008,6 ;",PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;
3325,1,2a2f91f, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 10 May 2013 23:40:32 +0200",ct: [PATCH] MAINT: Remove unnecessary 0-d special case.This special case was made unnecessary by changes to the nditer.,2,6,12,numpy/core/tests/test_ufunc.py,[u'6'],6,0," -795,5 +795,11 ;",def test_operand_flags(self);
3324,11,aa7a047, Frederic <nouiz@nouiz.org>," Fri, 10 May 2013 16:58:55 -0400","ct: [PATCH 01/11] Make comparison function (gt, ge, ...) respect __array_priority__.",1,44,0,numpy/core/src/multiarray/arrayobject.c,[u'44'],33,0," -1266,6 +1266,50 ;","array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;"
3324,11,3a09d96, Frederic <nouiz@nouiz.org>," Wed, 15 May 2013 11:59:34 -0400","ct: [PATCH 02/11] Revert ""Make comparison function (gt, ge, ...) respect __array_priority__.""This reverts commit aa7a04741146c44ab1735782a89a60b038028bf2.",1,0,44,numpy/core/src/multiarray/arrayobject.c,[u'44'],0,33," -1266,50 +1266,6 ;","array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;"
3324,11,5950221, Frederic <nouiz@nouiz.org>," Wed, 15 May 2013 12:59:14 -0400",ct: [PATCH 03/11] Commit from @seberg to make comparison use respect __array_priority__,2,9,2,numpy/core/src/multiarray/arrayobject.c,[u'4'],2,2," -1298,7 +1298,7 ; -1354,7 +1354,7 ;","array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;"
3324,11,5950221, Frederic <nouiz@nouiz.org>," Wed, 15 May 2013 12:59:14 -0400",ct: [PATCH 03/11] Commit from @seberg to make comparison use respect __array_priority__,2,9,2,numpy/core/src/umath/ufunc_object.c,[u'7'],7,0," -492,6 +492,13 ;","_has_reflected_op(PyObject *op, char *name;"
3324,11,1d3fa04, Frederic <nouiz@nouiz.org>," Wed, 15 May 2013 13:00:04 -0400",ct: [PATCH 04/11] Add test for the array_priority for comparison function.,1,146,0,numpy/core/tests/test_multiarray.py,[u'146'],36,0," -2934,6 +2934,152 ;",def test_mapiter(self);
3324,11,90ea64b, Frederic <nouiz@nouiz.org>," Thu, 16 May 2013 14:49:43 -0400",ct: [PATCH 05/11] reorder code to remove not needed computation in some cases.,1,19,5,numpy/core/src/multiarray/arrayobject.c,[u'24'],19,5," -1280,6 +1280,16 ; -1297,9 +1307,6 ; -1337,6 +1344,15 ; -1354,8 +1370,6 ;","array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;"
3324,11,fa3919c, Frederic <nouiz@nouiz.org>," Thu, 16 May 2013 15:52:54 -0400",ct: [PATCH 06/11] fix comment style.,1,10,6,numpy/core/src/multiarray/arrayobject.c,[u'16'],10,6," -1286,9 +1286,11 ; -1349,9 +1351,11 ;","array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;"
3324,11,61977a3, Frederic <nouiz@nouiz.org>," Thu, 16 May 2013 16:38:52 -0400",ct: [PATCH 07/11] remove comparison not needed as this is check above and we break in that case.,1,2,4,numpy/core/src/multiarray/arrayobject.c,[u'6'],2,4," -1309,8 +1309,7 ; -1374,8 +1373,7 ;","array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;"
3324,11,1c0a8fb, Frederic <nouiz@nouiz.org>," Thu, 16 May 2013 16:51:12 -0400",ct: [PATCH 08/11] Move computation inside an if to speed it up.,1,35,36,numpy/core/src/multiarray/arrayobject.c,[u'71'],16,17," -1292,24 +1292,25 ; -1333,7 +1334,6 ; -1356,24 +1356,24 ; -1393,7 +1393,6 ;","array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;"
3324,11,1aca67f, Frederic <nouiz@nouiz.org>," Fri, 17 May 2013 11:45:16 -0400",ct: [PATCH 09/11] use assert function instead of python keyword,1,42,42,numpy/core/tests/test_multiarray.py,[u'84'],18,19," -2982,13 +2982,13 ; -3000,13 +3000,13 ; -3018,13 +3018,13 ; -3036,13 +3036,13 ; -3054,13 +3054,13 ; -3072,13 +3072,13 ;",def test_lt(self);def test_gt(self);def test_le(self);def test_ge(self);def test_eq(self);def test_ne(self);
3324,11,87801b9, Frederic <nouiz@nouiz.org>," Fri, 17 May 2013 11:47:20 -0400",ct: [PATCH 10/11] updated the comment.,1,4,6,numpy/core/src/multiarray/arrayobject.c,[u'10'],4,6," -1287,9 +1287,8 ; -1351,9 +1350,8 ;","array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;"
3324,11,c098283, Frederic <nouiz@nouiz.org>," Thu, 23 May 2013 11:45:40 -0400",ct: [PATCH 11/11] code clean up. Remove code that was never executed.@seberg saw this.,1,2,14,numpy/core/src/multiarray/arrayobject.c,[u'16'],2,14," -1264,7 +1264,6 ; -1292,13 +1291,7 ; -1355,12 +1348,7 ;","array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;array_richcompare(PyArrayObject *self, PyObject *other, int cmp_op;"
3323,2,4d8e317, Jay Bourque <jay.bourque@continuum.io>," Fri, 10 May 2013 15:14:35 -0500",ct: [PATCH 1/2] Fix issue with broadcast_arrays() and user defined dtypesbroadcast_arrays() does not handle struct and custom dtypes correctly. Dtype of returned broadcasted arrays is always '|V8'. Fix broadcast_arrays() so that dtype of returned arrays is correct dtype for user defined dtypes.,1,4,0,numpy/lib/stride_tricks.py,[u'5'],4,1," -27,7 +27,10 ;","def as_strided(x, shape=None, strides=None);"
3323,2,d6cef9f, Jay Bourque <jay.bourque@continuum.io>," Fri, 10 May 2013 15:22:19 -0500",ct: [PATCH 2/2] Add test,1,8,0,numpy/core/tests/test_api.py,[u'8'],8,0," -276,5 +276,13 ;","def check_contig(a, ccontig, fcontig);"
3322,2,6dc709a, Jay Bourque <jay.bourque@continuum.io>," Fri, 10 May 2013 15:32:24 -0500","ct: [PATCH 1/2] Fix array_equal and array_equiv issuearray_equal() and array_equiv() don't work for string arrays and record arrays. This is because those methods use numpy.equals ufunc for comparison, and there are no equal ufuncs registered for strings and record arrays. Replace numpy.equals with '==' array operation, which handles strings and record arrays.",2,8,2,numpy/core/numeric.py,[u'4'],2,2," -2137,7 +2137,7 ; -2179,7 +2179,7 ;","def array_equal(a1, a2);def array_equiv(a1, a2);"
3322,2,6dc709a, Jay Bourque <jay.bourque@continuum.io>," Fri, 10 May 2013 15:32:24 -0500","ct: [PATCH 1/2] Fix array_equal and array_equiv issuearray_equal() and array_equiv() don't work for string arrays and record arrays. This is because those methods use numpy.equals ufunc for comparison, and there are no equal ufuncs registered for strings and record arrays. Replace numpy.equals with '==' array operation, which handles strings and record arrays.",2,8,2,numpy/core/tests/test_numeric.py,[u'6'],6,0," -656,6 +656,12 ;",def test_array_equal(self);
3322,2,92503a5, Jay Bourque <jay.bourque@continuum.io>," Mon, 13 May 2013 10:24:51 -0500",ct: [PATCH 2/2] Make sure comparison result is array,1,0,0,numpy/core/numeric.py,[u'2'],1,1," -2137,7 +2137,7 ;","def array_equal(a1, a2);"
3318,1,cdea31e, Pauli Virtanen <pav@iki.fi>," Thu, 9 May 2013 18:09:44 +0300","ct: [PATCH] BUG: testing: always enable --exeSetuptools tends to set +x to the installed test scripts, which makesnumpy.test() to not run any tests. Having --exe always enabled is notproblematic because only files matching 'test_*.py' are looked into.",1,8,0,numpy/testing/nosetester.py,[u'8'],8,0," -188,6 +188,14 ;","def _test_argv(self, label, verbose, extra_argv);"
3317,2,2f11133, Edward Catmur <ecatmur@ahl.com>," Tue, 7 May 2013 16:49:39 +0100",ct: [PATCH 1/2] BUG: fix potentially infinite recursion in VOID_nonzero. Fixes #3312.,1,0,0,numpy/core/src/multiarray/arraytypes.c.src,[u'2'],1,1," -2321,7 +2321,7 ;","VOID_nonzero (char *ip, PyArrayObject *ap;"
3317,2,7e58887, Edward Catmur <ecatmur@ahl.com>," Tue, 7 May 2013 17:47:38 +0100",ct: [PATCH 2/2] TST: add a test for issue #3312,1,5,0,numpy/core/tests/test_regression.py,[u'5'],5,0," -1839,6 +1839,11 ;",def test_complex64_alignment(self);
3316,1,c018cd8, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 8 May 2013 19:39:16 +0200",ct: [PATCH] BUG: Fix 0-d array special case from reductions.This channels scalars through the usual reduction machinery andmodifies it slightly to correctly support scalar reductions ofidentity-less ufuncs.,3,23,24,numpy/core/src/umath/reduction.c,[u'3'],2,1," -483,7 +483,8 ;","PyUFunc_ReduceWrapper(PyArrayObject *operand, PyArrayObject *out;"
3316,1,c018cd8, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 8 May 2013 19:39:16 +0200",ct: [PATCH] BUG: Fix 0-d array special case from reductions.This channels scalars through the usual reduction machinery andmodifies it slightly to correctly support scalar reductions ofidentity-less ufuncs.,3,23,24,numpy/core/src/umath/ufunc_object.c,[u'31'],8,23," -3684,31 +3684,16 ;","PyUFunc_GenericReduction(PyUFuncObject *ufunc, PyObject *args;"
3316,1,c018cd8, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 8 May 2013 19:39:16 +0200",ct: [PATCH] BUG: Fix 0-d array special case from reductions.This channels scalars through the usual reduction machinery andmodifies it slightly to correctly support scalar reductions ofidentity-less ufuncs.,3,23,24,numpy/core/tests/test_ufunc.py,[u'13'],13,0," -564,12 +564,25 ;",def test_scalar_reduction(self);
3313,2,72ffc68, Edward Catmur <ecatmur@ahl.com>," Tue, 7 May 2013 16:49:39 +0100",ct: [PATCH 1/2] BUG: fix potentially infinite recursion in VOID_nonzero. Fixes #3312.,1,0,0,numpy/core/src/multiarray/arraytypes.c.src,[u'2'],1,1," -2321,7 +2321,7 ;","VOID_nonzero (char *ip, PyArrayObject *ap;"
3313,2,09b25ce, Edward Catmur <ecatmur@ahl.com>," Tue, 7 May 2013 17:47:38 +0100",ct: [PATCH 2/2] TST: add a test for issue #3312,1,5,0,numpy/core/tests/test_regression.py,[u'5'],5,0," -1898,6 +1898,11 ;",def test_complex64_alignment(self);
3310,1,fcd9ef9," ""Josh Warner (Mac)"" <warner.joshua@mayo.edu>"," Mon, 6 May 2013 21:53:25 -0500",ct: [PATCH] STY: pep8 and pep257 audit.Audit numpy/lib/arraypad.py for pep8 and pep257 compliance.Also fix a few minor docstring corrections converting ] into ) orvice versa.,1,101,89,numpy/lib/arraypad.py,[u'190'],27,23," -11,18 +11,18 ; -36,7 +36,8 ; -44,7 +45,7 ; -69,11 +70,12 ; -94,14 +96,14 ; -125,22 +127,22 ; -153,7 +155,7 ; -161,7 +163,8 ; -186,7 +189,7 ; -199,20 +202,21 ; -225,20 +229,21 ; -251,21 +256,22 ; -278,21 +284,22 ; -306,19 +313,20 ; -330,7 +338,7 ; -338,7 +346,8 ; -360,7 +369,7 ; -371,7 +380,7 ; -379,7 +388,8 ; -389,11 +399,9 ; -402,12 +410,12 ; -419,7 +427,7 ; -427,16 +435,19 ; -445,12 +456,12 ; -469,7 +480,8 ; -482,7 +494,7 ; -501,12 +513,13 ; -695,44 +708,44 ; -741,7 +754,7 ; -753,9 +766,9 ; -781,4 +794,3 ;",";def _create_vector(vector, pad_tuple, before_val, after_val);def _create_vector(vector, pad_tuple, before_val, after_val);def _normalize_shape(narray, shape);def _normalize_shape(narray, shape);def _validate_lengths(narray, number_elements);def _create_stat_vectors(vector, pad_tuple, iaxis, kwargs);def _create_stat_vectors(vector, pad_tuple, iaxis, kwargs);def _create_stat_vectors(vector, pad_tuple, iaxis, kwargs);def _maximum(vector, pad_tuple, iaxis, kwargs);def _minimum(vector, pad_tuple, iaxis, kwargs);def _median(vector, pad_tuple, iaxis, kwargs);def _mean(vector, pad_tuple, iaxis, kwargs);def _constant(vector, pad_tuple, iaxis, kwargs);def _linear_ramp(vector, pad_tuple, iaxis, kwargs);def _linear_ramp(vector, pad_tuple, iaxis, kwargs);def _linear_ramp(vector, pad_tuple, iaxis, kwargs);def _reflect(vector, pad_tuple, iaxis, kwargs);def _reflect(vector, pad_tuple, iaxis, kwargs);def _reflect(vector, pad_tuple, iaxis, kwargs);def _reflect(vector, pad_tuple, iaxis, kwargs);def _symmetric(vector, pad_tuple, iaxis, kwargs);def _symmetric(vector, pad_tuple, iaxis, kwargs);def _symmetric(vector, pad_tuple, iaxis, kwargs);def _wrap(vector, pad_tuple, iaxis, kwargs);def _wrap(vector, pad_tuple, iaxis, kwargs);def _edge(vector, pad_tuple, iaxis, kwargs);def pad(array, pad_width, mode=None, **kwargs);def pad(array, pad_width, mode=None, **kwargs);def pad(array, pad_width, mode=None, **kwargs);def pad(array, pad_width, mode=None, **kwargs);"
3309,1,99cb95f, Julian Taylor <jtaylor.debian@googlemail.com>," Mon, 6 May 2013 19:24:10 +0200",ct: [PATCH] ENH: optimize byteswapping via intrinsicsByteswapping is implemented in hardware on x86 cpus which is more thandouble as fast than the existing implementation.The masked version used for 32bit plays better with compiler patternmatching so it can be optimized also by non-gcc/clang compilers.,2,24,8,numpy/core/setup_common.py,[u'5'],4,1," -101,7 +101,10 ;","def check_api_version(apiversion, codegen_dir);"
3309,1,99cb95f, Julian Taylor <jtaylor.debian@googlemail.com>," Mon, 6 May 2013 19:24:10 +0200",ct: [PATCH] ENH: optimize byteswapping via intrinsicsByteswapping is implemented in hardware on x86 cpus which is more thandouble as fast than the existing implementation.The masked version used for 32bit plays better with compiler patternmatching so it can be optimized also by non-gcc/clang compilers.,2,24,8,numpy/core/src/multiarray/ctors.c,[u'27'],20,7," -311,25 +311,38 ;","_strided_byte_swap(void *p, npy_intp stride, npy_intp n, int size;"
3308,6,c822812, Julian Taylor <jtaylor.debian@googlemail.com>," Mon, 6 May 2013 18:09:44 +0200","ct: [PATCH 1/6] ENH: use intrinsics for isnan, isfinite and isinfUse of intrinsics avoids expensive function calls in tight loops on x86cpus where these operations are implemented in hardware while stillretaining same portability.More than doubles performance of np.isnan/isinf/isfinite.",1,32,16,numpy/core/include/numpy/npy_math.h,[u'48'],24,13," -148,33 +148,49 ;",double npy_spacing(double x);
3308,6,b0ef6ae, Julian Taylor <jtaylor.debian@googlemail.com>," Tue, 7 May 2013 18:06:31 +0200",ct: [PATCH 2/6] MAINT: check for intrinsics at configure time,3,13,3,numpy/core/include/numpy/npy_math.h,[u'7'],4,3," -6,6 +6,7 ; -151,7 +152,7 ; -166,7 +167,7 ; -180,7 +181,7 ;","extern ""C"" ;double npy_spacing(double x);double npy_spacing(double x);double npy_spacing(double x);"
3308,6,b0ef6ae, Julian Taylor <jtaylor.debian@googlemail.com>," Tue, 7 May 2013 18:06:31 +0200",ct: [PATCH 2/6] MAINT: check for intrinsics at configure time,3,13,3,numpy/core/setup.py,[u'4'],4,0," -161,6 +161,10 ;",def check_funcs(funcs_name);
3308,6,b0ef6ae, Julian Taylor <jtaylor.debian@googlemail.com>," Tue, 7 May 2013 18:06:31 +0200",ct: [PATCH 2/6] MAINT: check for intrinsics at configure time,3,13,3,numpy/core/setup_common.py,[u'5'],5,0," -97,6 +97,11 ;","def check_api_version(apiversion, codegen_dir);"
3308,6,b114d1e, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 9 May 2013 14:15:57 +0200",ct: [PATCH 3/6] ENH: add possibility to add define_macros to extensions,1,19,0,numpy/distutils/misc_util.py,[u'20'],19,1," -671,7 +671,7 ; -1273,6 +1273,22 ; -1440,6 +1456,8 ;","class Configuration(object);def add_data_files(self,*files);def add_extension(self,name,sources,**kw);"
3308,6,509bc25, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 9 May 2013 14:16:16 +0200",ct: [PATCH 4/6] MAINT: mask npy_config.h include with HAVE_NPY_CONFIG_H,2,4,0,numpy/core/include/numpy/npy_math.h,[u'2'],2,0," -6,7 +6,9 ;","extern ""C"" ;"
3308,6,509bc25, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 9 May 2013 14:16:16 +0200",ct: [PATCH 4/6] MAINT: mask npy_config.h include with HAVE_NPY_CONFIG_H,2,4,0,numpy/core/setup.py,[u'2'],2,0," -606,6 +606,8 ;","def generate_api(ext, build_dir);"
3308,6,3e20690, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 9 May 2013 17:23:05 +0200",ct: [PATCH 5/6] MAINT: document intrinsic macro guards,1,4,2,numpy/core/include/numpy/npy_math.h,[u'6'],4,2," -152,8 +152,8 ; -169,6 +169,7 ; -183,6 +184,7 ;",double npy_spacing(double x);double npy_spacing(double x);double npy_spacing(double x);
3308,6,ecdad49, Julian Taylor <jtaylor.debian@googlemail.com>," Thu, 9 May 2013 17:25:57 +0200",ct: [PATCH 6/6] MAINT: document why OPTIONAL_INTRINSICS needs arguments,1,0,0,numpy/core/setup_common.py,[u'1'],1,0," -98,6 +98,7 ;","def check_api_version(apiversion, codegen_dir);"
3307,1,3d431ab, Ralf Gommers <ralf.gommers@googlemail.com>," Sat, 4 May 2013 19:28:09 +0200",ct: [PATCH] BLD: fix Bento build after umath_linalg move from core to linalg module.,4,34,29,bscript,[u'28'],28,0," -18,6 +18,12 ; -81,3 +87,25 ;",import subproces;def pre_sdist(context);
3307,1,3d431ab, Ralf Gommers <ralf.gommers@googlemail.com>," Sat, 4 May 2013 19:28:09 +0200",ct: [PATCH] BLD: fix Bento build after umath_linalg move from core to linalg module.,4,34,29,numpy/core/bscript,[u'22'],0,22," -15,9 +15,6 ; -325,25 +322,6 ;",waflib.Logs.verbose = ;def post_configure(context);
3307,1,3d431ab, Ralf Gommers <ralf.gommers@googlemail.com>," Sat, 4 May 2013 19:28:09 +0200",ct: [PATCH] BLD: fix Bento build after umath_linalg move from core to linalg module.,4,34,29,numpy/linalg/bento.info,[u'2'],1,1," -1,7 +1,7 ;",;
3307,1,3d431ab, Ralf Gommers <ralf.gommers@googlemail.com>," Sat, 4 May 2013 19:28:09 +0200",ct: [PATCH] BLD: fix Bento build after umath_linalg move from core to linalg module.,4,34,29,numpy/linalg/bscript,[u'11'],5,6," -1,5 +1,3 ; -10,18 +8,19 ;",;def pbuild(context);
3306,2,283b834, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 3 May 2013 20:36:03 +0200",ct: [PATCH 1/2] MAINT: fix typo,1,0,0,numpy/lib/format.py,[u'2'],1,1," -39,7 +39,7 ;",;
3306,2,825863c, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 3 May 2013 20:46:55 +0200",ct: [PATCH 2/2] ENH: accept file-like objects in open_memmapcloses gh-3143,2,45,8,numpy/lib/format.py,[u'21'],13,8," -473,15 +473,15 ; -519,11 +519,11 ; -550,7 +550,11 ; -562,7 +566,8 ;","def read_array(fp);def open_memmap(filename, mode='r+', dtype=None, shape=None;def open_memmap(filename, mode='r+', dtype=None, shape=None;def open_memmap(filename, mode='r+', dtype=None, shape=None;"
3306,2,825863c, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 3 May 2013 20:46:55 +0200",ct: [PATCH 2/2] ENH: accept file-like objects in open_memmapcloses gh-3143,2,45,8,numpy/lib/tests/test_format.py,[u'32'],32,0," -458,6 +458,38 ;",def test_memmap_roundtrip();
3305,1,7d80697, Arink Verma <arinkverma@gmail.com>," Sat, 4 May 2013 01:03:40 +0530",ct: [PATCH] MAINT: Remove unneeded version check from multiarray/common.c.A version check for Python >= 2.6 is no longer needed as versions < 2.6are no longer supported.,1,0,4,numpy/core/src/multiarray/common.c,[u'4'],0,4," -147,9 +147,7 ; -309,7 +307,6 ; -334,7 +331,6 ;","PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;"
3304,6,22c98f1, Arink Verma <arinkverma@gmail.com>," Fri, 3 May 2013 23:38:21 +0530",ct: [PATCH 1/6] removed the irrelevant version checks,1,0,2,numpy/core/src/multiarray/common.c,[u'2'],0,2," -147,9 +147,7 ;","PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;"
3304,6,689aa56, Arink Verma <arinkverma@gmail.com>," Fri, 3 May 2013 23:38:21 +0530",ct: [PATCH 2/6] MAINT: Remove unneeded version check from multiarray/common.c.A version check for Python >= 2.6 is no longer needed as versions < 2.6are no longer supported.,1,0,2,numpy/core/src/multiarray/common.c,[u'2'],0,2," -147,9 +147,7 ;","PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;"
3304,6,7363354, Arink Verma <arinkverma@gmail.com>," Sat, 4 May 2013 00:29:52 +0530",ct: [PATCH 3/6] MAINT: Remove unneeded version check from multiarray/common.c.A version check for Python >= 2.6 is no longer needed as versions < 2.6are no longer supported.,2,0,2,=,[u'0'],0,0,,
3304,6,7363354, Arink Verma <arinkverma@gmail.com>," Sat, 4 May 2013 00:29:52 +0530",ct: [PATCH 3/6] MAINT: Remove unneeded version check from multiarray/common.c.A version check for Python >= 2.6 is no longer needed as versions < 2.6are no longer supported.,2,0,2,numpy/core/src/multiarray/common.c,[u'2'],0,2," -307,7 +307,6 ; -332,7 +331,6 ;","PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;"
3304,6,3072edb, Arink Verma <arinkverma@gmail.com>," Sat, 4 May 2013 00:34:11 +0530",ct: [PATCH 4/6] removing = file,1,0,0,=,[u'0'],0,0,,
3304,6,b4a4751, Arink Verma <arinkverma@gmail.com>," Sat, 4 May 2013 00:35:02 +0530",ct: [PATCH 5/6] removing = file,1,4,0,numpy/core/src/multiarray/common.c,[u'4'],4,0," -147,7 +147,9 ; -307,6 +309,7 ; -331,6 +334,7 ;","PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;"
3304,6,63da5e0, Arink Verma <arinkverma@gmail.com>," Sat, 4 May 2013 00:35:55 +0530",ct: [PATCH 6/6] MAINT: Remove unneeded version check from multiarray/common.c.A version check for Python >= 2.6 is no longer needed as versions < 2.6are no longer supported.,1,0,4,numpy/core/src/multiarray/common.c,[u'4'],0,4," -147,9 +147,7 ; -309,7 +307,6 ; -334,7 +331,6 ;","PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;"
3303,3,f2072a1, Jay Bourque <jay.bourque@continuum.io>," Fri, 3 May 2013 11:17:20 -0500",ct: [PATCH 1/3] Do not return anything for python 2,1,32,20,numpy/core/src/umath/test_rational.c.src,[u'52'],20,12," -1096,20 +1096,20 ; -1117,7 +1117,7 ; -1137,13 +1137,13 ; -1151,12 +1151,12 ; -1178,18 +1178,18 ; -1234,7 +1234,7 ; -1247,12 +1247,12 ; -1261,12 +1261,12 ; -1275,12 +1275,12 ; -1296,12 +1296,24 ;",PyMODINIT_FUNC inittest_rational(void) ;PyMODINIT_FUNC inittest_rational(void) ;PyMODINIT_FUNC inittest_rational(void) ;PyMODINIT_FUNC inittest_rational(void) ;PyMODINIT_FUNC inittest_rational(void) ;PyMODINIT_FUNC inittest_rational(void) ;PyMODINIT_FUNC inittest_rational(void) ;PyMODINIT_FUNC inittest_rational(void) ;PyMODINIT_FUNC inittest_rational(void) ;PyMODINIT_FUNC inittest_rational(void) ;
3303,3,b1ca509, Jay Bourque <jay.bourque@continuum.io>," Fri, 3 May 2013 11:37:03 -0500",ct: [PATCH 2/3] Refactor previous commit,1,9,12,numpy/core/src/umath/test_rational.c.src,[u'21'],9,12," -1087,12 +1087,14 ; -1303,17 +1305,12 ;",static struct PyModuleDef moduledef = ;PyMODINIT_FUNC inittest_rational(void) ;
3303,3,caa66a7, Jay Bourque <jay.bourque@continuum.io>," Fri, 3 May 2013 14:56:56 -0500",ct: [PATCH 3/3] Fix potential reference leak,1,6,0,numpy/core/src/umath/test_rational.c.src,[u'6'],6,0," -1312,5 +1312,11 ;",fail;
3301,1,88a9b6d, Charles Harris <charlesr.harris@gmail.com>," Fri, 3 May 2013 07:10:07 -0600","ct: [PATCH] BUG: gh-3300, Fix missing return value in test_rational.c.src.Some error returns were returning nothing rather than NULL.Closes #3300.",1,7,7,numpy/core/src/umath/test_rational.c.src,[u'14'],7,7," -1042,7 +1042,7 ; -1162,7 +1162,7 ; -1193,11 +1193,11 ; -1261,12 +1261,12 ;","rational_gufunc_matrix_multiply(char **args, npy_intp *dimensions;PyMODINIT_FUNC inittest_rational(void) ;PyMODINIT_FUNC inittest_rational(void) ;PyMODINIT_FUNC inittest_rational(void) ;"
3298,2,e2d8de7, Arink Verma <arinkverma@gmail.com>," Sat, 27 Apr 2013 03:05:03 +0530",ct: [PATCH 1/2] implementation of hashtable @ PyUFunc_DefaultLegacyInnerLoopSelector,2,89,0,numpy/core/src/umath/ufunc_object.c,[u'7'],2,1," -746,11 +746,16 ; -758,6 +763,7 ; -782,7 +788,6 ;",static int get_ufunc_arguments(PyUFuncObject *ufunc;static int get_ufunc_arguments(PyUFuncObject *ufunc;static int get_ufunc_arguments(PyUFuncObject *ufunc;
3298,2,e2d8de7, Arink Verma <arinkverma@gmail.com>," Sat, 27 Apr 2013 03:05:03 +0530",ct: [PATCH 1/2] implementation of hashtable @ PyUFunc_DefaultLegacyInnerLoopSelector,2,89,0,numpy/core/src/umath/ufunc_type_resolution.c,[u'83'],28,0," -24,6 +24,24 ; -406,6 +424,8 ; -1220,6 +1240,37 ; -1233,6 +1284,7 ; -1241,6 +1293,7 ; -1252,6 +1305,35 ; -1263,6 +1345,7 ;",;PyUFunc_SimpleBinaryOperationTypeResolver(PyUFuncObject *ufunc;find_userloop(PyUFuncObject *ufunc;PyUFunc_DefaultLegacyInnerLoopSelector(PyUFuncObject *ufunc;PyUFunc_DefaultLegacyInnerLoopSelector(PyUFuncObject *ufunc;PyUFunc_DefaultLegacyInnerLoopSelector(PyUFuncObject *ufunc;PyUFunc_DefaultLegacyInnerLoopSelector(PyUFuncObject *ufunc;
3298,2,46ff6ba, Arink Verma <arinkverma@gmail.com>," Sat, 27 Apr 2013 14:56:58 +0530","ct: [PATCH 2/2] avoid uncessary floating point errors, for scalars",4,251,154,numpy/core/include/numpy/arrayobject.h,[u'11'],2,0," -4,6 +4,17 ;",;
3298,2,46ff6ba, Arink Verma <arinkverma@gmail.com>," Sat, 27 Apr 2013 14:56:58 +0530","ct: [PATCH 2/2] avoid uncessary floating point errors, for scalars",4,251,154,numpy/core/src/multiarray/common.c,[u'174'],12,10," -312,90 +312,102 ; -410,18 +422,24 ;","PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;"
3298,2,46ff6ba, Arink Verma <arinkverma@gmail.com>," Sat, 27 Apr 2013 14:56:58 +0530","ct: [PATCH 2/2] avoid uncessary floating point errors, for scalars",4,251,154,numpy/core/src/multiarray/ctors.c,[u'209'],17,10," -25,6 +25,24 ; -630,89 +648,100 ; -849,6 +878,9 ; -870,6 +902,8 ; -906,6 +940,8 ; -914,6 +950,7 ; -925,13 +962,17 ; -942,6 +983,7 ; -991,6 +1033,7 ; -1004,6 +1047,7 ; -1917,11 +1961,17 ; -1991,12 +2041,18 ; -2209,11 +2265,18 ;",";discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;PyArray_NewFromDescr(PyTypeObject *subtype, PyArray_Descr *descr, int nd;PyArray_NewFromDescr(PyTypeObject *subtype, PyArray_Descr *descr, int nd;PyArray_NewFromDescr(PyTypeObject *subtype, PyArray_Descr *descr, int nd;PyArray_NewFromDescr(PyTypeObject *subtype, PyArray_Descr *descr, int nd;PyArray_NewFromDescr(PyTypeObject *subtype, PyArray_Descr *descr, int nd;PyArray_NewFromDescr(PyTypeObject *subtype, PyArray_Descr *descr, int nd;PyArray_NewFromDescr(PyTypeObject *subtype, PyArray_Descr *descr, int nd;PyArray_NewFromDescr(PyTypeObject *subtype, PyArray_Descr *descr, int nd;PyArray_FromStructInterface(PyObject *input;PyArray_FromInterface(PyObject *origin;PyArray_FromArrayAttr(PyObject *op, PyArray_Descr *typecode, PyObject *context;"
3298,2,46ff6ba, Arink Verma <arinkverma@gmail.com>," Sat, 27 Apr 2013 14:56:58 +0530","ct: [PATCH 2/2] avoid uncessary floating point errors, for scalars",4,251,154,numpy/core/src/multiarray/multiarraymodule.c,[u'11'],1,1," -67,9 +67,14 ;","PyArray_GetPriority(PyObject *obj, double default_;"
3297,4,de30692, Benjamin Root <ben.v.root@gmail.com>," Thu, 2 May 2013 00:50:39 -0400","ct: [PATCH 1/4] Adding np.nanmean(), np.nanstd(), np.nanvar()",2,340,2,numpy/core/_methods.py,[u'79'],13,1," -7,7 +7,7 ; -61,6 +61,26 ; -101,6 +121,52 ; -111,3 +177,14 ;",";def _mean(a, axis=None, dtype=None, out=None, keepdims=False);def _var(a, axis=None, dtype=None, out=None, ddof=0;def _std(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);"
3297,4,de30692, Benjamin Root <ben.v.root@gmail.com>," Thu, 2 May 2013 00:50:39 -0400","ct: [PATCH 1/4] Adding np.nanmean(), np.nanstd(), np.nanvar()",2,340,2,numpy/core/fromnumeric.py,[u'263'],45,1," -21,7 +21,8 ; -2454,6 +2455,8 ; -2500,6 +2503,80 ; -2542,6 +2619,7 ; -2602,6 +2680,97 ; -2704,3 +2873,95 ;",";def mean(a, axis=None, dtype=None, out=None, keepdims=False);def mean(a, axis=None, dtype=None, out=None, keepdims=False);def std(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);def std(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);def var(a, axis=None, dtype=None, out=None, ddof=0;"
3297,4,a457158, Benjamin Root <ben.v.root@gmail.com>," Wed, 15 May 2013 22:09:23 -0400","ct: [PATCH 2/4] Added tests for nanmean(), nanvar(), nanstd()",1,65,0,numpy/core/tests/test_numeric.py,[u'65'],40,0," -177,18 +177,36 ; -1291,6 +1309,23 ; -1313,6 +1348,36 ;",def test_mean(self);def test_no_parameter_modification(self);def test_ddof2(self);
3297,4,f15be52, Benjamin Root <ben.v.root@gmail.com>," Sun, 19 May 2013 14:27:13 -0400",ct: [PATCH 3/4] Tests now checks the warning state,1,34,10,numpy/core/tests/test_numeric.py,[u'44'],31,9," -3,6 +3,7 ; -177,6 +178,11 ; -189,6 +195,11 ; -201,6 +212,11 ; -1319,13 +1335,16 ; -1371,13 +1390,18 ;",;def test_mean(self);def test_std(self);def test_var(self);def test_basic(self);def test_ddof2(self);
3297,4,5be45b2, Benjamin Root <ben.v.root@gmail.com>," Thu, 30 May 2013 22:38:56 -0400",ct: [PATCH 4/4] Updated comments and dtype tests in _methods.py,2,45,10,numpy/core/_methods.py,[u'29'],19,10," -7,7 +7,8 ; -46,8 +47,9 ; -62,11 +64,14 ; -86,7 +91,8 ; -101,7 +107,7 ; -123,11 +129,14 ; -142,10 +151,10 ;",";def _count_reduce_items(arr, axis);def _mean(a, axis=None, dtype=None, out=None, keepdims=False);def _var(a, axis=None, dtype=None, out=None, ddof=0;def _var(a, axis=None, dtype=None, out=None, ddof=0;def _var(a, axis=None, dtype=None, out=None, ddof=0;def _nanvar(a, axis=None, dtype=None, out=None, ddof=0;"
3297,4,5be45b2, Benjamin Root <ben.v.root@gmail.com>," Thu, 30 May 2013 22:38:56 -0400",ct: [PATCH 4/4] Updated comments and dtype tests in _methods.py,2,45,10,numpy/core/tests/test_numeric.py,[u'26'],26,0," -1334,6 +1334,19 ; -1377,6 +1390,19 ;",def setUp(self);def test_basic(self);
3296,1,54524cd, Pauli Virtanen <pav@iki.fi>," Wed, 1 May 2013 15:26:23 +0300",ct: [PATCH] BUG: sphinxext: fix sphinx extensions broken recently,3,7,9,doc/sphinxext/numpydoc/docscrape_sphinx.py,[u'2'],1,1," -1,6 +1,6 ;",;
3296,1,54524cd, Pauli Virtanen <pav@iki.fi>," Wed, 1 May 2013 15:26:23 +0300",ct: [PATCH] BUG: sphinxext: fix sphinx extensions broken recently,3,7,9,doc/sphinxext/numpydoc/tests/test_docscrape.py,[u'13'],5,8," -136,7 +136,7 ; -176,8 +176,8 ; -313,7 +313,7 ; -563,10 +563,7 ;",def test_parameters();def test_index();def test_sphinx_str();def test_unicode();
3296,1,54524cd, Pauli Virtanen <pav@iki.fi>," Wed, 1 May 2013 15:26:23 +0300",ct: [PATCH] BUG: sphinxext: fix sphinx extensions broken recently,3,7,9,doc/sphinxext/numpydoc/traitsdoc.py,[u'1'],1,0," -18,6 +18,7 ;",;
3294,1,85e5042, Matthew Brett <matthew.brett@gmail.com>," Tue, 30 Apr 2013 13:13:23 -0700",ct: [PATCH] DOC: expanding documentation of index orderingTrying to separate the ideas of index ordering and memory layout.As discussed on the mailing list,1,57,20,numpy/core/fromnumeric.py,[u'77'],35,12," -133,16 +133,23 ; -157,12 +164,39 ; -176,7 +210,6 ; -1107,16 +1140,20 ; -1131,11 +1168,11 ;","def reshape(a, newshape, order='C');def reshape(a, newshape, order='C');def reshape(a, newshape, order='C');def ravel(a, order='C');def ravel(a, order='C');"
3293,4,018d711, =?UTF-8?q?Andr=C3=A9=20Gaul?= <gaul@web-yard.de>," Tue, 30 Apr 2013 15:21:35 +0200",ct: [PATCH 1/4] ENH: allow 0-by-0 in linalg.inv and linalg.solveAllows 0-by-0 matrix in linalg.inv and linalg.solve. The inverse of the 0-by-0matrix is again the 0-by-0 inverse. Closes #3291.,1,6,2,numpy/linalg/linalg.py,[u'8'],6,2," -349,10 +349,12 ; -491,9 +493,11 ;","def solve(a, b);def inv(a);"
3293,4,3ca93f1, =?UTF-8?q?Andr=C3=A9=20Gaul?= <gaul@web-yard.de>," Thu, 2 May 2013 16:24:28 +0200","ct: [PATCH 2/4] TST: linalg: add tests for 0-by-0 in inv and solveThese tests differ from test_empty sinceatleast_2d(array([], dtype = double)) returns an array with shape (1,0).",1,9,2,numpy/linalg/tests/test_linalg.py,[u'11'],9,2," -146,6 +146,13 ; -190,7 +197,7 ; -204,7 +211,7 ;",def test_cdouble_nsq_2_2(self);def identity_like_generalized(a);def check(dtype);
3293,4,120af1c, =?UTF-8?q?Andr=C3=A9=20Gaul?= <gaul@web-yard.de>," Thu, 2 May 2013 16:51:04 +0200",ct: [PATCH 3/4] ENH: linalg: make use of type calc in inv/solveFix result type handling in inv/solve as suggested in discussion of #3293.,1,4,4,numpy/linalg/linalg.py,[u'8'],4,4," -352,10 +352,10 ; -495,10 +495,10 ;","def solve(a, b);def inv(a);"
3293,4,9c8695c, =?UTF-8?q?Andr=C3=A9=20Gaul?= <gaul@web-yard.de>," Sun, 5 May 2013 20:30:23 +0200",ct: [PATCH 4/4] STY: linalg tests: break long lines,1,4,2,numpy/linalg/tests/test_linalg.py,[u'6'],4,2," -197,7 +197,8 ; -211,7 +212,8 ;",def identity_like_generalized(a);def check(dtype);
3289,1,c7c4d40, Robert Kern <rkern@enthought.com>," Mon, 29 Apr 2013 16:27:25 +0100",ct: [PATCH] BUG: Fix some README links to point to www.numpy.orgFixes #3288,2,5,4,README.txt,[u'4'],1,3," -10,7 +10,7 ; -23,5 +23,3 ;",It derives from the old Numeric code base and can be used as a replacement for ;The most current development version is always available from ou;
3289,1,c7c4d40, Robert Kern <rkern@enthought.com>," Mon, 29 Apr 2013 16:27:25 +0100",ct: [PATCH] BUG: Fix some README links to point to www.numpy.orgFixes #3288,2,5,4,tools/osxbuild/docs/README.txt,[u'5'],4,1," -10,12 +10,15 ;",It derives from the old Numeric code base and can be used as a replacement for ;
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/core/code_generators/generate_umath.py,[u'6'],2,2," -836,8 +836,7 ; -902,8 +901,7 ;",def make_arrays(funcdict);def make_arrays(funcdict);
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/core/fromnumeric.py,[u'14'],5,5," -1552,7 +1552,7 ; -1953,7 +1953,7 ; -2024,7 +2024,7 ; -2154,7 +2154,7 ; -2527,7 +2527,7 ; -2629,7 +2629,7 ; -2732,7 +2732,7 ;","def sum(a, axis=None, dtype=None, out=None, keepdims=False);def amax(a, axis=None, out=None, keepdims=False);def amin(a, axis=None, out=None, keepdims=False);def prod(a, axis=None, dtype=None, out=None, keepdims=False);def mean(a, axis=None, dtype=None, out=None, keepdims=False);def std(a, axis=None, dtype=None, out=None, ddof=0, keepdims=False);def var(a, axis=None, dtype=None, out=None, ddof=0;"
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/core/records.py,[u'2'],1,1," -173,7 +173,7 ;","def _setfieldnames(self, names, titles);"
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/core/tests/test_api.py,[u'2'],1,1," -88,7 +88,7 ;",def test_array_astype();
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/core/tests/test_numeric.py,[u'8'],3,3," -1270,14 +1270,14 ; -1409,7 +1409,7 ;","def test_equal_nan(self);def check_like_function(self, like_function, value);"
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/ctypeslib.py,[u'2'],1,1," -355,7 +355,7 ;",def prep_array(array_type);
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/distutils/ccompiler.py,[u'2'],1,1," -403,7 +403,7 ;","def matcher(self, version_string);"
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/distutils/conv_template.py,[u'2'],1,1," -120,7 +120,7 ;","def parse_structure(astr, level);"
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/distutils/cpuinfo.py,[u'4'],1,2," -82,7 +82,7 ; -499,7 +499,7 ;","def __getattr__(self,name);def __init__(self);"
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/distutils/fcompiler/ibm.py,[u'3'],1,1," -45,8 +45,7 ;","def get_version(self,*args,**kwds);"
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/distutils/from_template.py,[u'4'],1,2," -65,13 +65,13 ;",def parse_structure(astr);
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/doc/__init__.py,[u'5'],2,2," -4,9 +4,8 ;",;
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/f2py/auxfuncs.py,[u'42'],14,14," -491,9 +491,9 ; -598,7 +598,7 ; -607,9 +607,9 ; -618,14 +618,14 ; -633,15 +633,15 ; -654,7 +654,7 ; -671,9 +671,9 ; -681,13 +681,13 ; -695,7 +695,7 ; -703,7 +703,7 ;","def getmultilineblock(rout,blockname,comment=1,counter=0);def gentitle(name);def stripcomma(s);def replace(str,d,defaultsep='');def dictappend(rd,ar);def dictappend(rd,ar);def applyrules(rules,d,var={});def applyrules(rules,d,var={});def applyrules(rules,d,var={});def applyrules(rules,d,var={});"
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/f2py/cb_rules.py,[u'10'],3,4," -466,7 +466,7 ; -482,7 +482,7 ; -499,10 +499,10 ; -515,7 +515,7 ;","def buildcallback(rout,um);def buildcallback(rout,um);def buildcallback(rout,um);def buildcallback(rout,um);"
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/f2py/cfuncs.py,[u'8'],3,3," -1128,10 +1128,10 ; -1160,7 +1160,7 ; -1176,7 +1176,7 ;","def buildcfuncs();def append_needs(need,flag=1);def append_needs(need,flag=1);"
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/f2py/common_rules.py,[u'2'],1,1," -121,7 +121,7 ;","def dadd(line,s=doc): s[0] = '%s\n%s'%(s[0],line;"
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/f2py/crackfortran.py,[u'29'],9,10," -297,7 +297,7 ; -381,7 +381,7 ; -1167,7 +1167,7 ; -1522,7 +1522,7 ; -1559,7 +1559,7 ; -1571,7 +1571,7 ; -1819,12 +1819,12 ; -2042,7 +2042,7 ; -2458,14 +2458,15 ;","def readfortrancode(ffile,dowithline=show,istop=1);def readfortrancode(ffile,dowithline=show,istop=1);def analyzeline(m,case,line);def postcrack2(block,tab='',param_map=None);def postcrack(block,args=None,tab='');def postcrack(block,args=None,tab='');def getarrlen(dl,args,star='*');def get_parameters(vars, global_params={});def analyzeargs(block);"
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/f2py/f2py2e.py,[u'2'],1,1," -339,7 +339,7 ;","def dict_append(d_out,d_in);"
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/f2py/f90mod_rules.py,[u'4'],1,2," -119,7 +119,7 ; -145,7 +145,7 ;","def iadd(line,s=ihooks): s[0] = '%s\n%s'%(s[0],line;def iadd(line,s=ihooks): s[0] = '%s\n%s'%(s[0],line;"
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/f2py/rules.py,[u'10'],3,4," -1388,9 +1388,9 ; -1415,15 +1415,15 ;",def buildapi(rout);def buildapi(rout);
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/lib/arrayterator.py,[u'2'],1,1," -188,7 +188,7 ;",def __iter__(self);
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/lib/format.py,[u'3'],1,1," -344,8 +344,7 ;",def read_array_header_1_0(fp);
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/lib/function_base.py,[u'3'],1,1," -1273,8 +1273,7 ;",def unique(x);
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/lib/index_tricks.py,[u'6'],2,2," -244,7 +244,7 ; -252,7 +252,7 ; -627,7 +627,7 ;","def __getitem__(self,key);def __getitem__(self,key);def __init__(self, maketuple);"
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/lib/npyio.py,[u'2'],1,1," -1025,7 +1025,7 ;","def savetxt(fname, X, fmt='%.18e', delimiter=' ', newline='\n', header='';"
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/lib/polynomial.py,[u'2'],1,1," -905,7 +905,7 ;","def _raise_power(astr, wrap=70);"
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/lib/shape_base.py,[u'10'],3,4," -643,10 +643,9 ; -656,10 +655,9 ;",def get_array_prepare(*args);def get_array_wrap(*args);
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/lib/type_check.py,[u'2'],1,1," -58,7 +58,7 ;","def mintypecode(typechars,typeset='GDFgdf',default='d');"
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/lib/utils.py,[u'4'],1,2," -435,7 +435,7 ; -584,7 +584,7 ;","def _makenamedict(module='numpy');def info(object=None,maxwidth=76,output=sys.stdout,toplevel='numpy');"
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/linalg/lapack_lite/clapack_scrub.py,[u'2'],1,1," -32,7 +32,7 ;","def runScanner(data, scanner_class, lexicon=None);"
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/linalg/lapack_lite/make_lite.py,[u'5'],2,2," -126,7 +126,7 ; -151,8 +151,7 ;","def resolveAllDependencies(self);def _newFortranRoutine(self, rname, filename);"
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/ma/extras.py,[u'8'],3,3," -1435,14 +1435,14 ; -1450,12 +1450,12 ;","def __init__(self, axis=0);def __getitem__(self, key);"
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/numarray/alter_code1.py,[u'2'],1,1," -81,7 +81,7 ;","def changeimports(fstr, name, newname);"
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/numarray/functions.py,[u'2'],1,1," -222,7 +222,7 ;","def fromfile(infile, type=None, shape=None, sizing=STRICT;"
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/numarray/session.py,[u'4'],1,2," -120,7 +120,7 ; -326,7 +326,7 ;","def _callers_modules();def load(variables=None, file=SAVEFILE, dictionary=None, verbose=False);"
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/oldnumeric/alter_code1.py,[u'2'],1,1," -88,7 +88,7 ;","def changeimports(fstr, name, newname);"
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/oldnumeric/alter_code2.py,[u'2'],1,1," -54,7 +54,7 ;","def changeimports(fstr, name, newname);"
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,numpy/oldnumeric/fix_default_axis.py,[u'2'],1,1," -185,7 +185,7 ;","def _import_change(fstr, names);"
3281,1,dec4f4b, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 21:31:12 -0600","ct: [PATCH] MAINT: Apply 2to3 idioms fixer.The idioms fixer makes the following replacements.1) int <- bool2) comparison or identity of types <- isinstance3) a.sort() <- sorted(a)There were two problems that needed to be dealt with after theapplication of the fixer. First, the replacement of comparison oridentity of types by isinstance was not always correct.  The isinstancefunction returns true for subtypes whereas many of the places where thefixer made a substitution needed to check for exact type equality.Second, the sorted function was applied to arrays, but because it treatsthem as iterators and constructs a sorted list from the result, that isthe wrong thing to do.Closes #3062.",39,109,118,tools/c_coverage/c_coverage_report.py,[u'3'],1,1," -110,8 +110,7 ;","def write_html(self, root);"
3280,1,0a9da01, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 26 Apr 2013 23:26:58 +0200",ct: [PATCH] BUG: np.insert must copy index arrayOtherwise it would do in-place changes to it. Fixes gh-3279.,2,6,0,numpy/lib/function_base.py,[u'3'],2,1," -3694,7 +3694,8 ;","def insert(arr, obj, values, axis=None);"
3280,1,0a9da01, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 26 Apr 2013 23:26:58 +0200",ct: [PATCH] BUG: np.insert must copy index arrayOtherwise it would do in-place changes to it. Fixes gh-3279.,2,6,0,numpy/lib/tests/test_function_base.py,[u'4'],4,0," -231,6 +231,10 ;",class SubClass(np.ndarray);
3277,4,ab3aa11, Jay Bourque <jay.bourque@continuum.io>," Wed, 24 Apr 2013 21:42:15 -0500","ct: [PATCH 1/4] Fix for astype('S') string truncate issueCalling astype('S') for an array of string objects results in a string array where dtype='S64', even if the original string objects are longer than 64 characters. Add call to GetParamsFromObject() to determine maximum string object length, and use that as string dtype size.",2,33,0,numpy/core/src/multiarray/convert_datatype.c,[u'26'],26,0," -141,6 +141,12 ; -220,6 +226,26 ;","PyArray_AdaptFlexibleDType(PyObject *data_obj, PyArray_Descr *data_dtype;PyArray_AdaptFlexibleDType(PyObject *data_obj, PyArray_Descr *data_dtype;"
3277,4,ab3aa11, Jay Bourque <jay.bourque@continuum.io>," Wed, 24 Apr 2013 21:42:15 -0500","ct: [PATCH 1/4] Fix for astype('S') string truncate issueCalling astype('S') for an array of string objects results in a string array where dtype='S64', even if the original string objects are longer than 64 characters. Add call to GetParamsFromObject() to determine maximum string object length, and use that as string dtype size.",2,33,0,numpy/core/tests/test_api.py,[u'7'],7,0," -84,6 +84,13 ;",def test_array_astype();
3277,4,69e9e63, Jay Bourque <jay.bourque@continuum.io>," Thu, 25 Apr 2013 13:38:16 -0500",ct: [PATCH 2/4] Add support for unicode strings,2,29,13,numpy/core/src/multiarray/convert_datatype.c,[u'35'],18,10," -226,22 +226,33 ;","PyArray_AdaptFlexibleDType(PyObject *data_obj, PyArray_Descr *data_dtype;"
3277,4,69e9e63, Jay Bourque <jay.bourque@continuum.io>," Thu, 25 Apr 2013 13:38:16 -0500",ct: [PATCH 2/4] Add support for unicode strings,2,29,13,numpy/core/tests/test_api.py,[u'7'],5,1," -4,6 +4,7 ; -86,10 +87,14 ;",;def test_array_astype();
3277,4,216ddba, Jay Bourque <jay.bourque@continuum.io>," Thu, 25 Apr 2013 17:00:06 -0500",ct: [PATCH 3/4] Add tests for strings shorter than 64 characters,2,11,0,numpy/core/src/multiarray/convert_datatype.c,[u'2'],1,1," -236,7 +236,7 ;","PyArray_AdaptFlexibleDType(PyObject *data_obj, PyArray_Descr *data_dtype;"
3277,4,216ddba, Jay Bourque <jay.bourque@continuum.io>," Thu, 25 Apr 2013 17:00:06 -0500",ct: [PATCH 3/4] Add tests for strings shorter than 64 characters,2,11,0,numpy/core/tests/test_api.py,[u'10'],10,0," -96,6 +96,16 ;",def test_array_astype();
3277,4,29cda37, Charles Harris <charlesr.harris@gmail.com>," Fri, 26 Apr 2013 09:59:14 -0600",ct: [PATCH 4/4] MAINT: Fix tests for 2to3 and Python < 2.6.Use asbytes instead of 'b' and the 'u' string prefix instead of sixu.,1,5,5,numpy/core/tests/test_api.py,[u'10'],5,5," -4,7 +4,7 ; -87,21 +87,21 ;",;def test_array_astype();
3275,2,f245023, Han Genuit <hangenuit@gmail.com>," Sat, 15 Sep 2012 16:48:53 +0200",ct: [PATCH 1/2] BUG: Concatenate with axis None should work regardless of matching array shapes,1,16,17,numpy/core/src/multiarray/multiarraymodule.c,[u'33'],14,14," -469,7 +469,8 ; -480,19 +481,17 ; -514,15 +513,14 ; -540,9 +538,10 ; -553,7 +552,7 ;","PyArray_ConcatenateFlattenedArrays(int narrays, PyArrayObject **arrays;PyArray_ConcatenateFlattenedArrays(int narrays, PyArrayObject **arrays;PyArray_ConcatenateFlattenedArrays(int narrays, PyArrayObject **arrays;PyArray_ConcatenateFlattenedArrays(int narrays, PyArrayObject **arrays;PyArray_ConcatenateFlattenedArrays(int narrays, PyArrayObject **arrays;"
3275,2,bd869d0, Han Genuit <hangenuit@gmail.com>," Sat, 15 Sep 2012 17:47:22 +0200",ct: [PATCH 2/2] TST: Add test for concatenate with None-axisConflicts:	numpy/core/tests/test_shape_base.py,1,15,0,numpy/core/tests/test_shape_base.py,[u'16'],15,1," -1,7 +1,7 ; -209,6 +209,20 ;",;def test_concatenate_sloppy0();
3272,1,a09fc33, David Cournapeau <cournape@gmail.com>," Tue, 23 Apr 2013 19:48:00 +0100","ct: [PATCH] ENH: remove obsolete ifort flags, ensure generated binaries work everywhere.",1,5,14,numpy/distutils/fcompiler/intel.py,[u'19'],5,14," -3,7 +3,6 ; -163,21 +162,10 ; -204,6 +192,9 ;",;def get_flags_debug(self);class IntelEM64VisualFCompiler(IntelVisualFCompiler);
3271,2,5866d03, Charles Harris <charlesr.harris@gmail.com>," Thu, 25 Apr 2013 10:25:47 -0600","ct: [PATCH 1/2] MAINT: Update INSTALL.txt after dropping Python 2.4, 2.5.Make the required Python versions >= 2.6 or 3.2. Remove text specificto earlier Python versions.",1,4,8,INSTALL.txt,[u'12'],4,8," -15,7 +15,8 ; -127,13 +128,8 ;","PREREQUISITE;fragile, and often segfault on invalid C code). The main drawback is that n;"
3271,2,7019591, Charles Harris <charlesr.harris@gmail.com>," Thu, 25 Apr 2013 15:27:09 -0600",ct: [PATCH 2/2] MAINT: Improve INSTALL.txt wording and wrap lines at 75 characters.,1,37,34,INSTALL.txt,[u'71'],32,29," -40,10 +40,10 ; -59,11 +59,11 ; -71,65 +71,68 ;",Fortran ABI mismatc;To build with gfortran;Building with ATLAS suppor;
3270,3,f231558, Jay Bourque <jay.bourque@continuum.io>," Wed, 24 Apr 2013 21:42:15 -0500","ct: [PATCH 1/3] Fix for astype('S') string truncate issueCalling astype('S') for an array of string objects results in a string array where dtype='S64', even if the original string objects are longer than 64 characters. Add call to GetParamsFromObject() to determine maximum string object length, and use that as string dtype size.",2,33,0,numpy/core/src/multiarray/convert_datatype.c,[u'26'],26,0," -141,6 +141,12 ; -220,6 +226,26 ;","PyArray_AdaptFlexibleDType(PyObject *data_obj, PyArray_Descr *data_dtype;PyArray_AdaptFlexibleDType(PyObject *data_obj, PyArray_Descr *data_dtype;"
3270,3,f231558, Jay Bourque <jay.bourque@continuum.io>," Wed, 24 Apr 2013 21:42:15 -0500","ct: [PATCH 1/3] Fix for astype('S') string truncate issueCalling astype('S') for an array of string objects results in a string array where dtype='S64', even if the original string objects are longer than 64 characters. Add call to GetParamsFromObject() to determine maximum string object length, and use that as string dtype size.",2,33,0,numpy/core/tests/test_api.py,[u'7'],7,0," -89,6 +89,13 ;",def test_array_astype();
3270,3,c6df6b1, Jay Bourque <jay.bourque@continuum.io>," Thu, 25 Apr 2013 13:38:16 -0500",ct: [PATCH 2/3] Add support for unicode strings,2,29,13,numpy/core/src/multiarray/convert_datatype.c,[u'35'],18,10," -226,22 +226,33 ;","PyArray_AdaptFlexibleDType(PyObject *data_obj, PyArray_Descr *data_dtype;"
3270,3,c6df6b1, Jay Bourque <jay.bourque@continuum.io>," Thu, 25 Apr 2013 13:38:16 -0500",ct: [PATCH 2/3] Add support for unicode strings,2,29,13,numpy/core/tests/test_api.py,[u'7'],5,1," -6,6 +6,7 ; -91,10 +92,14 ;",;def test_array_astype();
3270,3,496f683, Jay Bourque <jay.bourque@continuum.io>," Thu, 25 Apr 2013 17:00:06 -0500",ct: [PATCH 3/3] Add tests for strings shorter than 64 characters,2,11,0,numpy/core/src/multiarray/convert_datatype.c,[u'2'],1,1," -236,7 +236,7 ;","PyArray_AdaptFlexibleDType(PyObject *data_obj, PyArray_Descr *data_dtype;"
3270,3,496f683, Jay Bourque <jay.bourque@continuum.io>," Thu, 25 Apr 2013 17:00:06 -0500",ct: [PATCH 3/3] Add tests for strings shorter than 64 characters,2,11,0,numpy/core/tests/test_api.py,[u'10'],10,0," -101,6 +101,16 ;",def test_array_astype();
3269,1,11b2fcf, Charles Harris <charlesr.harris@gmail.com>," Wed, 24 Apr 2013 19:42:52 -0600",ct: [PATCH] MAINT: Remove the tools/py3tool.py file.The tools/py3tool.py file was responsible for running 2to3. Now that2to3 is no longer run it is not needed and can be removed.,1,0,301,tools/py3tool.py,[u'301'],0,55," -1,301 +0,0 ;",;
3268,1,c92d924, Charles Harris <charlesr.harris@gmail.com>," Sun, 21 Apr 2013 22:52:15 -0600",ct: [PATCH] MAINT: Remove unneeded version checks.Now that only Python versions 2.6-2.7 and 3.2-3.3 are supportedsome version checks are no longer needed. This patch removes themso as to clean up the code.,13,639,826,numpy/core/code_generators/genapi.py,[u'3'],1,1," -15,8 +15,7 ;",;
3268,1,c92d924, Charles Harris <charlesr.harris@gmail.com>," Sun, 21 Apr 2013 22:52:15 -0600",ct: [PATCH] MAINT: Remove unneeded version checks.Now that only Python versions 2.6-2.7 and 3.2-3.3 are supportedsome version checks are no longer needed. This patch removes themso as to clean up the code.,13,639,826,numpy/core/defchararray.py,[u'588'],12,17," -375,69 +375,42 ; -484,6 +457,7 ; -529,6 +503,7 ; -563,6 +538,7 ; -606,6 +582,7 ; -640,6 +617,7 ; -674,10 +652,6 ; -901,68 +875,41 ; -999,6 +946,7 ; -1055,40 +1003,41 ; -1121,6 +1070,7 ; -1152,6 +1102,7 ; -1180,140 +1131,113 ; -1358,6 +1282,7 ; -1391,6 +1316,7 ; -1419,6 +1345,7 ; -1449,6 +1376,7 ; -1496,6 +1424,7 ; -1532,6 +1461,7 ; -1570,6 +1500,7 ; -1605,6 +1536,7 ; -1640,6 +1572,7 ; -1669,6 +1602,7 ; -1699,6 +1633,7 ; -2079,28 +2014,16 ; -2285,29 +2208,17 ; -2333,16 +2244,15 ; -2381,53 +2291,39 ;","def capitalize(a);def count(a, sub, start=0, end=None);def decode(a, encoding=None, errors=None);def encode(a, encoding=None, errors=None);def endswith(a, suffix, start=0, end=None);def expandtabs(a, tabsize=8);def find(a, sub, start=0, end=None);def join(sep, seq);def lower(a);def lstrip(a, chars=None);def replace(a, old, new, count=None);def rfind(a, sub, start=0, end=None);def rindex(a, sub, start=0, end=None);def rstrip(a, chars=None);def split(a, sep=None, maxsplit=None);def splitlines(a, keepends=None);def startswith(a, prefix, start=0, end=None);def strip(a, chars=None);def swapcase(a);def title(a);def translate(a, table, deletechars=None);def upper(a);def zfill(a, width);def isnumeric(a);def capitalize(self);def join(self, seq);def lstrip(self, chars=None);def rindex(self, sub, start=0, end=None);"
3268,1,c92d924, Charles Harris <charlesr.harris@gmail.com>," Sun, 21 Apr 2013 22:52:15 -0600",ct: [PATCH] MAINT: Remove unneeded version checks.Now that only Python versions 2.6-2.7 and 3.2-3.3 are supportedsome version checks are no longer needed. This patch removes themso as to clean up the code.,13,639,826,numpy/core/memmap.py,[u'12'],1,1," -248,14 +248,10 ;","def __new__(subtype, filename, dtype=uint8, mode='r+', offset=0;"
3268,1,c92d924, Charles Harris <charlesr.harris@gmail.com>," Sun, 21 Apr 2013 22:52:15 -0600",ct: [PATCH] MAINT: Remove unneeded version checks.Now that only Python versions 2.6-2.7 and 3.2-3.3 are supportedsome version checks are no longer needed. This patch removes themso as to clean up the code.,13,639,826,numpy/core/setup.py,[u'32'],1,1," -154,11 +154,10 ; -222,19 +221,16 ;",def check_funcs(funcs_name);def _add_decl(f);
3268,1,c92d924, Charles Harris <charlesr.harris@gmail.com>," Sun, 21 Apr 2013 22:52:15 -0600",ct: [PATCH] MAINT: Remove unneeded version checks.Now that only Python versions 2.6-2.7 and 3.2-3.3 are supportedsome version checks are no longer needed. This patch removes themso as to clean up the code.,13,639,826,numpy/core/tests/test_defchararray.py,[u'26'],1,1," -395,13 +395,12 ; -437,13 +436,12 ;",def test_lstrip(self);def test_rjust(self);
3268,1,c92d924, Charles Harris <charlesr.harris@gmail.com>," Sun, 21 Apr 2013 22:52:15 -0600",ct: [PATCH] MAINT: Remove unneeded version checks.Now that only Python versions 2.6-2.7 and 3.2-3.3 are supportedsome version checks are no longer needed. This patch removes themso as to clean up the code.,13,639,826,numpy/core/tests/test_deprecations.py,[u'2'],0,1," -86,7 +86,6 ; -159,7 +158,6 ;",def tearDown(self);def tearDown(self);
3268,1,c92d924, Charles Harris <charlesr.harris@gmail.com>," Sun, 21 Apr 2013 22:52:15 -0600",ct: [PATCH] MAINT: Remove unneeded version checks.Now that only Python versions 2.6-2.7 and 3.2-3.3 are supportedsome version checks are no longer needed. This patch removes themso as to clean up the code.,13,639,826,numpy/core/tests/test_dtype.py,[u'2'],1,1," -440,7 +440,7 ;",def test_complex_dtype_repr(self);
3268,1,c92d924, Charles Harris <charlesr.harris@gmail.com>," Sun, 21 Apr 2013 22:52:15 -0600",ct: [PATCH] MAINT: Remove unneeded version checks.Now that only Python versions 2.6-2.7 and 3.2-3.3 are supportedsome version checks are no longer needed. This patch removes themso as to clean up the code.,13,639,826,numpy/core/tests/test_multiarray.py,[u'678'],17,17," -2497,369 +2497,367 ;",def test_usigned_shortshort(self);
3268,1,c92d924, Charles Harris <charlesr.harris@gmail.com>," Sun, 21 Apr 2013 22:52:15 -0600",ct: [PATCH] MAINT: Remove unneeded version checks.Now that only Python versions 2.6-2.7 and 3.2-3.3 are supportedsome version checks are no longer needed. This patch removes themso as to clean up the code.,13,639,826,numpy/core/tests/test_print.py,[u'81'],2,2," -24,11 +24,7 ; -72,11 +68,7 ; -93,44 +85,24 ; -167,11 +139,7 ; -183,11 +151,7 ; -204,7 +168,6 ;",def check_float_type(tp);def check_complex_type(tp);def test_complex_types();def check_float_type_print(tp);def check_complex_type_print(tp);def test_complex_type_print();
3268,1,c92d924, Charles Harris <charlesr.harris@gmail.com>," Sun, 21 Apr 2013 22:52:15 -0600",ct: [PATCH] MAINT: Remove unneeded version checks.Now that only Python versions 2.6-2.7 and 3.2-3.3 are supportedsome version checks are no longer needed. This patch removes themso as to clean up the code.,13,639,826,numpy/core/tests/test_umath.py,[u'13'],0,1," -447,9 +447,6 ; -916,12 +913,6 ; -936,10 +927,6 ;",def test_ldexp(self);def test_branch_cuts_failing(self);def test_against_cmath(self);
3268,1,c92d924, Charles Harris <charlesr.harris@gmail.com>," Sun, 21 Apr 2013 22:52:15 -0600",ct: [PATCH] MAINT: Remove unneeded version checks.Now that only Python versions 2.6-2.7 and 3.2-3.3 are supportedsome version checks are no longer needed. This patch removes themso as to clean up the code.,13,639,826,numpy/lib/npyio.py,[u'3'],1,1," -129,8 +129,7 ;","def __getattribute__(self, key);"
3268,1,c92d924, Charles Harris <charlesr.harris@gmail.com>," Sun, 21 Apr 2013 22:52:15 -0600",ct: [PATCH] MAINT: Remove unneeded version checks.Now that only Python versions 2.6-2.7 and 3.2-3.3 are supportedsome version checks are no longer needed. This patch removes themso as to clean up the code.,13,639,826,numpy/lib/utils.py,[u'15'],1,1," -84,17 +84,10 ;",def get_numarray_include(type=None);
3268,1,c92d924, Charles Harris <charlesr.harris@gmail.com>," Sun, 21 Apr 2013 22:52:15 -0600",ct: [PATCH] MAINT: Remove unneeded version checks.Now that only Python versions 2.6-2.7 and 3.2-3.3 are supportedsome version checks are no longer needed. This patch removes themso as to clean up the code.,13,639,826,numpy/polynomial/polyutils.py,[u'10'],0,1," -70,16 +70,6 ;",class PolyBase(object) ;
3266,3,b4180e3, Charles Harris <charlesr.harris@gmail.com>," Sun, 21 Apr 2013 21:26:44 -0600",ct: [PATCH 1/3] 2to3: Stop using 2to3 and remove the tools/py3tool.py file.The same code base now supports python versions 2.6-2.7 and 3.2-3.3.Closes #3247.,1,0,28,setup.py,[u'29'],1,28," -154,34 +154,7 ;","def configuration(parent_package='',top_path=None);"
3266,3,ede7dc4, Charles Harris <charlesr.harris@gmail.com>," Sun, 21 Apr 2013 21:42:43 -0600",ct: [PATCH 2/3] DOC: Document that the 2to3 fixer is no longer used.,1,5,0,doc/release/1.8.0-notes.rst,[u'5'],5,0," -7,6 +7,11 ;",This release supports  Python 2.6 -2.7 and 3.2 - 3.3;
3266,3,d6f6268, Charles Harris <charlesr.harris@gmail.com>," Sun, 21 Apr 2013 21:51:59 -0600","ct: [PATCH 3/3] MAINT: Use from future_builtins zip and map.For Python versions 2.6 and 2.7 the iterator forms of zip and mapcan be imported from future_builtins. That is done here so as toavoid using itertools.{izip, imap}.",2,7,10,numpy/lib/npyio.py,[u'5'],2,3," -29,10 +29,9 ; -1614,7 +1613,7 ;",";def genfromtxt(fname, dtype=float, comments='#', delimiter=None;"
3266,3,d6f6268, Charles Harris <charlesr.harris@gmail.com>," Sun, 21 Apr 2013 21:51:59 -0600","ct: [PATCH 3/3] MAINT: Use from future_builtins zip and map.For Python versions 2.6 and 2.7 the iterator forms of zip and mapcan be imported from future_builtins. That is done here so as toavoid using itertools.{izip, imap}.",2,7,10,numpy/lib/recfunctions.py,[u'12'],5,7," -17,10 +17,8 ; -293,7 +291,7 ; -418,7 +416,7 ; -447,7 +445,7 ;",;def sentinel(counter=([fill_value] * (len(seqarrays) - 1)).pop);def merge_arrays(seqarrays;def merge_arrays(seqarrays;
3265,2,4e6b48e, jamestwebber <jamestwebber@gmail.com>," Sat, 20 Apr 2013 11:50:11 -0700","ct: [PATCH 1/2] Update masked array copy to preserve array orderUsing 'K' to try to match array order, fixes https://github.com/numpy/numpy/issues/3156",1,2,2,numpy/ma/core.py,[u'4'],2,2," -3438,12 +3438,12 ;","def filled(self, fill_value=None);"
3265,2,abaf953, jamestwebber <jamestwebber@gmail.com>," Sat, 20 Apr 2013 12:40:22 -0700",ct: [PATCH 2/2] Adding a test for #3265Test to ensure that MaskedArray.filled() doesn't change the order of the array.This test is a little messy because there are problems constructing an F-contiguous masked array in the first place. I had to explicitly pass in F-contiguous arrays for data and mask.,1,9,0,numpy/ma/tests/test_core.py,[u'9'],9,0," -538,6 +538,15 ;",def test_filled_w_nested_dtype(self);
3264,1,e3cd6a4, endolith <endolith@gmail.com>," Fri, 19 Apr 2013 22:37:01 -0300","ct: [PATCH] DOC: Change example to demonstrate function""a * 0.5"" example might as well be new_func(a) directly, it doesn't demonstrate the purpose of apply_along_axis().",1,5,8,numpy/lib/shape_base.py,[u'13'],5,8," -55,14 +55,11 ;","def apply_along_axis(func1d,axis,arr,*args);"
3262,8,6d7c051, andrew giessel <andrew.giessel@gmail.com>," Thu, 18 Apr 2013 11:13:10 -0400",ct: [PATCH 1/8] iterdim() function in numeric.py,1,26,0,numpy/core/numeric.py,[u'27'],26,1," -40,7 +40,7 ; -2183,7 +2183,32 ;",";def array_equiv(a1, a2);"
3262,8,be7539e, andrew giessel <andrew.giessel@gmail.com>," Thu, 18 Apr 2013 11:25:19 -0400",ct: [PATCH 2/8] iterdim() tests,1,33,0,numpy/core/tests/test_numeric.py,[u'33'],33,0," -1525,6 +1525,39 ;",def test_roll_empty(self);
3262,8,94935a3, andrew giessel <andrew.giessel@gmail.com>," Thu, 18 Apr 2013 11:32:57 -0400",ct: [PATCH 3/8] iterdim(): cast input as array,1,0,0,numpy/core/numeric.py,[u'1'],1,0," -2201,6 +2201,7 ;","def iterdim(a, axis=0);"
3262,8,426b24d, andrew giessel <andrew.giessel@gmail.com>," Thu, 18 Apr 2013 11:34:27 -0400",ct: [PATCH 4/8] iterdim() casting namespace bug,1,0,0,numpy/core/numeric.py,[u'2'],1,1," -2201,7 +2201,7 ;","def iterdim(a, axis=0);"
3262,8,0b3bb86, andrew giessel <andrew.giessel@gmail.com>," Thu, 18 Apr 2013 11:46:02 -0400",ct: [PATCH 5/8] iterdim() test bugs,1,11,9,numpy/core/tests/test_numeric.py,[u'20'],11,9," -1530,34 +1530,36 ;",def test_iterdim1d(self);
3262,8,f27e402, andrew giessel <andrew.giessel@gmail.com>," Wed, 24 Apr 2013 17:25:34 -0400",ct: [PATCH 6/8] Changes to reflect a change in name and simpler implementationplus function documentation,2,17,18,numpy/core/numeric.py,[u'17'],8,9," -40,7 +40,7 ; -2183,9 +2183,9 ; -2198,17 +2198,16 ;",";def array_equiv(a1, a2);def iterdim(a, axis=0);"
3262,8,f27e402, andrew giessel <andrew.giessel@gmail.com>," Wed, 24 Apr 2013 17:25:34 -0400",ct: [PATCH 6/8] Changes to reflect a change in name and simpler implementationplus function documentation,2,17,18,numpy/core/tests/test_numeric.py,[u'18'],9,9," -1525,28 +1525,28 ; -1554,12 +1554,12 ;",def test_roll_empty(self);def test_iterdimNd(self);
3262,8,4f711a2, andrew giessel <andrew.giessel@gmail.com>," Thu, 25 Apr 2013 10:32:29 -0400",ct: [PATCH 7/8] edit to use object based exception,1,0,0,numpy/core/numeric.py,[u'2'],1,1," -2204,7 +2204,7 ;","def iteraxis(a, axis=0);"
3262,8,7c6222a, andrew giessel <andrew.giessel@gmail.com>," Thu, 25 Apr 2013 15:27:38 -0400",ct: [PATCH 8/8] small change to move msg into if branch,1,0,0,numpy/core/numeric.py,[u'2'],1,1," -2202,8 +2202,8 ;","def iteraxis(a, axis=0);"
3261,2,9016aa4, Adam Ginsburg <keflavich@gmail.com>," Thu, 18 Apr 2013 09:40:17 -0600",ct: [PATCH 1/2] bugfix in build_ext: check that ext has an attribute before trying to use it,1,2,2,numpy/distutils/command/build_ext.py,[u'4'],2,2," -297,8 +297,8 ;","def build_extension(self, ext);"
3261,2,63d9a9b, Adam Ginsburg <adam.g.ginsburg@gmail.com>," Sun, 21 Apr 2013 12:04:28 -0600",ct: [PATCH 2/2]  reduces excess cleverness from 1/2 to 1/3,1,2,2,numpy/distutils/command/build_ext.py,[u'4'],2,2," -297,8 +297,8 ;","def build_extension(self, ext);"
3257,2,3a5c547, Charles Harris <charlesr.harris@gmail.com>," Wed, 17 Apr 2013 00:04:46 -0600","ct: [PATCH 1/2] 2to3: Apply unicode fixer.The unicode fixer strips the u from u'hi' and converts the unicode typeto str. The first won't work for Python 2 and instead we replace the uprefix with the sixu function borrowed from the six compatibilitypackage. That function calls the unicode constructor with the'unicode_escape' encoder so that the many tests using escaped unicodecharacters like u'\u0900' will be handled correctly. That makes thesixu function a bit different from the asunicode function currently innumpy.compat and also provides a target that can be converted back tothe u prefix when support for Python 3.2 is dropped. Python 3.3reintroduced the u prefix for compatibility.The unicode fixer also replaces 'unicode' with 'str' as 'unicode' is nolonger a builtin in Python 3. For code compatibility, 'unicode' isdefined either as 'str' or 'unicode' in numpy.compat so that checks like    if isinstance(x, unicode):        ...will work properly for all python versions.Closes #3089.",17,156,118,doc/sphinxext/numpydoc/docscrape_sphinx.py,[u'14'],4,2," -1,10 +1,16 ; -95,11 +101,11 ;",";def _str_member_list(self, name);"
3257,2,3a5c547, Charles Harris <charlesr.harris@gmail.com>," Wed, 17 Apr 2013 00:04:46 -0600","ct: [PATCH 1/2] 2to3: Apply unicode fixer.The unicode fixer strips the u from u'hi' and converts the unicode typeto str. The first won't work for Python 2 and instead we replace the uprefix with the sixu function borrowed from the six compatibilitypackage. That function calls the unicode constructor with the'unicode_escape' encoder so that the many tests using escaped unicodecharacters like u'\u0900' will be handled correctly. That makes thesixu function a bit different from the asunicode function currently innumpy.compat and also provides a target that can be converted back tothe u prefix when support for Python 3.2 is dropped. Python 3.3reintroduced the u prefix for compatibility.The unicode fixer also replaces 'unicode' with 'str' as 'unicode' is nolonger a builtin in Python 3. For code compatibility, 'unicode' isdefined either as 'str' or 'unicode' in numpy.compat so that checks like    if isinstance(x, unicode):        ...will work properly for all python versions.Closes #3089.",17,156,118,doc/sphinxext/numpydoc/numpydoc.py,[u'44'],10,8," -17,16 +17,22 ; -36,32 +42,32 ; -70,14 +76,14 ; -93,8 +99,8 ;",";def mangle_docstrings(app, what, name, obj, options, lines;def mangle_docstrings(app, what, name, obj, options, lines;def mangle_signature(app, what, name, obj, options, sig, retann);"
3257,2,3a5c547, Charles Harris <charlesr.harris@gmail.com>," Wed, 17 Apr 2013 00:04:46 -0600","ct: [PATCH 1/2] 2to3: Apply unicode fixer.The unicode fixer strips the u from u'hi' and converts the unicode typeto str. The first won't work for Python 2 and instead we replace the uprefix with the sixu function borrowed from the six compatibilitypackage. That function calls the unicode constructor with the'unicode_escape' encoder so that the many tests using escaped unicodecharacters like u'\u0900' will be handled correctly. That makes thesixu function a bit different from the asunicode function currently innumpy.compat and also provides a target that can be converted back tothe u prefix when support for Python 3.2 is dropped. Python 3.3reintroduced the u prefix for compatibility.The unicode fixer also replaces 'unicode' with 'str' as 'unicode' is nolonger a builtin in Python 3. For code compatibility, 'unicode' isdefined either as 'str' or 'unicode' in numpy.compat so that checks like    if isinstance(x, unicode):        ...will work properly for all python versions.Closes #3089.",17,156,118,doc/sphinxext/numpydoc/tests/test_docscrape.py,[u'51'],11,9," -7,6 +7,12 ; -220,12 +226,12 ; -324,7 +330,7 ; -333,16 +339,16 ; -351,12 +357,12 ; -403,7 +409,7 ; -558,9 +564,9 ; -578,7 +584,7 ; -695,13 +701,13 ; -728,16 +734,16 ; -745,4 +751,3 ;",;def test_str();def test_sphinx_str();def test_sphinx_str();def test_sphinx_str();def test_sphinx_str();def test_unicode();def test_plot_examples();def test_class_members_doc();def test_class_members_doc_sphinx();def test_class_members_doc_sphinx();
3257,2,3a5c547, Charles Harris <charlesr.harris@gmail.com>," Wed, 17 Apr 2013 00:04:46 -0600","ct: [PATCH 1/2] 2to3: Apply unicode fixer.The unicode fixer strips the u from u'hi' and converts the unicode typeto str. The first won't work for Python 2 and instead we replace the uprefix with the sixu function borrowed from the six compatibilitypackage. That function calls the unicode constructor with the'unicode_escape' encoder so that the many tests using escaped unicodecharacters like u'\u0900' will be handled correctly. That makes thesixu function a bit different from the asunicode function currently innumpy.compat and also provides a target that can be converted back tothe u prefix when support for Python 3.2 is dropped. Python 3.3reintroduced the u prefix for compatibility.The unicode fixer also replaces 'unicode' with 'str' as 'unicode' is nolonger a builtin in Python 3. For code compatibility, 'unicode' isdefined either as 'str' or 'unicode' in numpy.compat so that checks like    if isinstance(x, unicode):        ...will work properly for all python versions.Closes #3089.",17,156,118,numpy/__init__.py,[u'3'],1,1," -164,7 +164,8 ;","def pkgload(*packages, **options);"
3257,2,3a5c547, Charles Harris <charlesr.harris@gmail.com>," Wed, 17 Apr 2013 00:04:46 -0600","ct: [PATCH 1/2] 2to3: Apply unicode fixer.The unicode fixer strips the u from u'hi' and converts the unicode typeto str. The first won't work for Python 2 and instead we replace the uprefix with the sixu function borrowed from the six compatibilitypackage. That function calls the unicode constructor with the'unicode_escape' encoder so that the many tests using escaped unicodecharacters like u'\u0900' will be handled correctly. That makes thesixu function a bit different from the asunicode function currently innumpy.compat and also provides a target that can be converted back tothe u prefix when support for Python 3.2 is dropped. Python 3.3reintroduced the u prefix for compatibility.The unicode fixer also replaces 'unicode' with 'str' as 'unicode' is nolonger a builtin in Python 3. For code compatibility, 'unicode' isdefined either as 'str' or 'unicode' in numpy.compat so that checks like    if isinstance(x, unicode):        ...will work properly for all python versions.Closes #3089.",17,156,118,numpy/compat/py3k.py,[u'12'],3,2," -6,7 +6,7 ; -16,8 +16,8 ; -40,14 +40,17 ; -65,6 +68,9 ;",;;def isfileobj(f);def asunicode(s);
3257,2,3a5c547, Charles Harris <charlesr.harris@gmail.com>," Wed, 17 Apr 2013 00:04:46 -0600","ct: [PATCH 1/2] 2to3: Apply unicode fixer.The unicode fixer strips the u from u'hi' and converts the unicode typeto str. The first won't work for Python 2 and instead we replace the uprefix with the sixu function borrowed from the six compatibilitypackage. That function calls the unicode constructor with the'unicode_escape' encoder so that the many tests using escaped unicodecharacters like u'\u0900' will be handled correctly. That makes thesixu function a bit different from the asunicode function currently innumpy.compat and also provides a target that can be converted back tothe u prefix when support for Python 3.2 is dropped. Python 3.3reintroduced the u prefix for compatibility.The unicode fixer also replaces 'unicode' with 'str' as 'unicode' is nolonger a builtin in Python 3. For code compatibility, 'unicode' isdefined either as 'str' or 'unicode' in numpy.compat so that checks like    if isinstance(x, unicode):        ...will work properly for all python versions.Closes #3089.",17,156,118,numpy/core/numerictypes.py,[u'3'],1,1," -102,7 +102,8 ;",;
3257,2,3a5c547, Charles Harris <charlesr.harris@gmail.com>," Wed, 17 Apr 2013 00:04:46 -0600","ct: [PATCH 1/2] 2to3: Apply unicode fixer.The unicode fixer strips the u from u'hi' and converts the unicode typeto str. The first won't work for Python 2 and instead we replace the uprefix with the sixu function borrowed from the six compatibilitypackage. That function calls the unicode constructor with the'unicode_escape' encoder so that the many tests using escaped unicodecharacters like u'\u0900' will be handled correctly. That makes thesixu function a bit different from the asunicode function currently innumpy.compat and also provides a target that can be converted back tothe u prefix when support for Python 3.2 is dropped. Python 3.3reintroduced the u prefix for compatibility.The unicode fixer also replaces 'unicode' with 'str' as 'unicode' is nolonger a builtin in Python 3. For code compatibility, 'unicode' isdefined either as 'str' or 'unicode' in numpy.compat so that checks like    if isinstance(x, unicode):        ...will work properly for all python versions.Closes #3089.",17,156,118,numpy/core/tests/test_arrayprint.py,[u'3'],1,1," -5,6 +5,7 ; -157,7 +158,7 ;",;def test_unicode_object_array();
3257,2,3a5c547, Charles Harris <charlesr.harris@gmail.com>," Wed, 17 Apr 2013 00:04:46 -0600","ct: [PATCH 1/2] 2to3: Apply unicode fixer.The unicode fixer strips the u from u'hi' and converts the unicode typeto str. The first won't work for Python 2 and instead we replace the uprefix with the sixu function borrowed from the six compatibilitypackage. That function calls the unicode constructor with the'unicode_escape' encoder so that the many tests using escaped unicodecharacters like u'\u0900' will be handled correctly. That makes thesixu function a bit different from the asunicode function currently innumpy.compat and also provides a target that can be converted back tothe u prefix when support for Python 3.2 is dropped. Python 3.3reintroduced the u prefix for compatibility.The unicode fixer also replaces 'unicode' with 'str' as 'unicode' is nolonger a builtin in Python 3. For code compatibility, 'unicode' isdefined either as 'str' or 'unicode' in numpy.compat so that checks like    if isinstance(x, unicode):        ...will work properly for all python versions.Closes #3089.",17,156,118,numpy/core/tests/test_defchararray.py,[u'64'],13,13," -6,7 +6,7 ; -21,12 +21,12 ; -47,7 +47,7 ; -64,7 +64,7 ; -74,7 +74,7 ; -186,9 +186,9 ; -285,9 +285,9 ; -297,7 +297,7 ; -325,7 +325,7 ; -373,9 +373,9 ; -390,7 +390,7 ; -414,11 +414,11 ; -466,7 +466,7 ; -483,7 +483,7 ; -509,9 +509,9 ; -521,9 +521,9 ; -533,9 +533,9 ;",;def test_from_object_array(self);def test_from_string_array(self);def fail();def test_from_string(self);def setUp(self);def setUp(self);def test_capitalize(self);def test_decode(self);def test_lower(self);def test_lstrip(self);def test_replace(self);def test_rstrip(self);def test_strip(self);def test_swapcase(self);def test_title(self);def test_upper(self);
3257,2,3a5c547, Charles Harris <charlesr.harris@gmail.com>," Wed, 17 Apr 2013 00:04:46 -0600","ct: [PATCH 1/2] 2to3: Apply unicode fixer.The unicode fixer strips the u from u'hi' and converts the unicode typeto str. The first won't work for Python 2 and instead we replace the uprefix with the sixu function borrowed from the six compatibilitypackage. That function calls the unicode constructor with the'unicode_escape' encoder so that the many tests using escaped unicodecharacters like u'\u0900' will be handled correctly. That makes thesixu function a bit different from the asunicode function currently innumpy.compat and also provides a target that can be converted back tothe u prefix when support for Python 3.2 is dropped. Python 3.3reintroduced the u prefix for compatibility.The unicode fixer also replaces 'unicode' with 'str' as 'unicode' is nolonger a builtin in Python 3. For code compatibility, 'unicode' isdefined either as 'str' or 'unicode' in numpy.compat so that checks like    if isinstance(x, unicode):        ...will work properly for all python versions.Closes #3089.",17,156,118,numpy/core/tests/test_multiarray.py,[u'14'],3,3," -4,12 +4,12 ; -31,7 +31,7 ; -1246,8 +1246,8 ; -2000,8 +2000,8 ;",;;def test_mixed(self);def test_field_names(self);
3257,2,3a5c547, Charles Harris <charlesr.harris@gmail.com>," Wed, 17 Apr 2013 00:04:46 -0600","ct: [PATCH 1/2] 2to3: Apply unicode fixer.The unicode fixer strips the u from u'hi' and converts the unicode typeto str. The first won't work for Python 2 and instead we replace the uprefix with the sixu function borrowed from the six compatibilitypackage. That function calls the unicode constructor with the'unicode_escape' encoder so that the many tests using escaped unicodecharacters like u'\u0900' will be handled correctly. That makes thesixu function a bit different from the asunicode function currently innumpy.compat and also provides a target that can be converted back tothe u prefix when support for Python 3.2 is dropped. Python 3.3reintroduced the u prefix for compatibility.The unicode fixer also replaces 'unicode' with 'str' as 'unicode' is nolonger a builtin in Python 3. For code compatibility, 'unicode' isdefined either as 'str' or 'unicode' in numpy.compat so that checks like    if isinstance(x, unicode):        ...will work properly for all python versions.Closes #3089.",17,156,118,numpy/core/tests/test_nditer.py,[u'4'],1,1," -4,7 +4,7 ; -2008,7 +2008,7 ;",;def test_iter_buffering_string();
3257,2,3a5c547, Charles Harris <charlesr.harris@gmail.com>," Wed, 17 Apr 2013 00:04:46 -0600","ct: [PATCH 1/2] 2to3: Apply unicode fixer.The unicode fixer strips the u from u'hi' and converts the unicode typeto str. The first won't work for Python 2 and instead we replace the uprefix with the sixu function borrowed from the six compatibilitypackage. That function calls the unicode constructor with the'unicode_escape' encoder so that the many tests using escaped unicodecharacters like u'\u0900' will be handled correctly. That makes thesixu function a bit different from the asunicode function currently innumpy.compat and also provides a target that can be converted back tothe u prefix when support for Python 3.2 is dropped. Python 3.3reintroduced the u prefix for compatibility.The unicode fixer also replaces 'unicode' with 'str' as 'unicode' is nolonger a builtin in Python 3. For code compatibility, 'unicode' isdefined either as 'str' or 'unicode' in numpy.compat so that checks like    if isinstance(x, unicode):        ...will work properly for all python versions.Closes #3089.",17,156,118,numpy/core/tests/test_regression.py,[u'23'],5,4," -17,7 +17,7 ; -138,7 +138,7 ; -1107,7 +1107,7 ; -1314,21 +1314,24 ; -1844,7 +1847,7 ;",";def test_scalar_compare(self,level=rlevel);def test_unaligned_unicode_access(self, level=rlevel) ;def test_object_array_to_fixed_string(self);def test_string_truncation_ucs2(self);"
3257,2,3a5c547, Charles Harris <charlesr.harris@gmail.com>," Wed, 17 Apr 2013 00:04:46 -0600","ct: [PATCH 1/2] 2to3: Apply unicode fixer.The unicode fixer strips the u from u'hi' and converts the unicode typeto str. The first won't work for Python 2 and instead we replace the uprefix with the sixu function borrowed from the six compatibilitypackage. That function calls the unicode constructor with the'unicode_escape' encoder so that the many tests using escaped unicodecharacters like u'\u0900' will be handled correctly. That makes thesixu function a bit different from the asunicode function currently innumpy.compat and also provides a target that can be converted back tothe u prefix when support for Python 3.2 is dropped. Python 3.3reintroduced the u prefix for compatibility.The unicode fixer also replaces 'unicode' with 'str' as 'unicode' is nolonger a builtin in Python 3. For code compatibility, 'unicode' isdefined either as 'str' or 'unicode' in numpy.compat so that checks like    if isinstance(x, unicode):        ...will work properly for all python versions.Closes #3089.",17,156,118,numpy/core/tests/test_unicode.py,[u'10'],2,2," -4,7 +4,7 ; -31,7 +31,7 ; -43,9 +43,9 ; -62,7 +62,7 ;",";def buffer_length(arr);def buffer_length(arr);def content_check(self, ua, ua_scalar, nbytes);"
3257,2,3a5c547, Charles Harris <charlesr.harris@gmail.com>," Wed, 17 Apr 2013 00:04:46 -0600","ct: [PATCH 1/2] 2to3: Apply unicode fixer.The unicode fixer strips the u from u'hi' and converts the unicode typeto str. The first won't work for Python 2 and instead we replace the uprefix with the sixu function borrowed from the six compatibilitypackage. That function calls the unicode constructor with the'unicode_escape' encoder so that the many tests using escaped unicodecharacters like u'\u0900' will be handled correctly. That makes thesixu function a bit different from the asunicode function currently innumpy.compat and also provides a target that can be converted back tothe u prefix when support for Python 3.2 is dropped. Python 3.3reintroduced the u prefix for compatibility.The unicode fixer also replaces 'unicode' with 'str' as 'unicode' is nolonger a builtin in Python 3. For code compatibility, 'unicode' isdefined either as 'str' or 'unicode' in numpy.compat so that checks like    if isinstance(x, unicode):        ...will work properly for all python versions.Closes #3089.",17,156,118,numpy/lib/_iotools.py,[u'3'],1,1," -11,7 +11,8 ;",;
3257,2,3a5c547, Charles Harris <charlesr.harris@gmail.com>," Wed, 17 Apr 2013 00:04:46 -0600","ct: [PATCH 1/2] 2to3: Apply unicode fixer.The unicode fixer strips the u from u'hi' and converts the unicode typeto str. The first won't work for Python 2 and instead we replace the uprefix with the sixu function borrowed from the six compatibilitypackage. That function calls the unicode constructor with the'unicode_escape' encoder so that the many tests using escaped unicodecharacters like u'\u0900' will be handled correctly. That makes thesixu function a bit different from the asunicode function currently innumpy.compat and also provides a target that can be converted back tothe u prefix when support for Python 3.2 is dropped. Python 3.3reintroduced the u prefix for compatibility.The unicode fixer also replaces 'unicode' with 'str' as 'unicode' is nolonger a builtin in Python 3. For code compatibility, 'unicode' isdefined either as 'str' or 'unicode' in numpy.compat so that checks like    if isinstance(x, unicode):        ...will work properly for all python versions.Closes #3089.",17,156,118,numpy/lib/npyio.py,[u'15'],4,2," -14,12 +14,17 ;",;
3257,2,3a5c547, Charles Harris <charlesr.harris@gmail.com>," Wed, 17 Apr 2013 00:04:46 -0600","ct: [PATCH 1/2] 2to3: Apply unicode fixer.The unicode fixer strips the u from u'hi' and converts the unicode typeto str. The first won't work for Python 2 and instead we replace the uprefix with the sixu function borrowed from the six compatibilitypackage. That function calls the unicode constructor with the'unicode_escape' encoder so that the many tests using escaped unicodecharacters like u'\u0900' will be handled correctly. That makes thesixu function a bit different from the asunicode function currently innumpy.compat and also provides a target that can be converted back tothe u prefix when support for Python 3.2 is dropped. Python 3.3reintroduced the u prefix for compatibility.The unicode fixer also replaces 'unicode' with 'str' as 'unicode' is nolonger a builtin in Python 3. For code compatibility, 'unicode' isdefined either as 'str' or 'unicode' in numpy.compat so that checks like    if isinstance(x, unicode):        ...will work properly for all python versions.Closes #3089.",17,156,118,numpy/lib/tests/test_regression.py,[u'4'],1,1," -1,9 +1,11 ;",;
3257,2,3a5c547, Charles Harris <charlesr.harris@gmail.com>," Wed, 17 Apr 2013 00:04:46 -0600","ct: [PATCH 1/2] 2to3: Apply unicode fixer.The unicode fixer strips the u from u'hi' and converts the unicode typeto str. The first won't work for Python 2 and instead we replace the uprefix with the sixu function borrowed from the six compatibilitypackage. That function calls the unicode constructor with the'unicode_escape' encoder so that the many tests using escaped unicodecharacters like u'\u0900' will be handled correctly. That makes thesixu function a bit different from the asunicode function currently innumpy.compat and also provides a target that can be converted back tothe u prefix when support for Python 3.2 is dropped. Python 3.3reintroduced the u prefix for compatibility.The unicode fixer also replaces 'unicode' with 'str' as 'unicode' is nolonger a builtin in Python 3. For code compatibility, 'unicode' isdefined either as 'str' or 'unicode' in numpy.compat so that checks like    if isinstance(x, unicode):        ...will work properly for all python versions.Closes #3089.",17,156,118,numpy/ma/tests/test_regression.py,[u'5'],1,1," -1,8 +1,9 ; -38,7 +39,7 ;",";def test_masked_array_repeat(self, level=rlevel);"
3257,2,3a5c547, Charles Harris <charlesr.harris@gmail.com>," Wed, 17 Apr 2013 00:04:46 -0600","ct: [PATCH 1/2] 2to3: Apply unicode fixer.The unicode fixer strips the u from u'hi' and converts the unicode typeto str. The first won't work for Python 2 and instead we replace the uprefix with the sixu function borrowed from the six compatibilitypackage. That function calls the unicode constructor with the'unicode_escape' encoder so that the many tests using escaped unicodecharacters like u'\u0900' will be handled correctly. That makes thesixu function a bit different from the asunicode function currently innumpy.compat and also provides a target that can be converted back tothe u prefix when support for Python 3.2 is dropped. Python 3.3reintroduced the u prefix for compatibility.The unicode fixer also replaces 'unicode' with 'str' as 'unicode' is nolonger a builtin in Python 3. For code compatibility, 'unicode' isdefined either as 'str' or 'unicode' in numpy.compat so that checks like    if isinstance(x, unicode):        ...will work properly for all python versions.Closes #3089.",17,156,118,tools/py3tool.py,[u'2'],1,1," -89,7 +89,7 ;",;
3257,2,211154e, Charles Harris <charlesr.harris@gmail.com>," Wed, 17 Apr 2013 18:27:54 -0600",ct: [PATCH 2/2] BUG: Fix typo in docscrape_sphinx.py import.,1,0,0,doc/sphinxext/numpydoc/docscrape_sphinx.py,[u'2'],1,1," -1,6 +1,6 ;",;
3252,1,42346f7, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 19:28:57 -0600","ct: [PATCH] 2to3: Apply unicode fixer.The unicode fixer strip the u from u'hi' and converts the unicode typeto str. The first won't work for Python 2, so unicode from numpy.compatis used instead of the u prefix. The second fix is also implemented byimporting the unicode type from numpy.compat. The result is that theofficial unicode fixer is not actually used for anything.Closes #3089.",11,99,83,doc/sphinxext/numpydoc/docscrape_sphinx.py,[u'11'],3,2," -1,10 +1,15 ; -95,11 +100,11 ;",";def _str_member_list(self, name);"
3252,1,42346f7, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 19:28:57 -0600","ct: [PATCH] 2to3: Apply unicode fixer.The unicode fixer strip the u from u'hi' and converts the unicode typeto str. The first won't work for Python 2, so unicode from numpy.compatis used instead of the u prefix. The second fix is also implemented byimporting the unicode type from numpy.compat. The result is that theofficial unicode fixer is not actually used for anything.Closes #3089.",11,99,83,doc/sphinxext/numpydoc/numpydoc.py,[u'38'],9,7," -28,6 +28,10 ; -36,32 +40,32 ; -70,14 +74,14 ; -93,8 +97,8 ;",";def mangle_docstrings(app, what, name, obj, options, lines;def mangle_docstrings(app, what, name, obj, options, lines;def mangle_signature(app, what, name, obj, options, sig, retann);"
3252,1,42346f7, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 19:28:57 -0600","ct: [PATCH] 2to3: Apply unicode fixer.The unicode fixer strip the u from u'hi' and converts the unicode typeto str. The first won't work for Python 2, so unicode from numpy.compatis used instead of the u prefix. The second fix is also implemented byimporting the unicode type from numpy.compat. The result is that theofficial unicode fixer is not actually used for anything.Closes #3089.",11,99,83,doc/sphinxext/numpydoc/tests/test_docscrape.py,[u'8'],3,1," -7,6 +7,10 ; -558,9 +562,9 ;",;def test_unicode();
3252,1,42346f7, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 19:28:57 -0600","ct: [PATCH] 2to3: Apply unicode fixer.The unicode fixer strip the u from u'hi' and converts the unicode typeto str. The first won't work for Python 2, so unicode from numpy.compatis used instead of the u prefix. The second fix is also implemented byimporting the unicode type from numpy.compat. The result is that theofficial unicode fixer is not actually used for anything.Closes #3089.",11,99,83,numpy/core/tests/test_arrayprint.py,[u'6'],2,1," -5,6 +5,8 ; -156,8 +158,8 ;",;def test_unicode_object_array();
3252,1,42346f7, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 19:28:57 -0600","ct: [PATCH] 2to3: Apply unicode fixer.The unicode fixer strip the u from u'hi' and converts the unicode typeto str. The first won't work for Python 2, so unicode from numpy.compatis used instead of the u prefix. The second fix is also implemented byimporting the unicode type from numpy.compat. The result is that theofficial unicode fixer is not actually used for anything.Closes #3089.",11,99,83,numpy/core/tests/test_defchararray.py,[u'63'],13,13," -5,8 +5,7 ; -21,12 +20,12 ; -47,7 +46,7 ; -64,7 +63,7 ; -74,7 +73,7 ; -186,9 +185,9 ; -285,9 +284,9 ; -297,7 +296,7 ; -373,9 +372,9 ; -390,7 +389,7 ; -414,11 +413,11 ; -466,7 +465,7 ; -483,7 +482,7 ; -509,9 +508,9 ; -521,9 +520,9 ; -533,9 +532,9 ;",;def test_from_object_array(self);def test_from_string_array(self);def fail();def test_from_string(self);def setUp(self);def setUp(self);def test_capitalize(self);def test_lower(self);def test_lstrip(self);def test_replace(self);def test_rstrip(self);def test_strip(self);def test_swapcase(self);def test_title(self);def test_upper(self);
3252,1,42346f7, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 19:28:57 -0600","ct: [PATCH] 2to3: Apply unicode fixer.The unicode fixer strip the u from u'hi' and converts the unicode typeto str. The first won't work for Python 2, so unicode from numpy.compatis used instead of the u prefix. The second fix is also implemented byimporting the unicode type from numpy.compat. The result is that theofficial unicode fixer is not actually used for anything.Closes #3089.",11,99,83,numpy/core/tests/test_multiarray.py,[u'13'],3,3," -7,9 +7,8 ; -31,7 +30,7 ; -1246,8 +1245,8 ; -2000,8 +1999,8 ;",;;def test_mixed(self);def test_field_names(self);
3252,1,42346f7, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 19:28:57 -0600","ct: [PATCH] 2to3: Apply unicode fixer.The unicode fixer strip the u from u'hi' and converts the unicode typeto str. The first won't work for Python 2, so unicode from numpy.compatis used instead of the u prefix. The second fix is also implemented byimporting the unicode type from numpy.compat. The result is that theofficial unicode fixer is not actually used for anything.Closes #3089.",11,99,83,numpy/core/tests/test_nditer.py,[u'4'],1,1," -4,7 +4,7 ; -2008,7 +2008,7 ;",;def test_iter_buffering_string();
3252,1,42346f7, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 19:28:57 -0600","ct: [PATCH] 2to3: Apply unicode fixer.The unicode fixer strip the u from u'hi' and converts the unicode typeto str. The first won't work for Python 2, so unicode from numpy.compatis used instead of the u prefix. The second fix is also implemented byimporting the unicode type from numpy.compat. The result is that theofficial unicode fixer is not actually used for anything.Closes #3089.",11,99,83,numpy/core/tests/test_regression.py,[u'24'],5,5," -17,7 +17,9 ; -138,7 +140,7 ; -1107,11 +1109,11 ; -1314,21 +1316,21 ; -1844,7 +1846,7 ;",";def test_scalar_compare(self,level=rlevel);def test_unaligned_unicode_access(self, level=rlevel) ;def test_object_array_to_fixed_string(self);def test_string_truncation_ucs2(self);"
3252,1,42346f7, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 19:28:57 -0600","ct: [PATCH] 2to3: Apply unicode fixer.The unicode fixer strip the u from u'hi' and converts the unicode typeto str. The first won't work for Python 2, so unicode from numpy.compatis used instead of the u prefix. The second fix is also implemented byimporting the unicode type from numpy.compat. The result is that theofficial unicode fixer is not actually used for anything.Closes #3089.",11,99,83,numpy/core/tests/test_unicode.py,[u'10'],2,2," -4,7 +4,7 ; -31,7 +31,7 ; -43,9 +43,9 ; -62,7 +62,7 ;",";def buffer_length(arr);def buffer_length(arr);def content_check(self, ua, ua_scalar, nbytes);"
3252,1,42346f7, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 19:28:57 -0600","ct: [PATCH] 2to3: Apply unicode fixer.The unicode fixer strip the u from u'hi' and converts the unicode typeto str. The first won't work for Python 2, so unicode from numpy.compatis used instead of the u prefix. The second fix is also implemented byimporting the unicode type from numpy.compat. The result is that theofficial unicode fixer is not actually used for anything.Closes #3089.",11,99,83,numpy/ma/tests/test_regression.py,[u'3'],1,1," -1,6 +1,7 ; -38,7 +39,7 ;",";def test_masked_array_repeat(self, level=rlevel);"
3252,1,42346f7, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 19:28:57 -0600","ct: [PATCH] 2to3: Apply unicode fixer.The unicode fixer strip the u from u'hi' and converts the unicode typeto str. The first won't work for Python 2, so unicode from numpy.compatis used instead of the u prefix. The second fix is also implemented byimporting the unicode type from numpy.compat. The result is that theofficial unicode fixer is not actually used for anything.Closes #3089.",11,99,83,tools/py3tool.py,[u'2'],1,1," -89,7 +89,7 ;",;
3250,1,724f081, Charles Harris <charlesr.harris@gmail.com>," Mon, 15 Apr 2013 09:37:12 -0600",ct: [PATCH] MAINT: Style cleanup of numpy/core/src/multiarray/nditer_pywrap.c.Small indentation cleanup bringing the method list into standardNumpy form.,1,24,10,numpy/core/src/multiarray/nditer_pywrap.c,[u'34'],22,9," -2313,16 +2313,30 ;","npyiter_ass_subscript(NewNpyArrayIterObject *self, PyObject *op;"
3249,1,c6de097, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 11:46:39 -0600","ct: [PATCH] 2to3: Apply next fixer.The next builtin has been available since Python 2.6 and allows`it.next()` to be replaced by `next(it)`. In Python 3 the `next` methodis gone entirely, replaced entirely by the `__next__` method. The nextfixer changes all the `it.next()` calls to the new form and renames the`next` methods to `__next__`. In order to keep  Numpy code backwardscompatible with Python 2, a `next` method was readded to all the Numpyiterators after the fixer was run so they all contain both methods. Thepresence of the appropriate method could have been made versiondependent, but that looked unduly complicated.Closes #3072.",7,44,29,doc/sphinxext/numpydoc/comment_eater.py,[u'2'],1,1," -106,7 +106,7 ;","def new_noncomment(self, start_lineno, end_lineno);"
3249,1,c6de097, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 11:46:39 -0600","ct: [PATCH] 2to3: Apply next fixer.The next builtin has been available since Python 2.6 and allows`it.next()` to be replaced by `next(it)`. In Python 3 the `next` methodis gone entirely, replaced entirely by the `__next__` method. The nextfixer changes all the `it.next()` calls to the new form and renames the`next` methods to `__next__`. In order to keep  Numpy code backwardscompatible with Python 2, a `next` method was readded to all the Numpyiterators after the fixer was run so they all contain both methods. Thepresence of the appropriate method could have been made versiondependent, but that looked unduly complicated.Closes #3072.",7,44,29,numpy/core/tests/test_nditer.py,[u'18'],10,8," -1,12 +1,13 ; -1210,7 +1211,8 ; -2528,14 +2530,14 ; -2548,7 +2550,7 ;",;def test_iter_copy();def test_0d_iter();def test_0d_iter();
3249,1,c6de097, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 11:46:39 -0600","ct: [PATCH] 2to3: Apply next fixer.The next builtin has been available since Python 2.6 and allows`it.next()` to be replaced by `next(it)`. In Python 3 the `next` methodis gone entirely, replaced entirely by the `__next__` method. The nextfixer changes all the `it.next()` calls to the new form and renames the`next` methods to `__next__`. In order to keep  Numpy code backwardscompatible with Python 2, a `next` method was readded to all the Numpyiterators after the fixer was run so they all contain both methods. Thepresence of the appropriate method could have been made versiondependent, but that looked unduly complicated.Closes #3072.",7,44,29,numpy/lib/index_tricks.py,[u'19'],12,7," -487,7 +487,7 ; -499,11 +499,14 ; -532,7 +535,7 ; -541,16 +544,16 ; -560,9 +563,11 ;","class ndenumerate(object);def next(self);class ndindex(object);def __init__(self, *shape);def next(self);"
3249,1,c6de097, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 11:46:39 -0600","ct: [PATCH] 2to3: Apply next fixer.The next builtin has been available since Python 2.6 and allows`it.next()` to be replaced by `next(it)`. In Python 3 the `next` methodis gone entirely, replaced entirely by the `__next__` method. The nextfixer changes all the `it.next()` calls to the new form and renames the`next` methods to `__next__`. In order to keep  Numpy code backwardscompatible with Python 2, a `next` method was readded to all the Numpyiterators after the fixer was run so they all contain both methods. Thepresence of the appropriate method could have been made versiondependent, but that looked unduly complicated.Closes #3072.",7,44,29,numpy/lib/npyio.py,[u'8'],4,4," -785,14 +785,14 ; -1344,13 +1344,13 ;","def split_line(line);def genfromtxt(fname, dtype=float, comments='#', delimiter=None;"
3249,1,c6de097, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 11:46:39 -0600","ct: [PATCH] 2to3: Apply next fixer.The next builtin has been available since Python 2.6 and allows`it.next()` to be replaced by `next(it)`. In Python 3 the `next` methodis gone entirely, replaced entirely by the `__next__` method. The nextfixer changes all the `it.next()` calls to the new form and renames the`next` methods to `__next__`. In order to keep  Numpy code backwardscompatible with Python 2, a `next` method was readded to all the Numpyiterators after the fixer was run so they all contain both methods. Thepresence of the appropriate method could have been made versiondependent, but that looked unduly complicated.Closes #3072.",7,44,29,numpy/linalg/lapack_lite/fortran.py,[u'16'],12,4," -36,14 +36,19 ; -59,15 +64,18 ;","def __init__(self, iterable);def __init__(self, iterable);"
3249,1,c6de097, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 11:46:39 -0600","ct: [PATCH] 2to3: Apply next fixer.The next builtin has been available since Python 2.6 and allows`it.next()` to be replaced by `next(it)`. In Python 3 the `next` methodis gone entirely, replaced entirely by the `__next__` method. The nextfixer changes all the `it.next()` calls to the new form and renames the`next` methods to `__next__`. In order to keep  Numpy code backwardscompatible with Python 2, a `next` method was readded to all the Numpyiterators after the fixer was run so they all contain both methods. Thepresence of the appropriate method could have been made versiondependent, but that looked unduly complicated.Closes #3072.",7,44,29,numpy/ma/core.py,[u'8'],4,4," -2540,7 +2540,7 ; -2562,12 +2562,12 ;","def __setitem__(self, index, value);def next(self);"
3249,1,c6de097, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 11:46:39 -0600","ct: [PATCH] 2to3: Apply next fixer.The next builtin has been available since Python 2.6 and allows`it.next()` to be replaced by `next(it)`. In Python 3 the `next` methodis gone entirely, replaced entirely by the `__next__` method. The nextfixer changes all the `it.next()` calls to the new form and renames the`next` methods to `__next__`. In order to keep  Numpy code backwardscompatible with Python 2, a `next` method was readded to all the Numpyiterators after the fixer was run so they all contain both methods. Thepresence of the appropriate method could have been made versiondependent, but that looked unduly complicated.Closes #3072.",7,44,29,tools/py3tool.py,[u'2'],1,1," -72,7 +72,7 ;",;
3248,1,c70025a, Charles Harris <charlesr.harris@gmail.com>," Sun, 14 Apr 2013 12:17:43 -0600","ct: [PATCH] 2to3: Apply urllib fixer.Various functions have been moved around in the stdlib for Python 3,this fixes that up so that the code is valid in both Python 2 andPython 3.Note: monkey patching the stlib urlopen for testing looks a bit hokeyto me, but I don't see an easier, more reliable way to do the test.Closes #3090.",3,23,11,numpy/lib/_datasource.py,[u'16'],12,4," -275,8 +275,12 ; -421,8 +425,12 ;","def _cache(self, path);def exists(self, path);"
3248,1,c70025a, Charles Harris <charlesr.harris@gmail.com>," Sun, 14 Apr 2013 12:17:43 -0600","ct: [PATCH] 2to3: Apply urllib fixer.Various functions have been moved around in the stdlib for Python 3,this fixes that up so that the code is valid in both Python 2 andPython 3.Note: monkey patching the stlib urlopen for testing looks a bit hokeyto me, but I don't see an easier, more reliable way to do the test.Closes #3090.",3,23,11,numpy/lib/tests/test__datasource.py,[u'16'],10,6," -1,20 +1,21 ; -24,14 +25,17 ;",";def urlopen_stub(url, data=None);"
3248,1,c70025a, Charles Harris <charlesr.harris@gmail.com>," Sun, 14 Apr 2013 12:17:43 -0600","ct: [PATCH] 2to3: Apply urllib fixer.Various functions have been moved around in the stdlib for Python 3,this fixes that up so that the code is valid in both Python 2 andPython 3.Note: monkey patching the stlib urlopen for testing looks a bit hokeyto me, but I don't see an easier, more reliable way to do the test.Closes #3090.",3,23,11,tools/py3tool.py,[u'2'],1,1," -90,7 +90,7 ;",;
3245,1,3a31503, Charles Harris <charlesr.harris@gmail.com>," Sun, 14 Apr 2013 10:27:25 -0600","ct: [PATCH] 2to3: Skip isinstance fixer.The isinstance fixer removes duplicate types in the second argument ofisinstance(). For example, isinstance(x, (int, int)) is converted toisinstance(x, (int)). This would certainly apply if we let the longfixer replace long by int, but as is it does nothing.Duplicate entries are supposedly deprecated in Python 3, I'm not surewhy or how, but it does not seem to be a problem at this point. If itever becomes so, we can deal with it then.Closes #3085",1,0,0,tools/py3tool.py,[u'2'],1,1," -64,7 +64,7 ;",;
3244,1,0dfe67a, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 15:34:26 -0600","ct: [PATCH] 2to3: Apply zip fixer.In Python 3 zip returns an iterator instead of a list. Consequently, inplaces where an iterator won't do it must be enclosed in list(...).Lists instead of iterators are also used in array constructors as usingiterators there usually results in an object array containing aniterator object.Closes #3094",13,54,54,doc/sphinxext/numpydoc/compiler_unparse.py,[u'20'],10,10," -18,7 +18,7 ; -106,13 +106,13 ; -150,36 +150,36 ; -254,7 +254,7 ;",";def _And(self, t);def _AssTuple(self, t);def _From(self, t);"
3244,1,0dfe67a, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 15:34:26 -0600","ct: [PATCH] 2to3: Apply zip fixer.In Python 3 zip returns an iterator instead of a list. Consequently, inplaces where an iterator won't do it must be enclosed in list(...).Lists instead of iterators are also used in array constructors as usingiterators there usually results in an object array containing aniterator object.Closes #3094",13,54,54,numpy/core/tests/test_getlimits.py,[u'4'],2,2," -43,10 +43,10 ;","def test_singleton(self,level=2);"
3244,1,0dfe67a, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 15:34:26 -0600","ct: [PATCH] 2to3: Apply zip fixer.In Python 3 zip returns an iterator instead of a list. Consequently, inplaces where an iterator won't do it must be enclosed in list(...).Lists instead of iterators are also used in array constructors as usingiterators there usually results in an object array containing aniterator object.Closes #3094",13,54,54,numpy/core/tests/test_nditer.py,[u'2'],1,1," -1572,7 +1572,7 ;",def assign_iter(i);
3244,1,0dfe67a, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 15:34:26 -0600","ct: [PATCH] 2to3: Apply zip fixer.In Python 3 zip returns an iterator instead of a list. Consequently, inplaces where an iterator won't do it must be enclosed in list(...).Lists instead of iterators are also used in array constructors as usingiterators there usually results in an object array containing aniterator object.Closes #3094",13,54,54,numpy/core/tests/test_ufunc.py,[u'2'],1,1," -20,7 +20,7 ;",def test_pickle_withstring(self);
3244,1,0dfe67a, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 15:34:26 -0600","ct: [PATCH] 2to3: Apply zip fixer.In Python 3 zip returns an iterator instead of a list. Consequently, inplaces where an iterator won't do it must be enclosed in list(...).Lists instead of iterators are also used in array constructors as usingiterators there usually results in an object array containing aniterator object.Closes #3094",13,54,54,numpy/lib/_iotools.py,[u'2'],1,1," -855,7 +855,7 ;","def easy_dtype(ndtype, names=None, defaultfmt=""f%i"", **validationargs);"
3244,1,0dfe67a, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 15:34:26 -0600","ct: [PATCH] 2to3: Apply zip fixer.In Python 3 zip returns an iterator instead of a list. Consequently, inplaces where an iterator won't do it must be enclosed in list(...).Lists instead of iterators are also used in array constructors as usingiterators there usually results in an object array containing aniterator object.Closes #3094",13,54,54,numpy/lib/npyio.py,[u'12'],6,6," -1664,11 +1664,11 ; -1693,8 +1693,8 ;","def genfromtxt(fname, dtype=float, comments='#', delimiter=None;def genfromtxt(fname, dtype=float, comments='#', delimiter=None;"
3244,1,0dfe67a, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 15:34:26 -0600","ct: [PATCH] 2to3: Apply zip fixer.In Python 3 zip returns an iterator instead of a list. Consequently, inplaces where an iterator won't do it must be enclosed in list(...).Lists instead of iterators are also used in array constructors as usingiterators there usually results in an object array containing aniterator object.Closes #3094",13,54,54,numpy/lib/tests/test_arraysetops.py,[u'4'],2,2," -61,8 +61,8 ;","def check_all(a, b, i1, i2, dt);"
3244,1,0dfe67a, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 15:34:26 -0600","ct: [PATCH] 2to3: Apply zip fixer.In Python 3 zip returns an iterator instead of a list. Consequently, inplaces where an iterator won't do it must be enclosed in list(...).Lists instead of iterators are also used in array constructors as usingiterators there usually results in an object array containing aniterator object.Closes #3094",13,54,54,numpy/lib/tests/test_io.py,[u'4'],2,2," -517,7 +517,7 ; -1119,7 +1119,7 ;",def test_usecols(self);def test_usecols_with_structured_dtype(self);
3244,1,0dfe67a, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 15:34:26 -0600","ct: [PATCH] 2to3: Apply zip fixer.In Python 3 zip returns an iterator instead of a list. Consequently, inplaces where an iterator won't do it must be enclosed in list(...).Lists instead of iterators are also used in array constructors as usingiterators there usually results in an object array containing aniterator object.Closes #3094",13,54,54,numpy/lib/tests/test_recfunctions.py,[u'24'],12,12," -543,11 +543,11 ; -620,11 +620,11 ; -660,12 +660,12 ;",def test_checktitles(self);def test_leftouter_join(self);def test_no_r2postfix(self);
3244,1,0dfe67a, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 15:34:26 -0600","ct: [PATCH] 2to3: Apply zip fixer.In Python 3 zip returns an iterator instead of a list. Consequently, inplaces where an iterator won't do it must be enclosed in list(...).Lists instead of iterators are also used in array constructors as usingiterators there usually results in an object array containing aniterator object.Closes #3094",13,54,54,numpy/ma/mrecords.py,[u'2'],1,1," -508,7 +508,7 ;","def fromarrays(arraylist, dtype=None, shape=None, formats=None;"
3244,1,0dfe67a, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 15:34:26 -0600","ct: [PATCH] 2to3: Apply zip fixer.In Python 3 zip returns an iterator instead of a list. Consequently, inplaces where an iterator won't do it must be enclosed in list(...).Lists instead of iterators are also used in array constructors as usingiterators there usually results in an object array containing aniterator object.Closes #3094",13,54,54,numpy/ma/tests/test_core.py,[u'24'],12,12," -140,8 +140,8 ; -1500,7 +1500,7 ; -1510,7 +1510,7 ; -2512,9 +2512,9 ; -3384,7 +3384,7 ; -3461,7 +3461,7 ; -3481,9 +3481,9 ; -3501,7 +3501,7 ;",def test_concatenate_alongaxis(self);def test_fillvalue_individual_fields(self);def test_fillvalue_individual_fields(self);def test_tolist(self);def setUp(self);def test_getmaskarray(self);def test_view(self);def test_getitem(self);
3244,1,0dfe67a, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 15:34:26 -0600","ct: [PATCH] 2to3: Apply zip fixer.In Python 3 zip returns an iterator instead of a list. Consequently, inplaces where an iterator won't do it must be enclosed in list(...).Lists instead of iterators are also used in array constructors as usingiterators there usually results in an object array containing aniterator object.Closes #3094",13,54,54,numpy/ma/tests/test_mrecords.py,[u'6'],3,3," -360,10 +360,10 ; -380,7 +380,7 ;",class TestView(TestCase);def test_view_simple_dtype(self);
3244,1,0dfe67a, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 15:34:26 -0600","ct: [PATCH] 2to3: Apply zip fixer.In Python 3 zip returns an iterator instead of a list. Consequently, inplaces where an iterator won't do it must be enclosed in list(...).Lists instead of iterators are also used in array constructors as usingiterators there usually results in an object array containing aniterator object.Closes #3094",13,54,54,tools/py3tool.py,[u'2'],1,1," -94,7 +94,7 ;",;
3243,12,5c8d5c2, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 13 Apr 2013 09:41:22 +0200",ct: [PATCH 01/12] MAINT: adept divisions for truedivideFollowing deprecations would cause problems otherwise.,4,5,5,numpy/core/defchararray.py,[u'4'],2,2," -90,7 +90,7 ; -2593,7 +2593,7 ;",def _get_num_chars(a);class adds the following functionality;
3243,12,5c8d5c2, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 13 Apr 2013 09:41:22 +0200",ct: [PATCH 01/12] MAINT: adept divisions for truedivideFollowing deprecations would cause problems otherwise.,4,5,5,numpy/lib/index_tricks.py,[u'2'],1,1," -157,7 +157,7 ;","def __getitem__(self,key);"
3243,12,5c8d5c2, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 13 Apr 2013 09:41:22 +0200",ct: [PATCH 01/12] MAINT: adept divisions for truedivideFollowing deprecations would cause problems otherwise.,4,5,5,numpy/lib/shape_base.py,[u'2'],1,1," -830,5 +830,5 ;","def tile(A, reps);"
3243,12,5c8d5c2, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 13 Apr 2013 09:41:22 +0200",ct: [PATCH 01/12] MAINT: adept divisions for truedivideFollowing deprecations would cause problems otherwise.,4,5,5,numpy/random/tests/test_regression.py,[u'2'],1,1," -74,7 +74,7 ;",def test_call_within_randomstate(self);
3243,12,8dfc25d, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 13 Apr 2013 09:51:45 +0200","ct: [PATCH 02/12] API: Deprecating the use of non-integers for indices argumentsThis changes the conversion utils to give deprecations for a allnon-integers (this currently includes python bools). The biggestchange is PyArray_PyIntAsIntp in which the deprecation is done.Some other conversions are then also pointed to it.Uses the Index machinery even for numpy types, which is fasterthen the current code.",1,133,185,numpy/core/src/multiarray/conversion_utils.c,[u'318'],11,16," -84,7 +84,7 ; -94,14 +94,15 ; -117,7 +118,7 ; -187,7 +188,7 ; -223,9 +224,9 ; -233,7 +234,7 ; -249,14 +250,14 ; -272,7 +273,7 ; -529,8 +530,8 ; -664,61 +665,105 ; -728,126 +773,54 ; -867,29 +840,11 ; -901,6 +856,7 ; -908,18 +864,10 ;","PyArray_OutputConverter(PyObject *object, PyArrayObject **address;PyArray_IntpConverter(PyObject *obj, PyArray_Dims *seq;PyArray_IntpConverter(PyObject *obj, PyArray_Dims *seq;PyArray_AxisConverter(PyObject *obj, int *axis;PyArray_ConvertMultiAxis(PyObject *axis_in, int ndim, npy_bool *out_axis_flags;PyArray_ConvertMultiAxis(PyObject *axis_in, int ndim, npy_bool *out_axis_flags;PyArray_ConvertMultiAxis(PyObject *axis_in, int ndim, npy_bool *out_axis_flags;PyArray_ConvertMultiAxis(PyObject *axis_in, int ndim, npy_bool *out_axis_flags;PyArray_ClipmodeConverter(PyObject *object, NPY_CLIPMODE *val;PyArray_CastingConverter(PyObject *obj, NPY_CASTING *casting;PyArray_PyIntAsInt(PyObject *o;PyArray_IntpFromSequence(PyObject *seq, npy_intp *vals, int maxvals;PyArray_IntpFromSequence(PyObject *seq, npy_intp *vals, int maxvals;PyArray_IntpFromSequence(PyObject *seq, npy_intp *vals, int maxvals;"
3243,12,a727f42, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 13 Apr 2013 09:53:59 +0200","ct: [PATCH 03/12] API: Deprecate __index__ for ndim > 0For example NumPy indexing treats np.ones(()) very differently fromnp.ones((1,)). It seems a bad idea to allow __index__ for arrays thatare not 0-d, as they cannot always be safely interpreted as integers.",1,6,0,numpy/core/src/multiarray/number.c,[u'6'],6,0," -840,6 +840,12 ;",array_index(PyArrayObject *v;
3243,12,482142c, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 13 Apr 2013 09:57:11 +0200","ct: [PATCH 04/12] MAINT: Remove non-integer deprecations which are now in PyIntAsIntpAlso removed old (commented) macro, the use of PyNumber_Index isnow actually implemented in PyIntAsIntp and not necessary here.Removes PyIndex_Check compatibility macros, since we do not supportpython < 2.5 anymore.Change integer conversion error to IndexError, previously thesefell through and eventually became an IndexError.",3,8,108,numpy/core/src/multiarray/iterators.c,[u'53'],1,34," -70,12 +70,6 ; -204,26 +198,8 ; -231,24 +207,6 ; -268,9 +226,6 ; -286,9 +241,6 ; -307,9 +259,6 ;","parse_index_entry(PyObject *op, npy_intp *step_size;parse_index(PyArrayObject *self, PyObject *op;slice_coerce_index(PyObject *o, npy_intp *v;slice_GetIndices(PySliceObject *r, npy_intp length;slice_GetIndices(PySliceObject *r, npy_intp length;slice_GetIndices(PySliceObject *r, npy_intp length;"
3243,12,482142c, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 13 Apr 2013 09:57:11 +0200","ct: [PATCH 04/12] MAINT: Remove non-integer deprecations which are now in PyIntAsIntpAlso removed old (commented) macro, the use of PyNumber_Index isnow actually implemented in PyIntAsIntp and not necessary here.Removes PyIndex_Check compatibility macros, since we do not supportpython < 2.5 anymore.Change integer conversion error to IndexError, previously thesefell through and eventually became an IndexError.",3,8,108,numpy/core/src/multiarray/mapping.c,[u'51'],5,28," -560,33 +560,17 ; -940,7 +924,6 ; -960,12 +943,6 ; -1070,11 +1047,8 ; -1090,14 +1064,6 ; -1472,11 +1438,8 ;","array_subscript_simple(PyArrayObject *self, PyObject *op, int check_index;_is_full_index(PyObject *ind, PyArrayObject *arr;_tuple_of_integers(PyObject *seq, npy_intp *vals, int maxvals;array_subscript_fromobject(PyArrayObject *self, PyObject *op;array_subscript_fromobject(PyArrayObject *self, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;"
3243,12,482142c, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 13 Apr 2013 09:57:11 +0200","ct: [PATCH 04/12] MAINT: Remove non-integer deprecations which are now in PyIntAsIntpAlso removed old (commented) macro, the use of PyNumber_Index isnow actually implemented in PyIntAsIntp and not necessary here.Removes PyIndex_Check compatibility macros, since we do not supportpython < 2.5 anymore.Change integer conversion error to IndexError, previously thesefell through and eventually became an IndexError.",3,8,108,numpy/core/src/private/npy_pycompat.h,[u'12'],0,8," -13,16 +13,4 ;",;
3243,12,399e55b, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 13 Apr 2013 09:58:00 +0200",ct: [PATCH 05/12] TST: Rework test_deprecations.py and add new tests.,2,192,108,numpy/core/tests/test_deprecations.py,[u'295'],22,12," -6,65 +6,127 ; -72,31 +134,26 ; -106,18 +163,21 ; -126,40 +186,10 ; -180,18 +210,19 ; -203,5 +234,57 ;",;class TestFloatScalarIndexDeprecation(object);def test_deprecations(self);def test_valid_not_deprecated(self);def test_deprecations(self);def test_valid_not_deprecated(self);
3243,12,399e55b, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 13 Apr 2013 09:58:00 +0200",ct: [PATCH 05/12] TST: Rework test_deprecations.py and add new tests.,2,192,108,numpy/core/tests/test_indexing.py,[u'5'],1,1," -73,8 +73,9 ;",def test_single_bool_index(self);
3243,12,c51f254, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 20 Apr 2013 23:48:13 +0200",ct: [PATCH 06/12] STY: style and small doc fixes for integer deprecations,2,7,4,numpy/core/src/multiarray/conversion_utils.c,[u'7'],5,2," -96,13 +96,16 ;","PyArray_IntpConverter(PyObject *obj, PyArray_Dims *seq;"
3243,12,c51f254, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 20 Apr 2013 23:48:13 +0200",ct: [PATCH 06/12] STY: style and small doc fixes for integer deprecations,2,7,4,numpy/core/src/multiarray/number.c,[u'4'],2,2," -841,8 +841,8 ;",array_index(PyArrayObject *v;
3243,12,3a340b0, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 31 May 2013 16:39:32 +0200",ct: [PATCH 07/12] MAINT: Create new function PyArray_IntpFromIndexSequenceThis function uses npy_intp to in principle support larger thenint sequence lengths.,2,26,7,numpy/core/src/multiarray/conversion_utils.c,[u'30'],21,7," -121,7 +121,7 ; -828,15 +828,19 ; -886,6 +890,18 ;","PyArray_IntpConverter(PyObject *obj, PyArray_Dims *seq;PyArray_PyIntAsIntp(PyObject *o;PyArray_IntpFromSequence(PyObject *seq, npy_intp *vals, int maxvals;"
3243,12,3a340b0, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 31 May 2013 16:39:32 +0200",ct: [PATCH 07/12] MAINT: Create new function PyArray_IntpFromIndexSequenceThis function uses npy_intp to in principle support larger thenint sequence lengths.,2,26,7,numpy/core/src/multiarray/conversion_utils.h,[u'3'],3,0," -25,6 +25,9 ;",PyArray_PyIntAsInt(PyObject *o);
3243,12,187f128, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 31 May 2013 19:55:43 +0200",ct: [PATCH 08/12] DOC: Add integer deprecations to release notes(also minor spelling fix in comments),2,7,4,doc/release/1.8.0-notes.rst,[u'7'],5,2," -168,8 +168,11 ;",The 'full' and 'economic' modes of qr factorization are deprecated;
3243,12,187f128, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 31 May 2013 19:55:43 +0200",ct: [PATCH 08/12] DOC: Add integer deprecations to release notes(also minor spelling fix in comments),2,7,4,numpy/core/tests/test_deprecations.py,[u'4'],2,2," -126,7 +126,7 ; -287,4 +287,4 ;",class TestFloatNonIntegerArgumentDeprecation(_DeprecationTestCase);def test_array_to_index_deprecation(self);
3243,12,0e9dccd, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 31 May 2013 20:52:56 +0200",ct: [PATCH 09/12] MAINT: Use warnings context manager instead of doing it by hand,1,11,12,numpy/core/tests/test_deprecations.py,[u'23'],11,12," -90,18 +90,17 ;","def assert_deprecated(self, function, num=1, ignore_others=False;"
3243,12,a6a2c60, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 6 Jun 2013 14:59:50 +0200",ct: [PATCH 10/12] STY: Style fixes for integer deprecation changesAlso minor changes in the documentation.,4,15,14,numpy/core/src/multiarray/conversion_utils.c,[u'22'],12,10," -191,7 +191,7 ; -812,7 +812,7 ; -820,7 +820,7 ; -849,13 +849,15 ; -876,8 +878,8 ; -892,13 +894,13 ;","PyArray_AxisConverter(PyObject *obj, int *axis;PyArray_PyIntAsIntp(PyObject *o;PyArray_PyIntAsIntp(PyObject *o;PyArray_IntpFromIndexSequence(PyObject *seq, npy_intp *vals, npy_intp maxvals;PyArray_IntpFromIndexSequence(PyObject *seq, npy_intp *vals, npy_intp maxvals;PyArray_IntpFromIndexSequence(PyObject *seq, npy_intp *vals, npy_intp maxvals;"
3243,12,a6a2c60, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 6 Jun 2013 14:59:50 +0200",ct: [PATCH 10/12] STY: Style fixes for integer deprecation changesAlso minor changes in the documentation.,4,15,14,numpy/core/tests/test_deprecations.py,[u'3'],1,2," -6,13 +6,12 ;",;
3243,12,a6a2c60, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 6 Jun 2013 14:59:50 +0200",ct: [PATCH 10/12] STY: Style fixes for integer deprecation changesAlso minor changes in the documentation.,4,15,14,numpy/lib/shape_base.py,[u'2'],1,1," -830,5 +830,5 ;","def tile(A, reps);"
3243,12,a6a2c60, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 6 Jun 2013 14:59:50 +0200",ct: [PATCH 10/12] STY: Style fixes for integer deprecation changesAlso minor changes in the documentation.,4,15,14,numpy/random/tests/test_regression.py,[u'2'],1,1," -74,7 +74,7 ;",def test_call_within_randomstate(self);
3243,12,e67269a, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 7 Jun 2013 16:19:03 +0200",ct: [PATCH 11/12] MAINT: Minor style fix and integer conversion optimizations,1,12,12,numpy/core/src/multiarray/conversion_utils.c,[u'24'],12,12," -712,12 +712,13 ; -727,7 +728,7 ; -797,17 +798,16 ; -825,7 +825,7 ;",PyArray_PyIntAsIntp(PyObject *o;PyArray_PyIntAsIntp(PyObject *o;PyArray_PyIntAsIntp(PyObject *o;PyArray_PyIntAsIntp(PyObject *o;
3243,12,163f6df, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 9 Jun 2013 16:57:01 +0200",ct: [PATCH 12/12] MAINT: Disallow np.bool_ being used as integerThis makes the deprecation of bools used as integers completefrom the numpy perspective. It would not be unsensible to movethe bool checks into indexing specific code though.,2,14,0,numpy/core/src/multiarray/conversion_utils.c,[u'11'],10,1," -698,7 +698,7 ; -730,6 +730,15 ;",PyArray_PyIntAsIntp(PyObject *o;PyArray_PyIntAsIntp(PyObject *o;
3243,12,163f6df, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 9 Jun 2013 16:57:01 +0200",ct: [PATCH 12/12] MAINT: Disallow np.bool_ being used as integerThis makes the deprecation of bools used as integers completefrom the numpy perspective. It would not be unsensible to movethe bool checks into indexing specific code though.,2,14,0,numpy/core/tests/test_deprecations.py,[u'4'],4,0," -255,6 +255,10 ;",def test_bool_as_int_argument(self);
3242,1,c879ad8, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 12:21:42 -0600",ct: [PATCH] 2to3: Apply types fixer.Python 3 removes the builtin types from the types module. The typesfixer replaces such references with the builtin types where possibleand also takes care of some special cases:    types.TypeNone           <- type(None)    types.NotImplementedType <- type(NotImplemented)    types.EllipsisType       <- type(Ellipsis)The only two tricky substitutions are    types.StringType         <- bytes    types.LongType           <- intThese are fixed up to support both Python 3 and Python 2 code byimporting the long and bytes types from numpy.compat.Closes #3240.,15,106,114,numpy/compat/_inspect.py,[u'2'],1,1," -151,7 +151,7 ;",def joinseq(seq);
3242,1,c879ad8, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 12:21:42 -0600",ct: [PATCH] 2to3: Apply types fixer.Python 3 removes the builtin types from the types module. The typesfixer replaces such references with the builtin types where possibleand also takes care of some special cases:    types.TypeNone           <- type(None)    types.NotImplementedType <- type(NotImplemented)    types.EllipsisType       <- type(Ellipsis)The only two tricky substitutions are    types.StringType         <- bytes    types.LongType           <- intThese are fixed up to support both Python 3 and Python 2 code byimporting the long and bytes types from numpy.compat.Closes #3240.,15,106,114,numpy/core/fromnumeric.py,[u'21'],11,10," -3,7 +3,16 ; -16,19 +25,11 ;",;;
3242,1,c879ad8, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 12:21:42 -0600",ct: [PATCH] 2to3: Apply types fixer.Python 3 removes the builtin types from the types module. The typesfixer replaces such references with the builtin types where possibleand also takes care of some special cases:    types.TypeNone           <- type(None)    types.NotImplementedType <- type(NotImplemented)    types.EllipsisType       <- type(Ellipsis)The only two tricky substitutions are    types.StringType         <- bytes    types.LongType           <- intThese are fixed up to support both Python 3 and Python 2 code byimporting the long and bytes types from numpy.compat.Closes #3240.,15,106,114,numpy/core/records.py,[u'14'],7,7," -36,18 +36,18 ; -171,7 +171,7 ;",";def _setfieldnames(self, names, titles);"
3242,1,c879ad8, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 12:21:42 -0600",ct: [PATCH] 2to3: Apply types fixer.Python 3 removes the builtin types from the types module. The typesfixer replaces such references with the builtin types where possibleand also takes care of some special cases:    types.TypeNone           <- type(None)    types.NotImplementedType <- type(NotImplemented)    types.EllipsisType       <- type(Ellipsis)The only two tricky substitutions are    types.StringType         <- bytes    types.LongType           <- intThese are fixed up to support both Python 3 and Python 2 code byimporting the long and bytes types from numpy.compat.Closes #3240.,15,106,114,numpy/f2py/auxfuncs.py,[u'41'],20,21," -16,17 +16,16 ; -599,7 +598,7 ; -608,9 +607,9 ; -619,14 +618,14 ; -636,13 +635,13 ; -655,7 +654,7 ; -674,7 +673,7 ; -682,13 +681,13 ; -696,7 +695,7 ; -704,7 +703,7 ;",";def gentitle(name);def stripcomma(s);def replace(str,d,defaultsep='');def dictappend(rd,ar);def dictappend(rd,ar);def applyrules(rules,d,var={});def applyrules(rules,d,var={});def applyrules(rules,d,var={});def applyrules(rules,d,var={});"
3242,1,c879ad8, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 12:21:42 -0600",ct: [PATCH] 2to3: Apply types fixer.Python 3 removes the builtin types from the types module. The typesfixer replaces such references with the builtin types where possibleand also takes care of some special cases:    types.TypeNone           <- type(None)    types.NotImplementedType <- type(NotImplemented)    types.EllipsisType       <- type(Ellipsis)The only two tricky substitutions are    types.StringType         <- bytes    types.LongType           <- intThese are fixed up to support both Python 3 and Python 2 code byimporting the long and bytes types from numpy.compat.Closes #3240.,15,106,114,numpy/f2py/cb_rules.py,[u'18'],8,10," -15,21 +15,19 ; -484,7 +482,7 ; -501,10 +499,10 ;",";def buildcallback(rout,um);def buildcallback(rout,um);"
3242,1,c879ad8, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 12:21:42 -0600",ct: [PATCH] 2to3: Apply types fixer.Python 3 removes the builtin types from the types module. The typesfixer replaces such references with the builtin types where possibleand also takes care of some special cases:    types.TypeNone           <- type(None)    types.NotImplementedType <- type(NotImplemented)    types.EllipsisType       <- type(Ellipsis)The only two tricky substitutions are    types.StringType         <- bytes    types.LongType           <- intThese are fixed up to support both Python 3 and Python 2 code byimporting the long and bytes types from numpy.compat.Closes #3240.,15,106,114,numpy/f2py/cfuncs.py,[u'16'],7,9," -16,15 +16,13 ; -1130,7 +1128,7 ; -1162,7 +1160,7 ; -1178,7 +1176,7 ;",";def buildcfuncs();def append_needs(need,flag=1);def append_needs(need,flag=1);"
3242,1,c879ad8, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 12:21:42 -0600",ct: [PATCH] 2to3: Apply types fixer.Python 3 removes the builtin types from the types module. The typesfixer replaces such references with the builtin types where possibleand also takes care of some special cases:    types.TypeNone           <- type(None)    types.NotImplementedType <- type(NotImplemented)    types.EllipsisType       <- type(Ellipsis)The only two tricky substitutions are    types.StringType         <- bytes    types.LongType           <- intThese are fixed up to support both Python 3 and Python 2 code byimporting the long and bytes types from numpy.compat.Closes #3240.,15,106,114,numpy/f2py/crackfortran.py,[u'17'],8,9," -140,12 +140,6 ; -153,8 +147,13 ; -1523,7 +1522,7 ; -1560,7 +1559,7 ; -1572,7 +1571,7 ;",";;def postcrack2(block,tab='',param_map=None);def postcrack(block,args=None,tab='');def postcrack(block,args=None,tab='');"
3242,1,c879ad8, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 12:21:42 -0600",ct: [PATCH] 2to3: Apply types fixer.Python 3 removes the builtin types from the types module. The typesfixer replaces such references with the builtin types where possibleand also takes care of some special cases:    types.TypeNone           <- type(None)    types.NotImplementedType <- type(NotImplemented)    types.EllipsisType       <- type(Ellipsis)The only two tricky substitutions are    types.StringType         <- bytes    types.LongType           <- intThese are fixed up to support both Python 3 and Python 2 code byimporting the long and bytes types from numpy.compat.Closes #3240.,15,106,114,numpy/f2py/f2py2e.py,[u'14'],6,8," -16,17 +16,10 ; -34,7 +27,12 ; -341,7 +339,7 ;",";;def dict_append(d_out,d_in);"
3242,1,c879ad8, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 12:21:42 -0600",ct: [PATCH] 2to3: Apply types fixer.Python 3 removes the builtin types from the types module. The typesfixer replaces such references with the builtin types where possibleand also takes care of some special cases:    types.TypeNone           <- type(None)    types.NotImplementedType <- type(NotImplemented)    types.EllipsisType       <- type(Ellipsis)The only two tricky substitutions are    types.StringType         <- bytes    types.LongType           <- intThese are fixed up to support both Python 3 and Python 2 code byimporting the long and bytes types from numpy.compat.Closes #3240.,15,106,114,numpy/f2py/rules.py,[u'20'],10,10," -60,11 +60,7 ; -74,8 +70,12 ; -1388,9 +1388,9 ; -1415,15 +1415,15 ;",;;def buildapi(rout);def buildapi(rout);
3242,1,c879ad8, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 12:21:42 -0600",ct: [PATCH] 2to3: Apply types fixer.Python 3 removes the builtin types from the types module. The typesfixer replaces such references with the builtin types where possibleand also takes care of some special cases:    types.TypeNone           <- type(None)    types.NotImplementedType <- type(NotImplemented)    types.EllipsisType       <- type(Ellipsis)The only two tricky substitutions are    types.StringType         <- bytes    types.LongType           <- intThese are fixed up to support both Python 3 and Python 2 code byimporting the long and bytes types from numpy.compat.Closes #3240.,15,106,114,numpy/fft/helper.py,[u'13'],7,6," -4,14 +4,15 ; -156,7 +157,7 ; -212,7 +213,7 ;",";def fftfreq(n, d=1.0);def rfftfreq(n, d=1.0);"
3242,1,c879ad8, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 12:21:42 -0600",ct: [PATCH] 2to3: Apply types fixer.Python 3 removes the builtin types from the types module. The typesfixer replaces such references with the builtin types where possibleand also takes care of some special cases:    types.TypeNone           <- type(None)    types.NotImplementedType <- type(NotImplemented)    types.EllipsisType       <- type(Ellipsis)The only two tricky substitutions are    types.StringType         <- bytes    types.LongType           <- intThese are fixed up to support both Python 3 and Python 2 code byimporting the long and bytes types from numpy.compat.Closes #3240.,15,106,114,numpy/ma/tests/test_core.py,[u'3'],1,2," -8,7 +8,6 ; -836,7 +835,7 ;",;def test_count_func (self);
3242,1,c879ad8, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 12:21:42 -0600",ct: [PATCH] 2to3: Apply types fixer.Python 3 removes the builtin types from the types module. The typesfixer replaces such references with the builtin types where possibleand also takes care of some special cases:    types.TypeNone           <- type(None)    types.NotImplementedType <- type(NotImplemented)    types.EllipsisType       <- type(Ellipsis)The only two tricky substitutions are    types.StringType         <- bytes    types.LongType           <- intThese are fixed up to support both Python 3 and Python 2 code byimporting the long and bytes types from numpy.compat.Closes #3240.,15,106,114,numpy/ma/tests/test_old_ma.py,[u'5'],2,3," -1,7 +1,6 ; -166,7 +165,7 ; -175,7 +174,7 ;",;def test_xtestCount (self);def test_xtestCount (self);
3242,1,c879ad8, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 12:21:42 -0600",ct: [PATCH] 2to3: Apply types fixer.Python 3 removes the builtin types from the types module. The typesfixer replaces such references with the builtin types where possibleand also takes care of some special cases:    types.TypeNone           <- type(None)    types.NotImplementedType <- type(NotImplemented)    types.EllipsisType       <- type(Ellipsis)The only two tricky substitutions are    types.StringType         <- bytes    types.LongType           <- intThese are fixed up to support both Python 3 and Python 2 code byimporting the long and bytes types from numpy.compat.Closes #3240.,15,106,114,numpy/oldnumeric/ma.py,[u'27'],14,13," -18,10 +18,12 ; -93,13 +95,13 ; -119,9 +121,9 ; -136,9 +138,9 ; -239,7 +241,7 ; -1543,7 +1545,7 ; -2153,10 +2155,9 ; -2280,7 +2281,7 ;",";def __str__ (self);def default_fill_value (obj);def minimum_fill_value (obj);def filled (a, value = None);def new_repeat(a, repeats, axis=None);def asarray(data, dtype=None);def _std(self,axis=None, dtype=None, out=None);"
3242,1,c879ad8, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 12:21:42 -0600",ct: [PATCH] 2to3: Apply types fixer.Python 3 removes the builtin types from the types module. The typesfixer replaces such references with the builtin types where possibleand also takes care of some special cases:    types.TypeNone           <- type(None)    types.NotImplementedType <- type(NotImplemented)    types.EllipsisType       <- type(Ellipsis)The only two tricky substitutions are    types.StringType         <- bytes    types.LongType           <- intThese are fixed up to support both Python 3 and Python 2 code byimporting the long and bytes types from numpy.compat.Closes #3240.,15,106,114,numpy/testing/utils.py,[u'7'],3,4," -8,7 +8,6 ; -54,7 +53,7 ; -73,7 +72,7 ; -94,7 +93,7 ;",;def gisnan(x);def gisfinite(x);def gisinf(x);
3242,1,c879ad8, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 12:21:42 -0600",ct: [PATCH] 2to3: Apply types fixer.Python 3 removes the builtin types from the types module. The typesfixer replaces such references with the builtin types where possibleand also takes care of some special cases:    types.TypeNone           <- type(None)    types.NotImplementedType <- type(NotImplemented)    types.EllipsisType       <- type(Ellipsis)The only two tricky substitutions are    types.StringType         <- bytes    types.LongType           <- intThese are fixed up to support both Python 3 and Python 2 code byimporting the long and bytes types from numpy.compat.Closes #3240.,15,106,114,tools/py3tool.py,[u'2'],1,1," -88,7 +88,7 ;",;
3241,1,54ca3f2, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 11:17:54 -0600","ct: [PATCH] 2to3: Apply nonzero fixer.In Python 3 the `__nonzero__` class method is replaced by `__bool__`.This only affects the MaskedArray class in numpy/oldnumeric/ma.py fileand the simplest solution is to provide both methods. I have my doubtsthat the fixed up Python 3 version was correct or even tested, but Ithink the current solution should work for as long as oldnumeric staysin numpy.Closes #3073.",2,16,0,numpy/oldnumeric/ma.py,[u'15'],15,0," -865,6 +865,18 ; -2134,10 +2146,13 ;","def __nonzero__(self);def asarray(data, dtype=None);"
3241,1,54ca3f2, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 11:17:54 -0600","ct: [PATCH] 2to3: Apply nonzero fixer.In Python 3 the `__nonzero__` class method is replaced by `__bool__`.This only affects the MaskedArray class in numpy/oldnumeric/ma.py fileand the simplest solution is to provide both methods. I have my doubtsthat the fixed up Python 3 version was correct or even tested, but Ithink the current solution should work for as long as oldnumeric staysin numpy.Closes #3073.",2,16,0,tools/py3tool.py,[u'2'],1,1," -73,7 +73,7 ;",;
3239,1,9d849ed, Pauli Virtanen <pav@iki.fi>," Sat, 13 Apr 2013 19:26:10 +0300",ct: [PATCH] ENH: testing: remove an annoying line feed from skipif decoratorThe line feed is annoying as it makes Nose's verbose test output notprint one line per one test.,1,2,2,numpy/testing/decorators.py,[u'4'],2,2," -135,9 +135,9 ;","def get_msg(func,msg=None);"
3238,1,ffdad17, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 09:36:36 -0600",ct: [PATCH] 2to3: Apply renames fixer.Rename sys.maxint to sys.maxsize when the Python version is >= 3.  Thischange was made in Python 3 because all integers are 'long' integers andtheir maximum value bears no relationship to the C type that int used torepresent. The new sys.maxsize value is the maximum value of Py_ssize_t.This change has not led to any reported problems since the numpy 1.5release.Closes #3082,3,23,11,numpy/core/arrayprint.py,[u'8'],6,2," -22,6 +22,12 ; -633,8 +639,6 ;",";def _digits(x, precision, format);"
3238,1,ffdad17, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 09:36:36 -0600",ct: [PATCH] 2to3: Apply renames fixer.Rename sys.maxint to sys.maxsize when the Python version is >= 3.  Thischange was made in Python 3 because all integers are 'long' integers andtheir maximum value bears no relationship to the C type that int used torepresent. The new sys.maxsize value is the maximum value of Py_ssize_t.This change has not led to any reported problems since the numpy 1.5release.Closes #3082,3,23,11,numpy/oldnumeric/ma.py,[u'24'],16,8," -11,7 +11,10 ; -19,8 +22,13 ; -114,15 +122,15 ; -131,13 +139,13 ;",;;def minimum_fill_value (obj);def maximum_fill_value (obj);
3238,1,ffdad17, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 09:36:36 -0600",ct: [PATCH] 2to3: Apply renames fixer.Rename sys.maxint to sys.maxsize when the Python version is >= 3.  Thischange was made in Python 3 because all integers are 'long' integers andtheir maximum value bears no relationship to the C type that int used torepresent. The new sys.maxsize value is the maximum value of Py_ssize_t.This change has not led to any reported problems since the numpy 1.5release.Closes #3082,3,23,11,tools/py3tool.py,[u'2'],1,1," -81,7 +81,7 ;",;
3237,1,68338ee, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 09:05:31 -0600","ct: [PATCH] 2to3: Apply basestring fixer.The basestring class is not defined in Python 3 and the fixer replacesit with str. In order to have a common code base we define basestring innumpy/compat/py3k.py to be str when the Python version is >= 3,otherwise basestring and import it where needed.  That works for mostcases, but there are a few files where the version dependent defineneeds to be in the file.Closes #3042.",12,28,16,numpy/compat/py3k.py,[u'5'],4,1," -6,14 +6,16 ; -45,6 +47,7 ;",";def open_latin1(filename, mode='r');"
3237,1,68338ee, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 09:05:31 -0600","ct: [PATCH] 2to3: Apply basestring fixer.The basestring class is not defined in Python 3 and the fixer replacesit with str. In order to have a common code base we define basestring innumpy/compat/py3k.py to be str when the Python version is >= 3,otherwise basestring and import it where needed.  That works for mostcases, but there are a few files where the version dependent defineneeds to be in the file.Closes #3042.",12,28,16,numpy/core/memmap.py,[u'2'],1,1," -7,7 +7,7 ;",;
3237,1,68338ee, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 09:05:31 -0600","ct: [PATCH] 2to3: Apply basestring fixer.The basestring class is not defined in Python 3 and the fixer replacesit with str. In order to have a common code base we define basestring innumpy/compat/py3k.py to be str when the Python version is >= 3,otherwise basestring and import it where needed.  That works for mostcases, but there are a few files where the version dependent defineneeds to be in the file.Closes #3042.",12,28,16,numpy/core/numeric.py,[u'3'],2,1," -2,15 +2,16 ;",;
3237,1,68338ee, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 09:05:31 -0600","ct: [PATCH] 2to3: Apply basestring fixer.The basestring class is not defined in Python 3 and the fixer replacesit with str. In order to have a common code base we define basestring innumpy/compat/py3k.py to be str when the Python version is >= 3,otherwise basestring and import it where needed.  That works for mostcases, but there are a few files where the version dependent defineneeds to be in the file.Closes #3042.",12,28,16,numpy/distutils/extension.py,[u'9'],6,3," -8,11 +8,14 ;",;
3237,1,68338ee, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 09:05:31 -0600","ct: [PATCH] 2to3: Apply basestring fixer.The basestring class is not defined in Python 3 and the fixer replacesit with str. In order to have a common code base we define basestring innumpy/compat/py3k.py to be str when the Python version is >= 3,otherwise basestring and import it where needed.  That works for mostcases, but there are a few files where the version dependent defineneeds to be in the file.Closes #3042.",12,28,16,numpy/lib/_iotools.py,[u'2'],1,1," -8,13 +8,13 ;",;
3237,1,68338ee, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 09:05:31 -0600","ct: [PATCH] 2to3: Apply basestring fixer.The basestring class is not defined in Python 3 and the fixer replacesit with str. In order to have a common code base we define basestring innumpy/compat/py3k.py to be str when the Python version is >= 3,otherwise basestring and import it where needed.  That works for mostcases, but there are a few files where the version dependent defineneeds to be in the file.Closes #3042.",12,28,16,numpy/lib/format.py,[u'2'],1,1," -139,7 +139,7 ;",;
3237,1,68338ee, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 09:05:31 -0600","ct: [PATCH] 2to3: Apply basestring fixer.The basestring class is not defined in Python 3 and the fixer replacesit with str. In order to have a common code base we define basestring innumpy/compat/py3k.py to be str when the Python version is >= 3,otherwise basestring and import it where needed.  That works for mostcases, but there are a few files where the version dependent defineneeds to be in the file.Closes #3042.",12,28,16,numpy/lib/npyio.py,[u'2'],1,1," -19,7 +19,7 ;",;
3237,1,68338ee, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 09:05:31 -0600","ct: [PATCH] 2to3: Apply basestring fixer.The basestring class is not defined in Python 3 and the fixer replacesit with str. In order to have a common code base we define basestring innumpy/compat/py3k.py to be str when the Python version is >= 3,otherwise basestring and import it where needed.  That works for mostcases, but there are a few files where the version dependent defineneeds to be in the file.Closes #3042.",12,28,16,numpy/lib/recfunctions.py,[u'1'],1,0," -15,6 +15,7 ;",;
3237,1,68338ee, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 09:05:31 -0600","ct: [PATCH] 2to3: Apply basestring fixer.The basestring class is not defined in Python 3 and the fixer replacesit with str. In order to have a common code base we define basestring innumpy/compat/py3k.py to be str when the Python version is >= 3,otherwise basestring and import it where needed.  That works for mostcases, but there are a few files where the version dependent defineneeds to be in the file.Closes #3042.",12,28,16,numpy/ma/core.py,[u'2'],1,1," -32,7 +32,7 ;",;
3237,1,68338ee, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 09:05:31 -0600","ct: [PATCH] 2to3: Apply basestring fixer.The basestring class is not defined in Python 3 and the fixer replacesit with str. In order to have a common code base we define basestring innumpy/compat/py3k.py to be str when the Python version is >= 3,otherwise basestring and import it where needed.  That works for mostcases, but there are a few files where the version dependent defineneeds to be in the file.Closes #3042.",12,28,16,numpy/ma/mrecords.py,[u'13'],8,5," -20,13 +20,17 ; -37,7 +41,6 ;",;;
3237,1,68338ee, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 09:05:31 -0600","ct: [PATCH] 2to3: Apply basestring fixer.The basestring class is not defined in Python 3 and the fixer replacesit with str. In order to have a common code base we define basestring innumpy/compat/py3k.py to be str when the Python version is >= 3,otherwise basestring and import it where needed.  That works for mostcases, but there are a few files where the version dependent defineneeds to be in the file.Closes #3042.",12,28,16,numpy/testing/nosetester.py,[u'1'],1,0," -10,6 +10,7 ;",;
3237,1,68338ee, Charles Harris <charlesr.harris@gmail.com>," Sat, 13 Apr 2013 09:05:31 -0600","ct: [PATCH] 2to3: Apply basestring fixer.The basestring class is not defined in Python 3 and the fixer replacesit with str. In order to have a common code base we define basestring innumpy/compat/py3k.py to be str when the Python version is >= 3,otherwise basestring and import it where needed.  That works for mostcases, but there are a few files where the version dependent defineneeds to be in the file.Closes #3042.",12,28,16,tools/py3tool.py,[u'2'],1,1," -46,7 +46,7 ;",;
3236,1,5de56ef, Charles Harris <charlesr.harris@gmail.com>," Fri, 12 Apr 2013 20:10:58 -0600","ct: [PATCH] 2to3: Apply itertools fixer.In Python 3 zip, map, and filter are all iterators, consequently theitertools variants izip, imap, and ifilter have been removed and theitertools fixer replaces them with the unprefixed names.Because the places where the iterator variants are used in current looklike places where the iterator version might be useful, the approachtaken here is to define the prefixed versions to the unprefixed versionsfor Python 3, but otherwise import them from itertools.Closes #3233.",3,12,5,numpy/lib/npyio.py,[u'4'],3,1," -24,8 +24,10 ; -1607,7 +1609,7 ;",";def genfromtxt(fname, dtype=float, comments='#', delimiter=None;"
3236,1,5de56ef, Charles Harris <charlesr.harris@gmail.com>," Fri, 12 Apr 2013 20:10:58 -0600","ct: [PATCH] 2to3: Apply itertools fixer.In Python 3 zip, map, and filter are all iterators, consequently theitertools variants izip, imap, and ifilter have been removed and theitertools fixer replaces them with the unprefixed names.Because the places where the iterator variants are used in current looklike places where the iterator version might be useful, the approachtaken here is to define the prefixed versions to the unprefixed versionsfor Python 3, but otherwise import them from itertools.Closes #3233.",3,12,5,numpy/lib/recfunctions.py,[u'11'],8,3," -16,6 +16,11 ; -287,7 +292,7 ; -412,7 +417,7 ; -441,7 +446,7 ;",;def sentinel(counter=([fill_value] * (len(seqarrays) - 1)).pop);def merge_arrays(seqarrays;def merge_arrays(seqarrays;
3236,1,5de56ef, Charles Harris <charlesr.harris@gmail.com>," Fri, 12 Apr 2013 20:10:58 -0600","ct: [PATCH] 2to3: Apply itertools fixer.In Python 3 zip, map, and filter are all iterators, consequently theitertools variants izip, imap, and ifilter have been removed and theitertools fixer replaces them with the unprefixed names.Because the places where the iterator variants are used in current looklike places where the iterator version might be useful, the approachtaken here is to define the prefixed versions to the unprefixed versionsfor Python 3, but otherwise import them from itertools.Closes #3233.",3,12,5,tools/py3tool.py,[u'2'],1,1," -65,8 +65,8 ;",;
3235,1,7e6c3eb, Charles Harris <charlesr.harris@gmail.com>," Fri, 12 Apr 2013 21:01:00 -0600","ct: [PATCH] 2to3: Skip itertools_imports fixer.No files are changed by the itertools_imports fixer so skip it.  Whatthe fixer does is rename imports of imap, ifilter, and izip to map,filter, and zip since the latter are iterators in Python 3.Closes #3234",1,0,0,tools/py3tool.py,[u'2'],1,1," -66,7 +66,7 ;",;
3232,1,7f5af37, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Apr 2013 14:31:52 -0600","ct: [PATCH] 2to3: Apply the `numliterals` fixer and skip the `long` fixer.The numliterals fixer replaces the old style octal number like '01' by'0o1' removes the 'L' suffix.Octal values were previously mistakenly specified in some dates, thoseuses have been corrected by removing the leading zeros.Simply Removing the 'L' suffix should not be a problem, but in sometesting code it looks neccesary, so in those places the Python longconstructor is used instead.The 'long' type is no longer defined in Python 3. Because we need tohave it defined for Python 2 it is added to numpy/compat/np3k.py whereit is defined as 'int' for Python 3 and 'long' for Python 2. The `long`fixer then needs to be skipped so that it doesn't undo the good work.Closes #3074, #3067.",29,78,58,numpy/__init__.py,[u'5'],3,2," -159,13 +159,14 ;","def pkgload(*packages, **options);"
3232,1,7f5af37, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Apr 2013 14:31:52 -0600","ct: [PATCH] 2to3: Apply the `numliterals` fixer and skip the `long` fixer.The numliterals fixer replaces the old style octal number like '01' by'0o1' removes the 'L' suffix.Octal values were previously mistakenly specified in some dates, thoseuses have been corrected by removing the leading zeros.Simply Removing the 'L' suffix should not be a problem, but in sometesting code it looks neccesary, so in those places the Python longconstructor is used instead.The 'long' type is no longer defined in Python 3. Because we need tohave it defined for Python 2 it is added to numpy/compat/np3k.py whereit is defined as 'int' for Python 3 and 'long' for Python 2. The `long`fixer then needs to be skipped so that it doesn't undo the good work.Closes #3074, #3067.",29,78,58,numpy/compat/py3k.py,[u'9'],8,1," -6,12 +6,14 ; -38,13 +40,17 ; -56,6 +62,7 ;",";def open_latin1(filename, mode='r');def asunicode(s);"
3232,1,7f5af37, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Apr 2013 14:31:52 -0600","ct: [PATCH] 2to3: Apply the `numliterals` fixer and skip the `long` fixer.The numliterals fixer replaces the old style octal number like '01' by'0o1' removes the 'L' suffix.Octal values were previously mistakenly specified in some dates, thoseuses have been corrected by removing the leading zeros.Simply Removing the 'L' suffix should not be a problem, but in sometesting code it looks neccesary, so in those places the Python longconstructor is used instead.The 'long' type is no longer defined in Python 3. Because we need tohave it defined for Python 2 it is added to numpy/compat/np3k.py whereit is defined as 'int' for Python 3 and 'long' for Python 2. The `long`fixer then needs to be skipped so that it doesn't undo the good work.Closes #3074, #3067.",29,78,58,numpy/core/defchararray.py,[u'2'],1,1," -22,7 +22,7 ;",;
3232,1,7f5af37, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Apr 2013 14:31:52 -0600","ct: [PATCH] 2to3: Apply the `numliterals` fixer and skip the `long` fixer.The numliterals fixer replaces the old style octal number like '01' by'0o1' removes the 'L' suffix.Octal values were previously mistakenly specified in some dates, thoseuses have been corrected by removing the leading zeros.Simply Removing the 'L' suffix should not be a problem, but in sometesting code it looks neccesary, so in those places the Python longconstructor is used instead.The 'long' type is no longer defined in Python 3. Because we need tohave it defined for Python 2 it is added to numpy/compat/np3k.py whereit is defined as 'int' for Python 3 and 'long' for Python 2. The `long`fixer then needs to be skipped so that it doesn't undo the good work.Closes #3074, #3067.",29,78,58,numpy/core/getlimits.py,[u'6'],3,3," -260,7 +260,7 ; -272,9 +272,9 ;",def min(self);def max(self);
3232,1,7f5af37, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Apr 2013 14:31:52 -0600","ct: [PATCH] 2to3: Apply the `numliterals` fixer and skip the `long` fixer.The numliterals fixer replaces the old style octal number like '01' by'0o1' removes the 'L' suffix.Octal values were previously mistakenly specified in some dates, thoseuses have been corrected by removing the leading zeros.Simply Removing the 'L' suffix should not be a problem, but in sometesting code it looks neccesary, so in those places the Python longconstructor is used instead.The 'long' type is no longer defined in Python 3. Because we need tohave it defined for Python 2 it is added to numpy/compat/np3k.py whereit is defined as 'int' for Python 3 and 'long' for Python 2. The `long`fixer then needs to be skipped so that it doesn't undo the good work.Closes #3074, #3067.",29,78,58,numpy/core/memmap.py,[u'3'],2,1," -3,10 +3,11 ;",;
3232,1,7f5af37, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Apr 2013 14:31:52 -0600","ct: [PATCH] 2to3: Apply the `numliterals` fixer and skip the `long` fixer.The numliterals fixer replaces the old style octal number like '01' by'0o1' removes the 'L' suffix.Octal values were previously mistakenly specified in some dates, thoseuses have been corrected by removing the leading zeros.Simply Removing the 'L' suffix should not be a problem, but in sometesting code it looks neccesary, so in those places the Python longconstructor is used instead.The 'long' type is no longer defined in Python 3. Because we need tohave it defined for Python 2 it is added to numpy/compat/np3k.py whereit is defined as 'int' for Python 3 and 'long' for Python 2. The `long`fixer then needs to be skipped so that it doesn't undo the good work.Closes #3074, #3067.",29,78,58,numpy/core/numerictypes.py,[u'22'],9,13," -90,26 +90,22 ; -861,7 +857,7 ;",;def sctype2char(sctype);
3232,1,7f5af37, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Apr 2013 14:31:52 -0600","ct: [PATCH] 2to3: Apply the `numliterals` fixer and skip the `long` fixer.The numliterals fixer replaces the old style octal number like '01' by'0o1' removes the 'L' suffix.Octal values were previously mistakenly specified in some dates, thoseuses have been corrected by removing the leading zeros.Simply Removing the 'L' suffix should not be a problem, but in sometesting code it looks neccesary, so in those places the Python longconstructor is used instead.The 'long' type is no longer defined in Python 3. Because we need tohave it defined for Python 2 it is added to numpy/compat/np3k.py whereit is defined as 'int' for Python 3 and 'long' for Python 2. The `long`fixer then needs to be skipped so that it doesn't undo the good work.Closes #3074, #3067.",29,78,58,numpy/core/records.py,[u'2'],1,1," -46,7 +46,7 ;",;
3232,1,7f5af37, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Apr 2013 14:31:52 -0600","ct: [PATCH] 2to3: Apply the `numliterals` fixer and skip the `long` fixer.The numliterals fixer replaces the old style octal number like '01' by'0o1' removes the 'L' suffix.Octal values were previously mistakenly specified in some dates, thoseuses have been corrected by removing the leading zeros.Simply Removing the 'L' suffix should not be a problem, but in sometesting code it looks neccesary, so in those places the Python longconstructor is used instead.The 'long' type is no longer defined in Python 3. Because we need tohave it defined for Python 2 it is added to numpy/compat/np3k.py whereit is defined as 'int' for Python 3 and 'long' for Python 2. The `long`fixer then needs to be skipped so that it doesn't undo the good work.Closes #3074, #3067.",29,78,58,numpy/core/tests/test_regression.py,[u'2'],1,1," -17,7 +17,7 ;",;
3232,1,7f5af37, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Apr 2013 14:31:52 -0600","ct: [PATCH] 2to3: Apply the `numliterals` fixer and skip the `long` fixer.The numliterals fixer replaces the old style octal number like '01' by'0o1' removes the 'L' suffix.Octal values were previously mistakenly specified in some dates, thoseuses have been corrected by removing the leading zeros.Simply Removing the 'L' suffix should not be a problem, but in sometesting code it looks neccesary, so in those places the Python longconstructor is used instead.The 'long' type is no longer defined in Python 3. Because we need tohave it defined for Python 2 it is added to numpy/compat/np3k.py whereit is defined as 'int' for Python 3 and 'long' for Python 2. The `long`fixer then needs to be skipped so that it doesn't undo the good work.Closes #3074, #3067.",29,78,58,numpy/core/tests/test_shape_base.py,[u'3'],2,1," -6,6 +6,7 ; -43,7 +44,7 ;",;def test_r1array(self);
3232,1,7f5af37, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Apr 2013 14:31:52 -0600","ct: [PATCH] 2to3: Apply the `numliterals` fixer and skip the `long` fixer.The numliterals fixer replaces the old style octal number like '01' by'0o1' removes the 'L' suffix.Octal values were previously mistakenly specified in some dates, thoseuses have been corrected by removing the leading zeros.Simply Removing the 'L' suffix should not be a problem, but in sometesting code it looks neccesary, so in those places the Python longconstructor is used instead.The 'long' type is no longer defined in Python 3. Because we need tohave it defined for Python 2 it is added to numpy/compat/np3k.py whereit is defined as 'int' for Python 3 and 'long' for Python 2. The `long`fixer then needs to be skipped so that it doesn't undo the good work.Closes #3074, #3067.",29,78,58,numpy/f2py/tests/test_return_complex.py,[u'5'],3,2," -2,6 +2,7 ; -13,7 +14,7 ; -44,7 +45,7 ;",";def check_function(self, t);def check_function(self, t);"
3232,1,7f5af37, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Apr 2013 14:31:52 -0600","ct: [PATCH] 2to3: Apply the `numliterals` fixer and skip the `long` fixer.The numliterals fixer replaces the old style octal number like '01' by'0o1' removes the 'L' suffix.Octal values were previously mistakenly specified in some dates, thoseuses have been corrected by removing the leading zeros.Simply Removing the 'L' suffix should not be a problem, but in sometesting code it looks neccesary, so in those places the Python longconstructor is used instead.The 'long' type is no longer defined in Python 3. Because we need tohave it defined for Python 2 it is added to numpy/compat/np3k.py whereit is defined as 'int' for Python 3 and 'long' for Python 2. The `long`fixer then needs to be skipped so that it doesn't undo the good work.Closes #3074, #3067.",29,78,58,numpy/f2py/tests/test_return_integer.py,[u'5'],3,2," -2,13 +2,14 ; -34,7 +35,7 ;",";def check_function(self, t);"
3232,1,7f5af37, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Apr 2013 14:31:52 -0600","ct: [PATCH] 2to3: Apply the `numliterals` fixer and skip the `long` fixer.The numliterals fixer replaces the old style octal number like '01' by'0o1' removes the 'L' suffix.Octal values were previously mistakenly specified in some dates, thoseuses have been corrected by removing the leading zeros.Simply Removing the 'L' suffix should not be a problem, but in sometesting code it looks neccesary, so in those places the Python longconstructor is used instead.The 'long' type is no longer defined in Python 3. Because we need tohave it defined for Python 2 it is added to numpy/compat/np3k.py whereit is defined as 'int' for Python 3 and 'long' for Python 2. The `long`fixer then needs to be skipped so that it doesn't undo the good work.Closes #3074, #3067.",29,78,58,numpy/f2py/tests/test_return_logical.py,[u'5'],3,2," -2,6 +2,7 ; -15,7 +16,7 ; -25,7 +26,7 ;",";def check_function(self, t);def check_function(self, t);"
3232,1,7f5af37, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Apr 2013 14:31:52 -0600","ct: [PATCH] 2to3: Apply the `numliterals` fixer and skip the `long` fixer.The numliterals fixer replaces the old style octal number like '01' by'0o1' removes the 'L' suffix.Octal values were previously mistakenly specified in some dates, thoseuses have been corrected by removing the leading zeros.Simply Removing the 'L' suffix should not be a problem, but in sometesting code it looks neccesary, so in those places the Python longconstructor is used instead.The 'long' type is no longer defined in Python 3. Because we need tohave it defined for Python 2 it is added to numpy/compat/np3k.py whereit is defined as 'int' for Python 3 and 'long' for Python 2. The `long`fixer then needs to be skipped so that it doesn't undo the good work.Closes #3074, #3067.",29,78,58,numpy/f2py/tests/test_return_real.py,[u'5'],3,2," -2,6 +2,7 ; -13,7 +14,7 ; -42,7 +43,7 ;",";def check_function(self, t);def check_function(self, t);"
3232,1,7f5af37, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Apr 2013 14:31:52 -0600","ct: [PATCH] 2to3: Apply the `numliterals` fixer and skip the `long` fixer.The numliterals fixer replaces the old style octal number like '01' by'0o1' removes the 'L' suffix.Octal values were previously mistakenly specified in some dates, thoseuses have been corrected by removing the leading zeros.Simply Removing the 'L' suffix should not be a problem, but in sometesting code it looks neccesary, so in those places the Python longconstructor is used instead.The 'long' type is no longer defined in Python 3. Because we need tohave it defined for Python 2 it is added to numpy/compat/np3k.py whereit is defined as 'int' for Python 3 and 'long' for Python 2. The `long`fixer then needs to be skipped so that it doesn't undo the good work.Closes #3074, #3067.",29,78,58,numpy/lib/_iotools.py,[u'6'],3,3," -10,11 +10,11 ;",;
3232,1,7f5af37, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Apr 2013 14:31:52 -0600","ct: [PATCH] 2to3: Apply the `numliterals` fixer and skip the `long` fixer.The numliterals fixer replaces the old style octal number like '01' by'0o1' removes the 'L' suffix.Octal values were previously mistakenly specified in some dates, thoseuses have been corrected by removing the leading zeros.Simply Removing the 'L' suffix should not be a problem, but in sometesting code it looks neccesary, so in those places the Python longconstructor is used instead.The 'long' type is no longer defined in Python 3. Because we need tohave it defined for Python 2 it is added to numpy/compat/np3k.py whereit is defined as 'int' for Python 3 and 'long' for Python 2. The `long`fixer then needs to be skipped so that it doesn't undo the good work.Closes #3074, #3067.",29,78,58,numpy/lib/arraypad.py,[u'1'],1,0," -6,6 +6,7 ;",;
3232,1,7f5af37, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Apr 2013 14:31:52 -0600","ct: [PATCH] 2to3: Apply the `numliterals` fixer and skip the `long` fixer.The numliterals fixer replaces the old style octal number like '01' by'0o1' removes the 'L' suffix.Octal values were previously mistakenly specified in some dates, thoseuses have been corrected by removing the leading zeros.Simply Removing the 'L' suffix should not be a problem, but in sometesting code it looks neccesary, so in those places the Python longconstructor is used instead.The 'long' type is no longer defined in Python 3. Because we need tohave it defined for Python 2 it is added to numpy/compat/np3k.py whereit is defined as 'int' for Python 3 and 'long' for Python 2. The `long`fixer then needs to be skipped so that it doesn't undo the good work.Closes #3074, #3067.",29,78,58,numpy/lib/arrayterator.py,[u'6'],4,2," -9,12 +9,14 ;",;
3232,1,7f5af37, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Apr 2013 14:31:52 -0600","ct: [PATCH] 2to3: Apply the `numliterals` fixer and skip the `long` fixer.The numliterals fixer replaces the old style octal number like '01' by'0o1' removes the 'L' suffix.Octal values were previously mistakenly specified in some dates, thoseuses have been corrected by removing the leading zeros.Simply Removing the 'L' suffix should not be a problem, but in sometesting code it looks neccesary, so in those places the Python longconstructor is used instead.The 'long' type is no longer defined in Python 3. Because we need tohave it defined for Python 2 it is added to numpy/compat/np3k.py whereit is defined as 'int' for Python 3 and 'long' for Python 2. The `long`fixer then needs to be skipped so that it doesn't undo the good work.Closes #3074, #3067.",29,78,58,numpy/lib/format.py,[u'2'],1,1," -139,7 +139,7 ;",;
3232,1,7f5af37, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Apr 2013 14:31:52 -0600","ct: [PATCH] 2to3: Apply the `numliterals` fixer and skip the `long` fixer.The numliterals fixer replaces the old style octal number like '01' by'0o1' removes the 'L' suffix.Octal values were previously mistakenly specified in some dates, thoseuses have been corrected by removing the leading zeros.Simply Removing the 'L' suffix should not be a problem, but in sometesting code it looks neccesary, so in those places the Python longconstructor is used instead.The 'long' type is no longer defined in Python 3. Because we need tohave it defined for Python 2 it is added to numpy/compat/np3k.py whereit is defined as 'int' for Python 3 and 'long' for Python 2. The `long`fixer then needs to be skipped so that it doesn't undo the good work.Closes #3074, #3067.",29,78,58,numpy/lib/function_base.py,[u'1'],1,0," -32,6 +32,7 ;",;
3232,1,7f5af37, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Apr 2013 14:31:52 -0600","ct: [PATCH] 2to3: Apply the `numliterals` fixer and skip the `long` fixer.The numliterals fixer replaces the old style octal number like '01' by'0o1' removes the 'L' suffix.Octal values were previously mistakenly specified in some dates, thoseuses have been corrected by removing the leading zeros.Simply Removing the 'L' suffix should not be a problem, but in sometesting code it looks neccesary, so in those places the Python longconstructor is used instead.The 'long' type is no longer defined in Python 3. Because we need tohave it defined for Python 2 it is added to numpy/compat/np3k.py whereit is defined as 'int' for Python 3 and 'long' for Python 2. The `long`fixer then needs to be skipped so that it doesn't undo the good work.Closes #3074, #3067.",29,78,58,numpy/lib/tests/test__datasource.py,[u'2'],1,1," -305,7 +305,7 ;",def test_CachedHTTPFile(self);
3232,1,7f5af37, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Apr 2013 14:31:52 -0600","ct: [PATCH] 2to3: Apply the `numliterals` fixer and skip the `long` fixer.The numliterals fixer replaces the old style octal number like '01' by'0o1' removes the 'L' suffix.Octal values were previously mistakenly specified in some dates, thoseuses have been corrected by removing the leading zeros.Simply Removing the 'L' suffix should not be a problem, but in sometesting code it looks neccesary, so in those places the Python longconstructor is used instead.The 'long' type is no longer defined in Python 3. Because we need tohave it defined for Python 2 it is added to numpy/compat/np3k.py whereit is defined as 'int' for Python 3 and 'long' for Python 2. The `long`fixer then needs to be skipped so that it doesn't undo the good work.Closes #3074, #3067.",29,78,58,numpy/lib/tests/test__iotools.py,[u'6'],3,3," -175,11 +175,11 ;",def test_upgrademapper(self);
3232,1,7f5af37, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Apr 2013 14:31:52 -0600","ct: [PATCH] 2to3: Apply the `numliterals` fixer and skip the `long` fixer.The numliterals fixer replaces the old style octal number like '01' by'0o1' removes the 'L' suffix.Octal values were previously mistakenly specified in some dates, thoseuses have been corrected by removing the leading zeros.Simply Removing the 'L' suffix should not be a problem, but in sometesting code it looks neccesary, so in those places the Python longconstructor is used instead.The 'long' type is no longer defined in Python 3. Because we need tohave it defined for Python 2 it is added to numpy/compat/np3k.py whereit is defined as 'int' for Python 3 and 'long' for Python 2. The `long`fixer then needs to be skipped so that it doesn't undo the good work.Closes #3074, #3067.",29,78,58,numpy/lib/tests/test_function_base.py,[u'1'],1,0," -9,6 +9,7 ;",;
3232,1,7f5af37, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Apr 2013 14:31:52 -0600","ct: [PATCH] 2to3: Apply the `numliterals` fixer and skip the `long` fixer.The numliterals fixer replaces the old style octal number like '01' by'0o1' removes the 'L' suffix.Octal values were previously mistakenly specified in some dates, thoseuses have been corrected by removing the leading zeros.Simply Removing the 'L' suffix should not be a problem, but in sometesting code it looks neccesary, so in those places the Python longconstructor is used instead.The 'long' type is no longer defined in Python 3. Because we need tohave it defined for Python 2 it is added to numpy/compat/np3k.py whereit is defined as 'int' for Python 3 and 'long' for Python 2. The `long`fixer then needs to be skipped so that it doesn't undo the good work.Closes #3074, #3067.",29,78,58,numpy/lib/tests/test_type_check.py,[u'4'],2,2," -3,7 +3,7 ; -87,7 +87,7 ;",;def test_basic(self);
3232,1,7f5af37, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Apr 2013 14:31:52 -0600","ct: [PATCH] 2to3: Apply the `numliterals` fixer and skip the `long` fixer.The numliterals fixer replaces the old style octal number like '01' by'0o1' removes the 'L' suffix.Octal values were previously mistakenly specified in some dates, thoseuses have been corrected by removing the leading zeros.Simply Removing the 'L' suffix should not be a problem, but in sometesting code it looks neccesary, so in those places the Python longconstructor is used instead.The 'long' type is no longer defined in Python 3. Because we need tohave it defined for Python 2 it is added to numpy/compat/np3k.py whereit is defined as 'int' for Python 3 and 'long' for Python 2. The `long`fixer then needs to be skipped so that it doesn't undo the good work.Closes #3074, #3067.",29,78,58,numpy/lib/user_array.py,[u'11'],7,4," -6,10 +6,13 ;",;
3232,1,7f5af37, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Apr 2013 14:31:52 -0600","ct: [PATCH] 2to3: Apply the `numliterals` fixer and skip the `long` fixer.The numliterals fixer replaces the old style octal number like '01' by'0o1' removes the 'L' suffix.Octal values were previously mistakenly specified in some dates, thoseuses have been corrected by removing the leading zeros.Simply Removing the 'L' suffix should not be a problem, but in sometesting code it looks neccesary, so in those places the Python longconstructor is used instead.The 'long' type is no longer defined in Python 3. Because we need tohave it defined for Python 2 it is added to numpy/compat/np3k.py whereit is defined as 'int' for Python 3 and 'long' for Python 2. The `long`fixer then needs to be skipped so that it doesn't undo the good work.Closes #3074, #3067.",29,78,58,numpy/linalg/tests/test_linalg.py,[u'4'],2,2," -269,10 +269,10 ;",class TestMatrixPower(object);
3232,1,7f5af37, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Apr 2013 14:31:52 -0600","ct: [PATCH] 2to3: Apply the `numliterals` fixer and skip the `long` fixer.The numliterals fixer replaces the old style octal number like '01' by'0o1' removes the 'L' suffix.Octal values were previously mistakenly specified in some dates, thoseuses have been corrected by removing the leading zeros.Simply Removing the 'L' suffix should not be a problem, but in sometesting code it looks neccesary, so in those places the Python longconstructor is used instead.The 'long' type is no longer defined in Python 3. Because we need tohave it defined for Python 2 it is added to numpy/compat/np3k.py whereit is defined as 'int' for Python 3 and 'long' for Python 2. The `long`fixer then needs to be skipped so that it doesn't undo the good work.Closes #3074, #3067.",29,78,58,numpy/ma/core.py,[u'2'],1,1," -32,7 +32,7 ;",;
3232,1,7f5af37, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Apr 2013 14:31:52 -0600","ct: [PATCH] 2to3: Apply the `numliterals` fixer and skip the `long` fixer.The numliterals fixer replaces the old style octal number like '01' by'0o1' removes the 'L' suffix.Octal values were previously mistakenly specified in some dates, thoseuses have been corrected by removing the leading zeros.Simply Removing the 'L' suffix should not be a problem, but in sometesting code it looks neccesary, so in those places the Python longconstructor is used instead.The 'long' type is no longer defined in Python 3. Because we need tohave it defined for Python 2 it is added to numpy/compat/np3k.py whereit is defined as 'int' for Python 3 and 'long' for Python 2. The `long`fixer then needs to be skipped so that it doesn't undo the good work.Closes #3074, #3067.",29,78,58,numpy/numarray/functions.py,[u'4'],2,2," -31,14 +31,14 ;",;
3232,1,7f5af37, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Apr 2013 14:31:52 -0600","ct: [PATCH] 2to3: Apply the `numliterals` fixer and skip the `long` fixer.The numliterals fixer replaces the old style octal number like '01' by'0o1' removes the 'L' suffix.Octal values were previously mistakenly specified in some dates, thoseuses have been corrected by removing the leading zeros.Simply Removing the 'L' suffix should not be a problem, but in sometesting code it looks neccesary, so in those places the Python longconstructor is used instead.The 'long' type is no longer defined in Python 3. Because we need tohave it defined for Python 2 it is added to numpy/compat/np3k.py whereit is defined as 'int' for Python 3 and 'long' for Python 2. The `long`fixer then needs to be skipped so that it doesn't undo the good work.Closes #3074, #3067.",29,78,58,numpy/numarray/numerictypes.py,[u'3'],2,1," -29,6 +29,8 ; -45,7 +47,6 ;",;;
3232,1,7f5af37, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Apr 2013 14:31:52 -0600","ct: [PATCH] 2to3: Apply the `numliterals` fixer and skip the `long` fixer.The numliterals fixer replaces the old style octal number like '01' by'0o1' removes the 'L' suffix.Octal values were previously mistakenly specified in some dates, thoseuses have been corrected by removing the leading zeros.Simply Removing the 'L' suffix should not be a problem, but in sometesting code it looks neccesary, so in those places the Python longconstructor is used instead.The 'long' type is no longer defined in Python 3. Because we need tohave it defined for Python 2 it is added to numpy/compat/np3k.py whereit is defined as 'int' for Python 3 and 'long' for Python 2. The `long`fixer then needs to be skipped so that it doesn't undo the good work.Closes #3074, #3067.",29,78,58,numpy/random/tests/test_regression.py,[u'3'],2,1," -3,6 +3,7 ; -42,7 +43,7 ;",;def test_permutation_longs(self);
3232,1,7f5af37, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Apr 2013 14:31:52 -0600","ct: [PATCH] 2to3: Apply the `numliterals` fixer and skip the `long` fixer.The numliterals fixer replaces the old style octal number like '01' by'0o1' removes the 'L' suffix.Octal values were previously mistakenly specified in some dates, thoseuses have been corrected by removing the leading zeros.Simply Removing the 'L' suffix should not be a problem, but in sometesting code it looks neccesary, so in those places the Python longconstructor is used instead.The 'long' type is no longer defined in Python 3. Because we need tohave it defined for Python 2 it is added to numpy/compat/np3k.py whereit is defined as 'int' for Python 3 and 'long' for Python 2. The `long`fixer then needs to be skipped so that it doesn't undo the good work.Closes #3074, #3067.",29,78,58,tools/py3tool.py,[u'6'],3,3," -65,16 +65,16 ;",;
3231,1,d5bf8ac, Charles Harris <charlesr.harris@gmail.com>," Fri, 12 Apr 2013 09:00:24 -0600","ct: [PATCH] 2to3: Skip `setliteral` fixer.Setliterals are not available in Python 2.6. Because the current usagein numpy is forward compatible with Python 3 there is no need to run thefixer.When Python 2.6 support is dropped the fixer can be run, but that looksto be several years off. RHEL 6 with Python 2.6 was released in 2010 andwill run for ten years.",1,0,0,tools/py3tool.py,[u'2'],1,1," -83,7 +83,7 ;",;
3230,1,8e7c6a7, Jos de Kloe <kloedej@bhw288.knmi.nl>," Fri, 12 Apr 2013 12:18:26 +0200",ct: [PATCH] replace exec by eval to ensure the c variable is defined for all relevant python versions,1,0,0,numpy/f2py/crackfortran.py,[u'2'],1,1," -2606,7 +2606,7 ;",def true_intent_list(var);
3229,1,f31f0fb, Jos de Kloe <kloedej@bhw288.knmi.nl>," Fri, 12 Apr 2013 12:18:26 +0200",ct: [PATCH] replace exec by eval to ensure the c variable is defined for all relevant python versions,1,0,0,numpy/f2py/crackfortran.py,[u'2'],1,1," -2611,7 +2611,7 ;",def true_intent_list(var);
3227,1,d083c29, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Apr 2013 13:15:30 -0600","ct: [PATCH] 2to3: Skip `funcattrs` fixer.In Python 3 the func.func_name attribute is replaced by thefunc.__name__ attribute. The only file affected by this isdoc/sphinxext/numpydoc/phantom_import.py, and there its useis already version dependent.Closes #3054.",1,0,0,tools/py3tool.py,[u'2'],1,1," -54,7 +54,7 ;",;
3226,1,0cbe590, Charles Harris <charlesr.harris@gmail.com>," Thu, 11 Apr 2013 12:43:34 -0600","ct: [PATCH] 2to3: Skip buffer fixer.The buffer object is replaced by memoryview in Python >= 3. The memoryview object has also been backported to Python 2.7. However, the onlyuse of `buffer1/1memoryview1 is in `numpy/core/tests/test_unicode.py`and there it is already version dependent: `memoryview` is used if thePython version is >= 3 and `buffer` is used otherwise.Closes #3043.",1,0,0,tools/py3tool.py,[u'2'],1,1," -47,7 +47,7 ;",;
3225,27,bde1a06, 87 <hangenuit@gmail.com>," Mon, 3 Oct 2011 23:35:19 +0200",ct: [PATCH 01/27] ENH: Cleanup and simplify array_item code.Rename array_big_item to array_item_asarray and move special casefor array_item_nice into array_item_asscalar. Also remove redundantPyArray_Return and rename array_item_nice to array_item.Conflicts:	numpy/core/src/multiarray/mapping.c,4,46,32,numpy/core/src/multiarray/convert_datatype.c,[u'2'],1,1," -1817,7 +1817,7 ;","PyArray_ConvertToCommonType(PyObject *op, int *retn;"
3225,27,bde1a06, 87 <hangenuit@gmail.com>," Mon, 3 Oct 2011 23:35:19 +0200",ct: [PATCH 01/27] ENH: Cleanup and simplify array_item code.Rename array_big_item to array_item_asarray and move special casefor array_item_nice into array_item_asscalar. Also remove redundantPyArray_Return and rename array_item_nice to array_item.Conflicts:	numpy/core/src/multiarray/mapping.c,4,46,32,numpy/core/src/multiarray/mapping.c,[u'61'],16,12," -42,8 +42,36 ; -86,35 +114,18 ; -145,7 +156,7 ; -578,7 +589,7 ; -1393,7 +1404,7 ;","array_length(PyArrayObject *self;array_big_item(PyArrayObject *self, npy_intp i;array_ass_big_item(PyArrayObject *self, npy_intp i, PyObject *v;array_subscript_simple(PyArrayObject *self, PyObject *op;array_subscript_nice(PyArrayObject *self, PyObject *op;"
3225,27,bde1a06, 87 <hangenuit@gmail.com>," Mon, 3 Oct 2011 23:35:19 +0200",ct: [PATCH 01/27] ENH: Cleanup and simplify array_item code.Rename array_big_item to array_item_asarray and move special casefor array_item_nice into array_item_asscalar. Also remove redundantPyArray_Return and rename array_item_nice to array_item.Conflicts:	numpy/core/src/multiarray/mapping.c,4,46,32,numpy/core/src/multiarray/mapping.h,[u'11'],3,2," -7,14 +7,17 ;",extern NPY_NO_EXPORT PyMappingMethods array_as_mapping;
3225,27,bde1a06, 87 <hangenuit@gmail.com>," Mon, 3 Oct 2011 23:35:19 +0200",ct: [PATCH 01/27] ENH: Cleanup and simplify array_item code.Rename array_big_item to array_item_asarray and move special casefor array_item_nice into array_item_asscalar. Also remove redundantPyArray_Return and rename array_item_nice to array_item.Conflicts:	numpy/core/src/multiarray/mapping.c,4,46,32,numpy/core/src/multiarray/sequence.c,[u'4'],1,1," -134,7 +134,7 ; -145,7 +145,7 ;",NPY_NO_EXPORT PySequenceMethods array_as_sequence = ;NPY_NO_EXPORT PySequenceMethods array_as_sequence = ;
3225,27,4fae90d, 87 <hangenuit@gmail.com>," Sun, 16 Oct 2011 23:28:25 +0200",ct: [PATCH 02/27] ENH: Move fancy indexing code and ellipse check code into own functions.Conflicts:	numpy/core/src/multiarray/mapping.c,1,71,59,numpy/core/src/multiarray/mapping.c,[u'130'],20,16," -925,12 +925,79 ; -1052,41 +1119,12 ; -1183,7 +1221,6 ; -1462,32 +1499,7 ;","array_ass_boolean_subscript(PyArrayObject *self;array_subscript(PyArrayObject *self, PyObject *op;_tuple_of_integers(PyObject *seq, npy_intp *vals, int maxvals;array_subscript_nice(PyArrayObject *self, PyObject *op;"
3225,27,796c274, 87 <hangenuit@gmail.com>," Mon, 17 Oct 2011 00:04:46 +0200",ct: [PATCH 03/27] ENH: Use array_subscript_asarray to ensure an array type return value,3,12,2,numpy/core/src/multiarray/arrayobject.c,[u'4'],2,2," -1172,12 +1172,12 ;","_void_compare(PyArrayObject *self, PyArrayObject *other, int cmp_op;"
3225,27,796c274, 87 <hangenuit@gmail.com>," Mon, 17 Oct 2011 00:04:46 +0200",ct: [PATCH 03/27] ENH: Use array_subscript_asarray to ensure an array type return value,3,12,2,numpy/core/src/multiarray/mapping.c,[u'7'],7,0," -994,6 +994,13 ;","array_subscript_fancy(PyArrayObject *self, PyObject *op, int fancy;"
3225,27,796c274, 87 <hangenuit@gmail.com>," Mon, 17 Oct 2011 00:04:46 +0200",ct: [PATCH 03/27] ENH: Use array_subscript_asarray to ensure an array type return value,3,12,2,numpy/core/src/multiarray/mapping.h,[u'3'],3,0," -20,6 +20,9 ;",NPY_NO_EXPORT PyObject ;
3225,27,818e3eb, 87 <hangenuit@gmail.com>," Mon, 17 Oct 2011 00:09:34 +0200",ct: [PATCH 04/27] ENH: Move Python related subscript code into array_subscript,1,86,6,numpy/core/src/multiarray/mapping.c,[u'92'],34,3," -1004,11 +1004,86 ; -1029,7 +1104,7 ; -1042,6 +1117,7 ; -1052,7 +1128,7 ; -1073,15 +1149,19 ; -1111,7 +1191,7 ;","array_subscript_asarray(PyArrayObject *self, PyObject *op;array_subscript(PyArrayObject *self, PyObject *op;array_subscript(PyArrayObject *self, PyObject *op;array_subscript(PyArrayObject *self, PyObject *op;array_subscript(PyArrayObject *self, PyObject *op;array_subscript(PyArrayObject *self, PyObject *op;"
3225,27,7935952, 87 <hangenuit@gmail.com>," Mon, 17 Oct 2011 00:24:29 +0200",ct: [PATCH 05/27] ENH: Rename array_subscript to array_subscipt_fromobject and refactor array_subscript_nice to array_subscriptConflicts:	numpy/core/src/multiarray/mapping.c,2,108,197,numpy/core/src/multiarray/mapping.c,[u'301'],13,23," -926,6 +926,48 ; -1002,7 +1044,7 ; -1020,65 +1062,27 ; -1195,6 +1199,24 ; -1203,13 +1225,35 ; -1267,47 +1311,6 ; -1503,105 +1506,13 ;","array_ass_boolean_subscript(PyArrayObject *self;array_subscript_asarray(PyArrayObject *self, PyObject *op;array_subscript(PyArrayObject *self, PyObject *op;array_subscript(PyArrayObject *self, PyObject *op;array_subscript(PyArrayObject *self, PyObject *op;array_ass_sub_simple(PyArrayObject *self, PyObject *ind, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;"
3225,27,7935952, 87 <hangenuit@gmail.com>," Mon, 17 Oct 2011 00:24:29 +0200",ct: [PATCH 05/27] ENH: Rename array_subscript to array_subscipt_fromobject and refactor array_subscript_nice to array_subscriptConflicts:	numpy/core/src/multiarray/mapping.c,2,108,197,numpy/core/src/multiarray/mapping.h,[u'4'],1,1," -11,10 +11,10 ;",NPY_NO_EXPORT Py_ssize_;
3225,27,eab77ae, 87 <hangenuit@gmail.com>," Mon, 17 Oct 2011 00:29:21 +0200",ct: [PATCH 06/27] ENH: Change silent integer conversion failure into index error.,1,5,4,numpy/core/src/multiarray/mapping.c,[u'9'],5,4," -1053,10 +1053,11 ;","array_subscript_fromobject(PyArrayObject *self, PyObject *op;"
3225,27,4b8ef72, Han <hangenuit@gmail.com>," Mon, 17 Oct 2011 12:21:10 +0200",ct: [PATCH 07/27] ENH: Optimization in subscript_simple for arrays with size > 1,1,31,22,numpy/core/src/multiarray/mapping.c,[u'53'],22,15," -565,31 +565,40 ;","array_subscript_simple(PyArrayObject *self, PyObject *op;"
3225,27,38c070d, Han <hangenuit@gmail.com>," Mon, 17 Oct 2011 15:00:25 +0200",ct: [PATCH 08/27] ENH: Rename array_ass_big_item to array_ass_item_object,1,10,11,numpy/core/src/multiarray/mapping.c,[u'21'],10,11," -42,13 +42,6 ; -130,7 +123,13 ; -172,7 +171,7 ; -1283,7 +1282,7 ; -1346,7 +1345,7 ;","array_length(PyArrayObject *self;array_item(PyArrayObject *self, Py_ssize_t i;array_ass_big_item(PyArrayObject *self, npy_intp i, PyObject *v;array_ass_sub_simple(PyArrayObject *self, PyObject *ind, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;"
3225,27,9ae9872, Han <hangenuit@gmail.com>," Mon, 17 Oct 2011 16:18:33 +0200",ct: [PATCH 09/27] ENH: Cleanup subscript assignment code.Conflicts:	numpy/core/src/multiarray/mapping.c,1,66,46,numpy/core/src/multiarray/mapping.c,[u'112'],21,15," -1281,13 +1281,20 ; -1321,10 +1328,43 ; -1336,19 +1376,22 ; -1365,7 +1408,6 ; -1378,6 +1420,7 ; -1400,27 +1443,30 ; -1439,10 +1485,9 ; -1483,36 +1528,11 ;","array_ass_sub_simple(PyArrayObject *self, PyObject *ind, PyObject *op;array_ass_sub_simple(PyArrayObject *self, PyObject *ind, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;"
3225,27,fd5ae99, 87 <hangenuit@gmail.com>," Mon, 24 Oct 2011 09:15:13 +0200",ct: [PATCH 10/27] BLD: Declare array_ass_item_object before use.,1,6,6,numpy/core/src/multiarray/mapping.c,[u'12'],6,6," -123,12 +123,6 ; -316,6 +310,12 ;","array_item(PyArrayObject *self, Py_ssize_t i;PyArray_GetMap(PyArrayMapIterObject *mit;"
3225,27,e813dae, 87 <hangenuit@gmail.com>," Tue, 25 Oct 2011 00:23:58 +0200",ct: [PATCH 11/27] ENH: Small optimization for redundant PyArray_CheckConflicts:	numpy/core/src/multiarray/mapping.c,1,0,2,numpy/core/src/multiarray/mapping.c,[u'3'],1,2," -1225,10 +1225,9 ;","array_subscript(PyArrayObject *self, PyObject *op;"
3225,27,2fc6673, 87 <hangenuit@gmail.com>," Tue, 25 Oct 2011 00:59:58 +0200",ct: [PATCH 12/27] BUG: Tuple conversion may not propagate errors from int conversion.Conflicts:	numpy/core/src/multiarray/mapping.c,1,0,0,numpy/core/src/multiarray/mapping.c,[u'1'],1,0," -962,6 +962,7 ;","_tuple_of_integers(PyObject *seq, npy_intp *vals, int maxvals;"
3225,27,9442b91, 87 <hangenuit@gmail.com>," Tue, 25 Oct 2011 01:14:57 +0200",ct: [PATCH 13/27] ENH: Optimize array_subscript by removing redundant error check.,1,0,5,numpy/core/src/multiarray/mapping.c,[u'5'],0,5," -1253,11 +1253,6 ;","array_subscript(PyArrayObject *self, PyObject *op;"
3225,27,bc92502, Han Genuit <hangenuit@gmail.com>," Fri, 28 Oct 2011 15:31:44 +0200",ct: [PATCH 14/27] ENH: Change IndexError to ValueError for integer conversion errors.Conflicts:	numpy/core/src/multiarray/mapping.c,1,10,5,numpy/core/src/multiarray/mapping.c,[u'15'],10,5," -1065,7 +1065,8 ; -1205,7 +1206,8 ; -1236,7 +1238,8 ; -1378,7 +1381,8 ; -1457,7 +1461,8 ;","array_subscript_fromobject(PyArrayObject *self, PyObject *op;array_subscript_fromobject(PyArrayObject *self, PyObject *op;array_subscript(PyArrayObject *self, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;"
3225,27,8a836c5, Han Genuit <hangenuit@gmail.com>," Fri, 28 Oct 2011 17:50:50 +0200",ct: [PATCH 15/27] TST: Add more indexing tests.,1,78,8,numpy/core/tests/test_indexing.py,[u'86'],35,4," -14,14 +14,84 ;",;
3225,27,62dc28a, Han Genuit <hangenuit@gmail.com>," Mon, 3 Sep 2012 23:43:14 +0200",ct: [PATCH 16/27] BUG: Multiple fixes from merging.,1,5,5,numpy/core/src/multiarray/mapping.c,[u'10'],5,5," -109,7 +109,7 ; -982,13 +982,13 ; -1000,13 +1000,13 ;","array_item_asarray(PyArrayObject *self, npy_intp i;static npy_boo;_check_ellipses(PyObject *op;"
3225,27,e3f01df, Han Genuit <hangenuit@gmail.com>," Tue, 4 Sep 2012 00:15:58 +0200",ct: [PATCH 17/27] STY: Text changes.Conflicts:	numpy/core/src/multiarray/mapping.c,1,6,13,numpy/core/src/multiarray/mapping.c,[u'19'],6,13," -142,7 +142,7 ; -566,14 +566,6 ; -1228,6 +1220,7 ; -1313,7 +1306,7 ; -1409,11 +1402,11 ; -1462,7 +1455,7 ;","array_ass_item_object(PyArrayObject *self, npy_intp i, PyObject *v;array_subscript_simple(PyArrayObject *self, PyObject *op;array_subscript(PyArrayObject *self, PyObject *op;array_ass_sub_simple(PyArrayObject *self, PyObject *ind, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;"
3225,27,fc52c28, Han Genuit <hangenuit@gmail.com>," Tue, 4 Sep 2012 00:29:46 +0200",ct: [PATCH 18/27] BUG: Fix old case for boolean subscripts with non-matching shape.Conflicts:	numpy/core/src/multiarray/mapping.c,1,0,0,numpy/core/src/multiarray/mapping.c,[u'2'],1,1," -1222,7 +1222,7 ;","array_subscript(PyArrayObject *self, PyObject *op;"
3225,27,698f57f, Han Genuit <hangenuit@gmail.com>," Tue, 11 Sep 2012 23:58:23 +0200",ct: [PATCH 19/27] DOC: Re-insert comment,1,8,0,numpy/core/src/multiarray/mapping.c,[u'9'],8,1," -564,7 +564,14 ;","array_subscript_simple(PyArrayObject *self, PyObject *op;"
3225,27,7e28af9, Han Genuit <hangenuit@gmail.com>," Fri, 14 Sep 2012 01:01:49 +0200","ct: [PATCH 20/27] BUG: Fix failing subscript test casesThis fixes indexing with NumPy boolean scalar values, which causedcrashes before. Both Python and NumPy boolean scalars now behave thesame. This contains a few small changes to PyArrayMapIterNew, wherethe PyArrayMapIterObject is memset to zero and a fix for the crash,which was caused by _nonzero_indices, which did not initialize anyiterators because ndim is zero for scalars. *IterNew will now checkfor scalars before running that part of the code.",2,48,30,numpy/core/src/multiarray/mapping.c,[u'31'],10,14," -1058,9 +1058,8 ; -1375,9 +1374,8 ; -1970,20 +1968,14 ; -1991,10 +1983,13 ; -2007,8 +2002,8 ;","array_subscript_fromobject(PyArrayObject *self, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;PyArray_MapIterNew(PyObject *indexobj, int oned, int fancy;PyArray_MapIterNew(PyObject *indexobj, int oned, int fancy;PyArray_MapIterNew(PyObject *indexobj, int oned, int fancy;"
3225,27,7e28af9, Han Genuit <hangenuit@gmail.com>," Fri, 14 Sep 2012 01:01:49 +0200","ct: [PATCH 20/27] BUG: Fix failing subscript test casesThis fixes indexing with NumPy boolean scalar values, which causedcrashes before. Both Python and NumPy boolean scalars now behave thesame. This contains a few small changes to PyArrayMapIterNew, wherethe PyArrayMapIterObject is memset to zero and a fix for the crash,which was caused by _nonzero_indices, which did not initialize anyiterators because ndim is zero for scalars. *IterNew will now checkfor scalars before running that part of the code.",2,48,30,numpy/core/tests/test_indexing.py,[u'47'],27,10," -28,10 +28,12 ; -71,27 +73,48 ;",def test_empty_tuple_index(self);def test_single_int_index(self);
3225,27,e7db8c0, Han Genuit <hangenuit@gmail.com>," Fri, 14 Sep 2012 01:26:59 +0200",ct: [PATCH 21/27] BUG: Repair testsOops..,1,0,0,numpy/core/tests/test_indexing.py,[u'2'],1,1," -107,7 +107,7 ;",def test_boolean_indexing_twodim(self);
3225,27,d128fcb, Han Genuit <hangenuit@gmail.com>," Fri, 14 Sep 2012 11:11:29 +0200","ct: [PATCH 22/27] ENH: Add exception to _nonzero_indices for zero-dim arraysThis function causes a crash otherwise, because it loops over the numberof dimensions to construct sub-iterators. If the number of dimensions iszero, the sub-iterators will not be initialized, causing problems later on.",1,9,0,numpy/core/src/multiarray/mapping.c,[u'9'],9,0," -1576,6 +1576,14 ; -1614,6 +1622,7 ;","_nonzero_indices(PyObject *myBool, PyArrayIterObject **iters;_nonzero_indices(PyObject *myBool, PyArrayIterObject **iters;"
3225,27,5cfd384, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 11 Apr 2013 17:03:00 +0200",ct: [PATCH 23/27] MAINT: Fixup merge mistakes,1,2,2,numpy/core/src/multiarray/mapping.c,[u'4'],2,2," -1090,8 +1090,8 ; -1466,7 +1466,7 ;","array_subscript_fromobject(PyArrayObject *self, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;"
3225,27,8468a75, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 11 Apr 2013 17:14:30 +0200",ct: [PATCH 24/27] MAINT: Add lost code to array_subscript_fromobject,1,8,0,numpy/core/src/multiarray/mapping.c,[u'8'],8,0," -1094,6 +1094,14 ;","array_subscript_fromobject(PyArrayObject *self, PyObject *op;"
3225,27,07ed3a2, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 12 Apr 2013 13:29:56 +0200",ct: [PATCH 25/27] STY: Use PyArray_BYTES to get char*,1,2,2,numpy/core/src/multiarray/mapping.c,[u'4'],2,2," -1082,7 +1082,7 ; -1483,7 +1483,7 ;","array_subscript_fromobject(PyArrayObject *self, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;"
3225,27,9466880, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 12 Apr 2013 14:35:39 +0200","ct: [PATCH 26/27] MAINT: Error type fixup and clearer error messageThe first error types were changed to ValueError (or introduced)newly. Python seems to normally use IndexError or TypeError here,so changing back to IndexError.The second is just a clarification to say when the error actuallyoccurs for the user.",2,7,7,numpy/core/src/multiarray/mapping.c,[u'10'],5,5," -1063,7 +1063,7 ; -1387,7 +1387,7 ; -1586,9 +1586,9 ;","array_subscript_fromobject(PyArrayObject *self, PyObject *op;array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;_nonzero_indices(PyObject *myBool, PyArrayIterObject **iters;"
3225,27,9466880, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 12 Apr 2013 14:35:39 +0200","ct: [PATCH 26/27] MAINT: Error type fixup and clearer error messageThe first error types were changed to ValueError (or introduced)newly. Python seems to normally use IndexError or TypeError here,so changing back to IndexError.The second is just a clarification to say when the error actuallyoccurs for the user.",2,7,7,numpy/core/tests/test_indexing.py,[u'4'],2,2," -70,8 +70,8 ;",def test_single_int_index(self);
3225,27,1f84437, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 12 Apr 2013 15:14:02 +0200",ct: [PATCH 27/27] TST: Clarify empty fancy index test,1,5,4,numpy/core/tests/test_indexing.py,[u'9'],5,4," -28,16 +28,17 ;",def test_empty_tuple_index(self);
3224,1,7961426, Thomas Robitaille <thomas.robitaille@gmail.com>," Thu, 11 Apr 2013 14:36:56 +0200","ct: [PATCH] Make np.savetxt(filename, zip(...)) work in Python 3.x",1,6,0,numpy/lib/npyio.py,[u'6'],6,0," -997,6 +997,12 ;","def savetxt(fname, X, fmt='%.18e', delimiter=' ', newline='\n', header='';"
3223,1,16f9761, Charles Harris <charlesr.harris@gmail.com>," Wed, 10 Apr 2013 18:25:55 -0600","ct: [PATCH] 2to3: Skip `future` fixer.The `future` fixer removes the `from __future__ import ...` statements.That is fine for Python 3, but we need to keep that statement if we areshooting for a common code base for both Python 2 and Python 3.",1,0,0,tools/py3tool.py,[u'2'],1,1," -55,7 +55,7 ;",;
3221,2,5c8b89c, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 10 Apr 2013 21:53:44 +0200","ct: [PATCH 1/2] DOC: Document NPY_RELAXED_STRIDES_CHECKING changesThis includes documentation in the release notes, as well as thereference guide and smaller corrections. Thanks to Nathanielfor major rewriting this.",4,101,14,doc/release/1.8.0-notes.rst,[u'33'],25,0," -42,6 +42,39 ;","case, now indicates a 0-D iteration and ``op_axes`` being NULL and the ol;"
3221,2,5c8b89c, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 10 Apr 2013 21:53:44 +0200","ct: [PATCH 1/2] DOC: Document NPY_RELAXED_STRIDES_CHECKING changesThis includes documentation in the release notes, as well as thereference guide and smaller corrections. Thanks to Nathanielfor major rewriting this.",4,101,14,doc/source/reference/arrays.ndarray.rst,[u'44'],30,3," -115,7 +115,7 ; -124,12 +124,51 ; -144,7 +183,6 ;","array. Here, :math:`s_k` are integers which specify the :obj:`stride;strided scheme, and correspond to the strides;in a different scheme;"
3221,2,5c8b89c, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 10 Apr 2013 21:53:44 +0200","ct: [PATCH 1/2] DOC: Document NPY_RELAXED_STRIDES_CHECKING changesThis includes documentation in the release notes, as well as thereference guide and smaller corrections. Thanks to Nathanielfor major rewriting this.",4,101,14,doc/source/reference/c-api.array.rst,[u'32'],18,6," -1310,11 +1310,21 ; -1322,7 +1332,7 ; -1432,14 +1442,20 ;",of the constant names is deprecated in 1.7;or :cdata:`NPY_ARRAY_F_CONTIGUOUS` can be determined by the ``strides``;For all of these macros *arr* must be an instance of a (subclass of;
3221,2,5c8b89c, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 10 Apr 2013 21:53:44 +0200","ct: [PATCH 1/2] DOC: Document NPY_RELAXED_STRIDES_CHECKING changesThis includes documentation in the release notes, as well as thereference guide and smaller corrections. Thanks to Nathanielfor major rewriting this.",4,101,14,doc/source/reference/ufuncs.rst,[u'6'],2,3," -321,9 +321,9 ;",advanced usage and will not typically be used;
3221,2,5cdf841, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 10 Apr 2013 22:22:46 +0200",ct: [PATCH 2/2] DOC: Add NPY_RELAXED_STRIDES_DOCUMENTATION doc to ndarry.flags,1,11,2,numpy/add_newdocs.py,[u'13'],11,2," -2614,12 +2614,11 ; -2649,6 +2648,16 ;","def luf(lamdaexpr, *args, **kwargs);def luf(lamdaexpr, *args, **kwargs);"
3220,92,3ce193b, ovillellas <oscar.villellas@continuum.io>," Mon, 21 Jan 2013 16:05:00 +0100",ct: [PATCH 01/92] created a new module to hold linalg ufuncs.,4,354,0,numpy/core/bento.info,[u'3'],1,0," -25,6 +25,9 ;",Library;
3220,92,3ce193b, ovillellas <oscar.villellas@continuum.io>," Mon, 21 Jan 2013 16:05:00 +0100",ct: [PATCH 01/92] created a new module to hold linalg ufuncs.,4,354,0,numpy/core/bscript,[u'1'],1,0," -542,6 +542,7 ;",def pre_build(context);
3220,92,3ce193b, ovillellas <oscar.villellas@continuum.io>," Mon, 21 Jan 2013 16:05:00 +0100",ct: [PATCH 01/92] created a new module to hold linalg ufuncs.,4,354,0,numpy/core/setup.py,[u'7'],1,0," -926,6 +926,13 ;","def get_dotblas_sources(ext, build_dir);"
3220,92,3ce193b, ovillellas <oscar.villellas@continuum.io>," Mon, 21 Jan 2013 16:05:00 +0100",ct: [PATCH 01/92] created a new module to hold linalg ufuncs.,4,354,0,numpy/core/src/umath/umath_linalg.c.src,[u'343'],32,0," -0,0 +1,343 ;",;
3220,92,07c0237, ovillellas <oscar.villellas@continuum.io>," Fri, 21 Sep 2012 17:11:12 -0500",ct: [PATCH 02/92] inner1d and mat_mult implemented using blas.,2,315,59,numpy/core/setup.py,[u'4'],1,1," -930,7 +930,9 ;","def get_dotblas_sources(ext, build_dir);"
3220,92,07c0237, ovillellas <oscar.villellas@continuum.io>," Fri, 21 Sep 2012 17:11:12 -0500",ct: [PATCH 02/92] inner1d and mat_mult implemented using blas.,2,315,59,numpy/core/src/umath/umath_linalg.c.src,[u'370'],27,5," -15,6 +15,14 ; -55,20 +63,36 ; -76,7 +100,7 ; -86,16 +110,34 ; -124,12 +166,115 ; -137,46 +282,117 ; -200,15 +416,55 ; -242,8 +498,6 ;",";static const char* umath_linalg_module_name =  ""umath_linalg"";static voi;static voi;static voi;char *matrix_multiply_signature = ""(m,n),(n,p)->(m,p)"";defdict = ;addUfuncs(PyObject *dictionary) ;"
3220,92,65bb3e7, ovillellas <oscar.villellas@continuum.io>," Mon, 24 Sep 2012 18:34:43 -0500","ct: [PATCH 03/92] refactored some code, make it cleaner overall and ready to reuse some code from the matrix_multiply in other gufuncs",1,168,133,numpy/core/src/umath/umath_linalg.c.src,[u'301'],18,14," -21,10 +21,121 ; -166,72 +277,6 ; -242,29 +287,42 ; -299,41 +357,21 ; -346,29 +384,25 ; -377,12 +411,13 ;",;static voi;dump_gemm_params(const GEMM_PARAMS_t* params;static inline voi;static voi;static voi;
3220,92,1db3f9b, ovillellas <oscar.villellas@continuum.io>," Tue, 2 Oct 2012 18:21:46 -0500",ct: [PATCH 04/92] det and slogdet working,1,682,235,numpy/core/src/umath/umath_linalg.c.src,[u'917'],24,8," -19,10 +19,37 ; -32,14 +59,22 ; -71,33 +106,6 ; -111,16 +119,44 ; -129,12 +165,36 ; -159,6 +219,9 ; -170,6 +233,68 ; -182,11 +307,6 ; -221,7 +341,7 ; -243,6 +363,9 ; -255,7 +378,7 ; -279,54 +402,97 ; -335,17 +501,12 ; -353,180 +514,466 ; -566,7 +1013,7 ; -606,7 +1053,7 ; -622,7 +1069,7 ;",";;typedef struct linearize_data_struc;init_linearize_data(LINEARIZE_DATA_t *lin_data;dump_gemm_params(const GEMM_PARAMS_t* params;dump_gemm_params(const GEMM_PARAMS_t* params;dump_gemm_params(const GEMM_PARAMS_t* params;dump_gemm_params(const GEMM_PARAMS_t* params;static inline voi;static voi;static voi;static voi;delinearize_@TYPE@_matrix(@typ@ *dst, @typ@ *src,const LINEARIZE_DATA_t* data;static inline voi;UMath_Tests_test_signature(PyObject *NPY_UNUSED(dummy), PyObject *args;initumath_linalg(void;initumath_linalg(void;"
3220,92,cf94941, ovillellas <oscar.villellas@continuum.io>," Thu, 4 Oct 2012 17:07:54 -0500",ct: [PATCH 05/92] eigh and eigvalsh working,1,439,65,numpy/core/src/umath/umath_linalg.c.src,[u'504'],28,4," -43,7 +43,11 ; -119,8 +123,7 ; -143,58 +146,61 ; -230,6 +236,14 ; -255,9 +269,9 ; -277,9 +291,9 ; -406,16 +420,29 ; -453,11 +480,11 ; -568,7 +595,7 ; -626,7 +653,7 ; -677,13 +704,13 ; -709,8 +736,8 ; -720,9 +747,9 ; -734,7 +761,7 ; -746,7 +773,7 ; -757,9 +784,9 ; -774,7 +801,7 ; -785,12 +812,303 ; -830,6 +1148,10 ; -853,6 +1175,20 ; -876,6 +1212,16 ; -904,22 +1250,49 ; -947,7 +1320,7 ; -972,6 +1345,7 ;",";init_linearize_data(LINEARIZE_DATA_t *lin_data;dump_ufunc_object(PyUFuncObject* ufunc;dump_@type@_matrix(size_t rows, size_t columns, const @type@* ptr;linearize_@TYPE@_matrix(void *dst_in, void *src_in,const LINEARIZE_DATA_t* data;delinearize_@TYPE@_matrix(void *dst_in, void *src_in,const LINEARIZE_DATA_t* da;INTERNAL voi;init_gemm_params(GEMM_PARAMS_t *params;static inline @typ;static inline @typ;static inline @typ;static inline voi;INTERNAL voi;INTERNAL voi;INTERNAL voi;INTERNAL voi;INTERNAL voi;INTERNAL voi;GUFUNC_FUNC_ARRAY_REAL(innerwt);static char slogdet_types[] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;addUfuncs(PyObject *dictionary) ;"
3220,92,2a6d450, ovillellas <oscar.villellas@continuum.io>," Fri, 5 Oct 2012 13:56:15 -0500",ct: [PATCH 06/92] solve gufunc working,1,135,45,numpy/core/src/umath/umath_linalg.c.src,[u'180'],24,8," -33,6 +33,8 ; -1085,7 +1087,11 ; -1110,7 +1116,119 ; -1152,6 +1270,7 ; -1290,13 +1409,22 ; -1345,55 +1473,17 ; -1437,7 +1527,7 ; -1446,7 +1536,7 ;",;static inline voi;static voi;GUFUNC_FUNC_ARRAY_REAL_COMPLEX(eighlo);GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;addUfuncs(PyObject *dictionary) ;initumath_linalg(void;initumath_linalg(void;
3220,92,67820dd, ovillellas <oscar.villellas@continuum.io>," Fri, 5 Oct 2012 14:59:42 -0500",ct: [PATCH 07/92] solve1 and inv working,1,97,9,numpy/core/src/umath/umath_linalg.c.src,[u'106'],29,3," -253,7 +253,7 ; -305,9 +305,24 ; -1192,7 +1207,7 ; -1200,10 +1215,6 ; -1224,6 +1235,60 ; -1271,6 +1336,8 ; -1414,10 +1481,31 ;","update_pointers(uint8_t** bases, ptrdiff_t* offsets, size_t count;delinearize_@TYPE@_matrix(void *dst_in, void *src_in,const LINEARIZE_DATA_t* da;lapack_@lapack_func@(GESV_PARAMS_t *params;static voi;static voi;GUFUNC_FUNC_ARRAY_REAL_COMPLEX(eighup);GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;"
3220,92,c1efc48, ovillellas <oscar.villellas@continuum.io>," Sat, 6 Oct 2012 17:18:45 -0500",ct: [PATCH 08/92] fixed possible issues with BLAS _copy (0 is not a valid incx/incy value and the functions are not guaranteed to work with them). also got cholesky working.,1,198,49,numpy/core/src/umath/umath_linalg.c.src,[u'247'],25,7," -65,22 +65,34 ; -159,44 +171,44 ; -307,23 +319,62 ; -542,10 +593,11 ; -577,10 +629,10 ; -1131,8 +1183,9 ; -1160,8 +1213,8 ; -1171,7 +1224,7 ; -1216,9 +1269,7 ; -1245,10 +1296,7 ; -1274,8 +1322,7 ; -1293,6 +1340,98 ; -1338,6 +1477,7 ; -1506,6 +1646,16 ; -1546,7 +1696,6 ;","typedef __CLPK_doublecomplex fortran_doublecomplex;dump_linearize_data(const char* name, const LINEARIZE_DATA_t* params;delinearize_@TYPE@_matrix(void *dst_in, void *src_in,const LINEARIZE_DATA_t* da;release_gemm_params(GEMM_PARAMS_t * params;INTERNAL voi;static voi;typedef struct gesv_params_struc;init_@lapack_func@(GESV_PARAMS_t *params, fortran_int N, fortran_int NRHS;static voi;static voi;static voi;static voi;GUFUNC_FUNC_ARRAY_REAL_COMPLEX(eigvalshup);GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;addUfuncs(PyObject *dictionary) ;"
3220,92,234523c, ovillellas <oscar.villellas@continuum.io>," Tue, 9 Oct 2012 16:24:58 -0500",ct: [PATCH 09/92] working eig and eigvals priority 2 functions.,1,473,54,numpy/core/src/umath/umath_linalg.c.src,[u'527'],28,4," -971,17 +971,8 ; -1070,17 +1061,8 ; -1108,6 +1090,17 ; -1142,7 +1135,7 ; -1247,7 +1240,7 ; -1278,7 +1271,7 ; -1304,7 +1297,7 ; -1329,7 +1322,7 ; -1391,7 +1384,7 ; -1414,13 +1407,10 ; -1432,6 +1422,431 ; -1478,6 +1893,8 ; -1501,20 +1918,34 ; -1585,7 +2016,7 ; -1595,7 +2026,7 ; -1605,7 +2036,7 ; -1615,7 +2046,7 ; -1656,39 +2087,27 ;","init_@lapack_func@(char JOBZ, char UPLO;error;lapack_@lapack_func@(EIGH_PARAMS_t *params;static inline voi;release_@lapack_func@(GESV_PARAMS_t *params;static voi;static voi;static voi;release_@lapack_func@(POTR_PARAMS_t *params;static voi;static voi;GUFUNC_FUNC_ARRAY_REAL_COMPLEX(solve);static char slogdet_types[] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;"
3220,92,4c9f286, ovillellas <oscar.villellas@continuum.io>," Thu, 11 Oct 2012 15:53:31 -0500",ct: [PATCH 10/92] svd implemented. Single output working. Multiple options not functional due to a bug in the harness.,1,456,10,numpy/core/src/umath/umath_linalg.c.src,[u'466'],31,1," -911,8 +911,8 ; -998,8 +998,8 ; -1115,7 +1115,7 ; -1550,7 +1550,6 ; -1558,10 +1557,6 ; -1846,6 +1841,390 ; -1893,6 +2272,9 ; -1946,6 +2328,20 ; -2089,6 +2485,54 ; -2129,7 +2573,9 ;",typedef struct eigh_params_struct ;call_@lapack_func@(EIGH_PARAMS_t *params;static inline voi;static inline fortran_in;call_@lapack_func@(GEEV_PARAMS_t* params;static voi;GUFUNC_FUNC_ARRAY_REAL_COMPLEX(solve);static char eigvals_types[] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;addUfuncs(PyObject *dictionary) ;
3220,92,7f3afca, ovillellas <oscar.villellas@continuum.io>," Fri, 12 Oct 2012 04:22:35 -0500","ct: [PATCH 11/92] modified the code so it just used external definitions of blas/lapack functions (as is made in linalg module). Changed some code so that it uses BLAS instead of cblas (the fortran functions) also in line with what it is done on linalg. Modified the matrix multiply code, made it simpler and adapted to use blas (it was using cblas with CblasRowMajor, that is not available in the fortran function.",1,320,140,numpy/core/src/umath/umath_linalg.c.src,[u'460'],22,10," -15,17 +15,6 ; -40,23 +29,197 ; -282,10 +445,13 ; -304,10 +470,13 ; -385,7 +554,7 ; -400,7 +569,7 ; -423,7 +592,7 ; -460,7 +629,7 ; -488,97 +657,92 ; -593,12 +757,12 ; -611,36 +775,52 ; -802,7 +982,7 ; -839,7 +1019,7 ; -2376,9 +2556,9 ;",";const char* umath_linalg_version_string = ""0.1.0"";linearize_@TYPE@_matrix(void *dst_in, void *src_in,const LINEARIZE_DATA_t* data;delinearize_@TYPE@_matrix(void *dst_in, void *src_in,const LINEARIZE_DATA_t* da;triu_@TYPE@_matrix(void *ptr, size_t n;static inline voi;static inline voi;INTERNAL voi;INTERNAL voi;release_gemm_params(GEMM_PARAMS_t * params;INTERNAL voi;static inline voi;INTERNAL voi;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;"
3220,92,c679f7b, ovillellas <oscar.villellas@continuum.io>," Wed, 17 Oct 2012 16:02:32 +0200",ct: [PATCH 12/92] lapack_lite for builds of umath_linalg without an optimized lapack in the system.,9,146761,3,numpy/core/setup.py,[u'26'],1,1," -929,9 +929,31 ;","def get_dotblas_sources(ext, build_dir);"
3220,92,c679f7b, ovillellas <oscar.villellas@continuum.io>," Wed, 17 Oct 2012 16:02:32 +0200",ct: [PATCH 12/92] lapack_lite for builds of umath_linalg without an optimized lapack in the system.,9,146761,3,numpy/core/src/umath/lapack_lite/blas_lite.c,[u'21131'],5,0," -0,0 +1,21131 ;",;
3220,92,c679f7b, ovillellas <oscar.villellas@continuum.io>," Wed, 17 Oct 2012 16:02:32 +0200",ct: [PATCH 12/92] lapack_lite for builds of umath_linalg without an optimized lapack in the system.,9,146761,3,numpy/core/src/umath/lapack_lite/dlamch.c,[u'951'],1,0," -0,0 +1,951 ;",;
3220,92,c679f7b, ovillellas <oscar.villellas@continuum.io>," Wed, 17 Oct 2012 16:02:32 +0200",ct: [PATCH 12/92] lapack_lite for builds of umath_linalg without an optimized lapack in the system.,9,146761,3,numpy/core/src/umath/lapack_lite/dlapack_lite.c,[u'97895'],21,0," -0,0 +1,97895 ;",;
3220,92,c679f7b, ovillellas <oscar.villellas@continuum.io>," Wed, 17 Oct 2012 16:02:32 +0200",ct: [PATCH 12/92] lapack_lite for builds of umath_linalg without an optimized lapack in the system.,9,146761,3,numpy/core/src/umath/lapack_lite/f2c.h,[u'217'],1,0," -0,0 +1,217 ;",;
3220,92,c679f7b, ovillellas <oscar.villellas@continuum.io>," Wed, 17 Oct 2012 16:02:32 +0200",ct: [PATCH 12/92] lapack_lite for builds of umath_linalg without an optimized lapack in the system.,9,146761,3,numpy/core/src/umath/lapack_lite/f2c_lite.c,[u'501'],1,0," -0,0 +1,501 ;",;
3220,92,c679f7b, ovillellas <oscar.villellas@continuum.io>," Wed, 17 Oct 2012 16:02:32 +0200",ct: [PATCH 12/92] lapack_lite for builds of umath_linalg without an optimized lapack in the system.,9,146761,3,numpy/core/src/umath/lapack_lite/python_xerbla.c,[u'37'],1,0," -0,0 +1,37 ;",;
3220,92,c679f7b, ovillellas <oscar.villellas@continuum.io>," Wed, 17 Oct 2012 16:02:32 +0200",ct: [PATCH 12/92] lapack_lite for builds of umath_linalg without an optimized lapack in the system.,9,146761,3,numpy/core/src/umath/lapack_lite/zlapack_lite.c,[u'26005'],6,0," -0,0 +1,26005 ;",;
3220,92,c679f7b, ovillellas <oscar.villellas@continuum.io>," Wed, 17 Oct 2012 16:02:32 +0200",ct: [PATCH 12/92] lapack_lite for builds of umath_linalg without an optimized lapack in the system.,9,146761,3,numpy/core/src/umath/umath_linalg.c.src,[u'1'],0,1," -19,7 +19,6 ;",;
3220,92,c85e833, ovillellas <oscar.villellas@continuum.io>," Wed, 17 Oct 2012 17:47:37 +0200",ct: [PATCH 13/92] added some single precision functions to f2c_lite.c that were missing and needed by out library. It seems to work now on Linux.,2,170,0,numpy/core/setup.py,[u'1'],0,1," -940,7 +940,6 ;","def get_lapack_lite_sources(ext, build_dir);"
3220,92,c85e833, ovillellas <oscar.villellas@continuum.io>," Wed, 17 Oct 2012 17:47:37 +0200",ct: [PATCH 13/92] added some single precision functions to f2c_lite.c that were missing and needed by out library. It seems to work now on Linux.,2,170,0,numpy/core/src/umath/lapack_lite/f2c_lite.c,[u'170'],28,0," -21,6 +21,34 ; -51,6 +79,16 ; -85,6 +123,18 ; -96,6 +146,16 ; -137,6 +197,40 ; -341,6 +435,17 ; -354,6 +459,42 ; -390,6 +531,35 ;","s_rnge(char *var, int index, char *routine, int lineno;return(temp);return(z->i);double d_lg10(doublereal *x;return(pow(*ap, *bp) );void s_copy(register char *a, register char *b, ftnlen la, ftnlen lb;return( f__cabs( z->r, z->i ) );els;"
3220,92,26d6bef, ovillellas <oscar.villellas@continuum.io>," Tue, 23 Oct 2012 18:40:52 +0200","ct: [PATCH 14/92] added plenty of simple functions (quadratic_form plus all the ""inspired from PDL"" ufuncs). Only missing from ""inspired from PDL"" is matrix_multiply3.",1,526,28,numpy/core/src/umath/umath_linalg.c.src,[u'554'],30,2," -161,20 +161,42 ; -212,8 +234,7 ; -221,6 +242,18 ; -332,6 +365,71 ; -401,6 +499,14 ; -410,6 +516,21 ; -421,6 +542,8 ; -581,7 +704,7 ; -835,11 +958,6 ; -982,15 +1100,20 ; -1118,6 +1241,7 ; -1129,7 +1253,7 ; -1210,7 +1334,9 ; -1370,6 +1496,7 ; -2385,19 +2512,28 ; -2405,7 +2541,276 ; -2456,6 +2861,15 ; -2471,6 +2885,27 ; -2542,7 +2977,6 ; -2552,7 +2986,6 ; -2562,7 +2995,6 ; -2573,7 +3005,6 ; -2730,7 +3161,74 ;","extern int FNAME(zungqr)(int *m, int *n, int *k, f2c_doublecomplex a[];FNAME(zgemm)(char *transa, char *transb;typedef f2c_doublecomplex fortran_doublecomplex;dump_linearize_data(const char* name, const LINEARIZE_DATA_t* params;dump_@TYPE@_matrix(const char* name, size_t rows, size_t columns, const @typ@* ;dump_@TYPE@_matrix(const char* name, size_t rows, size_t columns, const @typ@* ;update_pointers(uint8_t** bases, ptrdiff_t* offsets, size_t count;static inline voi;static voi;static inline voi;init_@lapack_func@(EIGH_PARAMS_t* params, char JOBZ, char UPLO;init_@lapack_func@(EIGH_PARAMS_t* params, char JOBZ, char UPLO;init_@lapack_func@(EIGH_PARAMS_t *params, char JOBZ, char UPLO;typedef struct gesv_params_struc;static inline voi;static voi;GUFUNC_FUNC_ARRAY_REAL_COMPLEX(svd_S);static char equal_3_types[] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;"
3220,92,c47ee06, ovillellas <oscar.villellas@continuum.io>," Tue, 23 Oct 2012 19:38:42 +0200",ct: [PATCH 15/92] added information about the contents of umath-linalg module,1,135,0,numpy/core/src/umath/umath_linalg_content.txt,[u'135'],26,0," -0,0 +1,135 ;",;
3220,92,05f9401, ovillellas <oscar.villellas@continuum.io>," Wed, 24 Oct 2012 15:54:07 +0200",ct: [PATCH 16/92] fixed gufuncs so that they use the proper signature (mwiebe fix present),1,15,15,numpy/core/src/umath/umath_linalg.c.src,[u'30'],15,15," -1566,7 +1566,7 ; -2997,26 +2997,26 ; -3026,7 +3026,7 ; -3036,7 +3036,7 ; -3046,7 +3046,7 ; -3056,7 +3056,7 ; -3066,7 +3066,7 ; -3076,7 +3076,7 ; -3086,7 +3086,7 ; -3144,7 +3144,7 ; -3154,7 +3154,7 ;",static voi;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;
3220,92,95eef39, ovillellas <oscar.villellas@continuum.io>," Mon, 29 Oct 2012 19:02:24 +0100","ct: [PATCH 17/92] fixed a warning in f2c_lite.c for umath/lapack_lite added chosolve and poinv, they need testing.",2,540,112,numpy/core/src/umath/lapack_lite/f2c_lite.c,[u'2'],1,1," -78,7 +78,7 ;",temp = real*sqrt(1.0 + temp*temp);  /*overflow!!*;
3220,92,95eef39, ovillellas <oscar.villellas@continuum.io>," Mon, 29 Oct 2012 19:02:24 +0100","ct: [PATCH 17/92] fixed a warning in f2c_lite.c for umath/lapack_lite added chosolve and poinv, they need testing.",2,540,112,numpy/core/src/umath/umath_linalg.c.src,[u'650'],23,5," -22,7 +22,7 ; -39,112 +39,211 ; -157,7 +256,7 ; -544,6 +643,12 ; -2719,8 +2824,8 ; -2810,6 +2915,276 ; -2869,6 +3244,12 ; -3227,8 +3608,55 ;",";typedef struct { float r, i; } f2c_complex;extern int FNAME(dorgqr)(int *m, int *n, int *k, double a[], int *lda;update_pointers(uint8_t** bases, ptrdiff_t* offsets, size_t count;static inline @typ;static voi;GUFUNC_FUNC_ARRAY_REAL_COMPLEX(multiply_add);GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;"
3220,92,2bb6c8e, ovillellas <oscar.villellas@continuum.io>," Wed, 31 Oct 2012 13:02:22 +0100",ct: [PATCH 18/92] poinv and chosolve working. Rebuilt lapack_lite to support them. Used also a patched f2c to remove warnings.,4,8056,4063,numpy/core/src/umath/lapack_lite/blas_lite.c,[u'386'],1,1," -539,8 +539,8 ; -593,7 +593,7 ; -608,7 +608,7 ; -731,7 +731,7 ; -746,7 +746,7 ; -783,7 +783,7 ; -798,7 +798,7 ; -1149,8 +1149,8 ; -1186,7 +1186,7 ; -1244,7 +1244,7 ; -1271,7 +1271,7 ; -1507,7 +1507,7 ; -1525,7 +1525,7 ; -1554,7 +1554,7 ; -1698,7 +1698,7 ; -1716,7 +1716,7 ; -1745,7 +1745,7 ; -1916,8 +1916,8 ; -1942,7 +1942,7 ; -2322,7 +2322,7 ; -2331,7 +2331,7 ; -2361,8 +2361,8 ; -2417,8 +2417,8 ; -2484,8 +2484,8 ; -2540,8 +2540,8 ; -2806,8 +2806,8 ; -2923,8 +2923,8 ; -3007,8 +3007,8 ; -3431,7 +3431,7 ; -3543,7 +3543,7 ; -3606,7 +3606,7 ; -3783,7 +3783,7 ; -3846,7 +3846,7 ; -4181,7 +4181,7 ; -4219,7 +4219,7 ; -4402,7 +4402,7 ; -4450,7 +4450,7 ; -4485,7 +4485,7 ; -4531,7 +4531,7 ; -4550,7 +4550,7 ; -4596,7 +4596,7 ; -4795,7 +4795,7 ; -4828,7 +4828,7 ; -4864,7 +4864,7 ; -4897,7 +4897,7 ; -5372,7 +5372,7 ; -5386,7 +5386,7 ; -5415,7 +5415,7 ; -5430,7 +5430,7 ; -5577,7 +5577,7 ; -5592,7 +5592,7 ; -5628,7 +5628,7 ; -5643,7 +5643,7 ; -5710,7 +5710,7 ; -5734,7 +5734,7 ; -5774,7 +5774,7 ; -5798,7 +5798,7 ; -5999,7 +5999,7 ; -6026,7 +6026,7 ; -6058,7 +6058,7 ; -6087,7 +6087,7 ; -6809,7 +6809,8 ; -7110,7 +7111,7 ; -7373,7 +7374,7 ; -7461,7 +7462,7 ; -7592,7 +7593,7 ; -7873,7 +7874,7 ; -8159,7 +8160,7 ; -8168,7 +8169,7 ; -8196,7 +8197,7 ; -8211,7 +8212,7 ; -8237,7 +8238,7 ; -8252,7 +8253,7 ; -8470,7 +8471,7 ; -8549,7 +8550,8 ; -8582,7 +8584,8 ; -8825,7 +8828,7 ; -10241,7 +10244,7 ; -10303,7 +10306,7 ; -10384,7 +10387,7 ; -10462,7 +10465,7 ; -10532,7 +10535,7 ; -10602,7 +10605,7 ; -10702,7 +10705,7 ; -10716,23 +10719,23 ; -10874,7 +10877,7 ; -10940,7 +10943,7 ; -11372,7 +11375,8 ; -11673,7 +11677,7 ; -11935,7 +11939,7 ; -12023,7 +12027,7 ; -12153,7 +12157,7 ; -12434,7 +12438,7 ; -12719,7 +12723,7 ; -12728,7 +12732,7 ; -12756,7 +12760,7 ; -12771,7 +12775,7 ; -12797,7 +12801,7 ; -12812,7 +12816,7 ; -13030,7 +13034,7 ; -13109,8 +13113,8 ; -13143,8 +13147,8 ; -13387,7 +13391,7 ; -15158,7 +15162,7 ; -15405,8 +15409,8 ; -15459,7 +15463,7 ; -15474,7 +15478,7 ; -15597,7 +15601,7 ; -15612,7 +15616,7 ; -15649,7 +15653,7 ; -15664,7 +15668,7 ; -16016,8 +16020,8 ; -16053,7 +16057,7 ; -16111,7 +16115,7 ; -16138,7 +16142,7 ; -16375,7 +16379,7 ; -16393,7 +16397,7 ; -16422,7 +16426,7 ; -16567,7 +16571,7 ; -16585,7 +16589,7 ; -16614,7 +16618,7 ; -16785,8 +16789,8 ; -16811,7 +16815,7 ; -17192,7 +17196,7 ; -17201,7 +17205,7 ; -17231,8 +17235,8 ; -17287,8 +17291,8 ; -17354,8 +17358,8 ; -17410,8 +17414,8 ; -17676,8 +17680,8 ; -17793,8 +17797,8 ; -17877,8 +17881,8 ; -18301,7 +18305,7 ; -18413,7 +18417,7 ; -18476,7 +18480,7 ; -18653,7 +18657,7 ; -18986,7 +18990,7 ; -19024,7 +19028,7 ; -19207,7 +19211,7 ; -19255,7 +19259,7 ; -19290,7 +19294,7 ; -19336,7 +19340,7 ; -19355,7 +19359,7 ; -19401,7 +19405,7 ; -19600,7 +19604,7 ; -19633,7 +19637,7 ; -19669,7 +19673,7 ; -19702,7 +19706,7 ; -20178,7 +20182,7 ; -20192,7 +20196,7 ; -20221,7 +20225,7 ; -20236,7 +20240,7 ; -20383,7 +20387,7 ; -20398,7 +20402,7 ; -20434,7 +20438,7 ; -20449,7 +20453,7 ; -20516,7 +20520,7 ; -20540,7 +20544,7 ; -20580,7 +20584,7 ; -20604,7 +20608,7 ; -20806,7 +20810,7 ; -20833,7 +20837,7 ; -20865,7 +20869,7 ; -20894,7 +20898,7 ;","static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};doublereal ddot_(integer *n, doublereal *dx, integer *incx, doublereal *dy;doublereal ddot_(integer *n, doublereal *dx, integer *incx, doublereal *dy;doublereal ddot_(integer *n, doublereal *dx, integer *incx, doublereal *dy;doublereal dnrm2_(integer *n, doublereal *x, integer *incx;doublereal dnrm2_(integer *n, doublereal *x, integer *incx;doublereal dnrm2_(integer *n, doublereal *x, integer *incx;doublereal dnrm2_(integer *n, doublereal *x, integer *incx;doublereal dnrm2_(integer *n, doublereal *x, integer *incx;doublereal dnrm2_(integer *n, doublereal *x, integer *incx;doublereal dnrm2_(integer *n, doublereal *x, integer *incx;doublereal dnrm2_(integer *n, doublereal *x, integer *incx;doublereal dnrm2_(integer *n, doublereal *x, integer *incx;doublereal dnrm2_(integer *n, doublereal *x, integer *incx;doublereal dnrm2_(integer *n, doublereal *x, integer *incx;doublereal dnrm2_(integer *n, doublereal *x, integer *incx;doublereal dnrm2_(integer *n, doublereal *x, integer *incx;doublereal dzasum_(integer *n, doublecomplex *zx, integer *incx;doublereal dznrm2_(integer *n, doublecomplex *x, integer *incx;integer icamax_(integer *n, complex *cx, integer *incx;integer idamax_(integer *n, doublereal *dx, integer *incx;integer isamax_(integer *n, real *sx, integer *incx;integer izamax_(integer *n, doublecomplex *zx, integer *incx;logical lsame_(char *ca, char *cb;logical lsame_(char *ca, char *cb;doublereal scasum_(integer *n, complex *cx, integer *incx;doublereal scnrm2_(integer *n, complex *x, integer *incx;doublereal sdot_(integer *n, real *sx, integer *incx, real *sy, integer *incy;doublereal sdot_(integer *n, real *sx, integer *incx, real *sy, integer *incy;doublereal sdot_(integer *n, real *sx, integer *incx, real *sy, integer *incy;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;"
3220,92,2bb6c8e, ovillellas <oscar.villellas@continuum.io>," Wed, 31 Oct 2012 13:02:22 +0100",ct: [PATCH 18/92] poinv and chosolve working. Rebuilt lapack_lite to support them. Used also a patched f2c to remove warnings.,4,8056,4063,numpy/core/src/umath/lapack_lite/dlapack_lite.c,[u'6914'],16,7," -38,15 +38,15 ; -149,9 +149,9 ; -182,7 +182,7 ; -212,7 +212,7 ; -466,7 +466,7 ; -497,7 +497,7 ; -562,7 +562,7 ; -573,7 +573,8 ; -589,7 +590,8 ; -1476,9 +1478,9 ; -1496,12 +1498,12 ; -1516,12 +1518,12 ; -1540,10 +1542,10 ; -1706,7 +1708,7 ; -1945,9 +1947,9 ; -2147,9 +2149,9 ; -2227,7 +2229,7 ; -2928,23 +2930,24 ; -2958,17 +2961,17 ; -2978,33 +2981,34 ; -3026,7 +3030,7 ; -3182,9 +3186,10 ; -3196,10 +3201,10 ; -3957,14 +3962,14 ; -3972,11 +3977,11 ; -4007,9 +4012,9 ; -4024,22 +4029,22 ; -4051,17 +4056,17 ; -4078,38 +4083,38 ; -4117,23 +4122,23 ; -4142,17 +4147,17 ; -4160,23 +4165,23 ; -4198,9 +4203,9 ; -4214,22 +4219,22 ; -4241,17 +4246,17 ; -4268,38 +4273,38 ; -4307,23 +4312,23 ; -4332,17 +4337,17 ; -4350,23 +4355,23 ; -4390,7 +4395,7 ; -5335,8 +5340,8 ; -5646,8 +5651,8 ; -6432,7 +6437,7 ; -6445,7 +6450,7 ; -6588,7 +6593,7 ; -6596,7 +6601,7 ; -6784,7 +6789,7 ; -7015,7 +7020,7 ; -7027,10 +7032,10 ; -7041,9 +7046,9 ; -7367,7 +7372,7 ; -7446,7 +7451,7 ; -8043,7 +8048,7 ; -8055,13 +8060,13 ; -8191,7 +8196,7 ; -8294,7 +8299,7 ; -8681,7 +8686,7 ; -9368,7 +9373,7 ; -9658,7 +9663,7 ; -9686,7 +9691,7 ; -9708,7 +9713,7 ; -10034,7 +10039,7 ; -10103,7 +10108,8 ; -10327,7 +10333,7 ; -10477,10 +10483,10 ; -10807,7 +10813,7 ; -10827,7 +10833,7 ; -11621,13 +11627,13 ; -11667,9 +11673,10 ; -11698,40 +11705,41 ; -11746,7 +11754,7 ; -11758,9 +11766,10 ; -11771,9 +11780,9 ; -11810,22 +11819,23 ; -11834,10 +11844,10 ; -11850,7 +11860,7 ; -11862,9 +11872,10 ; -11875,9 +11886,9 ; -11924,9 +11935,9 ; -12164,7 +12175,7 ; -12239,7 +12250,7 ; -12252,8 +12263,9 ; -12265,8 +12277,8 ; -12293,7 +12305,7 ; -12306,8 +12318,9 ; -12319,8 +12332,8 ; -12363,7 +12376,7 ; -12376,7 +12389,7 ; -12412,7 +12425,7 ; -12425,7 +12438,7 ; -12483,7 +12496,7 ; -12496,9 +12509,9 ; -12510,8 +12523,8 ; -12538,7 +12551,7 ; -12551,9 +12564,9 ; -12565,8 +12578,8 ; -12789,7 +12802,7 ; -12802,7 +12815,7 ; -12837,7 +12850,7 ; -12847,7 +12860,7 ; -13031,12 +13044,12 ; -13048,7 +13061,7 ; -13066,7 +13079,7 ; -13439,8 +13452,8 ; -13482,7 +13495,8 ; -13639,7 +13653,8 ; -13687,7 +13702,8 ; -13842,8 +13858,8 ; -13889,7 +13905,8 ; -13998,7 +14015,7 ; -14152,7 +14169,7 ; -14169,7 +14186,7 ; -14316,7 +14333,7 ; -16588,7 +16605,7 ; -16599,8 +16616,8 ; -16632,7 +16649,7 ; -16647,8 +16664,8 ; -16691,7 +16708,7 ; -16699,7 +16716,7 ; -16710,8 +16727,8 ; -16722,8 +16739,8 ; -16765,7 +16782,7 ; -16773,7 +16790,7 ; -16788,8 +16805,8 ; -16800,8 +16817,8 ; -16854,7 +16871,7 ; -16862,7 +16879,7 ; -16881,8 +16898,8 ; -16893,8 +16910,8 ; -16958,7 +16975,7 ; -16966,7 +16983,7 ; -16989,8 +17006,8 ; -17001,8 +17018,8 ; -17077,7 +17094,7 ; -17085,7 +17102,7 ; -17101,7 +17118,7 ; -17112,8 +17129,8 ; -17124,8 +17141,8 ; -17148,8 +17165,8 ; -17211,7 +17228,7 ; -17219,7 +17236,7 ; -17235,7 +17252,7 ; -17250,8 +17267,8 ; -17262,8 +17279,8 ; -17286,8 +17303,8 ; -17360,7 +17377,7 ; -17368,7 +17385,7 ; -17384,7 +17401,7 ; -17403,8 +17420,8 ; -17415,8 +17432,8 ; -17439,8 +17456,8 ; -17594,23 +17611,25 ; -17624,7 +17643,7 ; -17770,7 +17789,7 ; -18070,13 +18089,13 ; -18092,7 +18111,7 ; -18105,7 +18124,7 ; -18135,7 +18154,7 ; -18168,7 +18187,7 ; -18198,7 +18217,7 ; -18231,7 +18250,7 ; -18261,7 +18280,7 ; -18299,7 +18318,7 ; -18329,7 +18348,7 ; -18362,7 +18381,7 ; -18392,7 +18411,7 ; -18425,7 +18444,7 ; -18455,7 +18474,7 ; -18695,7 +18714,7 ; -20312,6 +20331,363 ; -20639,7 +21015,7 ; -20746,6 +21122,248 ; -21029,7 +21647,7 ; -21040,7 +21658,7 ; -21056,13 +21674,13 ; -21070,7 +21688,7 ; -21445,7 +22063,7 ; -22089,8 +22707,8 ; -22123,9 +22741,9 ; -22405,6 +23023,387 ; -22488,9 +23487,9 ; -22693,8 +23692,8 ; -22726,7 +23725,7 ; -22782,8 +23781,8 ; -22837,8 +23836,8 ; -22944,9 +23943,9 ; -23132,7 +24131,7 ; -23320,7 +24319,7 ; -23580,9 +24579,9 ; -23876,7 +24875,7 ; -23891,11 +24890,11 ; -24091,7 +25090,7 ; -24106,11 +25105,11 ; -24362,7 +25361,8 ; -24427,7 +25427,7 ; -24491,9 +25491,9 ; -24644,7 +25644,7 ; -24659,11 +25659,11 ; -24896,7 +25896,7 ; -24935,7 +25935,7 ; -24961,7 +25961,7 ; -24971,7 +25971,7 ; -25202,7 +26202,7 ; -25241,7 +26241,7 ; -25267,7 +26267,7 ; -25277,7 +26277,7 ; -25498,7 +26498,7 ; -25537,7 +26537,7 ; -25563,7 +26563,7 ; -25573,7 +26573,7 ; -25862,7 +26862,7 ; -25880,8 +26880,8 ; -26124,9 +27124,9 ; -26144,10 +27144,10 ; -26169,7 +27169,7 ; -26177,7 +27177,7 ; -26203,17 +27203,17 ; -26223,8 +27223,8 ; -26233,8 +27233,8 ; -26248,11 +27248,11 ; -26273,7 +27273,7 ; -26300,10 +27300,10 ; -26335,7 +27335,7 ; -26605,11 +27605,12 ; -26626,7 +27627,7 ; -26682,7 +27683,7 ; -26844,7 +27845,7 ; -26867,9 +27868,9 ; -26904,8 +27905,9 ; -27095,7 +28097,7 ; -27155,7 +28157,7 ; -27225,7 +28227,7 ; -27394,9 +28396,9 ; -27427,7 +28429,7 ; -27457,7 +28459,7 ; -27799,7 +28801,7 ; -27810,7 +28812,8 ; -27826,7 +28829,8 ; -28426,14 +29430,14 ; -28675,9 +29679,9 ; -28694,9 +29698,9 ; -28714,7 +29718,7 ; -28722,11 +29726,11 ; -28741,14 +29745,14 ; -28904,7 +29908,7 ; -29148,9 +30152,9 ; -29344,9 +30348,9 ; -29430,7 +30434,7 ; -29465,9 +30469,9 ; -30129,8 +31133,8 ; -30142,8 +31146,8 ; -30154,17 +31158,17 ; -30174,7 +31178,7 ; -30182,7 +31186,7 ; -30224,7 +31228,7 ; -30260,8 +31264,8 ; -30290,7 +31294,7 ; -30332,7 +31336,7 ; -30376,9 +31380,10 ; -30390,10 +31395,10 ; -30415,7 +31420,7 ; -30457,7 +31462,7 ; -31125,14 +32130,14 ; -31140,11 +32145,11 ; -31165,7 +32170,7 ; -31175,9 +32180,9 ; -31194,9 +32199,9 ; -31209,8 +32214,8 ; -31222,9 +32227,9 ; -31250,9 +32255,9 ; -31330,7 +32335,7 ; -31340,9 +32345,9 ; -31359,9 +32364,9 ; -31374,8 +32379,8 ; -31387,9 +32392,9 ; -31415,9 +32420,9 ; -31505,7 +32510,7 ; -31565,7 +32570,7 ; -31624,7 +32629,7 ; -31692,8 +32697,8 ; -31729,7 +32734,7 ; -31787,8 +32792,8 ; -31828,7 +32833,7 ; -31876,8 +32881,8 ; -31924,7 +32929,7 ; -32000,8 +33005,8 ; -32018,7 +33023,7 ; -32045,7 +33050,7 ; -32054,7 +33059,7 ; -32107,8 +33112,8 ; -32172,7 +33177,7 ; -32234,8 +33239,8 ; -32272,7 +33277,7 ; -32329,8 +33334,8 ; -32371,8 +33376,8 ; -32418,8 +33423,8 ; -32465,7 +33470,7 ; -32540,8 +33545,8 ; -32557,7 +33562,7 ; -32584,7 +33589,7 ; -32593,7 +33598,7 ; -32853,7 +33858,7 ; -32892,7 +33897,7 ; -33006,7 +34011,7 ; -33014,7 +34019,7 ; -33070,7 +34075,7 ; -33079,8 +34084,8 ; -33201,7 +34206,7 ; -33217,12 +34222,12 ; -33232,12 +34237,12 ; -33437,7 +34442,7 ; -33448,13 +34453,13 ; -33470,7 +34475,7 ; -33531,7 +34536,7 ; -33641,7 +34646,7 ; -33702,7 +34707,7 ; -33713,7 +34718,7 ; -33726,7 +34731,7 ; -34077,7 +35082,7 ; -34092,13 +35097,13 ; -34116,30 +35121,30 ; -34147,13 +35152,13 ; -34170,26 +35175,26 ; -34207,13 +35212,13 ; -34231,28 +35236,28 ; -34261,12 +35266,12 ; -34283,27 +35288,27 ; -34767,7 +35772,7 ; -34805,7 +35810,7 ; -34833,7 +35838,7 ; -34856,7 +35861,7 ; -34900,9 +35905,9 ; -35167,7 +36172,7 ; -35433,7 +36438,7 ; -35453,7 +36458,7 ; -36053,18 +37058,18 ; -36382,7 +37387,7 ; -36467,7 +37472,7 ; -36659,7 +37664,7 ; -36762,7 +37767,7 ; -36947,7 +37952,7 ; -37682,7 +38687,7 ; -37690,7 +38695,7 ; -37761,9 +38766,9 ; -37776,8 +38781,8 ; -37993,7 +38998,7 ; -38001,7 +39006,7 ; -38023,7 +39028,7 ; -38159,10 +39164,10 ; -38377,9 +39382,9 ; -38438,7 +39443,7 ; -38706,16 +39711,16 ; -38745,14 +39750,14 ; -39197,7 +40202,7 ; -39626,8 +40631,8 ; -39653,8 +40658,8 ; -39667,8 +40672,8 ; -39677,7 +40682,7 ; -39699,17 +40704,17 ; -39979,8 +40984,8 ; -39990,11 +40995,11 ; -40006,13 +41011,13 ; -40057,9 +41062,9 ; -40140,9 +41145,10 ; -40152,8 +41158,8 ; -40163,13 +41169,13 ; -40217,13 +41223,13 ; -40247,13 +41253,13 ; -40266,8 +41272,10 ; -40506,13 +41514,13 ; -40552,9 +41560,10 ; -40576,55 +41585,56 ; -40651,22 +41661,23 ; -40675,15 +41686,15 ; -40721,9 +41732,9 ; -40960,7 +41971,7 ; -41026,10 +42037,10 ; -41054,7 +42065,7 ; -41067,7 +42078,7 ; -41103,7 +42114,7 ; -41116,7 +42127,7 ; -41165,11 +42176,11 ; -41365,7 +42376,7 ; -41378,7 +42389,7 ; -41390,10 +42401,10 ; -41413,7 +42424,7 ; -41423,7 +42434,7 ; -41439,12 +42450,12 ; -41454,7 +42465,7 ; -41464,25 +42475,25 ; -41499,12 +42510,12 ; -41512,7 +42523,7 ; -41530,7 +42541,7 ; -41579,7 +42590,7 ; -41633,11 +42644,11 ; -41656,8 +42667,8 ; -41675,9 +42686,9 ; -41904,8 +42915,8 ; -41947,7 +42958,8 ; -42072,8 +43084,8 ; -42119,7 +43131,8 ; -42236,8 +43249,8 ; -42257,7 +43270,8 ; -42408,7 +43422,8 ; -42454,7 +43469,8 ; -42577,7 +43593,7 ; -42591,7 +43607,7 ; -42628,7 +43644,7 ; -42656,7 +43672,7 ; -42913,8 +43929,8 ; -42930,8 +43946,8 ; -43068,7 +44084,7 ; -43109,21 +44125,21 ; -43133,14 +44149,14 ; -43175,7 +44191,7 ; -43183,14 +44199,14 ; -43200,14 +44216,14 ; -43252,21 +44268,21 ; -43276,14 +44292,14 ; -43320,7 +44336,7 ; -43328,13 +44344,13 ; -43344,14 +44360,14 ; -43399,21 +44415,21 ; -43423,15 +44439,15 ; -43465,22 +44481,22 ; -43491,15 +44507,15 ; -43543,7 +44559,7 ; -43551,14 +44567,14 ; -43568,15 +44584,15 ; -43611,7 +44627,7 ; -43619,14 +44635,14 ; -43637,14 +44653,14 ; -43981,7 +44997,7 ; -43992,7 +45008,7 ; -44035,7 +45051,7 ; -44052,7 +45068,7 ; -44188,8 +45204,8 ; -44503,8 +45519,8 ; -44533,9 +45549,9 ; -44551,10 +45567,10 ; -44573,12 +45589,12 ; -44598,13 +45614,13 ; -44627,13 +45643,13 ; -44659,14 +45675,14 ; -44695,18 +45711,18 ; -44734,19 +45750,19 ; -44777,19 +45793,19 ; -45217,23 +46233,25 ; -45247,7 +46265,7 ; -45375,7 +46393,7 ; -45529,7 +46547,7 ; -45641,7 +46659,7 ; -45851,7 +46869,7 ; -45898,7 +46916,7 ; -45922,7 +46940,7 ; -46482,7 +47500,7 ; -46733,7 +47751,7 ; -46801,7 +47819,7 ; -46872,31 +47890,31 ; -46917,17 +47935,17 ; -46946,8 +47964,8 ; -47572,7 +48590,7 ; -47688,7 +48706,7 ; -47886,7 +48904,7 ; -48395,13 +49413,13 ; -48444,7 +49462,7 ; -48466,12 +49484,13 ; -48696,13 +49715,13 ; -48876,9 +49895,9 ; -49126,7 +50145,7 ; -49146,7 +50165,7 ; -49187,12 +50206,12 ; -49266,7 +50285,7 ; -49524,13 +50543,13 ; -49609,7 +50628,7 ; -49618,8 +50637,8 ; -49646,7 +50665,7 ; -49655,8 +50674,8 ; -49680,7 +50699,7 ; -49693,7 +50712,7 ; -49927,7 +50946,7 ; -49937,11 +50956,12 ; -49955,7 +50975,7 ; -50214,7 +51234,7 ; -50505,14 +51525,14 ; -50674,7 +51694,7 ; -50710,7 +51730,7 ; -50734,14 +51754,14 ; -50750,11 +51770,11 ; -50763,7 +51783,7 ; -50775,11 +51795,11 ; -50788,10 +51808,10 ; -50808,9 +51828,9 ; -50822,38 +51842,38 ; -50868,7 +51888,7 ; -50887,7 +51907,7 ; -50901,13 +51921,13 ; -50934,7 +51954,7 ; -50965,16 +51985,16 ; -50993,7 +52013,7 ; -51024,7 +52044,7 ; -51040,13 +52060,13 ; -51176,21 +52196,21 ; -51198,8 +52218,8 ; -51222,8 +52242,8 ; -51231,11 +52251,12 ; -51251,23 +52272,25 ; -51278,9 +52301,9 ; -51305,12 +52328,12 ; -51473,12 +52496,12 ; -51528,7 +52551,7 ; -51545,7 +52568,7 ; -51556,7 +52579,7 ; -51579,11 +52602,11 ; -51593,7 +52616,7 ; -51604,7 +52627,7 ; -51649,8 +52672,8 ; -51708,8 +52731,8 ; -51835,7 +52858,7 ; -51846,8 +52869,8 ; -51859,8 +52882,8 ; -51877,8 +52900,8 ; -51886,7 +52909,7 ; -51897,8 +52920,8 ; -51913,8 +52936,8 ; -51934,8 +52957,8 ; -51947,7 +52970,7 ; -51960,7 +52983,7 ; -52043,14 +53066,14 ; -52073,8 +53096,8 ; -52102,8 +53125,8 ; -52123,7 +53146,7 ; -52142,7 +53165,7 ; -52274,13 +53297,13 ; -52296,7 +53319,7 ; -52309,7 +53332,7 ; -52326,7 +53349,7 ; -52346,7 +53369,7 ; -52363,7 +53386,7 ; -52383,7 +53406,7 ; -52400,7 +53423,7 ; -52425,7 +53448,7 ; -52442,7 +53465,7 ; -52462,7 +53485,7 ; -52479,7 +53502,7 ; -52499,7 +53522,7 ; -52516,7 +53539,7 ; -52633,8 +53656,8 ; -52739,18 +53762,18 ; -52777,18 +53800,18 ; -53098,7 +54121,7 ; -53127,19 +54150,19 ; -53235,7 +54258,7 ; -53472,13 +54495,13 ; -53496,30 +54519,30 ; -53544,13 +54567,13 ; -53570,29 +54593,29 ; -53614,6 +54637,344 ; -53696,9 +55057,9 ; -53893,8 +55254,8 ; -53926,7 +55287,7 ; -53977,8 +55338,8 ; -54027,8 +55388,8 ; -54135,9 +55496,9 ; -54310,7 +55671,7 ; -54483,7 +55844,7 ; -54739,9 +56100,9 ; -55029,7 +56390,7 ; -55044,11 +56405,11 ; -55230,7 +56591,7 ; -55245,11 +56606,11 ; -55491,7 +56852,8 ; -55557,7 +56919,7 ; -55621,9 +56983,9 ; -55769,7 +57131,7 ; -55784,11 +57146,11 ; -56002,7 +57364,7 ; -56041,7 +57403,7 ; -56067,7 +57429,7 ; -56077,7 +57439,7 ; -56307,7 +57669,7 ; -56346,7 +57708,7 ; -56372,7 +57734,7 ; -56382,7 +57744,7 ; -56602,7 +57964,7 ; -56641,7 +58003,7 ; -56667,7 +58029,7 ; -56677,7 +58039,7 ; -56967,7 +58329,7 ; -56985,8 +58347,8 ; -57145,8 +58507,8 ; -57178,8 +58540,8 ; -57314,7 +58676,7 ; -57340,8 +58702,8 ; -57353,12 +58715,12 ; -57381,8 +58743,8 ; -57394,11 +58756,11 ; -57417,6 +58779,249 ; -57592,7 +59197,7 ; -57603,7 +59208,7 ; -57617,12 +59222,12 ; -57630,7 +59235,7 ; -57715,7 +59320,7 ; -57765,11 +59370,11 ; -57788,7 +59393,7 ; -57804,8 +59409,8 ; -58022,7 +59627,7 ; -58061,7 +59666,7 ; -58211,7 +59816,7 ; -58337,7 +59942,7 ; -58722,7 +60327,7 ; -58824,7 +60429,7 ; -59085,7 +60690,7 ; -59098,17 +60703,17 ; -59168,7 +60773,7 ; -59183,7 +60788,7 ; -59205,7 +60810,7 ; -59417,7 +61022,7 ; -59431,7 +61036,7 ; -59470,7 +61075,7 ; -59488,7 +61093,7 ; -59776,8 +61381,8 ; -59821,8 +61426,8 ; -60086,8 +61691,8 ; -60102,9 +61707,9 ; -60130,7 +61735,7 ; -60196,7 +61801,7 ; -60280,9 +61885,9 ; -60315,9 +61920,9 ; -60377,7 +61982,7 ; -60442,8 +62047,8 ; -60484,9 +62089,9 ; -60576,11 +62181,11 ; -60721,9 +62326,9 ; -60772,9 +62377,9 ; -60822,7 +62427,7 ; -60917,8 +62522,8 ; -60984,8 +62589,8 ; -61052,11 +62657,11 ; -61108,6 +62713,370 ; -61404,7 +63373,7 ; -61419,24 +63388,24 ; -61453,9 +63422,9 ; -61487,10 +63456,10 ; -61545,41 +63514,45 ; -61645,10 +63618,10 ; -61689,41 +63662,45 ; -61737,10 +63714,10 ; -61769,23 +63746,25 ; -62088,9 +64067,9 ; -62133,7 +64112,7 ; -62141,7 +64120,7 ; -62212,11 +64191,11 ; -62237,7 +64216,7 ; -62568,11 +64547,12 ; -62589,7 +64569,7 ; -62646,7 +64626,7 ; -62808,7 +64788,7 ; -62831,9 +64811,9 ; -62868,8 +64848,9 ; -63356,9 +65337,9 ; -63389,7 +65370,7 ; -63419,7 +65400,7 ; -63759,7 +65740,7 ; -63770,7 +65751,8 ; -63786,7 +65768,8 ; -64626,9 +66609,9 ; -64645,9 +66628,9 ; -64665,7 +66648,7 ; -64673,11 +66656,11 ; -64692,14 +66675,14 ; -64855,7 +66838,7 ; -65098,9 +67081,9 ; -65291,9 +67274,9 ; -65377,7 +67360,7 ; -66074,8 +68057,8 ; -66087,8 +68070,8 ; -66099,17 +68082,17 ; -66119,7 +68102,7 ; -66127,7 +68110,7 ; -66169,7 +68152,7 ; -66321,9 +68304,10 ; -66335,10 +68319,10 ; -67072,14 +69056,14 ; -67087,11 +69071,11 ; -67112,7 +69096,7 ; -67122,9 +69106,9 ; -67141,9 +69125,9 ; -67156,8 +69140,8 ; -67169,9 +69153,9 ; -67197,9 +69181,9 ; -67277,7 +69261,7 ; -67287,9 +69271,9 ; -67306,9 +69290,9 ; -67321,8 +69305,8 ; -67334,9 +69318,9 ; -67362,9 +69346,9 ; -67452,7 +69436,7 ; -68054,8 +70038,8 ; -68318,8 +70302,8 ; -68798,7 +70782,7 ; -68949,7 +70933,7 ; -68957,7 +70941,7 ; -69143,7 +71127,7 ; -69373,7 +71357,7 ; -69384,13 +71368,13 ; -69467,7 +71451,7 ; -69577,7 +71561,7 ; -70011,7 +71995,7 ; -70695,7 +72679,7 ; -70733,7 +72717,7 ; -70761,7 +72745,7 ; -70784,7 +72768,7 ; -71092,7 +73076,7 ; -71356,7 +73340,7 ; -72301,7 +74285,7 ; -72386,7 +74370,7 ; -72578,7 +74562,7 ; -72681,7 +74665,7 ; -72866,7 +74850,7 ; -73603,7 +75587,7 ; -73611,7 +75595,7 ; -73682,9 +75666,9 ; -73914,7 +75898,7 ; -73922,7 +75906,7 ; -74080,10 +76064,10 ; -74296,9 +76280,9 ; -74357,7 +76341,7 ; -74622,16 +76606,16 ; -75108,7 +77092,7 ; -75887,8 +77871,8 ; -75898,11 +77882,11 ; -75914,13 +77898,13 ; -75965,9 +77949,9 ; -76049,10 +78033,10 ; -76062,8 +78046,8 ; -76073,13 +78057,13 ; -76127,13 +78111,13 ; -76157,13 +78141,13 ; -76176,8 +78160,10 ; -76413,13 +78399,13 ; -76459,9 +78445,10 ; -76490,40 +78477,41 ; -76558,22 +78546,23 ; -76582,10 +78571,10 ; -76628,9 +78617,9 ; -76865,7 +78854,7 ; -76959,7 +78948,7 ; -76972,7 +78961,7 ; -77008,7 +78997,7 ; -77021,7 +79010,7 ; -77263,7 +79252,7 ; -77276,7 +79265,7 ; -77311,7 +79300,7 ; -77321,7 +79310,7 ; -77396,12 +79385,12 ; -77409,7 +79398,7 ; -77427,7 +79416,7 ; -77976,7 +79965,7 ; -78192,7 +80181,7 ; -78205,7 +80194,7 ; -78451,7 +80440,7 ; -78471,9 +80460,9 ; -78775,8 +80764,8 ; -78818,7 +80807,8 ; -78942,8 +80932,8 ; -78989,7 +80979,8 ; -79106,8 +81097,8 ; -79127,7 +81118,8 ; -79278,7 +81270,8 ; -79324,7 +81317,8 ; -79933,7 +81927,7 ; -81392,9 +83386,9 ; -81410,10 +83404,10 ; -81432,12 +83426,12 ; -81457,13 +83451,13 ; -81486,13 +83480,13 ; -81518,14 +83512,14 ; -81554,18 +83548,18 ; -81593,19 +83587,19 ; -81636,19 +83630,19 ; -82076,23 +84070,25 ; -82106,7 +84102,7 ; -82234,7 +84230,7 ; -82385,7 +84381,7 ; -82497,7 +84493,7 ; -82705,7 +84701,7 ; -83584,7 +85580,7 ; -83728,8 +85724,8 ; -84422,7 +86418,7 ; -84538,7 +86534,7 ; -84736,7 +86732,7 ; -85242,13 +87238,13 ; -85313,7 +87309,8 ; -85541,13 +87538,13 ; -85721,9 +87718,9 ; -85968,7 +87965,7 ; -85988,7 +87985,7 ; -86108,7 +88105,7 ; -86362,13 +88359,13 ; -86518,7 +88515,7 ; -86531,7 +88528,7 ; -86764,7 +88761,7 ; -86774,11 +88771,12 ; -86792,7 +88790,7 ; -87051,7 +89049,7 ; -87339,14 +89337,14 ; -87507,7 +89505,7 ; -87543,7 +89541,7 ; -87567,14 +89565,14 ; -87583,11 +89581,11 ; -87596,7 +89594,7 ; -87608,11 +89606,11 ; -87621,10 +89619,10 ; -87641,9 +89639,9 ; -87655,38 +89653,38 ; -87701,7 +89699,7 ; -87720,7 +89718,7 ; -87734,13 +89732,13 ; -87767,7 +89765,7 ; -87798,16 +89796,16 ; -87826,7 +89824,7 ; -87857,7 +89855,7 ; -87873,13 +89871,13 ; -88005,21 +90003,21 ; -88027,8 +90025,8 ; -88051,8 +90049,8 ; -88060,11 +90058,12 ; -88080,23 +90079,25 ; -88107,9 +90108,9 ; -88134,12 +90135,12 ; -88301,12 +90302,12 ; -88356,7 +90357,7 ; -88373,7 +90374,7 ; -88384,7 +90385,7 ; -88407,11 +90408,11 ; -88421,7 +90422,7 ; -88432,7 +90433,7 ; -88477,8 +90478,8 ; -88536,8 +90537,8 ; -88662,7 +90663,7 ; -88673,8 +90674,8 ; -88686,8 +90687,8 ; -88704,8 +90705,8 ; -88713,7 +90714,7 ; -88724,8 +90725,8 ; -88740,8 +90741,8 ; -88761,8 +90762,8 ; -88774,7 +90775,7 ; -88787,7 +90788,7 ; -88870,14 +90871,14 ; -88900,8 +90901,8 ; -88929,8 +90930,8 ; -88950,7 +90951,7 ; -88969,7 +90970,7 ; -89100,13 +91101,13 ; -89122,7 +91123,7 ; -89135,7 +91136,7 ; -89152,7 +91153,7 ; -89172,7 +91173,7 ; -89189,7 +91190,7 ; -89209,7 +91210,7 ; -89226,7 +91227,7 ; -89251,7 +91252,7 ; -89268,7 +91269,7 ; -89288,7 +91289,7 ; -89305,7 +91306,7 ; -89325,7 +91326,7 ; -89342,7 +91343,7 ; -89458,8 +91459,8 ; -89564,18 +91565,18 ; -89602,18 +91603,18 ; -89922,7 +91923,7 ; -90059,7 +92060,7 ; -90433,6 +92434,339 ; -90515,9 +92849,9 ; -90712,8 +93046,8 ; -90745,7 +93079,7 ; -90796,8 +93130,8 ; -90846,8 +93180,8 ; -90952,9 +93286,9 ; -91127,7 +93461,7 ; -91299,7 +93633,7 ; -91554,9 +93888,9 ; -91843,7 +94177,7 ; -91858,11 +94192,11 ; -92043,7 +94377,7 ; -92058,11 +94392,11 ; -92302,7 +94636,8 ; -92368,7 +94703,7 ; -92432,9 +94767,9 ; -92579,7 +94914,7 ; -92594,11 +94929,11 ; -92812,7 +95147,7 ; -92851,7 +95186,7 ; -92877,7 +95212,7 ; -92887,7 +95222,7 ; -93117,7 +95452,7 ; -93156,7 +95491,7 ; -93182,7 +95517,7 ; -93192,7 +95527,7 ; -93412,7 +95747,7 ; -93451,7 +95786,7 ; -93477,7 +95812,7 ; -93487,7 +95822,7 ; -93777,7 +96112,7 ; -93795,8 +96130,8 ; -94119,7 +96454,7 ; -94222,6 +96557,246 ; -94394,7 +96969,7 ; -94405,7 +96980,7 ; -94419,12 +96994,12 ; -94432,7 +97007,7 ; -94820,7 +97395,7 ; -95879,7 +98454,7 ; -95892,17 +98467,17 ; -95977,7 +98552,7 ; -95999,7 +98574,7 ; -96870,8 +99445,8 ; -96886,9 +99461,9 ; -96914,7 +99489,7 ; -96980,7 +99555,7 ; -97893,3 +100468,366 ;","static integer c__15 = 15;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;doublereal clange_(char *norm, integer *m, integer *n, complex *a, integer ;doublereal clange_(char *norm, integer *m, integer *n, complex *a, integer ;doublereal clanhe_(char *norm, char *uplo, integer *n, complex *a, integer ;doublereal clanhe_(char *norm, char *uplo, integer *n, complex *a, integer ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal dlange_(char *norm, integer *m, integer *n, doublereal *a, intege;doublereal dlange_(char *norm, integer *m, integer *n, doublereal *a, intege;doublereal dlanhs_(char *norm, integer *n, doublereal *a, integer *lda;doublereal dlanhs_(char *norm, integer *n, doublereal *a, integer *lda;doublereal dlanst_(char *norm, integer *n, doublereal *d__, doublereal *e;doublereal dlanst_(char *norm, integer *n, doublereal *d__, doublereal *e;doublereal dlansy_(char *norm, char *uplo, integer *n, doublereal *a, intege;doublereal dlansy_(char *norm, char *uplo, integer *n, doublereal *a, intege;doublereal dlansy_(char *norm, char *uplo, integer *n, doublereal *a, intege;doublereal dlansy_(char *norm, char *uplo, integer *n, doublereal *a, intege;doublereal dlansy_(char *norm, char *uplo, integer *n, doublereal *a, intege;doublereal dlansy_(char *norm, char *uplo, integer *n, doublereal *a, intege;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;doublereal slamch_(char *cmach;doublereal slamch_(char *cmach;doublereal slamch_(char *cmach;doublereal slamc3_(real *a, real *b;doublereal slamc3_(real *a, real *b;doublereal slange_(char *norm, integer *m, integer *n, real *a, integer *lda;doublereal slange_(char *norm, integer *m, integer *n, real *a, integer *lda;doublereal slanhs_(char *norm, integer *n, real *a, integer *lda, real *work;doublereal slanhs_(char *norm, integer *n, real *a, integer *lda, real *work;doublereal slanst_(char *norm, integer *n, real *d__, real *e;doublereal slanst_(char *norm, integer *n, real *d__, real *e;doublereal slansy_(char *norm, char *uplo, integer *n, real *a, integer *lda;doublereal slansy_(char *norm, char *uplo, integer *n, real *a, integer *lda;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;"
3220,92,2bb6c8e, ovillellas <oscar.villellas@continuum.io>," Wed, 31 Oct 2012 13:02:22 +0100",ct: [PATCH 18/92] poinv and chosolve working. Rebuilt lapack_lite to support them. Used also a patched f2c to remove warnings.,4,8056,4063,numpy/core/src/umath/lapack_lite/zlapack_lite.c,[u'4731'],10,6," -233,9 +233,9 ; -266,7 +266,7 ; -296,7 +296,7 ; -550,7 +550,7 ; -581,7 +581,7 ; -646,7 +646,7 ; -657,7 +657,8 ; -673,7 +674,8 ; -1567,9 +1569,9 ; -1587,12 +1589,12 ; -1607,12 +1609,12 ; -1631,10 +1633,10 ; -1797,7 +1799,7 ; -2037,9 +2039,9 ; -2240,9 +2242,9 ; -2320,7 +2322,7 ; -3032,23 +3034,24 ; -3062,17 +3065,17 ; -3082,33 +3085,34 ; -3130,7 +3134,7 ; -3286,9 +3290,10 ; -3300,10 +3305,10 ; -4079,14 +4084,14 ; -4094,11 +4099,11 ; -4129,9 +4134,9 ; -4146,22 +4151,22 ; -4173,17 +4178,17 ; -4200,38 +4205,38 ; -4239,23 +4244,23 ; -4264,17 +4269,17 ; -4282,23 +4287,23 ; -4320,9 +4325,9 ; -4336,22 +4341,22 ; -4363,17 +4368,17 ; -4390,38 +4395,38 ; -4429,23 +4434,23 ; -4454,17 +4459,17 ; -4472,23 +4477,23 ; -4512,7 +4517,7 ; -5457,8 +5462,8 ; -5768,8 +5773,8 ; -6557,7 +6562,7 ; -6570,7 +6575,7 ; -6712,7 +6717,7 ; -6720,7 +6725,7 ; -6909,7 +6914,7 ; -7145,7 +7150,7 ; -7157,10 +7162,10 ; -7171,9 +7176,9 ; -7500,7 +7505,7 ; -7579,7 +7584,7 ; -8183,7 +8188,7 ; -8195,13 +8200,13 ; -8331,7 +8336,7 ; -8434,7 +8439,7 ; -8823,7 +8828,7 ; -9511,7 +9516,7 ; -9801,7 +9806,7 ; -9829,7 +9834,7 ; -9851,7 +9856,7 ; -10179,7 +10184,7 ; -10248,7 +10253,8 ; -10472,7 +10478,7 ; -10622,10 +10628,10 ; -10956,7 +10962,7 ; -10976,7 +10982,7 ; -11778,13 +11784,13 ; -11824,9 +11830,10 ; -11855,40 +11862,41 ; -11903,7 +11911,7 ; -11915,9 +11923,10 ; -11928,9 +11937,9 ; -11967,22 +11976,23 ; -11991,10 +12001,10 ; -12007,7 +12017,7 ; -12019,9 +12029,10 ; -12032,9 +12043,9 ; -12081,9 +12092,9 ; -12322,7 +12333,7 ; -12397,7 +12408,7 ; -12410,8 +12421,9 ; -12423,8 +12435,8 ; -12451,7 +12463,7 ; -12464,8 +12476,9 ; -12477,8 +12490,8 ; -12521,7 +12534,7 ; -12534,7 +12547,7 ; -12570,7 +12583,7 ; -12583,7 +12596,7 ; -12641,7 +12654,7 ; -12654,9 +12667,9 ; -12668,8 +12681,8 ; -12696,7 +12709,7 ; -12709,9 +12722,9 ; -12723,8 +12736,8 ; -12948,7 +12961,7 ; -12961,7 +12974,7 ; -12996,7 +13009,7 ; -13006,7 +13019,7 ; -13191,12 +13204,12 ; -13208,7 +13221,7 ; -13226,7 +13239,7 ; -13599,8 +13612,8 ; -13642,7 +13655,8 ; -13799,7 +13813,8 ; -13847,7 +13862,8 ; -14002,8 +14018,8 ; -14049,7 +14065,8 ; -14159,7 +14176,7 ; -14314,7 +14331,7 ; -14331,7 +14348,7 ; -14478,7 +14495,7 ; -16754,7 +16771,7 ; -16765,8 +16782,8 ; -16798,7 +16815,7 ; -16813,8 +16830,8 ; -16857,7 +16874,7 ; -16865,7 +16882,7 ; -16876,8 +16893,8 ; -16888,8 +16905,8 ; -16931,7 +16948,7 ; -16939,7 +16956,7 ; -16954,8 +16971,8 ; -16966,8 +16983,8 ; -17020,7 +17037,7 ; -17028,7 +17045,7 ; -17047,8 +17064,8 ; -17059,8 +17076,8 ; -17124,7 +17141,7 ; -17132,7 +17149,7 ; -17155,8 +17172,8 ; -17167,8 +17184,8 ; -17243,7 +17260,7 ; -17251,7 +17268,7 ; -17267,7 +17284,7 ; -17278,8 +17295,8 ; -17290,8 +17307,8 ; -17314,8 +17331,8 ; -17377,7 +17394,7 ; -17385,7 +17402,7 ; -17401,7 +17418,7 ; -17416,8 +17433,8 ; -17428,8 +17445,8 ; -17452,8 +17469,8 ; -17526,7 +17543,7 ; -17534,7 +17551,7 ; -17550,7 +17567,7 ; -17569,8 +17586,8 ; -17581,8 +17598,8 ; -17605,8 +17622,8 ; -17760,23 +17777,25 ; -17790,7 +17809,7 ; -17936,7 +17955,7 ; -18238,13 +18257,13 ; -18260,7 +18279,7 ; -18273,7 +18292,7 ; -18303,7 +18322,7 ; -18336,7 +18355,7 ; -18366,7 +18385,7 ; -18399,7 +18418,7 ; -18429,7 +18448,7 ; -18467,7 +18486,7 ; -18497,7 +18516,7 ; -18530,7 +18549,7 ; -18560,7 +18579,7 ; -18593,7 +18612,7 ; -18623,7 +18642,7 ; -18863,7 +18882,7 ; -20485,20 +20504,17 ; -20512,7 +20528,7 ; -20521,39 +20537,35 ; -20561,9 +20573,6 ; -20588,7 +20597,7 ; -20600,113 +20609,81 ; -20715,16 +20692,16 ; -20733,47 +20710,42 ; -20798,7 +20770,7 ; -20810,285 +20782,164 ; -21097,79 +20948,23 ; -21178,322 +20973,183 ; -21502,35 +21158,23 ; -21540,484 +21184,410 ; -22030,461 +21600,1891 ; -22570,9 +23570,9 ; -22776,8 +23776,8 ; -22809,7 +23809,7 ; -22865,8 +23865,8 ; -22920,8 +23920,8 ; -23028,9 +24028,9 ; -23216,7 +24216,7 ; -23407,7 +24407,7 ; -23670,9 +24670,9 ; -23966,7 +24966,7 ; -23981,11 +24981,11 ; -24181,7 +25181,7 ; -24196,11 +25196,11 ; -24450,7 +25450,8 ; -24515,7 +25516,7 ; -24579,9 +25580,9 ; -24731,7 +25732,7 ; -24746,11 +25747,11 ; -24986,7 +25987,7 ; -25025,7 +26026,7 ; -25051,7 +26052,7 ; -25061,7 +26062,7 ; -25296,7 +26297,7 ; -25335,7 +26336,7 ; -25361,7 +26362,7 ; -25371,7 +26372,7 ; -25596,7 +26597,7 ; -25635,7 +26636,7 ; -25661,7 +26662,7 ; -25671,7 +26672,7 ; -25961,7 +26962,7 ; -25979,8 +26980,8 ;","static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;doublereal zlange_(char *norm, integer *m, integer *n, doublecomplex *a;doublereal zlange_(char *norm, integer *m, integer *n, doublecomplex *a;doublereal zlanhe_(char *norm, char *uplo, integer *n, doublecomplex *a;doublereal zlanhe_(char *norm, char *uplo, integer *n, doublecomplex *a;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;"
3220,92,2bb6c8e, ovillellas <oscar.villellas@continuum.io>," Wed, 31 Oct 2012 13:02:22 +0100",ct: [PATCH 18/92] poinv and chosolve working. Rebuilt lapack_lite to support them. Used also a patched f2c to remove warnings.,4,8056,4063,numpy/core/src/umath/umath_linalg.c.src,[u'88'],1,1," -661,7 +661,7 ; -676,9 +676,9 ; -701,9 +701,9 ; -713,6 +713,45 ; -2930,6 +2969,7 ; -2982,6 +3022,10 ; -3082,12 +3126,13 ; -3115,7 +3160,7 ; -3123,10 +3168,14 ; -3142,22 +3191,23 ;","update_pointers(uint8_t** bases, ptrdiff_t* offsets, size_t count;linearize_@TYPE@_matrix(void *dst_in, void *src_in,const LINEARIZE_DATA_t* data;delinearize_@TYPE@_matrix(void *dst_in, void *src_in,const LINEARIZE_DATA_t* da;delinearize_@TYPE@_matrix(void *dst_in, void *src_in,const LINEARIZE_DATA_t* da;typedef struct potrs_params_struct ;static inline in;typedef struct potri_params_struct ;init_@lapack_func@(POTRI_PARAMS_t *params;release_@lapack_func@(POTRI_PARAMS_t *params;static inline voi;"
3220,92,861e694, ovillellas <oscar.villellas@continuum.io>," Wed, 31 Oct 2012 13:32:56 +0100",ct: [PATCH 19/92] updated umath_linalg_content.txt,1,27,25,numpy/core/src/umath/umath_linalg_content.txt,[u'52'],14,13," -71,6 +71,24 ; -106,30 +124,14 ;",The following functions are already implemented;if compute_uv;
3220,92,747cd46, ovillellas <oscar.villellas@continuum.io>," Fri, 2 Nov 2012 15:25:37 +0100",ct: [PATCH 20/92] wrote a wrapper module for umath_linalg. Named gufuncs_linalg (in python).,3,139,0,numpy/core/setup.py,[u'1'],1,0," -943,6 +943,7 ;","def get_lapack_lite_sources(ext, build_dir);"
3220,92,747cd46, ovillellas <oscar.villellas@continuum.io>," Fri, 2 Nov 2012 15:25:37 +0100",ct: [PATCH 20/92] wrote a wrapper module for umath_linalg. Named gufuncs_linalg (in python).,3,139,0,numpy/core/src/umath/gufuncs_linalg.py,[u'100'],32,0," -0,0 +1,100 ;",;
3220,92,747cd46, ovillellas <oscar.villellas@continuum.io>," Fri, 2 Nov 2012 15:25:37 +0100",ct: [PATCH 20/92] wrote a wrapper module for umath_linalg. Named gufuncs_linalg (in python).,3,139,0,numpy/core/src/umath/umath_linalg.c.src,[u'39'],12,1," -3231,6 +3231,26 ; -3300,7 +3320,8 ; -3706,6 +3727,22 ;",static voi;GUFUNC_FUNC_ARRAY_REAL_COMPLEX(chosolve1_up);GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;
3220,92,ecfb93c, ovillellas <oscar.villellas@continuum.io>," Fri, 9 Nov 2012 15:19:15 +0100",ct: [PATCH 21/92] first iteration with tests. Incomplete and some failing. Just a start. Some bugs already fixed.,3,248,15,numpy/core/src/umath/gufuncs_linalg.py,[u'18'],1,2," -48,7 +48,7 ; -57,6 +57,8 ; -77,24 +79,24 ;","def solve(A,B,**kw_args);def solve(A,B,**kw_args);def svd(a, full_matrices=1, compute_uv=1 ,**kw_args);"
3220,92,ecfb93c, ovillellas <oscar.villellas@continuum.io>," Fri, 9 Nov 2012 15:19:15 +0100",ct: [PATCH 21/92] first iteration with tests. Incomplete and some failing. Just a start. Some bugs already fixed.,3,248,15,numpy/core/src/umath/umath_linalg.c.src,[u'15'],2,1," -867,7 +867,6 ; -2151,6 +2150,7 ; -2247,7 +2247,6 ; -2261,7 +2260,6 ; -2400,7 +2398,7 ; -2442,6 +2440,7 ; -2508,7 +2507,7 ; -2549,6 +2548,7 ; -2605,6 +2605,7 ; -3427,7 +3428,7 ; -3436,7 +3437,7 ;","static voi;init_@lapack_func@(GEEV_PARAMS_t* params, char jobvl, char jobvr, fortran_int n;static inline voi;static inline voi;init_@lapack_func@(GESDD_PARAMS_t *params, char jobz, fortran_int m, fortran_in;init_@lapack_func@(GESDD_PARAMS_t *params, char jobz, fortran_int m, fortran_in;init_@lapack_func@(GESDD_PARAMS_t *params, char jobz, fortran_int m, fortran_in;init_@lapack_func@(GESDD_PARAMS_t *params, char jobz, fortran_int m, fortran_in;static inline voi;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;"
3220,92,ecfb93c, ovillellas <oscar.villellas@continuum.io>," Fri, 9 Nov 2012 15:19:15 +0100",ct: [PATCH 21/92] first iteration with tests. Incomplete and some failing. Just a start. Some bugs already fixed.,3,248,15,numpy/core/tests/test_gufuncs_linalg.py,[u'230'],32,0," -0,0 +1,230 ;",;
3220,92,814add8, ovillellas <oscar.villellas@continuum.io>," Tue, 13 Nov 2012 16:41:08 +0100",ct: [PATCH 22/92] work on tests and related fixes. Getting things in shape to commit to de-shaw patch,3,300,124,numpy/core/src/umath/gufuncs_linalg.py,[u'20'],2,1," -4,9 +4,9 ; -19,6 +19,20 ;",;;
3220,92,814add8, ovillellas <oscar.villellas@continuum.io>," Tue, 13 Nov 2012 16:41:08 +0100",ct: [PATCH 22/92] work on tests and related fixes. Getting things in shape to commit to de-shaw patch,3,300,124,numpy/core/src/umath/umath_linalg.c.src,[u'113'],8,5," -18,6 +18,7 ; -237,27 +238,6 ; -374,19 +354,23 ; -660,8 +644,9 ; -715,6 +700,23 ; -982,11 +984,25 ; -1052,7 +1068,6 ; -1154,7 +1169,7 ; -2293,7 +2308,7 ; -2605,7 +2620,6 ; -3176,10 +3190,14 ; -3202,10 +3220,15 ; -3440,7 +3463,7 ;",";FNAME(zpotri)(char *uplo, int *n;typedef union ;update_pointers(uint8_t** bases, ptrdiff_t* offsets, size_t count;delinearize_@TYPE@_matrix(void *dst_in, void *src_in,const LINEARIZE_DATA_t* da;init_gemm_params(GEMM_PARAMS_t *params;static voi;static inline @typ;static voi;static inline voi;call_@potri@(POTRI_PARAMS_t *params;static inline voi;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;"
3220,92,814add8, ovillellas <oscar.villellas@continuum.io>," Tue, 13 Nov 2012 16:41:08 +0100",ct: [PATCH 22/92] work on tests and related fixes. Getting things in shape to commit to de-shaw patch,3,300,124,numpy/core/tests/test_gufuncs_linalg.py,[u'291'],23,9," -3,6 +3,13 ; -47,7 +54,7 ; -60,6 +67,7 ; -68,110 +76,226 ; -181,6 +305,9 ; -188,35 +315,47 ;",";;;def assert_almost_equal(a, b, **kw);def do(self, a, b);def do(self, a, b);"
3220,92,f74546d, ovillellas <oscar.villellas@continuum.io>," Tue, 13 Nov 2012 17:07:04 +0100","ct: [PATCH 23/92] removed some wrappers that weren't needed with the harness fix, just changed to assignment",1,2,16,numpy/core/src/umath/gufuncs_linalg.py,[u'18'],2,16," -5,8 +5,8 ; -19,20 +19,6 ;",;;
3220,92,a0c09b8, ovillellas <oscar.villellas@continuum.io>," Tue, 13 Nov 2012 17:25:16 +0100",ct: [PATCH 24/92] modified umath_linalg_content.txt to reflect changes.,1,25,0,numpy/core/src/umath/umath_linalg_content.txt,[u'25'],25,0," -1,3 +1,15 ; -8,6 +20,15 ; -101,6 +122,8 ; -124,6 +147,8 ;",";there are various problems to solve;name, so for eigh we have the functions eigh_lo and eigh_up (for 'L' and 'U');if compute_uv;"
3220,92,8817773, ovillellas <oscar.villellas@continuum.io>," Mon, 21 Jan 2013 16:58:22 +0100",ct: [PATCH 25/92] updated the umath_linalg_content.txt adding a mention to the wrapper code.,1,37,38,numpy/core/src/umath/umath_linalg_content.txt,[u'75'],13,14," -1,33 +1,26 ; -122,8 +115,6 ; -147,16 +138,24 ;",";name, so for eigh we have the functions eigh_lo and eigh_up (for 'L' and 'U');if compute_uv;"
3220,92,f6aaecb, ovillellas <oscar.villellas@continuum.io>," Thu, 15 Nov 2012 13:16:17 +0100",ct: [PATCH 26/92] fixed bug in matrix_multiply when using cdoubles,3,121,129,numpy/core/src/umath/umath_linalg.c.src,[u'217'],14,12," -20,10 +20,35 ; -310,7 +335,7 ; -418,23 +443,23 ; -442,10 +467,10 ; -516,24 +541,24 ; -545,15 +570,15 ; -942,16 +967,16 ; -984,25 +1009,25 ; -1039,8 +1064,8 ; -1057,13 +1082,13 ; -1077,26 +1102,19 ; -1912,20 +1930,20 ; -2331,18 +2349,17 ; -2455,7 +2472,7 ; -2563,7 +2580,7 ;",";FNAME(zgemm)(char *transa, char *transb;init_linearize_data(LINEARIZE_DATA_t *lin_data;dump_ufunc_object(PyUFuncObject* ufunc;CDOUBLE_mul(DOUBLECOMPLEX_t op1, DOUBLECOMPLEX_t op2;dump_@TYPE@_matrix(const char* name, size_t rows, size_t columns, const @typ@* ;typedef struct gemm_params_struc;init_gemm_params(GEMM_PARAMS_t *params;release_gemm_params(GEMM_PARAMS_t * params;static voi;static voi;typedef struct geev_params_struct ;typedef struct gessd_params_struc;init_@lapack_func@(GESDD_PARAMS_t *params, char jobz, fortran_int m, fortran_in;init_@lapack_func@(GESDD_PARAMS_t *params, char jobz, fortran_int m, fortran_in;"
3220,92,f6aaecb, ovillellas <oscar.villellas@continuum.io>," Thu, 15 Nov 2012 13:16:17 +0100",ct: [PATCH 26/92] fixed bug in matrix_multiply when using cdoubles,3,121,129,numpy/core/src/umath/umath_linalg_content.txt,[u'2'],1,0," -140,6 +140,8 ;",if compute_uv;
3220,92,f6aaecb, ovillellas <oscar.villellas@continuum.io>," Thu, 15 Nov 2012 13:16:17 +0100",ct: [PATCH 26/92] fixed bug in matrix_multiply when using cdoubles,3,121,129,numpy/core/tests/test_gufuncs_linalg.py,[u'31'],1,3," -6,10 +6,11 ; -214,13 +215,6 ; -229,13 +223,6 ; -245,13 +232,6 ; -325,13 +305,6 ;",";def test_vector_cdouble(self);def do(self, a, b);def do(self, a, b);def do(self, a, b);"
3220,92,c355550, ovillellas <oscar.villellas@continuum.io>," Thu, 15 Nov 2012 18:08:37 +0100",ct: [PATCH 27/92] fixed the problem in eigvals (apparently),3,29,22,numpy/core/src/umath/umath_linalg.c.src,[u'38'],17,10," -2140,10 +2140,10 ; -2159,7 +2159,6 ; -2170,9 +2169,10 ; -2287,18 +2287,28 ; -2870,7 +2880,7 ;","init_@lapack_func@(GEEV_PARAMS_t* params, char jobvl, char jobvr, fortran_int n;init_@lapack_func@(GEEV_PARAMS_t* params, char jobvl, char jobvr, fortran_int n;init_@lapack_func@(GEEV_PARAMS_t* params, char jobvl, char jobvr, fortran_int n;static inline voi;static voi;"
3220,92,c355550, ovillellas <oscar.villellas@continuum.io>," Thu, 15 Nov 2012 18:08:37 +0100",ct: [PATCH 27/92] fixed the problem in eigvals (apparently),3,29,22,numpy/core/src/umath/umath_linalg_content.txt,[u'7'],2,3," -15,8 +15,8 ; -141,7 +141,8 ;",privatel;if compute_uv;
3220,92,c355550, ovillellas <oscar.villellas@continuum.io>," Thu, 15 Nov 2012 18:08:37 +0100",ct: [PATCH 27/92] fixed the problem in eigvals (apparently),3,29,22,numpy/core/tests/test_gufuncs_linalg.py,[u'6'],1,4," -6,8 +6,7 ; -285,9 +284,6 ;",";def do(self, a, b);"
3220,92,2276eaa, ovillellas <oscar.villellas@continuum.io>," Fri, 16 Nov 2012 18:36:14 +0100",ct: [PATCH 28/92] work in progress: proper tests for eig.,2,6,5,numpy/core/src/umath/umath_linalg.c.src,[u'1'],1,0," -2302,6 +2302,7 ;",static inline voi;
3220,92,2276eaa, ovillellas <oscar.villellas@continuum.io>," Fri, 16 Nov 2012 18:36:14 +0100",ct: [PATCH 28/92] work in progress: proper tests for eig.,2,6,5,numpy/core/tests/test_gufuncs_linalg.py,[u'10'],5,5," -70,9 +70,9 ; -245,9 +245,9 ;",";def do(self, a, b);"
3220,92,a75fb9e, ovillellas <oscar.villellas@continuum.io>," Mon, 19 Nov 2012 15:39:29 +0100","ct: [PATCH 29/92] added tests for ufuncs in gufuncs_linalg (the ones based on pdl). Added multiply4 in the wrapper, as it was missing",2,83,0,numpy/core/src/umath/gufuncs_linalg.py,[u'1'],1,0," -15,6 +15,7 ;",;
3220,92,a75fb9e, ovillellas <oscar.villellas@continuum.io>," Mon, 19 Nov 2012 15:39:29 +0100","ct: [PATCH 29/92] added tests for ufuncs in gufuncs_linalg (the ones based on pdl). Added multiply4 in the wrapper, as it was missing",2,83,0,numpy/core/tests/test_gufuncs_linalg.py,[u'82'],33,0," -334,5 +334,87 ;","def do(self, a, b);"
3220,92,3e77076, ovillellas <oscar.villellas@continuum.io>," Tue, 20 Nov 2012 17:59:50 +0100",ct: [PATCH 30/92] reverted matrix_dot in umath_gufuncs to matrix_multiply. added some type-tests on test_gufuncs_linalg.py,3,20,9,numpy/core/src/umath/gufuncs_linalg.py,[u'2'],1,1," -4,7 +4,7 ;",;
3220,92,3e77076, ovillellas <oscar.villellas@continuum.io>," Tue, 20 Nov 2012 17:59:50 +0100",ct: [PATCH 30/92] reverted matrix_dot in umath_gufuncs to matrix_multiply. added some type-tests on test_gufuncs_linalg.py,3,20,9,numpy/core/src/umath/umath_linalg.c.src,[u'2'],1,1," -3491,7 +3491,7 ;",GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;
3220,92,3e77076, ovillellas <oscar.villellas@continuum.io>," Tue, 20 Nov 2012 17:59:50 +0100",ct: [PATCH 30/92] reverted matrix_dot in umath_gufuncs to matrix_multiply. added some type-tests on test_gufuncs_linalg.py,3,20,9,numpy/core/tests/test_gufuncs_linalg.py,[u'25'],18,7," -40,13 +40,13 ; -258,11 +258,22 ;",;def test_zero(self);
3220,92,0132755, ovillellas <oscar.villellas@continuum.io>," Mon, 14 Jan 2013 16:30:07 +0100",ct: [PATCH 31/92] updated documentation,2,942,110,numpy/core/src/umath/gufuncs_linalg.py,[u'844'],31,1," -1,26 +1,830 ;",;
3220,92,0132755, ovillellas <oscar.villellas@continuum.io>," Mon, 14 Jan 2013 16:30:07 +0100",ct: [PATCH 31/92] updated documentation,2,942,110,numpy/core/src/umath/umath_linalg.c.src,[u'208'],4,4," -1833,7 +1833,7 ; -1847,7 +1847,7 ; -1876,15 +1876,14 ; -1899,6 +1898,20 ; -1948,6 +1961,7 ; -2205,7 +2219,9 ; -2214,6 +2230,8 ; -2264,7 +2282,7 ; -2302,7 +2320,6 ; -3352,7 +3369,8 ; -3589,13 +3607,23 ; -3668,133 +3696,133 ;","typedef struct potr_params_struc;init_@lapack_func@(POTR_PARAMS_t *params, fortran_int N;call_@lapack_func@(POTR_PARAMS_t *params;static voi;dump_geev_params(const char *name, GEEV_PARAMS_t* params;static inline fortran_in;call_@lapack_func@(GEEV_PARAMS_t* params;static inline voi;static inline voi;GUFUNC_FUNC_ARRAY_REAL_COMPLEX(eigvalshup);GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;"
3220,92,367f333, ovillellas <oscar.villellas@continuum.io>," Wed, 23 Jan 2013 17:12:21 +0100",ct: [PATCH 32/92] BLD: Windows build fixes + some tabs removed,1,964,735,numpy/core/src/umath/umath_linalg.c.src,[u'1699'],18,13," -65,271 +65,266 ; -344,6 +339,8 ; -353,7 +350,7 ; -376,27 +373,68 ; -407,10 +445,11 ; -428,10 +467,10 ; -455,7 +494,8 ; -566,7 +606,9 ; -590,59 +632,75 ; -651,8 +709,7 ; -667,14 +724,15 ; -683,15 +741,16 ; -699,7 +758,9 ; -708,12 +769,13 ; -732,22 +794,23 ; -756,27 +819,27 ; -792,7 +855,8 ; -837,6 +901,7 ; -844,15 +909,15 ; -866,8 +931,10 ; -890,9 +957,9 ; -906,14 +973,11 ; -922,7 +986,10 ; -987,7 +1054,7 ; -1002,7 +1069,7 ; -1015,14 +1082,14 ; -1060,7 +1127,6 ; -1069,12 +1135,12 ; -1084,7 +1150,7 ; -1099,7 +1165,7 ; -1108,7 +1174,7 ; -1127,7 +1193,6 ; -1168,8 +1233,8 ; -1196,7 +1261,7 ; -1229,14 +1294,14 ; -1246,17 +1311,17 ; -1265,30 +1330,33 ; -1296,21 +1364,23 ; -1318,23 +1388,28 ; -1342,7 +1417,9 ; -1359,6 +1436,7 ; -1367,7 +1445,7 ; -1377,7 +1455,6 ; -1392,23 +1469,23 ; -1438,7 +1515,7 ; -1455,7 +1532,7 ; -1463,8 +1540,8 ; -1477,27 +1554,29 ; -1510,9 +1589,9 ; -1530,7 +1609,7 ; -1547,7 +1626,7 ; -1556,14 +1635,14 ; -1583,7 +1662,11 ; -1596,7 +1679,10 ; -1617,12 +1703,16 ; -1630,29 +1720,42 ; -1661,12 +1764,12 ; -1674,27 +1777,28 ; -1809,7 +1913,7 ; -1828,15 +1932,16 ; -1869,7 +1974,7 ; -1921,7 +2026,7 ; -1944,19 +2049,46 ; -1970,9 +2102,9 ; -1987,7 +2119,7 ; -2001,9 +2133,9 ; -2029,7 +2161,7 ; -2046,7 +2178,7 ; -2068,7 +2200,10 ; -2078,7 +2213,9 ; -2099,7 +2236,10 ; -2141,6 +2281,8 ; -2149,11 +2291,14 ; -2174,8 +2319,8 ; -2188,7 +2333,7 ; -2202,10 +2347,10 ; -2219,10 +2364,8 ; -2230,8 +2373,6 ; -2244,7 +2385,6 ; -2261,7 +2401,11 ; -2277,12 +2421,13 ; -2293,7 +2438,7 ; -2303,7 +2448,7 ; -2313,12 +2458,18 ; -2327,7 +2478,7 ; -2335,15 +2486,19 ; -2375,22 +2530,49 ; -2419,6 +2601,7 ; -2426,11 +2609,14 ; -2464,8 +2650,8 ; -2513,7 +2699,7 ; -2534,28 +2720,36 ; -2564,7 +2758,7 ; -2573,8 +2767,8 ; -2633,6 +2827,7 ; -2647,9 +2842,11 ; -2662,7 +2859,10 ; -2686,7 +2886,7 ; -2703,7 +2903,7 ; -2711,33 +2911,34 ; -2745,7 +2946,7 ; -2754,145 +2955,145 ; -2904,8 +3105,8 ; -2913,31 +3114,32 ; -2946,9 +3148,9 ; -2959,62 +3161,64 ; -3035,13 +3239,13 ; -3083,13 +3287,13 ; -3100,10 +3304,10 ; -3115,13 +3319,13 ; -3136,36 +3340,36 ; -3173,7 +3377,7 ; -3190,12 +3394,12 ; -3232,26 +3436,26 ; -3265,15 +3469,15 ; -3282,18 +3486,18 ; -3324,7 +3528,7 ; -3350,7 +3554,8 ; -3404,7 +3609,7 ; -3433,14 +3638,14 ; -3493,7 +3698,7 ; -3502,7 +3707,8 ; -3511,7 +3717,7 ; -3520,8 +3726,9 ; -3530,7 +3737,7 ; -3539,8 +3746,10 ; -3549,8 +3758,10 ; -3559,8 +3770,10 ; -3569,8 +3782,10 ; -3579,8 +3794,9 ; -3589,8 +3805,9 ; -3599,8 +3816,9 ; -3609,8 +3827,8 ; -3619,8 +3837,8 ; -3678,7 +3896,8 ; -3697,8 +3916,10 ; -3723,7 +3944,8 ; -3739,7 +3961,8 ; -3763,7 +3986,8 ; -3771,7 +3995,8 ; -3782,7 +4007,7 ; -3795,7 +4020,8 ; -3803,7 +4029,8 ; -3830,10 +4057,11 ; -3848,7 +4076,7 ; -3888,6 +4116,7 ; -3907,7 +4136,7 ;","typedef struct { float r, i; } f2c_complex;typedef double            fortran_doublereal;typedef f2c_doublecomplex fortran_doublecomplex;typedef union ;static const DOUBLECOMPLEX_t z_nan       = { { NAN, NAN } };typedef struct linearize_data_struc;dump_ufunc_object(PyUFuncObject* ufunc;print_CDOUBLE(npy_cdouble z;dump_@TYPE@_matrix(const char* name, size_t rows, size_t columns, const @typ@* ;update_pointers(uint8_t** bases, ptrdiff_t* offsets, size_t count;update_pointers(uint8_t** bases, ptrdiff_t* offsets, size_t count;linearize_@TYPE@_matrix(void *dst_in, void *src_in,const LINEARIZE_DATA_t* data;linearize_@TYPE@_matrix(void *dst_in, void *src_in,const LINEARIZE_DATA_t* data;delinearize_@TYPE@_matrix(void *dst_in, void *src_in,const LINEARIZE_DATA_t* da;nan_@TYPE@_matrix(void *dst_in, const LINEARIZE_DATA_t* data;make_symmetric_@TYPE@_matrix(char UPLO;identity_@TYPE@_matrix(void *ptr, size_t n;triu_@TYPE@_matrix(void *ptr, size_t n;triu_@TYPE@_matrix(void *ptr, size_t n;static inline voi;static voi;static voi;static voi;init_gemm_params(GEMM_PARAMS_t *params;init_gemm_params(GEMM_PARAMS_t *params;init_gemm_params(GEMM_PARAMS_t *params;release_gemm_params(GEMM_PARAMS_t * params;release_gemm_params(GEMM_PARAMS_t * params;static voi;static voi;static voi;static voi;static inline @typ;static inline @typ;static inline @typ;static inline @typ;static inline voi;static voi;static voi;static voi;static voi;typedef struct eigh_params_struct ;typedef struct eigh_params_struct ;static inline in;init_@lapack_func@(EIGH_PARAMS_t* params, char JOBZ, char UPLO;call_@lapack_func@(EIGH_PARAMS_t *params;call_@lapack_func@(EIGH_PARAMS_t *params;call_@lapack_func@(EIGH_PARAMS_t *params;init_@lapack_func@(EIGH_PARAMS_t *params, char JOBZ, char UPLO;init_@lapack_func@(EIGH_PARAMS_t *params, char JOBZ, char UPLO;call_@lapack_func@(EIGH_PARAMS_t *params;call_@lapack_func@(EIGH_PARAMS_t *params;release_@lapack_func@(EIGH_PARAMS_t *params;static inline voi;static inline voi;static inline voi;static voi;typedef struct gesv_params_struc;static voi;typedef struct potr_params_struc;static inline fortran_in;static voi;static inline voi;dump_geev_params(const char *name, GEEV_PARAMS_t* params;init_@lapack_func@(GEEV_PARAMS_t *params, char jobvl, char jobvr, fortran_int n;init_@lapack_func@(GEEV_PARAMS_t *params, char jobvl, char jobvr, fortran_int n;init_@lapack_func@(GEEV_PARAMS_t *params, char jobvl, char jobvr, fortran_int n;static inline fortran_in;mk_@TYPE@_complex_array_from_real(@complextyp@ *c, const @typ@ *re, size_t n;mk_@TYPE@_complex_array(@complextyp@ *c, const @typ@ *re, const @typ@ *im, size;mk_@TYPE@_complex_array_conjugate_pair(@complextyp@ *c, const @typ@ *r, size_t ;process_@lapack_func@_results(GEEV_PARAMS_t *params;process_@lapack_func@_results(GEEV_PARAMS_t *params;init_@lapack_func@(GEEV_PARAMS_t* params, char jobvl, char jobvr, fortran_int n;init_@lapack_func@(GEEV_PARAMS_t* params, char jobvl, char jobvr, fortran_int n;init_@lapack_func@(GEEV_PARAMS_t* params, char jobvl, char jobvr, fortran_int n;static inline fortran_in;call_@lapack_func@(GEEV_PARAMS_t* params;process_@lapack_func@_results(GEEV_PARAMS_t *NPY_UNUSED(params);release_@lapack_func@(GEEV_PARAMS_t *params;static inline voi;static inline voi;static inline voi;static inline voi;static inline voi;static inline voi;typedef struct gessd_params_struc;compute_urows_vtcolumns(char jobz;compute_urows_vtcolumns(char jobz;init_@lapack_func@(GESDD_PARAMS_t *params, char jobz, fortran_int m, fortran_in;call_@lapack_func@(GESDD_PARAMS_t *params;call_@lapack_func@(GESDD_PARAMS_t *params;init_@lapack_func@(GESDD_PARAMS_t *params, char jobz, fortran_int m, fortran_in;init_@lapack_func@(GESDD_PARAMS_t *params, char jobz, fortran_int m, fortran_in;call_@lapack_func@(GESDD_PARAMS_t *params;release_@lapack_func@(GESDD_PARAMS_t* params;static inline voi;static inline voi;static inline voi;static inline voi;static voi;static voi;static voi;static inline @typ;static inline @typ;static voi;typedef struct potrs_params_struct ;call_@lapack_func@(POTRS_PARAMS_t *params;call_@lapack_func@(POTRS_PARAMS_t *params;static voi;static voi;static voi;typedef struct potri_params_struct ;call_@potri@(POTRI_PARAMS_t *params;static inline voi;static inline voi;static inline voi;static void *array_of_nulls[] = ;static char equal_3_types[] = ;static char slogdet_types[] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;static voi;addUfuncs(PyObject *dictionary) ;initumath_linalg(void;initumath_linalg(void;"
3220,92,d4945ea, ovillellas <oscar.villellas@continuum.io>," Thu, 24 Jan 2013 17:59:08 +0100",ct: [PATCH 33/92] STY: made sure that split strings had \ at the end,1,107,96,numpy/core/src/umath/umath_linalg.c.src,[u'203'],17,15," -31,7 +31,15 ; -247,9 +255,9 ; -330,8 +338,12 ; -340,7 +352,6 ; -507,8 +518,8 ; -808,10 +819,10 ; -1694,7 +1705,7 ; -2050,23 +2061,23 ; -2524,7 +2535,7 ; -2533,22 +2544,22 ; -3698,7 +3709,7 ; -3707,8 +3718,8 ; -3717,7 +3728,7 ; -3726,9 +3737,9 ; -3737,7 +3748,7 ; -3746,10 +3757,10 ; -3758,10 +3769,10 ; -3770,10 +3781,10 ; -3782,10 +3793,10 ; -3794,9 +3805,9 ; -3805,9 +3816,9 ; -3816,9 +3827,9 ; -3827,8 +3838,8 ; -3837,8 +3848,8 ; -3896,8 +3907,8 ; -3916,10 +3927,10 ; -3944,7 +3955,7 ; -3961,8 +3972,8 ; -3983,10 +3994,10 ; -3995,7 +4006,7 ; -4020,7 +4031,7 ; -4029,7 +4040,7 ;","const char* umath_linalg_version_string = ""0.1.2"";FNAME(zpotrs)(char *uplo, int *n, int *nrhs;FNAME(zgemm)(char *transa, char *transb;typedef f2c_complex       fortran_complex;dump_ufunc_object(PyUFuncObject* ufunc;make_symmetric_@TYPE@_matrix(char UPLO;static inline voi;dump_geev_params(const char *name, GEEV_PARAMS_t* params;typedef struct gessd_params_struc;static inline voi;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;"
3220,92,866d230, ovillellas <oscar.villellas@continuum.io>," Mon, 28 Jan 2013 13:21:52 +0100","ct: [PATCH 34/92] updated api version, as one merge changed it.",2,3,0,numpy/core/code_generators/cversions.txt,[u'2'],2,0," -15,3 +15,5 ;",;
3220,92,866d230, ovillellas <oscar.villellas@continuum.io>," Mon, 28 Jan 2013 13:21:52 +0100","ct: [PATCH 34/92] updated api version, as one merge changed it.",2,3,0,numpy/core/setup_common.py,[u'2'],1,1," -31,7 +31,7 ;",;
3220,92,76a1963, ovillellas <oscar.villellas@continuum.io>," Mon, 28 Jan 2013 13:23:07 +0100",ct: [PATCH 35/92] fixed testdet test. It failed due to eigvails failing in single precision and notifying the failure as nans.,1,9,0,numpy/core/tests/test_gufuncs_linalg.py,[u'10'],9,1," -67,6 +67,12 ; -245,7 +251,9 ;",";def do(self, a, b);"
3220,92,e41e426, ovillellas <oscar.villellas@continuum.io>," Mon, 28 Jan 2013 19:44:58 +0100",ct: [PATCH 36/92] TST: fixed test for gufuncs_linalg Det,1,10,10,numpy/core/tests/test_gufuncs_linalg.py,[u'20'],10,10," -67,13 +67,6 ; -253,9 +246,16 ;",";def do(self, a, b);"
3220,92,2cc6fb4, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 11:19:34 +0100",ct: [PATCH 37/92] ENH: cholesky handling of _potrf failures (set result to nan),1,12,4,numpy/core/src/umath/umath_linalg.c.src,[u'16'],12,4," -720,7 +720,7 ; -1349,6 +1349,9 ; -2005,10 +2008,15 ;","update_pointers(npy_uint8** bases, ptrdiff_t* offsets, size_t count;static inline voi;static voi;"
3220,92,f2b0bdd, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 11:28:17 +0100","ct: [PATCH 38/92] ENH: eigh, eigvalsh set result to nan on LAPACK error (_ssyevd, _heevd)",1,19,9,numpy/core/src/umath/umath_linalg.c.src,[u'28'],19,9," -1714,17 +1714,27 ;",static inline voi;
3220,92,fb2270d, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 11:48:13 +0100",ct: [PATCH 39/92] ENH: solve sets result to nan on LAPACK error (_gesv),1,14,4,numpy/core/src/umath/umath_linalg.c.src,[u'18'],14,4," -1879,10 +1879,15 ; -1905,10 +1910,15 ;",static voi;static voi;
3220,92,7aa26c3, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 11:51:50 +0100",ct: [PATCH 40/92] ENH: inv sets result to nan on LAPACK error (_gesv),1,7,2,numpy/core/src/umath/umath_linalg.c.src,[u'9'],7,2," -1940,10 +1940,15 ;",static voi;
3220,92,ec5020c, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 12:02:43 +0100",ct: [PATCH 41/92] ENH: svd sets results to nan on LAPACK error (_gesdd),1,17,7,numpy/core/src/umath/umath_linalg.c.src,[u'24'],17,7," -2936,16 +2936,26 ;",static inline voi;
3220,92,170726c, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 12:08:55 +0100","ct: [PATCH 42/92] ENH: chosolve sets result to nan on LAPACK error (_potrf, _potrs)",1,10,2,numpy/core/src/umath/umath_linalg.c.src,[u'12'],10,2," -3344,6 +3344,9 ; -3382,10 +3385,15 ;",call_@lapack_func@(POTRS_PARAMS_t *params;static voi;
3220,92,43c25bb, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 13:04:08 +0100",ct: [PATCH 43/92] DOC: Added docstring for eigh,1,70,26,numpy/core/src/umath/gufuncs_linalg.py,[u'96'],25,9," -1,4 +1,4 ; -6,7 +6,7 ; -18,29 +18,6 ; -827,7 +804,48 ; -905,3 +923,29 ;",";;;def multiply4_add(a, b, c, d, e, **kwargs);def poinv(A, UPLO='L', **kw_args);"
3220,92,82976c0, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 13:20:07 +0100",ct: [PATCH 44/92] DOC: Added docstring to eigvalsh,1,37,2,numpy/core/src/umath/gufuncs_linalg.py,[u'39'],32,2," -804,7 +804,7 ; -857,7 +857,42 ;","def multiply4_add(a, b, c, d, e, **kwargs);def eigh(A, UPLO='L', **kw_args);"
3220,92,b75a0cb, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 14:59:13 +0100",ct: [PATCH 45/92] DOC: added docstring to solve,1,35,2,numpy/core/src/umath/gufuncs_linalg.py,[u'37'],32,2," -904,7 +904,40 ; -963,7 +996,7 ;","def eigvalsh(A, UPLO='L', **kw_args);def poinv(A, UPLO='L', **kw_args);"
3220,92,87cd05f, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 16:08:33 +0100",ct: [PATCH 46/92] DOC: added docstring for svd,1,91,41,numpy/core/src/umath/gufuncs_linalg.py,[u'132'],23,10," -2,16 +2,23 ; -98,7 +105,7 ; -135,14 +142,14 ; -192,7 +199,7 ; -301,7 +308,7 ; -348,8 +355,8 ; -361,13 +368,13 ; -382,7 +389,7 ; -412,7 +419,7 ; -443,9 +450,9 ; -459,10 +466,10 ; -495,7 +502,7 ; -506,7 +513,7 ; -516,7 +523,7 ; -544,7 +551,7 ; -559,7 +566,7 ; -580,7 +587,7 ; -595,7 +602,7 ; -617,7 +624,7 ; -635,7 +642,7 ; -657,7 +664,7 ; -672,7 +679,7 ; -694,7 +701,7 ; -709,7 +716,7 ; -731,7 +738,7 ; -746,7 +753,7 ; -768,7 +775,7 ; -783,7 +790,7 ; -904,7 +911,7 ; -925,7 +932,7 ; -948,6 +955,49 ;",";def innerwt(a, b, c, **kwargs);def matrix_multiply(a,b,**kwargs);def slogdet(a, **kwargs);def cholesky(a, UPLO='L', **kwargs);def cholesky(a, UPLO='L', **kwargs);def eig(a, **kwargs);def eig(a, **kwargs);def eig(a, **kwargs);def eigvals(a, **kwargs);def eigvals(a, **kwargs);def eigvals(a, **kwargs);def quadratic_form(u,Q,v, **kwargs);def quadratic_form(u,Q,v, **kwargs);def quadratic_form(u,Q,v, **kwargs);def add3(a, b, c, **kwargs);def add3(a, b, c, **kwargs);def multiply3(a, b, c, **kwargs);def multiply3_add(a, b, c, d, **kwargs);def multiply3_add(a, b, c, d, **kwargs);def multiply3_add(a, b, c, d, **kwargs);def multiply_add(a, b, c, **kwargs);def multiply_add(a, b, c, **kwargs);def multiply_add2(a, b, c, d, **kwargs);def multiply_add2(a, b, c, d, **kwargs);def multiply4(a, b, c, d, **kwargs);def multiply4(a, b, c, d, **kwargs);def multiply4_add(a, b, c, d, e, **kwargs);def eigvalsh(A, UPLO='L', **kw_args);def solve(A,B,**kw_args);def solve(A,B,**kw_args);"
3220,92,1f79b69, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 16:20:51 +0100",ct: [PATCH 47/92] DOC: Added docstring to chosolve,1,47,0,numpy/core/src/umath/gufuncs_linalg.py,[u'47'],34,0," -285,6 +285,11 ; -1020,6 +1025,48 ;","def inv(a, **kwargs);def svd(a, full_matrices=1, compute_uv=1 ,**kw_args);"
3220,92,bca1bbe, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 16:33:43 +0100",ct: [PATCH 48/92] DOC: added docstring for poinv,1,35,0,numpy/core/src/umath/gufuncs_linalg.py,[u'35'],34,0," -1082,6 +1082,41 ;","def chosolve(A, B, UPLO='L', **kw_args);"
3220,92,6e352ad, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 16:52:34 +0100",ct: [PATCH 49/92] DOC: Added notes on error handling.,1,35,0,numpy/core/src/umath/gufuncs_linalg.py,[u'36'],33,1," -13,6 +13,11 ; -283,7 +288,7 ; -328,6 +333,7 ; -336,6 +342,10 ; -404,6 +414,9 ; -481,6 +494,9 ; -846,6 +862,9 ; -893,6 +912,9 ; -939,6 +961,9 ; -996,6 +1021,9 ; -1055,6 +1083,9 ; -1106,6 +1137,9 ;",";def inv(a, **kwargs);def cholesky(a, UPLO='L', **kwargs);def cholesky(a, UPLO='L', **kwargs);def eig(a, **kwargs);def eigvals(a, **kwargs);def eigh(A, UPLO='L', **kw_args);def eigvalsh(A, UPLO='L', **kw_args);def solve(A,B,**kw_args);def svd(a, full_matrices=1, compute_uv=1 ,**kw_args);def chosolve(A, B, UPLO='L', **kw_args);def poinv(A, UPLO='L', **kw_args);"
3220,92,24b727b, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 18:34:55 +0100",ct: [PATCH 50/92] MAINT: renamed umath_linalg module to _umath_linalg as it is internal.,3,12,11,numpy/core/setup.py,[u'13'],7,6," -940,17 +940,18 ;","def get_lapack_lite_sources(ext, build_dir);"
3220,92,24b727b, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 18:34:55 +0100",ct: [PATCH 50/92] MAINT: renamed umath_linalg module to _umath_linalg as it is internal.,3,12,11,numpy/core/src/umath/gufuncs_linalg.py,[u'2'],1,1," -27,7 +27,7 ;",;
3220,92,24b727b, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 18:34:55 +0100",ct: [PATCH 50/92] MAINT: renamed umath_linalg module to _umath_linalg as it is internal.,3,12,11,numpy/core/src/umath/umath_linalg.c.src,[u'8'],4,4," -370,7 +370,7 ; -4167,11 +4167,11 ; -4201,7 +4201,7 ;","offset_ptr(void* ptr, ptrdiff_t offset;static struct PyModuleDef moduledef = ;initumath_linalg(void;"
3220,92,e1c7ed4, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 18:44:43 +0100",ct: [PATCH 51/92] MAINT: renamed the file describing the gufuncs_linalg module,2,164,164,numpy/core/src/umath/gufuncs_linalg_contents.rst,[u'164'],23,0," -0,0 +1,164 ;",;
3220,92,e1c7ed4, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 18:44:43 +0100",ct: [PATCH 51/92] MAINT: renamed the file describing the gufuncs_linalg module,2,164,164,numpy/core/src/umath/umath_linalg_content.txt,[u'164'],0,23," -1,164 +0,0 ;",;
3220,92,bbd674d, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 19:39:50 +0100",ct: [PATCH 52/92] MAINT: Rewrote the gufuncs_linalg_contents as a rst file and updated it.,1,103,163,numpy/core/src/umath/gufuncs_linalg_contents.rst,[u'266'],9,14," -1,164 +1,104 ;",;
3220,92,1ec2024, ovillellas <oscar.villellas@continuum.io>," Fri, 8 Feb 2013 17:40:30 +0100",ct: [PATCH 53/92] STY: PEP8,1,32,27,numpy/core/src/umath/gufuncs_linalg.py,[u'59'],18,16," -30,6 +30,7 ; -65,6 +66,7 ; -103,6 +105,7 ; -146,8 +149,8 ; -191,6 +194,7 ; -260,6 +264,7 ; -303,6 +308,7 ; -359,6 +365,7 ; -452,6 +459,7 ; -520,6 +528,7 ; -566,9 +575,11 ; -602,9 +613,11 ; -638,9 +651,11 ; -679,9 +694,11 ; -716,9 +733,11 ; -753,9 +772,11 ; -790,9 +811,11 ; -827,9 +850,11 ; -877,6 +902,7 ; -927,6 +953,7 ; -975,6 +1002,7 ; -1030,6 +1058,7 ; -1097,6 +1126,7 ; -1150,6 +1180,7 ; -1157,29 +1188,3 ;",";def inner1d(a, b, **kwargs);def innerwt(a, b, c, **kwargs);def matrix_multiply(a,b,**kwargs);def det(a, **kwargs);def slogdet(a, **kwargs);def inv(a, **kwargs);def cholesky(a, UPLO='L', **kwargs);def eig(a, **kwargs);def eigvals(a, **kwargs);def quadratic_form(u,Q,v, **kwargs);def add3(a, b, c, **kwargs);def multiply3(a, b, c, **kwargs);def multiply3_add(a, b, c, d, **kwargs);def multiply_add(a, b, c, **kwargs);def multiply_add2(a, b, c, d, **kwargs);def multiply4(a, b, c, d, **kwargs);def multiply4_add(a, b, c, d, e, **kwargs);def eigh(A, UPLO='L', **kw_args);def eigvalsh(A, UPLO='L', **kw_args);def solve(A,B,**kw_args);def svd(a, full_matrices=1, compute_uv=1 ,**kw_args);def chosolve(A, B, UPLO='L', **kw_args);def poinv(A, UPLO='L', **kw_args);def poinv(A, UPLO='L', **kw_args);"
3220,92,a2afc85, ovillellas <oscar.villellas@continuum.io>," Fri, 8 Feb 2013 17:41:34 +0100",ct: [PATCH 54/92] DOC: corrected documentation - arrays of functions -> arrays of matrices,1,0,0,numpy/core/src/umath/gufuncs_linalg.py,[u'2'],1,1," -13,7 +13,7 ;",;
3220,92,f48c134, ovillellas <oscar.villellas@continuum.io>," Fri, 8 Feb 2013 19:27:08 +0100",ct: [PATCH 55/92] ENH: Added np.seterr handling of errors,2,9,4,numpy/core/src/umath/gufuncs_linalg.py,[u'9'],5,4," -13,10 +13,11 ;",;
3220,92,f48c134, ovillellas <oscar.villellas@continuum.io>," Fri, 8 Feb 2013 19:27:08 +0100",ct: [PATCH 55/92] ENH: Added np.seterr handling of errors,2,9,4,numpy/core/src/umath/umath_linalg.c.src,[u'4'],4,0," -812,6 +812,10 ;","nan_@TYPE@_matrix(void *dst_in, const LINEARIZE_DATA_t* data;"
3220,92,2eeddab, ovillellas <oscar.villellas@continuum.io>," Mon, 11 Feb 2013 15:39:48 +0100",ct: [PATCH 56/92] BLD: python 3.x compile fix,1,4,4,numpy/core/src/umath/umath_linalg.c.src,[u'8'],4,4," -21,7 +21,7 ; -370,7 +370,7 ; -4158,7 +4158,7 ; -4186,7 +4186,7 ;",";offset_ptr(void* ptr, ptrdiff_t offset;static PyMethodDef UMath_LinAlgMethods[] = ;init_umath_linalg(void;"
3220,92,fd435bc, ovillellas <oscar.villellas@continuum.io>," Mon, 11 Feb 2013 16:19:19 +0100",ct: [PATCH 57/92] BLD: Python3 build problem fixed,1,0,0,numpy/core/src/umath/umath_linalg.c.src,[u'2'],1,1," -4161,7 +4161,7 ;",static struct PyModuleDef moduledef = ;
3220,92,8556374, ovillellas <oscar.villellas@continuum.io>," Tue, 12 Feb 2013 13:13:54 +0100",ct: [PATCH 58/92] DOC: Added doctests to docstring for fused operations,1,34,9,numpy/core/src/umath/gufuncs_linalg.py,[u'43'],27,7," -443,7 +443,7 ; -453,7 +453,7 ; -613,7 +613,9 ; -651,7 +653,10 ; -694,7 +699,10 ; -733,7 +741,10 ; -772,7 +783,10 ; -811,7 +825,10 ; -850,7 +867,10 ; -1189,3 +1209,8 ;","def eig(a, **kwargs);def eig(a, **kwargs);def add3(a, b, c, **kwargs);def multiply3(a, b, c, **kwargs);def multiply3_add(a, b, c, d, **kwargs);def multiply_add(a, b, c, **kwargs);def multiply_add2(a, b, c, d, **kwargs);def multiply4(a, b, c, d, **kwargs);def multiply4_add(a, b, c, d, e, **kwargs);def poinv(A, UPLO='L', **kw_args);"
3220,92,cd6c20b, ovillellas <oscar.villellas@continuum.io>," Thu, 14 Feb 2013 19:15:29 +0100",ct: [PATCH 59/92] DOC: added more doctests,1,90,6,numpy/core/src/umath/gufuncs_linalg.py,[u'96'],31,3," -914,6 +914,10 ; -922,7 +926,27 ; -965,6 +989,10 ; -973,7 +1001,16 ; -1022,7 +1059,18 ; -1078,7 +1126,26 ; -1146,7 +1213,19 ; -1200,7 +1279,12 ;","def eigh(A, UPLO='L', **kw_args);def eigh(A, UPLO='L', **kw_args);def eigvalsh(A, UPLO='L', **kw_args);def eigvalsh(A, UPLO='L', **kw_args);def solve(A,B,**kw_args);def svd(a, full_matrices=1, compute_uv=1 ,**kw_args);def chosolve(A, B, UPLO='L', **kw_args);def poinv(A, UPLO='L', **kw_args);"
3220,92,05ceb12, ovillellas <oscar.villellas@continuum.io>," Wed, 20 Feb 2013 15:18:06 +0100",ct: [PATCH 60/92] DOC: changed doctests for eig and eigh to be more robust,1,36,33,numpy/core/src/umath/gufuncs_linalg.py,[u'69'],18,16," -427,35 +427,40 ; -926,26 +931,24 ;","def eig(a, **kwargs);def eigh(A, UPLO='L', **kw_args);"
3220,92,8e8f247, ovillellas <oscar.villellas@continuum.io>," Wed, 20 Feb 2013 15:54:57 +0100",ct: [PATCH 61/92] DOC: fixed doctest in poinv so that the example matrix is positive-definite.,1,9,9,numpy/core/src/umath/gufuncs_linalg.py,[u'18'],9,9," -1179,12 +1179,12 ; -1247,17 +1247,17 ; -1282,7 +1282,7 ;","def chosolve(A, B, UPLO='L', **kw_args);def chosolve(A, B, UPLO='L', **kw_args);def poinv(A, UPLO='L', **kw_args);"
3220,92,7e3176f, ovillellas <oscar.villellas@continuum.io>," Wed, 20 Feb 2013 19:00:59 +0100",ct: [PATCH 62/92] BUG: fixed a bug in eig for complex numbers. Eigenvector results are computed properly now.,1,2,2,numpy/core/src/umath/umath_linalg.c.src,[u'4'],2,2," -2349,8 +2349,8 ;",init_@lapack_func@(GEEV_PARAMS_t* params;
3220,92,ad8b29b, ovillellas <oscar.villellas@continuum.io>," Fri, 1 Mar 2013 16:42:44 +0100",ct: [PATCH 63/92] FIX: problems with eig and eigvals. Enhanced tests.,2,167,128,numpy/core/src/umath/umath_linalg.c.src,[u'183'],15,17," -21,14 +21,13 ; -50,7 +49,7 ; -603,13 +602,13 ; -626,12 +625,13 ; -2308,6 +2308,7 ; -2338,6 +2339,7 ; -2356,8 +2358,9 ; -2421,10 +2424,10 ; -2461,6 +2464,7 ; -3570,27 +3574,6 ; -3618,14 +3601,34 ; -3645,8 +3648,8 ; -3661,8 +3664,6 ; -3717,21 +3718,19 ; -3767,7 +3766,7 ; -3777,7 +3776,7 ; -3786,7 +3785,7 ; -3797,7 +3796,7 ; -3806,7 +3805,7 ; -3818,7 +3817,7 ; -3830,7 +3829,7 ; -3842,7 +3841,7 ; -3854,7 +3853,7 ; -3865,7 +3864,7 ; -3876,7 +3875,7 ; -3887,7 +3886,7 ; -3897,7 +3896,7 ; -3907,7 +3906,7 ; -3915,7 +3914,7 ; -3923,7 +3922,7 ; -3931,7 +3930,7 ; -3939,7 +3938,7 ; -3947,7 +3946,7 ; -3955,7 +3954,7 ; -3965,8 +3964,8 ; -3975,8 +3974,8 ; -3988,7 +3987,7 ; -3996,7 +3995,7 ; -4004,7 +4003,7 ; -4013,7 +4012,7 ; -4021,7 +4020,7 ; -4030,7 +4029,7 ; -4038,7 +4037,7 ; -4046,7 +4045,7 ; -4055,7 +4054,7 ; -4064,7 +4063,7 ; -4072,7 +4071,7 ; -4080,7 +4079,7 ; -4089,7 +4088,7 ; -4098,25 +4097,9 ;",;dbg_stack_trace(;static inline voi;dump_@TYPE@_matrix(const char* name;mk_@lapack_func@_complex_eigenvectors(@complextyp@ *c;process_@lapack_func@_results(GEEV_PARAMS_t *params;init_@lapack_func@(GEEV_PARAMS_t* params;call_@lapack_func@(GEEV_PARAMS_t* params;static inline voi;static voi;static void *array_of_nulls[] = ;GUFUNC_FUNC_ARRAY_REAL_COMPLEX(cholesky_lo);GUFUNC_FUNC_ARRAY_REAL_COMPLEX(chosolve1_up);static char eigh_types[] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;
3220,92,ad8b29b, ovillellas <oscar.villellas@continuum.io>," Fri, 1 Mar 2013 16:42:44 +0100",ct: [PATCH 63/92] FIX: problems with eig and eigvals. Enhanced tests.,2,167,128,numpy/core/tests/test_gufuncs_linalg.py,[u'112'],14,5," -4,11 +4,6 ; -75,6 +70,61 ; -128,6 +178,7 ; -211,6 +262,7 ; -219,6 +271,7 ; -244,15 +297,13 ; -286,42 +337,38 ; -340,6 +387,7 ; -405,35 +453,43 ;",";def assert_almost_equal(a, b, **kw);def complex_hermitian_matrices_vector(self);def test_vector_cdouble(self);def do(self, a, b);def do(self, a, b);def test_types(self);def do(self, a, b);def do(self, a);"
3220,92,60f54b6, ovillellas <oscar.villellas@continuum.io>," Fri, 22 Mar 2013 11:06:39 +0100",ct: [PATCH 64/92] ENH: added complex version for inner1d. Also added dotc1d,2,187,65,numpy/core/src/umath/gufuncs_linalg.py,[u'89'],14,3," -1,7 +1,8 ; -10,22 +11,23 ; -34,7 +36,8 ; -46,16 +49,22 ; -72,9 +81,58 ; -90,11 +148,13 ; -1300,4 +1360,5 ;",";;;def inner1d(a, b, **kwargs);def inner1d(a, b, **kwargs);def innerwt(a, b, c, **kwargs);def poinv(A, UPLO='L', **kw_args);"
3220,92,60f54b6, ovillellas <oscar.villellas@continuum.io>," Fri, 22 Mar 2013 11:06:39 +0100",ct: [PATCH 64/92] ENH: added complex version for inner1d. Also added dotc1d,2,187,65,numpy/core/src/umath/umath_linalg.c.src,[u'163'],22,10," -302,6 +302,14 ; -341,6 +349,9 ; -568,6 +579,7 ; -588,6 +600,38 ; -924,54 +968,20 ; -979,20 +989,60 ; -1012,9 +1062,10 ; -3631,8 +3682,9 ; -3765,11 +3817,20 ;","extern f2c_doublecomple;FNAME(zgemm)(char *transa, char *transb;DOUBLE_mul(double op1, double op2;CDOUBLE_mul(DOUBLECOMPLEX_t op1, DOUBLECOMPLEX_t op2;triu_@TYPE@_matrix(void *ptr, size_t n;static voi;static voi;static void *array_of_nulls[] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;"
3220,92,5dc27ac, ovillellas <oscar.villellas@continuum.io>," Fri, 22 Mar 2013 17:46:51 +0100",ct: [PATCH 65/92] FIX: matrix_multiply now works when given a column matrix,2,82,39,numpy/core/src/umath/umath_linalg.c.src,[u'116'],21,11," -1112,63 +1112,101 ;","dump_gemm_params(const char* name, const GEMM_PARAMS_t* params;"
3220,92,5dc27ac, ovillellas <oscar.villellas@continuum.io>," Fri, 22 Mar 2013 17:46:51 +0100",ct: [PATCH 65/92] FIX: matrix_multiply now works when given a column matrix,2,82,39,numpy/core/tests/test_gufuncs_linalg.py,[u'5'],2,0," -271,6 +271,11 ;","def do(self, a, b);"
3220,92,0afe276, ovillellas <oscar.villellas@continuum.io>," Fri, 5 Apr 2013 12:19:03 +0200",ct: [PATCH 66/92] =?UTF-8?q?DOC:=20changed=20<NDIMS>=20to=20=E2=80=A6?= =?UTF-8?q?=20in=20shape=20descriptions=20in=20docstrings?=MIME-Version: 1.0Content-Type: text/plain; charset=UTF-8Content-Transfer-Encoding: 8bit,1,66,65,numpy/core/src/umath/gufuncs_linalg.py,[u'131'],17,16," -41,14 +41,14 ; -88,14 +88,14 ; -136,12 +136,12 ; -177,16 +177,15 ; -272,17 +271,17 ; -339,12 +338,12 ; -388,14 +387,15 ; -443,20 +443,20 ; -535,12 +535,12 ; -601,18 +601,18 ; -652,12 +652,12 ; -692,12 +692,12 ; -734,15 +734,15 ; -779,12 +779,12 ; -821,12 +821,12 ; -863,12 +863,12 ; -905,12 +905,12 ; -949,7 +949,7 ; -959,9 +959,9 ; -1027,7 +1027,7 ; -1037,7 +1037,7 ; -1093,15 +1093,15 ; -1154,7 +1154,7 ; -1166,12 +1166,12 ; -1243,9 +1243,9 ; -1254,8 +1254,9 ; -1316,12 +1317,12 ;","def inner1d(a, b, **kwargs);def dotc1d(a, b, **kwargs);def innerwt(a, b, c, **kwargs);def matrix_multiply(a,b,**kwargs);def slogdet(a, **kwargs);def inv(a, **kwargs);def cholesky(a, UPLO='L', **kwargs);def eig(a, **kwargs);def eigvals(a, **kwargs);def quadratic_form(u,Q,v, **kwargs);def add3(a, b, c, **kwargs);def multiply3(a, b, c, **kwargs);def multiply3_add(a, b, c, d, **kwargs);def multiply_add(a, b, c, **kwargs);def multiply_add2(a, b, c, d, **kwargs);def multiply4(a, b, c, d, **kwargs);def multiply4_add(a, b, c, d, e, **kwargs);def eigh(A, UPLO='L', **kw_args);def eigh(A, UPLO='L', **kw_args);def eigvalsh(A, UPLO='L', **kw_args);def eigvalsh(A, UPLO='L', **kw_args);def solve(A,B,**kw_args);def svd(a, full_matrices=1, compute_uv=1 ,**kw_args);def svd(a, full_matrices=1, compute_uv=1 ,**kw_args);def chosolve(A, B, UPLO='L', **kw_args);def chosolve(A, B, UPLO='L', **kw_args);def poinv(A, UPLO='L', **kw_args);"
3220,92,1f8efc0, ovillellas <oscar.villellas@continuum.io>," Fri, 5 Apr 2013 12:43:59 +0200",ct: [PATCH 67/92] MAINT: added from __future__ as suggested by charris,1,3,0,numpy/core/src/umath/gufuncs_linalg.py,[u'3'],3,0," -23,6 +23,9 ;",;
3220,92,e7a54da, ovillellas <oscar.villellas@continuum.io>," Fri, 5 Apr 2013 13:05:35 +0200",ct: [PATCH 68/92] BLD: reverted api version back to 8,2,0,3,numpy/core/code_generators/cversions.txt,[u'2'],0,2," -15,5 +15,3 ;",;
3220,92,e7a54da, ovillellas <oscar.villellas@continuum.io>," Fri, 5 Apr 2013 13:05:35 +0200",ct: [PATCH 68/92] BLD: reverted api version back to 8,2,0,3,numpy/core/setup_common.py,[u'2'],1,1," -31,7 +31,7 ;",;
3220,92,35f4b17, Pauli Virtanen <pav@iki.fi>," Mon, 8 Apr 2013 23:19:05 +0300",ct: [PATCH 69/92] MAINT: mark gufuncs_linalg.py as a internal testing-only module,4,1373,1370,numpy/core/setup.py,[u'2'],1,1," -950,7 +950,7 ;","def get_lapack_lite_sources(ext, build_dir);"
3220,92,35f4b17, Pauli Virtanen <pav@iki.fi>," Mon, 8 Apr 2013 23:19:05 +0300",ct: [PATCH 69/92] MAINT: mark gufuncs_linalg.py as a internal testing-only module,4,1373,1370,numpy/core/src/umath/_gufuncs_linalg.py,[u'1371'],31,0," -0,0 +1,1371 ;",;
3220,92,35f4b17, Pauli Virtanen <pav@iki.fi>," Mon, 8 Apr 2013 23:19:05 +0300",ct: [PATCH 69/92] MAINT: mark gufuncs_linalg.py as a internal testing-only module,4,1373,1370,numpy/core/src/umath/gufuncs_linalg.py,[u'1368'],0,30," -1,1368 +0,0 ;",;
3220,92,35f4b17, Pauli Virtanen <pav@iki.fi>," Mon, 8 Apr 2013 23:19:05 +0300",ct: [PATCH 69/92] MAINT: mark gufuncs_linalg.py as a internal testing-only module,4,1373,1370,numpy/core/tests/test_gufuncs_linalg.py,[u'2'],1,1," -58,7 +58,7 ;",;
3220,92,f0a78c7, Pauli Virtanen <pav@iki.fi>," Mon, 8 Apr 2013 23:56:05 +0300",ct: [PATCH 70/92] DOC: document the behavior of generalized N-dim linear algebra functions,1,18,0,doc/source/reference/routines.linalg.rst,[u'18'],18,0," -67,3 +67,21 ;",Exception;
3220,92,2e8b24e, Pauli Virtanen <pav@iki.fi>," Tue, 9 Apr 2013 22:01:40 +0300",ct: [PATCH 71/92] ENH: linalg: add helper routines for gufuncs,1,48,0,numpy/linalg/linalg.py,[u'49'],48,1," -22,12 +22,14 ; -67,6 +69,40 ; -158,11 +194,22 ;",;class LinAlgError(Exception);def _assertRank2(*arrays);
3220,92,5b0fead, Pauli Virtanen <pav@iki.fi>," Mon, 8 Apr 2013 23:46:59 +0300",ct: [PATCH 72/92] ENH: linalg: use _umath_linalg for det(),1,20,5,numpy/linalg/linalg.py,[u'25'],20,5," -1717,6 +1717,9 ; -1773,12 +1776,12 ; -1799,9 +1802,21 ;",def slogdet(a);def det(a);def det(a);
3220,92,87dc3f6, Pauli Virtanen <pav@iki.fi>," Tue, 9 Apr 2013 00:30:04 +0300",ct: [PATCH 73/92] ENH: linalg: use _umath_linalg for slogdet(),1,23,26,numpy/linalg/linalg.py,[u'49'],23,26," -1696,16 +1696,16 ; -1736,6 +1736,17 ; -1745,30 +1756,13 ; -1791,6 +1785,9 ;",def slogdet(a);def slogdet(a);def slogdet(a);def det(a);
3220,92,7d2fed6, Pauli Virtanen <pav@iki.fi>," Tue, 9 Apr 2013 00:52:55 +0300",ct: [PATCH 74/92] ENH: linalg: use _umath_linalg for inv(),1,28,8,numpy/linalg/linalg.py,[u'36'],28,8," -28,7 +28,7 ; -461,24 +461,29 ; -486,14 +491,29 ;",;def inv(a);def inv(a);
3220,92,04ad33e, Pauli Virtanen <pav@iki.fi>," Tue, 9 Apr 2013 22:02:01 +0300",ct: [PATCH 75/92] ENH: linalg: use _umath_linalg for solve(),1,18,34,numpy/linalg/linalg.py,[u'52'],17,33," -301,14 +301,14 ; -318,15 +318,10 ; -355,32 +350,21 ;","def solve(a, b);def solve(a, b);def solve(a, b);"
3220,92,2dd6405, Pauli Virtanen <pav@iki.fi>," Tue, 9 Apr 2013 22:02:22 +0300",ct: [PATCH 76/92] ENH: linalg: use _umath_linalg for cholesky(),1,12,22,numpy/linalg/linalg.py,[u'34'],12,22," -514,15 +514,15 ; -532,6 +532,9 ; -569,26 +572,13 ;",def cholesky(a);def cholesky(a);def cholesky(a);
3220,92,15a9c3b, Pauli Virtanen <pav@iki.fi>," Tue, 9 Apr 2013 22:02:30 +0300",ct: [PATCH 77/92] ENH: linalg: use _umath_linalg for eigvals(),1,20,42,numpy/linalg/linalg.py,[u'62'],16,34," -804,12 +804,12 ; -827,9 +827,11 ; -858,49 +860,25 ;",def eigvals(a);def eigvals(a);def eigvals(a);
3220,92,74e1477, Pauli Virtanen <pav@iki.fi>," Tue, 9 Apr 2013 22:02:35 +0300",ct: [PATCH 78/92] ENH: linalg: use _umath_linalg for eigvalsh(),1,20,44,numpy/linalg/linalg.py,[u'64'],16,34," -888,16 +888,16 ; -915,9 +915,10 ; -927,45 +928,20 ;","def eigvalsh(a, UPLO='L');def eigvalsh(a, UPLO='L');def eigvalsh(a, UPLO='L');"
3220,92,1253d57, Pauli Virtanen <pav@iki.fi>," Tue, 9 Apr 2013 22:02:45 +0300",ct: [PATCH 79/92] ENH: linalg: use _umath_linalg for eig(),1,29,58,numpy/linalg/linalg.py,[u'87'],17,33," -959,17 +959,20 ; -988,9 +991,11 ; -1061,57 +1066,23 ;",def eig(a);def eig(a);def eig(a);
3220,92,cc7b048, Pauli Virtanen <pav@iki.fi>," Tue, 9 Apr 2013 23:22:11 +0300",ct: [PATCH 80/92] ENH: linalg: use _umath_linalg for eigh(),1,24,44,numpy/linalg/linalg.py,[u'68'],18,32," -1096,17 +1096,18 ; -1124,9 +1125,11 ; -1168,46 +1171,23 ;","def eigh(a, UPLO='L');def eigh(a, UPLO='L');def eigh(a, UPLO='L');"
3220,92,bbdca51, Pauli Virtanen <pav@iki.fi>," Tue, 9 Apr 2013 22:02:54 +0300",ct: [PATCH 81/92] ENH: linalg: use _umath_linalg for svd(),1,39,59,numpy/linalg/linalg.py,[u'98'],20,30," -1201,7 +1201,7 ; -1213,15 +1213,14 ; -1230,6 +1229,11 ; -1269,63 +1273,39 ;","def svd(a, full_matrices=1, compute_uv=1);def svd(a, full_matrices=1, compute_uv=1);def svd(a, full_matrices=1, compute_uv=1);def svd(a, full_matrices=1, compute_uv=1);"
3220,92,63a8aef, Pauli Virtanen <pav@iki.fi>," Tue, 9 Apr 2013 22:56:47 +0300",ct: [PATCH 82/92] BUG: core/umath_linalg: ensure FP error status reflects LAPACK error status,1,69,0,numpy/core/src/umath/umath_linalg.c.src,[u'69'],33,0," -374,6 +374,12 ; -1780,6 +1786,7 ; -1824,6 +1831,7 ; -1834,6 +1842,11 ; -1960,6 +1973,7 ; -1979,12 +1993,18 ; -1992,6 +2012,7 ; -2010,12 +2031,18 ; -2024,6 +2051,7 ; -2040,12 +2068,18 ; -2116,6 +2150,7 ; -2133,11 +2168,17 ; -2551,6 +2592,7 ; -2613,6 +2655,7 ; -2624,6 +2667,11 ; -2990,6 +3038,7 ; -3046,6 +3095,7 ; -3059,6 +3109,11 ; -3464,6 +3519,7 ; -3489,12 +3545,18 ; -3617,6 +3679,7 ; -3635,12 +3698,18 ;","offset_ptr(void* ptr, ptrdiff_t offset;static inline voi;static inline voi;static inline voi;static voi;static voi;static voi;static voi;static voi;static voi;static voi;static voi;static inline voi;static inline voi;static inline voi;static inline voi;static inline voi;static inline voi;static voi;static voi;static inline voi;static inline voi;"
3220,92,9bfa19b, Pauli Virtanen <pav@iki.fi>," Tue, 9 Apr 2013 23:58:01 +0300",ct: [PATCH 83/92] TST: linalg: add tests for generalized linalg functions,1,89,34,numpy/linalg/tests/test_linalg.py,[u'123'],27,11," -85,7 +85,6 ; -138,43 +137,94 ; -201,7 +251,7 ; -210,12 +260,14 ; -320,58 +372,61 ;","def test_matrix_a_and_b(self);def test_cdouble_nsq_2_2(self);def do(self, a, b);def do(self, a, b);def test_square(self);"
3220,92,9c00887, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 19:35:13 +0300","ct: [PATCH 84/92] MAINT: move umath_linalg under numpy/linalg and use the same lapack_liteAlso, link umath_linalg against the system BLAS/LAPACK if available.",36,157231,231622,numpy/core/bento.info,[u'3'],0,1," -25,9 +25,6 ;",Library;
3220,92,9c00887, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 19:35:13 +0300","ct: [PATCH 84/92] MAINT: move umath_linalg under numpy/linalg and use the same lapack_liteAlso, link umath_linalg against the system BLAS/LAPACK if available.",36,157231,231622,numpy/core/bscript,[u'1'],0,1," -542,7 +542,6 ;",def pre_build(context);
3220,92,9c00887, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 19:35:13 +0300","ct: [PATCH 84/92] MAINT: move umath_linalg under numpy/linalg and use the same lapack_liteAlso, link umath_linalg against the system BLAS/LAPACK if available.",36,157231,231622,numpy/core/setup.py,[u'32'],0,1," -926,38 +926,6 ;","def get_dotblas_sources(ext, build_dir);"
3220,92,9c00887, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 19:35:13 +0300","ct: [PATCH 84/92] MAINT: move umath_linalg under numpy/linalg and use the same lapack_liteAlso, link umath_linalg against the system BLAS/LAPACK if available.",36,157231,231622,numpy/core/src/umath/_gufuncs_linalg.py,[u'1371'],0,1," -1,1371 +0,0 ;",;
3220,92,9c00887, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 19:35:13 +0300","ct: [PATCH 84/92] MAINT: move umath_linalg under numpy/linalg and use the same lapack_liteAlso, link umath_linalg against the system BLAS/LAPACK if available.",36,157231,231622,numpy/core/src/umath/gufuncs_linalg_contents.rst,[u'104'],0,1," -1,104 +0,0 ;",;
3220,92,9c00887, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 19:35:13 +0300","ct: [PATCH 84/92] MAINT: move umath_linalg under numpy/linalg and use the same lapack_liteAlso, link umath_linalg against the system BLAS/LAPACK if available.",36,157231,231622,numpy/core/src/umath/lapack_lite/blas_lite.c,[u'21135'],0,4," -1,21135 +0,0 ;",;
3220,92,9c00887, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 19:35:13 +0300","ct: [PATCH 84/92] MAINT: move umath_linalg under numpy/linalg and use the same lapack_liteAlso, link umath_linalg against the system BLAS/LAPACK if available.",36,157231,231622,numpy/core/src/umath/lapack_lite/dlamch.c,[u'951'],0,1," -1,951 +0,0 ;",;
3220,92,9c00887, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 19:35:13 +0300","ct: [PATCH 84/92] MAINT: move umath_linalg under numpy/linalg and use the same lapack_liteAlso, link umath_linalg against the system BLAS/LAPACK if available.",36,157231,231622,numpy/core/src/umath/lapack_lite/dlapack_lite.c,[u'100833'],0,20," -1,100833 +0,0 ;",;
3220,92,9c00887, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 19:35:13 +0300","ct: [PATCH 84/92] MAINT: move umath_linalg under numpy/linalg and use the same lapack_liteAlso, link umath_linalg against the system BLAS/LAPACK if available.",36,157231,231622,numpy/core/src/umath/lapack_lite/f2c.h,[u'217'],0,1," -1,217 +0,0 ;",;
3220,92,9c00887, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 19:35:13 +0300","ct: [PATCH 84/92] MAINT: move umath_linalg under numpy/linalg and use the same lapack_liteAlso, link umath_linalg against the system BLAS/LAPACK if available.",36,157231,231622,numpy/core/src/umath/lapack_lite/f2c_lite.c,[u'671'],0,1," -1,671 +0,0 ;",;
3220,92,9c00887, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 19:35:13 +0300","ct: [PATCH 84/92] MAINT: move umath_linalg under numpy/linalg and use the same lapack_liteAlso, link umath_linalg against the system BLAS/LAPACK if available.",36,157231,231622,numpy/core/src/umath/lapack_lite/python_xerbla.c,[u'37'],0,1," -1,37 +0,0 ;",;
3220,92,9c00887, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 19:35:13 +0300","ct: [PATCH 84/92] MAINT: move umath_linalg under numpy/linalg and use the same lapack_liteAlso, link umath_linalg against the system BLAS/LAPACK if available.",36,157231,231622,numpy/core/src/umath/lapack_lite/zlapack_lite.c,[u'27006'],0,6," -1,27006 +0,0 ;",;
3220,92,9c00887, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 19:35:13 +0300","ct: [PATCH 84/92] MAINT: move umath_linalg under numpy/linalg and use the same lapack_liteAlso, link umath_linalg against the system BLAS/LAPACK if available.",36,157231,231622,numpy/core/src/umath/umath_linalg.c.src,[u'4363'],0,1," -1,4363 +0,0 ;",;
3220,92,9c00887, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 19:35:13 +0300","ct: [PATCH 84/92] MAINT: move umath_linalg under numpy/linalg and use the same lapack_liteAlso, link umath_linalg against the system BLAS/LAPACK if available.",36,157231,231622,numpy/core/tests/test_gufuncs_linalg.py,[u'500'],0,1," -1,500 +0,0 ;",;
3220,92,9c00887, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 19:35:13 +0300","ct: [PATCH 84/92] MAINT: move umath_linalg under numpy/linalg and use the same lapack_liteAlso, link umath_linalg against the system BLAS/LAPACK if available.",36,157231,231622,numpy/linalg/_gufuncs_linalg.py,[u'1371'],1,0," -0,0 +1,1371 ;",;
3220,92,9c00887, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 19:35:13 +0300","ct: [PATCH 84/92] MAINT: move umath_linalg under numpy/linalg and use the same lapack_liteAlso, link umath_linalg against the system BLAS/LAPACK if available.",36,157231,231622,numpy/linalg/bento.info,[u'21'],1,1," -1,12 +1,21 ;",;
3220,92,9c00887, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 19:35:13 +0300","ct: [PATCH 84/92] MAINT: move umath_linalg under numpy/linalg and use the same lapack_liteAlso, link umath_linalg against the system BLAS/LAPACK if available.",36,157231,231622,numpy/linalg/blas_lite.c,[u'10660'],0,3," -1,10660 +0,0 ;",;
3220,92,9c00887, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 19:35:13 +0300","ct: [PATCH 84/92] MAINT: move umath_linalg under numpy/linalg and use the same lapack_liteAlso, link umath_linalg against the system BLAS/LAPACK if available.",36,157231,231622,numpy/linalg/bscript,[u'5'],1,1," -10,11 +10,12 ; -22,3 +23,5 ;",def pbuild(context);def pbuild(context);
3220,92,9c00887, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 19:35:13 +0300","ct: [PATCH 84/92] MAINT: move umath_linalg under numpy/linalg and use the same lapack_liteAlso, link umath_linalg against the system BLAS/LAPACK if available.",36,157231,231622,numpy/linalg/dlamch.c,[u'951'],0,1," -1,951 +0,0 ;",;
3220,92,9c00887, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 19:35:13 +0300","ct: [PATCH 84/92] MAINT: move umath_linalg under numpy/linalg and use the same lapack_liteAlso, link umath_linalg against the system BLAS/LAPACK if available.",36,157231,231622,numpy/linalg/dlapack_lite.c,[u'36008'],0,7," -1,36008 +0,0 ;",;
3220,92,9c00887, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 19:35:13 +0300","ct: [PATCH 84/92] MAINT: move umath_linalg under numpy/linalg and use the same lapack_liteAlso, link umath_linalg against the system BLAS/LAPACK if available.",36,157231,231622,numpy/linalg/f2c.h,[u'217'],0,1," -1,217 +0,0 ;",;
3220,92,9c00887, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 19:35:13 +0300","ct: [PATCH 84/92] MAINT: move umath_linalg under numpy/linalg and use the same lapack_liteAlso, link umath_linalg against the system BLAS/LAPACK if available.",36,157231,231622,numpy/linalg/f2c_lite.c,[u'492'],0,1," -1,492 +0,0 ;",;
3220,92,9c00887, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 19:35:13 +0300","ct: [PATCH 84/92] MAINT: move umath_linalg under numpy/linalg and use the same lapack_liteAlso, link umath_linalg against the system BLAS/LAPACK if available.",36,157231,231622,numpy/linalg/gufuncs_linalg_contents.rst,[u'104'],1,0," -0,0 +1,104 ;",;
3220,92,9c00887, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 19:35:13 +0300","ct: [PATCH 84/92] MAINT: move umath_linalg under numpy/linalg and use the same lapack_liteAlso, link umath_linalg against the system BLAS/LAPACK if available.",36,157231,231622,numpy/linalg/lapack_lite/blas_lite.c,[u'21135'],4,0," -0,0 +1,21135 ;",;
3220,92,9c00887, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 19:35:13 +0300","ct: [PATCH 84/92] MAINT: move umath_linalg under numpy/linalg and use the same lapack_liteAlso, link umath_linalg against the system BLAS/LAPACK if available.",36,157231,231622,numpy/linalg/lapack_lite/dlamch.c,[u'951'],1,0," -0,0 +1,951 ;",;
3220,92,9c00887, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 19:35:13 +0300","ct: [PATCH 84/92] MAINT: move umath_linalg under numpy/linalg and use the same lapack_liteAlso, link umath_linalg against the system BLAS/LAPACK if available.",36,157231,231622,numpy/linalg/lapack_lite/dlapack_lite.c,[u'100833'],20,0," -0,0 +1,100833 ;",;
3220,92,9c00887, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 19:35:13 +0300","ct: [PATCH 84/92] MAINT: move umath_linalg under numpy/linalg and use the same lapack_liteAlso, link umath_linalg against the system BLAS/LAPACK if available.",36,157231,231622,numpy/linalg/lapack_lite/f2c.h,[u'217'],1,0," -0,0 +1,217 ;",;
3220,92,9c00887, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 19:35:13 +0300","ct: [PATCH 84/92] MAINT: move umath_linalg under numpy/linalg and use the same lapack_liteAlso, link umath_linalg against the system BLAS/LAPACK if available.",36,157231,231622,numpy/linalg/lapack_lite/f2c_lite.c,[u'671'],1,0," -0,0 +1,671 ;",;
3220,92,9c00887, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 19:35:13 +0300","ct: [PATCH 84/92] MAINT: move umath_linalg under numpy/linalg and use the same lapack_liteAlso, link umath_linalg against the system BLAS/LAPACK if available.",36,157231,231622,numpy/linalg/lapack_lite/python_xerbla.c,[u'37'],1,0," -0,0 +1,37 ;",;
3220,92,9c00887, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 19:35:13 +0300","ct: [PATCH 84/92] MAINT: move umath_linalg under numpy/linalg and use the same lapack_liteAlso, link umath_linalg against the system BLAS/LAPACK if available.",36,157231,231622,numpy/linalg/lapack_lite/zlapack_lite.c,[u'27006'],6,0," -0,0 +1,27006 ;",;
3220,92,9c00887, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 19:35:13 +0300","ct: [PATCH 84/92] MAINT: move umath_linalg under numpy/linalg and use the same lapack_liteAlso, link umath_linalg against the system BLAS/LAPACK if available.",36,157231,231622,numpy/linalg/linalg.py,[u'4'],1,1," -24,12 +24,10 ;",;
3220,92,9c00887, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 19:35:13 +0300","ct: [PATCH 84/92] MAINT: move umath_linalg under numpy/linalg and use the same lapack_liteAlso, link umath_linalg against the system BLAS/LAPACK if available.",36,157231,231622,numpy/linalg/python_xerbla.c,[u'37'],0,1," -1,37 +0,0 ;",;
3220,92,9c00887, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 19:35:13 +0300","ct: [PATCH 84/92] MAINT: move umath_linalg under numpy/linalg and use the same lapack_liteAlso, link umath_linalg against the system BLAS/LAPACK if available.",36,157231,231622,numpy/linalg/setup.py,[u'28'],1,1," -1,5 +1,6 ; -10,6 +11,18 ; -23,14 +36,19 ;",";def configuration(parent_package='',top_path=None);def get_lapack_lite_sources(ext, build_dir);"
3220,92,9c00887, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 19:35:13 +0300","ct: [PATCH 84/92] MAINT: move umath_linalg under numpy/linalg and use the same lapack_liteAlso, link umath_linalg against the system BLAS/LAPACK if available.",36,157231,231622,numpy/linalg/tests/test_gufuncs_linalg.py,[u'500'],1,0," -0,0 +1,500 ;",;
3220,92,9c00887, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 19:35:13 +0300","ct: [PATCH 84/92] MAINT: move umath_linalg under numpy/linalg and use the same lapack_liteAlso, link umath_linalg against the system BLAS/LAPACK if available.",36,157231,231622,numpy/linalg/umath_linalg.c.src,[u'4363'],1,0," -0,0 +1,4363 ;",;
3220,92,9c00887, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 19:35:13 +0300","ct: [PATCH 84/92] MAINT: move umath_linalg under numpy/linalg and use the same lapack_liteAlso, link umath_linalg against the system BLAS/LAPACK if available.",36,157231,231622,numpy/linalg/zlapack_lite.c,[u'26018'],0,5," -1,26018 +0,0 ;",;
3220,92,1b27cb0, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 22:00:55 +0300",ct: [PATCH 85/92] MAINT: move gufuncs_linalg_contents.rst to the docstring of the module,2,103,123,numpy/linalg/_gufuncs_linalg.py,[u'122'],26,5," -1,29 +1,113 ;",;
3220,92,1b27cb0, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 22:00:55 +0300",ct: [PATCH 85/92] MAINT: move gufuncs_linalg_contents.rst to the docstring of the module,2,103,123,numpy/linalg/gufuncs_linalg_contents.rst,[u'104'],0,26," -1,104 +0,0 ;",;
3220,92,20cc77a, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 22:51:00 +0300",ct: [PATCH 86/92] BUG: linalg: fix Py3 syntax,2,3,4,numpy/linalg/_gufuncs_linalg.py,[u'3'],1,2," -110,7 +110,7 ; -1451,5 +1451,4 ;",";def poinv(A, UPLO='L', **kw_args);"
3220,92,20cc77a, Pauli Virtanen <pav@iki.fi>," Wed, 10 Apr 2013 22:51:00 +0300",ct: [PATCH 86/92] BUG: linalg: fix Py3 syntax,2,3,4,numpy/linalg/tests/test_gufuncs_linalg.py,[u'4'],2,2," -2,7 +2,7 ; -496,5 +496,5 ;",";def do(self, a);"
3220,92,1b3834d, Pauli Virtanen <pav@iki.fi>," Fri, 12 Apr 2013 18:16:31 +0300",ct: [PATCH 87/92] BUG: linalg: make umath_linalg to track errors from all inner loop iterationsThis ensures that the FP invalid flag always reflects the return codefrom LAPACK. Fixes a bug in 63a8aef81 where umath_linalg raises awarning only if the error occurs in the last iteration of the ufuncinner loop.,2,47,51,numpy/linalg/tests/test_linalg.py,[u'13'],6,0," -654,5 +654,18 ;",def test_byteorder_check();
3220,92,1b3834d, Pauli Virtanen <pav@iki.fi>," Fri, 12 Apr 2013 18:16:31 +0300",ct: [PATCH 87/92] BUG: linalg: make umath_linalg to track errors from all inner loop iterationsThis ensures that the FP invalid flag always reflects the return codefrom LAPACK. Fixes a bug in 63a8aef81 where umath_linalg raises awarning only if the error occurs in the last iteration of the ufuncinner loop.,2,47,51,numpy/linalg/umath_linalg.c.src,[u'85'],16,23," -374,10 +374,23 ; -862,10 +875,6 ; -1786,7 +1795,7 ; -1843,10 +1852,7 ; -1973,7 +1979,7 ; -2001,10 +2007,7 ; -2012,7 +2015,7 ; -2039,10 +2042,7 ; -2051,7 +2051,7 ; -2076,11 +2076,9 ; -2150,7 +2148,7 ; -2175,10 +2173,7 ; -2592,7 +2587,7 ; -2668,10 +2663,7 ; -3038,7 +3030,7 ; -3110,10 +3102,7 ; -3519,7 +3508,7 ; -3553,10 +3542,7 ; -3679,7 +3665,7 ; -3706,10 +3692,7 ;","offset_ptr(void* ptr, ptrdiff_t offset;nan_@TYPE@_matrix(void *dst_in, const LINEARIZE_DATA_t* data;static inline voi;static inline voi;static voi;static voi;static voi;static voi;static voi;static voi;static voi;static voi;static inline voi;static inline voi;static inline voi;static inline voi;static voi;static voi;static inline voi;static inline voi;"
3220,92,aa8fde0, Pauli Virtanen <pav@iki.fi>," Fri, 12 Apr 2013 18:32:52 +0300",ct: [PATCH 88/92] ENH: linalg: use signature= for internal casting rather than astype in linalg ufuncs,1,23,12,numpy/linalg/linalg.py,[u'35'],23,12," -158,6 +158,7 ; -359,8 +360,9 ; -493,8 +495,9 ; -576,7 +579,8 ; -866,8 +870,8 ; -939,7 +943,8 ; -1071,7 +1076,8 ; -1182,7 +1188,8 ; -1291,7 +1298,8 ; -1302,7 +1310,8 ; -1638,7 +1647,8 ; -1690,7 +1700,8 ;","def _commonType(*arrays);def solve(a, b);def inv(a);def cholesky(a);def eigvals(a);def eigvalsh(a, UPLO='L');def eig(a);def eigh(a, UPLO='L');def svd(a, full_matrices=1, compute_uv=1);def svd(a, full_matrices=1, compute_uv=1);def slogdet(a);def det(a);"
3220,92,fb9b5bd, Pauli Virtanen <pav@iki.fi>," Fri, 12 Apr 2013 18:51:04 +0300",ct: [PATCH 89/92] TST: linalg: test return types of generalized linalg routines,1,83,0,numpy/linalg/tests/test_linalg.py,[u'83'],39,0," -27,6 +27,14 ; -85,6 +93,7 ; -187,6 +196,13 ; -195,6 +211,13 ; -202,6 +225,15 ; -212,6 +244,21 ; -223,6 +270,19 ; -282,6 +342,13 ; -418,6 +485,13 ; -429,6 +503,15 ;","def assert_almost_equal(a, b, **kw);def test_matrix_a_and_b(self);def do(self, a, b);def do(self, a, b);def do(self, a, b);def do(self, a, b);def do(self, a, b);def test_zero(self);def do(self, a, b);def do(self, a, b);"
3220,92,68c186d, Pauli Virtanen <pav@iki.fi>," Sat, 13 Apr 2013 16:14:04 +0300","ct: [PATCH 90/92] BUG: linalg: do not assume that GIL is enabled in xerbla_With the new ufunc-based linalg, GIL is released in ufuncs, and needs tobe reacquired when raising errors in xerbla_.",1,4,0,numpy/linalg/lapack_lite/python_xerbla.c,[u'4'],4,0," -26,12 +26,16 ;","int xerbla_(char *srname, integer *info;"
3220,92,374e0b4, Pauli Virtanen <pav@iki.fi>," Sat, 13 Apr 2013 16:35:57 +0300","ct: [PATCH 91/92] BUG: linalg: fix LAPACK error handling in lapack_litemoduleIf an exception is pending (raised from xerbla), the routines mustreturn NULL.",1,54,0,numpy/linalg/lapack_litemodule.c,[u'54'],40,0," -171,6 +171,9 ; -254,6 +257,9 ; -341,6 +347,9 ; -380,6 +389,9 ; -407,6 +419,9 ; -446,6 +461,9 ; -496,6 +514,9 ; -516,6 +537,9 ; -540,6 +564,9 ; -562,6 +589,9 ; -601,6 +631,9 ; -641,6 +674,9 ; -667,6 +703,9 ; -708,6 +747,9 ; -732,6 +774,9 ; -751,6 +796,9 ; -774,6 +822,9 ; -797,6 +848,9 ;","lapack_lite_dgeev(PyObject *NPY_UNUSED(self), PyObject *args;lapack_lite_dsyevd(PyObject *NPY_UNUSED(self), PyObject *args;lapack_lite_zheevd(PyObject *NPY_UNUSED(self), PyObject *args;lapack_lite_dgelsd(PyObject *NPY_UNUSED(self), PyObject *args;lapack_lite_dgesv(PyObject *NPY_UNUSED(self), PyObject *args;lapack_lite_dgesdd(PyObject *NPY_UNUSED(self), PyObject *args;lapack_lite_dgetrf(PyObject *NPY_UNUSED(self), PyObject *args;lapack_lite_dpotrf(PyObject *NPY_UNUSED(self), PyObject *args;lapack_lite_dgeqrf(PyObject *NPY_UNUSED(self), PyObject *args;lapack_lite_dorgqr(PyObject *NPY_UNUSED(self), PyObject *args;lapack_lite_zgeev(PyObject *NPY_UNUSED(self), PyObject *args;lapack_lite_zgelsd(PyObject *NPY_UNUSED(self), PyObject *args;lapack_lite_zgesv(PyObject *NPY_UNUSED(self), PyObject *args;lapack_lite_zgesdd(PyObject *NPY_UNUSED(self), PyObject *args;lapack_lite_zgetrf(PyObject *NPY_UNUSED(self), PyObject *args;lapack_lite_zpotrf(PyObject *NPY_UNUSED(self), PyObject *args;lapack_lite_zgeqrf(PyObject *NPY_UNUSED(self), PyObject *args;lapack_lite_zungqr(PyObject *NPY_UNUSED(self), PyObject *args;"
3220,92,8eebee8, Pauli Virtanen <pav@iki.fi>," Sat, 13 Apr 2013 16:36:46 +0300",ct: [PATCH 92/92] TST: linalg: add tests for xerbla functionality (with and without GIL),2,39,0,numpy/linalg/lapack_litemodule.c,[u'20'],20,0," -93,6 +93,8 ; -857,6 +859,23 ; -879,6 +898,7 ;","extern int FNAME(zungqr)(int *m, int *n, int *k, f2c_doublecomplex a[];lapack_lite_zungqr(PyObject *NPY_UNUSED(self), PyObject *args;static struct PyMethodDef lapack_lite_module_methods[] = ;"
3220,92,8eebee8, Pauli Virtanen <pav@iki.fi>," Sat, 13 Apr 2013 16:36:46 +0300",ct: [PATCH 92/92] TST: linalg: add tests for xerbla functionality (with and without GIL),2,39,0,numpy/linalg/tests/test_linalg.py,[u'20'],19,1," -7,7 +7,7 ; -750,5 +750,23 ;",;def test_generalized_raise_multiloop();
3216,1,a616479, Charles Harris <charlesr.harris@gmail.com>," Tue, 9 Apr 2013 12:44:24 -0600","ct: [PATCH] 2to3: Apply `map` fixer.In Python 3 `map` is an iterator while in Python 2 it returns a list.The simple fix applied by the fixer is to inclose all instances of mapwith `list(...)`. This is not needed in all cases, and even whereappropriate list comprehensions may be preferred for their clarity.Consequently, this patch attempts to use list comprehensions where itmakes sense.When the mapped function has two arguments there is another problem thatcan arise. In Python 3 map stops execution when the shortest argumentlist is exhausted, while in Python 2 it stops when the longest argumentlist is exhausted. Consequently the two argument case might need specialcare. However, we have been running Python3 converted versions of numpysince 1.5 without problems, so it is probably not something that affectsus.Closes #3068",24,176,127,doc/summarize.py,[u'4'],1,1," -149,8 +149,8 ;","def format_in_columns(lst, max_columns);"
3216,1,a616479, Charles Harris <charlesr.harris@gmail.com>," Tue, 9 Apr 2013 12:44:24 -0600","ct: [PATCH] 2to3: Apply `map` fixer.In Python 3 `map` is an iterator while in Python 2 it returns a list.The simple fix applied by the fixer is to inclose all instances of mapwith `list(...)`. This is not needed in all cases, and even whereappropriate list comprehensions may be preferred for their clarity.Consequently, this patch attempts to use list comprehensions where itmakes sense.When the mapped function has two arguments there is another problem thatcan arise. In Python 3 map stops execution when the shortest argumentlist is exhausted, while in Python 2 it stops when the longest argumentlist is exhausted. Consequently the two argument case might need specialcare. However, we have been running Python3 converted versions of numpysince 1.5 without problems, so it is probably not something that affectsus.Closes #3068",24,176,127,numpy/compat/_inspect.py,[u'2'],1,1," -152,7 +152,7 ;",def joinseq(seq);
3216,1,a616479, Charles Harris <charlesr.harris@gmail.com>," Tue, 9 Apr 2013 12:44:24 -0600","ct: [PATCH] 2to3: Apply `map` fixer.In Python 3 `map` is an iterator while in Python 2 it returns a list.The simple fix applied by the fixer is to inclose all instances of mapwith `list(...)`. This is not needed in all cases, and even whereappropriate list comprehensions may be preferred for their clarity.Consequently, this patch attempts to use list comprehensions where itmakes sense.When the mapped function has two arguments there is another problem thatcan arise. In Python 3 map stops execution when the shortest argumentlist is exhausted, while in Python 2 it stops when the longest argumentlist is exhausted. Consequently the two argument case might need specialcare. However, we have been running Python3 converted versions of numpysince 1.5 without problems, so it is probably not something that affectsus.Closes #3068",24,176,127,numpy/core/numerictypes.py,[u'2'],1,1," -116,7 +116,7 ;",class long(int);
3216,1,a616479, Charles Harris <charlesr.harris@gmail.com>," Tue, 9 Apr 2013 12:44:24 -0600","ct: [PATCH] 2to3: Apply `map` fixer.In Python 3 `map` is an iterator while in Python 2 it returns a list.The simple fix applied by the fixer is to inclose all instances of mapwith `list(...)`. This is not needed in all cases, and even whereappropriate list comprehensions may be preferred for their clarity.Consequently, this patch attempts to use list comprehensions where itmakes sense.When the mapped function has two arguments there is another problem thatcan arise. In Python 3 map stops execution when the shortest argumentlist is exhausted, while in Python 2 it stops when the longest argumentlist is exhausted. Consequently the two argument case might need specialcare. However, we have been running Python3 converted versions of numpysince 1.5 without problems, so it is probably not something that affectsus.Closes #3068",24,176,127,numpy/core/shape_base.py,[u'4'],1,1," -225,7 +225,7 ; -269,7 +269,7 ;",def vstack(tup);def hstack(tup);
3216,1,a616479, Charles Harris <charlesr.harris@gmail.com>," Tue, 9 Apr 2013 12:44:24 -0600","ct: [PATCH] 2to3: Apply `map` fixer.In Python 3 `map` is an iterator while in Python 2 it returns a list.The simple fix applied by the fixer is to inclose all instances of mapwith `list(...)`. This is not needed in all cases, and even whereappropriate list comprehensions may be preferred for their clarity.Consequently, this patch attempts to use list comprehensions where itmakes sense.When the mapped function has two arguments there is another problem thatcan arise. In Python 3 map stops execution when the shortest argumentlist is exhausted, while in Python 2 it stops when the longest argumentlist is exhausted. Consequently the two argument case might need specialcare. However, we have been running Python3 converted versions of numpysince 1.5 without problems, so it is probably not something that affectsus.Closes #3068",24,176,127,numpy/core/tests/test_scalarmath.py,[u'4'],1,1," -104,10 +104,10 ;",def test_int_from_long(self);
3216,1,a616479, Charles Harris <charlesr.harris@gmail.com>," Tue, 9 Apr 2013 12:44:24 -0600","ct: [PATCH] 2to3: Apply `map` fixer.In Python 3 `map` is an iterator while in Python 2 it returns a list.The simple fix applied by the fixer is to inclose all instances of mapwith `list(...)`. This is not needed in all cases, and even whereappropriate list comprehensions may be preferred for their clarity.Consequently, this patch attempts to use list comprehensions where itmakes sense.When the mapped function has two arguments there is another problem thatcan arise. In Python 3 map stops execution when the shortest argumentlist is exhausted, while in Python 2 it stops when the longest argumentlist is exhausted. Consequently the two argument case might need specialcare. However, we have been running Python3 converted versions of numpysince 1.5 without problems, so it is probably not something that affectsus.Closes #3068",24,176,127,numpy/core/tests/test_shape_base.py,[u'136'],17,13," -9,29 +9,34 ; -45,29 +50,34 ; -79,46 +89,54 ; -126,25 +144,29 ;",;def test_r1array(self);def test_r2array(self);def test_2D_array(self);
3216,1,a616479, Charles Harris <charlesr.harris@gmail.com>," Tue, 9 Apr 2013 12:44:24 -0600","ct: [PATCH] 2to3: Apply `map` fixer.In Python 3 `map` is an iterator while in Python 2 it returns a list.The simple fix applied by the fixer is to inclose all instances of mapwith `list(...)`. This is not needed in all cases, and even whereappropriate list comprehensions may be preferred for their clarity.Consequently, this patch attempts to use list comprehensions where itmakes sense.When the mapped function has two arguments there is another problem thatcan arise. In Python 3 map stops execution when the shortest argumentlist is exhausted, while in Python 2 it stops when the longest argumentlist is exhausted. Consequently the two argument case might need specialcare. However, we have been running Python3 converted versions of numpysince 1.5 without problems, so it is probably not something that affectsus.Closes #3068",24,176,127,numpy/f2py/auxfuncs.py,[u'4'],1,1," -609,9 +609,9 ;",def stripcomma(s);
3216,1,a616479, Charles Harris <charlesr.harris@gmail.com>," Tue, 9 Apr 2013 12:44:24 -0600","ct: [PATCH] 2to3: Apply `map` fixer.In Python 3 `map` is an iterator while in Python 2 it returns a list.The simple fix applied by the fixer is to inclose all instances of mapwith `list(...)`. This is not needed in all cases, and even whereappropriate list comprehensions may be preferred for their clarity.Consequently, this patch attempts to use list comprehensions where itmakes sense.When the mapped function has two arguments there is another problem thatcan arise. In Python 3 map stops execution when the shortest argumentlist is exhausted, while in Python 2 it stops when the longest argumentlist is exhausted. Consequently the two argument case might need specialcare. However, we have been running Python3 converted versions of numpysince 1.5 without problems, so it is probably not something that affectsus.Closes #3068",24,176,127,numpy/f2py/cfuncs.py,[u'2'],1,1," -1212,7 +1212,7 ;",def get_needs();
3216,1,a616479, Charles Harris <charlesr.harris@gmail.com>," Tue, 9 Apr 2013 12:44:24 -0600","ct: [PATCH] 2to3: Apply `map` fixer.In Python 3 `map` is an iterator while in Python 2 it returns a list.The simple fix applied by the fixer is to inclose all instances of mapwith `list(...)`. This is not needed in all cases, and even whereappropriate list comprehensions may be preferred for their clarity.Consequently, this patch attempts to use list comprehensions where itmakes sense.When the mapped function has two arguments there is another problem thatcan arise. In Python 3 map stops execution when the shortest argumentlist is exhausted, while in Python 2 it stops when the longest argumentlist is exhausted. Consequently the two argument case might need specialcare. However, we have been running Python3 converted versions of numpysince 1.5 without problems, so it is probably not something that affectsus.Closes #3068",24,176,127,numpy/f2py/common_rules.py,[u'2'],1,1," -96,7 +96,7 ;","def dadd(line,s=doc): s[0] = '%s\n%s'%(s[0],line;"
3216,1,a616479, Charles Harris <charlesr.harris@gmail.com>," Tue, 9 Apr 2013 12:44:24 -0600","ct: [PATCH] 2to3: Apply `map` fixer.In Python 3 `map` is an iterator while in Python 2 it returns a list.The simple fix applied by the fixer is to inclose all instances of mapwith `list(...)`. This is not needed in all cases, and even whereappropriate list comprehensions may be preferred for their clarity.Consequently, this patch attempts to use list comprehensions where itmakes sense.When the mapped function has two arguments there is another problem thatcan arise. In Python 3 map stops execution when the shortest argumentlist is exhausted, while in Python 2 it stops when the longest argumentlist is exhausted. Consequently the two argument case might need specialcare. However, we have been running Python3 converted versions of numpysince 1.5 without problems, so it is probably not something that affectsus.Closes #3068",24,176,127,numpy/f2py/crackfortran.py,[u'9'],1,1," -216,12 +216,14 ; -229,7 +231,8 ; -292,7 +295,7 ;","def outmess(line,flag=1);def undo_rmbadname1(name);def readfortrancode(ffile,dowithline=show,istop=1);"
3216,1,a616479, Charles Harris <charlesr.harris@gmail.com>," Tue, 9 Apr 2013 12:44:24 -0600","ct: [PATCH] 2to3: Apply `map` fixer.In Python 3 `map` is an iterator while in Python 2 it returns a list.The simple fix applied by the fixer is to inclose all instances of mapwith `list(...)`. This is not needed in all cases, and even whereappropriate list comprehensions may be preferred for their clarity.Consequently, this patch attempts to use list comprehensions where itmakes sense.When the mapped function has two arguments there is another problem thatcan arise. In Python 3 map stops execution when the shortest argumentlist is exhausted, while in Python 2 it stops when the longest argumentlist is exhausted. Consequently the two argument case might need specialcare. However, we have been running Python3 converted versions of numpysince 1.5 without problems, so it is probably not something that affectsus.Closes #3068",24,176,127,numpy/f2py/f2py2e.py,[u'4'],1,1," -324,7 +324,7 ; -372,7 +372,7 ;",def buildmodules(lst);def run_main(comline_list);
3216,1,a616479, Charles Harris <charlesr.harris@gmail.com>," Tue, 9 Apr 2013 12:44:24 -0600","ct: [PATCH] 2to3: Apply `map` fixer.In Python 3 `map` is an iterator while in Python 2 it returns a list.The simple fix applied by the fixer is to inclose all instances of mapwith `list(...)`. This is not needed in all cases, and even whereappropriate list comprehensions may be preferred for their clarity.Consequently, this patch attempts to use list comprehensions where itmakes sense.When the mapped function has two arguments there is another problem thatcan arise. In Python 3 map stops execution when the shortest argumentlist is exhausted, while in Python 2 it stops when the longest argumentlist is exhausted. Consequently the two argument case might need specialcare. However, we have been running Python3 converted versions of numpysince 1.5 without problems, so it is probably not something that affectsus.Closes #3068",24,176,127,numpy/f2py/f90mod_rules.py,[u'2'],1,1," -158,7 +158,7 ;","def iadd(line,s=ihooks): s[0] = '%s\n%s'%(s[0],line;"
3216,1,a616479, Charles Harris <charlesr.harris@gmail.com>," Tue, 9 Apr 2013 12:44:24 -0600","ct: [PATCH] 2to3: Apply `map` fixer.In Python 3 `map` is an iterator while in Python 2 it returns a list.The simple fix applied by the fixer is to inclose all instances of mapwith `list(...)`. This is not needed in all cases, and even whereappropriate list comprehensions may be preferred for their clarity.Consequently, this patch attempts to use list comprehensions where itmakes sense.When the mapped function has two arguments there is another problem thatcan arise. In Python 3 map stops execution when the shortest argumentlist is exhausted, while in Python 2 it stops when the longest argumentlist is exhausted. Consequently the two argument case might need specialcare. However, we have been running Python3 converted versions of numpysince 1.5 without problems, so it is probably not something that affectsus.Closes #3068",24,176,127,numpy/f2py/tests/test_array_from_pyobj.py,[u'4'],1,1," -138,10 +138,10 ;","def _init(self,name);"
3216,1,a616479, Charles Harris <charlesr.harris@gmail.com>," Tue, 9 Apr 2013 12:44:24 -0600","ct: [PATCH] 2to3: Apply `map` fixer.In Python 3 `map` is an iterator while in Python 2 it returns a list.The simple fix applied by the fixer is to inclose all instances of mapwith `list(...)`. This is not needed in all cases, and even whereappropriate list comprehensions may be preferred for their clarity.Consequently, this patch attempts to use list comprehensions where itmakes sense.When the mapped function has two arguments there is another problem thatcan arise. In Python 3 map stops execution when the shortest argumentlist is exhausted, while in Python 2 it stops when the longest argumentlist is exhausted. Consequently the two argument case might need specialcare. However, we have been running Python3 converted versions of numpysince 1.5 without problems, so it is probably not something that affectsus.Closes #3068",24,176,127,numpy/lib/_iotools.py,[u'3'],1,1," -721,7 +721,8 ;","def iterupgrade(self, value);"
3216,1,a616479, Charles Harris <charlesr.harris@gmail.com>," Tue, 9 Apr 2013 12:44:24 -0600","ct: [PATCH] 2to3: Apply `map` fixer.In Python 3 `map` is an iterator while in Python 2 it returns a list.The simple fix applied by the fixer is to inclose all instances of mapwith `list(...)`. This is not needed in all cases, and even whereappropriate list comprehensions may be preferred for their clarity.Consequently, this patch attempts to use list comprehensions where itmakes sense.When the mapped function has two arguments there is another problem thatcan arise. In Python 3 map stops execution when the shortest argumentlist is exhausted, while in Python 2 it stops when the longest argumentlist is exhausted. Consequently the two argument case might need specialcare. However, we have been running Python3 converted versions of numpysince 1.5 without problems, so it is probably not something that affectsus.Closes #3068",24,176,127,numpy/lib/financial.py,[u'10'],1,2," -115,7 +115,7 ; -206,7 +206,7 ; -263,7 +263,7 ; -502,7 +502,7 ; -568,7 +568,7 ;","def fv(rate, nper, pmt, pv, when='end');def pmt(rate, nper, pv, fv=0, when='end');def nper(rate, pmt, pv, fv=0, when='end');def pv(rate, nper, pmt, fv=0.0, when='end');def rate(nper, pmt, pv, fv, when='end', guess=0.10, tol=1e-6, maxiter=100);"
3216,1,a616479, Charles Harris <charlesr.harris@gmail.com>," Tue, 9 Apr 2013 12:44:24 -0600","ct: [PATCH] 2to3: Apply `map` fixer.In Python 3 `map` is an iterator while in Python 2 it returns a list.The simple fix applied by the fixer is to inclose all instances of mapwith `list(...)`. This is not needed in all cases, and even whereappropriate list comprehensions may be preferred for their clarity.Consequently, this patch attempts to use list comprehensions where itmakes sense.When the mapped function has two arguments there is another problem thatcan arise. In Python 3 map stops execution when the shortest argumentlist is exhausted, while in Python 2 it stops when the longest argumentlist is exhausted. Consequently the two argument case might need specialcare. However, we have been running Python3 converted versions of numpysince 1.5 without problems, so it is probably not something that affectsus.Closes #3068",24,176,127,numpy/lib/index_tricks.py,[u'4'],1,1," -163,8 +163,8 ;","def __getitem__(self,key);"
3216,1,a616479, Charles Harris <charlesr.harris@gmail.com>," Tue, 9 Apr 2013 12:44:24 -0600","ct: [PATCH] 2to3: Apply `map` fixer.In Python 3 `map` is an iterator while in Python 2 it returns a list.The simple fix applied by the fixer is to inclose all instances of mapwith `list(...)`. This is not needed in all cases, and even whereappropriate list comprehensions may be preferred for their clarity.Consequently, this patch attempts to use list comprehensions where itmakes sense.When the mapped function has two arguments there is another problem thatcan arise. In Python 3 map stops execution when the shortest argumentlist is exhausted, while in Python 2 it stops when the longest argumentlist is exhausted. Consequently the two argument case might need specialcare. However, we have been running Python3 converted versions of numpysince 1.5 without problems, so it is probably not something that affectsus.Closes #3068",24,176,127,numpy/lib/npyio.py,[u'21'],2,3," -1602,7 +1602,7 ; -1653,18 +1653,19 ;","def genfromtxt(fname, dtype=float, comments='#', delimiter=None;def genfromtxt(fname, dtype=float, comments='#', delimiter=None;"
3216,1,a616479, Charles Harris <charlesr.harris@gmail.com>," Tue, 9 Apr 2013 12:44:24 -0600","ct: [PATCH] 2to3: Apply `map` fixer.In Python 3 `map` is an iterator while in Python 2 it returns a list.The simple fix applied by the fixer is to inclose all instances of mapwith `list(...)`. This is not needed in all cases, and even whereappropriate list comprehensions may be preferred for their clarity.Consequently, this patch attempts to use list comprehensions where itmakes sense.When the mapped function has two arguments there is another problem thatcan arise. In Python 3 map stops execution when the shortest argumentlist is exhausted, while in Python 2 it stops when the longest argumentlist is exhausted. Consequently the two argument case might need specialcare. However, we have been running Python3 converted versions of numpysince 1.5 without problems, so it is probably not something that affectsus.Closes #3068",24,176,127,numpy/lib/recfunctions.py,[u'2'],1,1," -401,7 +401,7 ;",def merge_arrays(seqarrays;
3216,1,a616479, Charles Harris <charlesr.harris@gmail.com>," Tue, 9 Apr 2013 12:44:24 -0600","ct: [PATCH] 2to3: Apply `map` fixer.In Python 3 `map` is an iterator while in Python 2 it returns a list.The simple fix applied by the fixer is to inclose all instances of mapwith `list(...)`. This is not needed in all cases, and even whereappropriate list comprehensions may be preferred for their clarity.Consequently, this patch attempts to use list comprehensions where itmakes sense.When the mapped function has two arguments there is another problem thatcan arise. In Python 3 map stops execution when the shortest argumentlist is exhausted, while in Python 2 it stops when the longest argumentlist is exhausted. Consequently the two argument case might need specialcare. However, we have been running Python3 converted versions of numpysince 1.5 without problems, so it is probably not something that affectsus.Closes #3068",24,176,127,numpy/lib/shape_base.py,[u'2'],1,1," -345,7 +345,7 ;",def dstack(tup);
3216,1,a616479, Charles Harris <charlesr.harris@gmail.com>," Tue, 9 Apr 2013 12:44:24 -0600","ct: [PATCH] 2to3: Apply `map` fixer.In Python 3 `map` is an iterator while in Python 2 it returns a list.The simple fix applied by the fixer is to inclose all instances of mapwith `list(...)`. This is not needed in all cases, and even whereappropriate list comprehensions may be preferred for their clarity.Consequently, this patch attempts to use list comprehensions where itmakes sense.When the mapped function has two arguments there is another problem thatcan arise. In Python 3 map stops execution when the shortest argumentlist is exhausted, while in Python 2 it stops when the longest argumentlist is exhausted. Consequently the two argument case might need specialcare. However, we have been running Python3 converted versions of numpysince 1.5 without problems, so it is probably not something that affectsus.Closes #3068",24,176,127,numpy/lib/stride_tricks.py,[u'4'],1,1," -60,7 +60,7 ; -68,7 +68,7 ;",def broadcast_arrays(*args);def broadcast_arrays(*args);
3216,1,a616479, Charles Harris <charlesr.harris@gmail.com>," Tue, 9 Apr 2013 12:44:24 -0600","ct: [PATCH] 2to3: Apply `map` fixer.In Python 3 `map` is an iterator while in Python 2 it returns a list.The simple fix applied by the fixer is to inclose all instances of mapwith `list(...)`. This is not needed in all cases, and even whereappropriate list comprehensions may be preferred for their clarity.Consequently, this patch attempts to use list comprehensions where itmakes sense.When the mapped function has two arguments there is another problem thatcan arise. In Python 3 map stops execution when the shortest argumentlist is exhausted, while in Python 2 it stops when the longest argumentlist is exhausted. Consequently the two argument case might need specialcare. However, we have been running Python3 converted versions of numpysince 1.5 without problems, so it is probably not something that affectsus.Closes #3068",24,176,127,numpy/matrixlib/defmatrix.py,[u'2'],1,1," -45,7 +45,7 ;",def _convert_from_string(data);
3216,1,a616479, Charles Harris <charlesr.harris@gmail.com>," Tue, 9 Apr 2013 12:44:24 -0600","ct: [PATCH] 2to3: Apply `map` fixer.In Python 3 `map` is an iterator while in Python 2 it returns a list.The simple fix applied by the fixer is to inclose all instances of mapwith `list(...)`. This is not needed in all cases, and even whereappropriate list comprehensions may be preferred for their clarity.Consequently, this patch attempts to use list comprehensions where itmakes sense.When the mapped function has two arguments there is another problem thatcan arise. In Python 3 map stops execution when the shortest argumentlist is exhausted, while in Python 2 it stops when the longest argumentlist is exhausted. Consequently the two argument case might need specialcare. However, we have been running Python3 converted versions of numpysince 1.5 without problems, so it is probably not something that affectsus.Closes #3068",24,176,127,numpy/oldnumeric/matrix.py,[u'2'],1,1," -40,7 +40,7 ;",def _convert_from_string(data);
3216,1,a616479, Charles Harris <charlesr.harris@gmail.com>," Tue, 9 Apr 2013 12:44:24 -0600","ct: [PATCH] 2to3: Apply `map` fixer.In Python 3 `map` is an iterator while in Python 2 it returns a list.The simple fix applied by the fixer is to inclose all instances of mapwith `list(...)`. This is not needed in all cases, and even whereappropriate list comprehensions may be preferred for their clarity.Consequently, this patch attempts to use list comprehensions where itmakes sense.When the mapped function has two arguments there is another problem thatcan arise. In Python 3 map stops execution when the shortest argumentlist is exhausted, while in Python 2 it stops when the longest argumentlist is exhausted. Consequently the two argument case might need specialcare. However, we have been running Python3 converted versions of numpysince 1.5 without problems, so it is probably not something that affectsus.Closes #3068",24,176,127,numpy/testing/utils.py,[u'3'],1,1," -531,7 +531,8 ;","def assert_approx_equal(actual,desired,significant=7,err_msg='',verbose=True);"
3216,1,a616479, Charles Harris <charlesr.harris@gmail.com>," Tue, 9 Apr 2013 12:44:24 -0600","ct: [PATCH] 2to3: Apply `map` fixer.In Python 3 `map` is an iterator while in Python 2 it returns a list.The simple fix applied by the fixer is to inclose all instances of mapwith `list(...)`. This is not needed in all cases, and even whereappropriate list comprehensions may be preferred for their clarity.Consequently, this patch attempts to use list comprehensions where itmakes sense.When the mapped function has two arguments there is another problem thatcan arise. In Python 3 map stops execution when the shortest argumentlist is exhausted, while in Python 2 it stops when the longest argumentlist is exhausted. Consequently the two argument case might need specialcare. However, we have been running Python3 converted versions of numpysince 1.5 without problems, so it is probably not something that affectsus.Closes #3068",24,176,127,tools/py3tool.py,[u'71'],10,6," -42,38 +42,59 ;",;
3210,2,7fe071c, Paul Ivanov <pi@berkeley.edu>," Mon, 8 Apr 2013 16:35:15 -0700",ct: [PATCH 1/2] DOC: point to the github issues page,2,11,13,doc/source/about.rst,[u'4'],3,1," -36,7 +36,9 ;",Our main means of communication are;
3210,2,7fe071c, Paul Ivanov <pi@berkeley.edu>," Mon, 8 Apr 2013 16:35:15 -0700",ct: [PATCH 1/2] DOC: point to the github issues page,2,11,13,doc/source/bugs.rst,[u'20'],8,12," -3,21 +3,17 ;",Reporting bug;
3210,2,2f7de03, Paul Ivanov <pi@berkeley.edu>," Mon, 8 Apr 2013 17:31:08 -0700","ct: [PATCH 2/2] DOC: incorporate @charris' suggestions* Trac no longer used* Openining ""new issue"" on GitHub",2,2,2,doc/source/about.rst,[u'2'],1,1," -38,7 +38,7 ;",Our main means of communication are;
3210,2,2f7de03, Paul Ivanov <pi@berkeley.edu>," Mon, 8 Apr 2013 17:31:08 -0700","ct: [PATCH 2/2] DOC: incorporate @charris' suggestions* Trac no longer used* Openining ""new issue"" on GitHub",2,2,2,doc/source/bugs.rst,[u'2'],1,1," -3,7 +3,7 ;",Reporting bug;
3208,1,011f8a2, Charles Harris <charlesr.harris@gmail.com>," Mon, 8 Apr 2013 11:34:24 -0600","ct: [PATCH] 2to3: Apply `repr` fixer.This replaces python backtics with repr(...). The backtics were mostlyused to generate strings for printing with a string format and it istempting to replace `'%s' % repr(x)` with `'%r' % x`. That would workexcept where `x` happened to be a tuple or a dictionary but, because itwould be significant work to guarantee that and because there are notmany places where backtics are used, the safe path is to let the reprreplacements stand.Closes #3083.",22,134,133,numpy/_import_tools.py,[u'2'],1,1," -337,7 +337,7 ;",class PackageLoaderDebug(PackageLoader);
3208,1,011f8a2, Charles Harris <charlesr.harris@gmail.com>," Mon, 8 Apr 2013 11:34:24 -0600","ct: [PATCH] 2to3: Apply `repr` fixer.This replaces python backtics with repr(...). The backtics were mostlyused to generate strings for printing with a string format and it istempting to replace `'%s' % repr(x)` with `'%r' % x`. That would workexcept where `x` happened to be a tuple or a dictionary but, because itwould be significant work to guarantee that and because there are notmany places where backtics are used, the safe path is to let the reprreplacements stand.Closes #3083.",22,134,133,numpy/core/records.py,[u'4'],1,1," -176,7 +176,7 ; -533,7 +533,7 ;","def _setfieldnames(self, names, titles);def fromarrays(arrayList, dtype=None, shape=None, formats=None;"
3208,1,011f8a2, Charles Harris <charlesr.harris@gmail.com>," Mon, 8 Apr 2013 11:34:24 -0600","ct: [PATCH] 2to3: Apply `repr` fixer.This replaces python backtics with repr(...). The backtics were mostlyused to generate strings for printing with a string format and it istempting to replace `'%s' % repr(x)` with `'%r' % x`. That would workexcept where `x` happened to be a tuple or a dictionary but, because itwould be significant work to guarantee that and because there are notmany places where backtics are used, the safe path is to let the reprreplacements stand.Closes #3083.",22,134,133,numpy/distutils/tests/test_misc_util.py,[u'4'],1,1," -50,9 +50,9 ;",class TestGpaths(TestCase);
3208,1,011f8a2, Charles Harris <charlesr.harris@gmail.com>," Mon, 8 Apr 2013 11:34:24 -0600","ct: [PATCH] 2to3: Apply `repr` fixer.This replaces python backtics with repr(...). The backtics were mostlyused to generate strings for printing with a string format and it istempting to replace `'%s' % repr(x)` with `'%r' % x`. That would workexcept where `x` happened to be a tuple or a dictionary but, because itwould be significant work to guarantee that and because there are notmany places where backtics are used, the safe path is to let the reprreplacements stand.Closes #3083.",22,134,133,numpy/f2py/auxfuncs.py,[u'6'],1,2," -499,12 +499,12 ; -703,7 +703,7 ;","def getmultilineblock(rout,blockname,comment=1,counter=0);def applyrules(rules,d,var={});"
3208,1,011f8a2, Charles Harris <charlesr.harris@gmail.com>," Mon, 8 Apr 2013 11:34:24 -0600","ct: [PATCH] 2to3: Apply `repr` fixer.This replaces python backtics with repr(...). The backtics were mostlyused to generate strings for printing with a string format and it istempting to replace `'%s' % repr(x)` with `'%r' % x`. That would workexcept where `x` happened to be a tuple or a dictionary but, because itwould be significant work to guarantee that and because there are notmany places where backtics are used, the safe path is to let the reprreplacements stand.Closes #3083.",22,134,133,numpy/f2py/capi_maps.py,[u'26'],6,6," -273,7 +273,7 ; -284,7 +284,7 ; -304,11 +304,11 ; -336,7 +336,7 ; -385,7 +385,7 ; -416,7 +416,7 ; -590,7 +590,7 ; -607,7 +607,7 ; -616,7 +616,7 ; -744,8 +744,8 ;","def getstrlength(var);def getstrlength(var);def getarrdims(a,var,verbose=0);def getarrdims(a,var,verbose=0);def getpydocsign(a,var);def getarrdocsign(a,var);def routsign2map(rout);def routsign2map(rout);def routsign2map(rout);def cb_routsign2map(rout,um);"
3208,1,011f8a2, Charles Harris <charlesr.harris@gmail.com>," Mon, 8 Apr 2013 11:34:24 -0600","ct: [PATCH] 2to3: Apply `repr` fixer.This replaces python backtics with repr(...). The backtics were mostlyused to generate strings for printing with a string format and it istempting to replace `'%s' % repr(x)` with `'%r' % x`. That would workexcept where `x` happened to be a tuple or a dictionary but, because itwould be significant work to guarantee that and because there are notmany places where backtics are used, the safe path is to let the reprreplacements stand.Closes #3083.",22,134,133,numpy/f2py/cfuncs.py,[u'4'],1,1," -1154,7 +1154,7 ; -1189,7 +1189,7 ;","def append_needs(need,flag=1);def append_needs(need,flag=1);"
3208,1,011f8a2, Charles Harris <charlesr.harris@gmail.com>," Mon, 8 Apr 2013 11:34:24 -0600","ct: [PATCH] 2to3: Apply `repr` fixer.This replaces python backtics with repr(...). The backtics were mostlyused to generate strings for printing with a string format and it istempting to replace `'%s' % repr(x)` with `'%r' % x`. That would workexcept where `x` happened to be a tuple or a dictionary but, because itwould be significant work to guarantee that and because there are notmany places where backtics are used, the safe path is to let the reprreplacements stand.Closes #3083.",22,134,133,numpy/f2py/crackfortran.py,[u'70'],15,16," -314,7 +314,7 ; -346,7 +346,7 ; -401,7 +401,7 ; -418,7 +418,7 ; -442,7 +442,7 ; -521,7 +521,7 ; -540,7 +540,7 ; -594,7 +594,7 ; -614,7 +614,7 ; -671,7 +671,7 ; -797,7 +797,7 ; -890,7 +890,7 ; -923,7 +923,7 ; -1151,7 +1151,7 ; -1271,7 +1271,7 ; -1381,7 +1381,7 ; -1393,7 +1393,7 ; -1414,9 +1414,9 ; -1511,7 +1511,7 ; -1750,7 +1750,7 ; -1827,12 +1827,12 ; -1847,7 +1847,7 ; -1928,7 +1928,7 ; -2039,7 +2039,7 ; -2047,7 +2047,7 ; -2124,7 +2124,7 ; -2359,7 +2359,7 ; -2462,7 +2462,7 ; -2474,12 +2474,12 ; -2501,7 +2501,7 ; -2796,7 +2796,7 ; -2821,7 +2821,7 ;","def readfortrancode(ffile,dowithline=show,istop=1);def readfortrancode(ffile,dowithline=show,istop=1);def readfortrancode(ffile,dowithline=show,istop=1);def readfortrancode(ffile,dowithline=show,istop=1);def readfortrancode(ffile,dowithline=show,istop=1);def crackline(line,reset=0);def crackline(line,reset=0);def crackline(line,reset=0);def crackline(line,reset=0);def markoutercomma(line,comma=',');def analyzeline(m,case,line);def analyzeline(m,case,line);def analyzeline(m,case,line);def analyzeline(m,case,line);def updatevars(typespec,selector,attrspec,entitydecl);def cracktypespec(typespec,selector);def cracktypespec(typespec,selector);def cracktypespec(typespec,selector);def get_useparameters(block, param_map=None);def buildimplicitrules(block);def getarrlen(dl,args,star='*');def getarrlen(dl,args,star='*');def _get_depend_dict(name, vars, deps);def get_parameters(vars, global_params={});def get_parameters(vars, global_params={});def analyzevars(block);def analyzevars(block);def _ensure_exprdict(r);def determineexprtype(expr,vars,rules={});def determineexprtype(expr,vars,rules={});def crack2fortran(block);def crack2fortran(block);"
3208,1,011f8a2, Charles Harris <charlesr.harris@gmail.com>," Mon, 8 Apr 2013 11:34:24 -0600","ct: [PATCH] 2to3: Apply `repr` fixer.This replaces python backtics with repr(...). The backtics were mostlyused to generate strings for printing with a string format and it istempting to replace `'%s' % repr(x)` with `'%r' % x`. That would workexcept where `x` happened to be a tuple or a dictionary but, because itwould be significant work to guarantee that and because there are notmany places where backtics are used, the safe path is to let the reprreplacements stand.Closes #3083.",22,134,133,numpy/f2py/f2py2e.py,[u'8'],2,2," -225,7 +225,7 ; -382,7 +382,7 ; -485,7 +485,7 ; -565,7 +565,7 ;",def scaninputline(inputline);def run_main(comline_list);def run_compile();def run_compile();
3208,1,011f8a2, Charles Harris <charlesr.harris@gmail.com>," Mon, 8 Apr 2013 11:34:24 -0600","ct: [PATCH] 2to3: Apply `repr` fixer.This replaces python backtics with repr(...). The backtics were mostlyused to generate strings for printing with a string format and it istempting to replace `'%s' % repr(x)` with `'%r' % x`. That would workexcept where `x` happened to be a tuple or a dictionary but, because itwould be significant work to guarantee that and because there are notmany places where backtics are used, the safe path is to let the reprreplacements stand.Closes #3083.",22,134,133,numpy/f2py/rules.py,[u'6'],1,2," -1243,7 +1243,7 ; -1355,10 +1355,10 ;","def buildmodule(m,um);def buildapi(rout);"
3208,1,011f8a2, Charles Harris <charlesr.harris@gmail.com>," Mon, 8 Apr 2013 11:34:24 -0600","ct: [PATCH] 2to3: Apply `repr` fixer.This replaces python backtics with repr(...). The backtics were mostlyused to generate strings for printing with a string format and it istempting to replace `'%s' % repr(x)` with `'%r' % x`. That would workexcept where `x` happened to be a tuple or a dictionary but, because itwould be significant work to guarantee that and because there are notmany places where backtics are used, the safe path is to let the reprreplacements stand.Closes #3083.",22,134,133,numpy/f2py/tests/test_array_from_pyobj.py,[u'54'],12,12," -179,14 +179,14 ; -201,14 +201,14 ; -227,18 +227,18 ; -288,9 +288,9 ; -331,7 +331,7 ; -343,7 +343,7 ; -351,9 +351,9 ; -361,23 +361,23 ; -386,17 +386,17 ; -505,9 +505,9 ; -522,9 +522,9 ;","def __init__(self,typ,dims,intent,obj);def __init__(self,typ,dims,intent,obj);def __init__(self,typ,dims,intent,obj);def test_in_from_2casttype(self);def test_in_copy_from_2casttype(self);def test_in_from_23casttype(self);def test_f_in_from_23casttype(self);def test_c_in_from_23casttype(self);def test_in_cache_from_2casttype(self);def test_inplace(self);def test_inplace_from_casttype(self);"
3208,1,011f8a2, Charles Harris <charlesr.harris@gmail.com>," Mon, 8 Apr 2013 11:34:24 -0600","ct: [PATCH] 2to3: Apply `repr` fixer.This replaces python backtics with repr(...). The backtics were mostlyused to generate strings for printing with a string format and it istempting to replace `'%s' % repr(x)` with `'%r' % x`. That would workexcept where `x` happened to be a tuple or a dictionary but, because itwould be significant work to guarantee that and because there are notmany places where backtics are used, the safe path is to let the reprreplacements stand.Closes #3083.",22,134,133,numpy/f2py/tests/test_assumed_shape.py,[u'10'],2,3," -21,16 +21,16 ;",class TestAssumedShapeSumExample(util.F2PyTest);
3208,1,011f8a2, Charles Harris <charlesr.harris@gmail.com>," Mon, 8 Apr 2013 11:34:24 -0600","ct: [PATCH] 2to3: Apply `repr` fixer.This replaces python backtics with repr(...). The backtics were mostlyused to generate strings for printing with a string format and it istempting to replace `'%s' % repr(x)` with `'%r' % x`. That would workexcept where `x` happened to be a tuple or a dictionary but, because itwould be significant work to guarantee that and because there are notmany places where backtics are used, the safe path is to let the reprreplacements stand.Closes #3083.",22,134,133,numpy/f2py/tests/test_callback.py,[u'22'],5,5," -74,24 +74,24 ; -99,9 +99,9 ;",def fun(): return ;def mth(self);
3208,1,011f8a2, Charles Harris <charlesr.harris@gmail.com>," Mon, 8 Apr 2013 11:34:24 -0600","ct: [PATCH] 2to3: Apply `repr` fixer.This replaces python backtics with repr(...). The backtics were mostlyused to generate strings for printing with a string format and it istempting to replace `'%s' % repr(x)` with `'%r' % x`. That would workexcept where `x` happened to be a tuple or a dictionary but, because itwould be significant work to guarantee that and because there are notmany places where backtics are used, the safe path is to let the reprreplacements stand.Closes #3083.",22,134,133,numpy/f2py/tests/test_return_character.py,[u'12'],3,3," -10,17 +10,17 ;","def check_function(self, t);"
3208,1,011f8a2, Charles Harris <charlesr.harris@gmail.com>," Mon, 8 Apr 2013 11:34:24 -0600","ct: [PATCH] 2to3: Apply `repr` fixer.This replaces python backtics with repr(...). The backtics were mostlyused to generate strings for printing with a string format and it istempting to replace `'%s' % repr(x)` with `'%r' % x`. That would workexcept where `x` happened to be a tuple or a dictionary but, because itwould be significant work to guarantee that and because there are notmany places where backtics are used, the safe path is to let the reprreplacements stand.Closes #3083.",22,134,133,numpy/f2py/tests/test_return_complex.py,[u'2'],1,1," -45,7 +45,7 ;","def check_function(self, t);"
3208,1,011f8a2, Charles Harris <charlesr.harris@gmail.com>," Mon, 8 Apr 2013 11:34:24 -0600","ct: [PATCH] 2to3: Apply `repr` fixer.This replaces python backtics with repr(...). The backtics were mostlyused to generate strings for printing with a string format and it istempting to replace `'%s' % repr(x)` with `'%r' % x`. That would workexcept where `x` happened to be a tuple or a dictionary but, because itwould be significant work to guarantee that and because there are notmany places where backtics are used, the safe path is to let the reprreplacements stand.Closes #3083.",22,134,133,numpy/f2py/tests/test_return_integer.py,[u'2'],1,1," -6,7 +6,7 ;",;
3208,1,011f8a2, Charles Harris <charlesr.harris@gmail.com>," Mon, 8 Apr 2013 11:34:24 -0600","ct: [PATCH] 2to3: Apply `repr` fixer.This replaces python backtics with repr(...). The backtics were mostlyused to generate strings for printing with a string format and it istempting to replace `'%s' % repr(x)` with `'%r' % x`. That would workexcept where `x` happened to be a tuple or a dictionary but, because itwould be significant work to guarantee that and because there are notmany places where backtics are used, the safe path is to let the reprreplacements stand.Closes #3083.",22,134,133,numpy/f2py/tests/test_return_logical.py,[u'4'],1,1," -6,8 +6,8 ;",;
3208,1,011f8a2, Charles Harris <charlesr.harris@gmail.com>," Mon, 8 Apr 2013 11:34:24 -0600","ct: [PATCH] 2to3: Apply `repr` fixer.This replaces python backtics with repr(...). The backtics were mostlyused to generate strings for printing with a string format and it istempting to replace `'%s' % repr(x)` with `'%r' % x`. That would workexcept where `x` happened to be a tuple or a dictionary but, because itwould be significant work to guarantee that and because there are notmany places where backtics are used, the safe path is to let the reprreplacements stand.Closes #3083.",22,134,133,numpy/f2py/tests/test_return_real.py,[u'2'],1,1," -43,7 +43,7 ;","def check_function(self, t);"
3208,1,011f8a2, Charles Harris <charlesr.harris@gmail.com>," Mon, 8 Apr 2013 11:34:24 -0600","ct: [PATCH] 2to3: Apply `repr` fixer.This replaces python backtics with repr(...). The backtics were mostlyused to generate strings for printing with a string format and it istempting to replace `'%s' % repr(x)` with `'%r' % x`. That would workexcept where `x` happened to be a tuple or a dictionary but, because itwould be significant work to guarantee that and because there are notmany places where backtics are used, the safe path is to let the reprreplacements stand.Closes #3083.",22,134,133,numpy/f2py/tests/test_size.py,[u'14'],3,4," -18,29 +18,29 ;",class TestSizeSumExample(util.F2PyTest);
3208,1,011f8a2, Charles Harris <charlesr.harris@gmail.com>," Mon, 8 Apr 2013 11:34:24 -0600","ct: [PATCH] 2to3: Apply `repr` fixer.This replaces python backtics with repr(...). The backtics were mostlyused to generate strings for printing with a string format and it istempting to replace `'%s' % repr(x)` with `'%r' % x`. That would workexcept where `x` happened to be a tuple or a dictionary but, because itwould be significant work to guarantee that and because there are notmany places where backtics are used, the safe path is to let the reprreplacements stand.Closes #3083.",22,134,133,numpy/f2py/use_rules.py,[u'2'],1,1," -99,7 +99,7 ;","def buildusevar(name,realname,vars,usemodulename);"
3208,1,011f8a2, Charles Harris <charlesr.harris@gmail.com>," Mon, 8 Apr 2013 11:34:24 -0600","ct: [PATCH] 2to3: Apply `repr` fixer.This replaces python backtics with repr(...). The backtics were mostlyused to generate strings for printing with a string format and it istempting to replace `'%s' % repr(x)` with `'%r' % x`. That would workexcept where `x` happened to be a tuple or a dictionary but, because itwould be significant work to guarantee that and because there are notmany places where backtics are used, the safe path is to let the reprreplacements stand.Closes #3083.",22,134,133,numpy/ma/mrecords.py,[u'4'],1,1," -55,7 +55,7 ; -74,7 +74,7 ;","def _getformats(data);def _checknames(descr, names=None);"
3208,1,011f8a2, Charles Harris <charlesr.harris@gmail.com>," Mon, 8 Apr 2013 11:34:24 -0600","ct: [PATCH] 2to3: Apply `repr` fixer.This replaces python backtics with repr(...). The backtics were mostlyused to generate strings for printing with a string format and it istempting to replace `'%s' % repr(x)` with `'%r' % x`. That would workexcept where `x` happened to be a tuple or a dictionary but, because itwould be significant work to guarantee that and because there are notmany places where backtics are used, the safe path is to let the reprreplacements stand.Closes #3083.",22,134,133,numpy/testing/utils.py,[u'8'],2,2," -919,9 +919,9 ; -936,7 +936,7 ; -947,7 +947,7 ;","def assert_string_equal(actual, desired);def assert_string_equal(actual, desired);def assert_string_equal(actual, desired);"
3208,1,011f8a2, Charles Harris <charlesr.harris@gmail.com>," Mon, 8 Apr 2013 11:34:24 -0600","ct: [PATCH] 2to3: Apply `repr` fixer.This replaces python backtics with repr(...). The backtics were mostlyused to generate strings for printing with a string format and it istempting to replace `'%s' % repr(x)` with `'%r' % x`. That would workexcept where `x` happened to be a tuple or a dictionary but, because itwould be significant work to guarantee that and because there are notmany places where backtics are used, the safe path is to let the reprreplacements stand.Closes #3083.",22,134,133,tools/py3tool.py,[u'1'],1,0," -73,6 +73,7 ;",;
3206,1,4a669b1, Charles Harris <charlesr.harris@gmail.com>," Sun, 7 Apr 2013 20:49:32 -0600",ct: [PATCH] ENH: Forward port `1.7.1` release notes.,1,25,0,doc/release/1.7.1-notes.rst,[u'25'],25,0," -0,0 +1,25 ;",;
3205,2,aab46a7, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 19:09:17 -0600","ct: [PATCH 1/2] 2to3: apply `dict` fixer.In Python3 `dict.items()`, `dict.keys()`, and `dict.values()` areiterators. This causes problems when a list is needed so the 2to3 fixerexplicitly constructs a list when is finds on of those functions.However, that is usually not necessary, so a lot of the work here hasbeen cleaning up those places where the fix is not needed. The bigexception to that is the `numpy/f2py/crackfortran.py` file. The codethere makes extensive use of loops that modify the contents of thedictionary being looped through, which raises an error. That togetherwith the obscurity of the code in that file made it safest to let the`dict` fixer do its worst.Closes #3050.",32,95,94,doc/summarize.py,[u'2'],1,1," -74,7 +74,7 ;",def main();
3205,2,aab46a7, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 19:09:17 -0600","ct: [PATCH 1/2] 2to3: apply `dict` fixer.In Python3 `dict.items()`, `dict.keys()`, and `dict.values()` areiterators. This causes problems when a list is needed so the 2to3 fixerexplicitly constructs a list when is finds on of those functions.However, that is usually not necessary, so a lot of the work here hasbeen cleaning up those places where the fix is not needed. The bigexception to that is the `numpy/f2py/crackfortran.py` file. The codethere makes extensive use of loops that modify the contents of thedictionary being looped through, which raises an error. That togetherwith the obscurity of the code in that file made it safest to let the`dict` fixer do its worst.Closes #3050.",32,95,94,numpy/core/_internal.py,[u'8'],1,2," -20,7 +20,7 ; -332,7 +332,7 ; -356,7 +356,7 ; -505,7 +505,7 ;",";def _index_fields(ary, fields);def _index_fields(ary, fields);def get_dummy_name();"
3205,2,aab46a7, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 19:09:17 -0600","ct: [PATCH 1/2] 2to3: apply `dict` fixer.In Python3 `dict.items()`, `dict.keys()`, and `dict.values()` areiterators. This causes problems when a list is needed so the 2to3 fixerexplicitly constructs a list when is finds on of those functions.However, that is usually not necessary, so a lot of the work here hasbeen cleaning up those places where the fix is not needed. The bigexception to that is the `numpy/f2py/crackfortran.py` file. The codethere makes extensive use of loops that modify the contents of thedictionary being looped through, which raises an error. That togetherwith the obscurity of the code in that file made it safest to let the`dict` fixer do its worst.Closes #3050.",32,95,94,numpy/core/code_generators/genapi.py,[u'4'],1,1," -386,7 +386,7 ; -448,7 +448,7 ;",def internal_define(self);def fullapi_hash(api_dicts);
3205,2,aab46a7, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 19:09:17 -0600","ct: [PATCH 1/2] 2to3: apply `dict` fixer.In Python3 `dict.items()`, `dict.keys()`, and `dict.values()` areiterators. This causes problems when a list is needed so the 2to3 fixerexplicitly constructs a list when is finds on of those functions.However, that is usually not necessary, so a lot of the work here hasbeen cleaning up those places where the fix is not needed. The bigexception to that is the `numpy/f2py/crackfortran.py` file. The codethere makes extensive use of loops that modify the contents of thedictionary being looped through, which raises an error. That togetherwith the obscurity of the code in that file made it safest to let the`dict` fixer do its worst.Closes #3050.",32,95,94,numpy/core/memmap.py,[u'2'],1,1," -201,7 +201,7 ;","def __new__(subtype, filename, dtype=uint8, mode='r+', offset=0;"
3205,2,aab46a7, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 19:09:17 -0600","ct: [PATCH 1/2] 2to3: apply `dict` fixer.In Python3 `dict.items()`, `dict.keys()`, and `dict.values()` areiterators. This causes problems when a list is needed so the 2to3 fixerexplicitly constructs a list when is finds on of those functions.However, that is usually not necessary, so a lot of the work here hasbeen cleaning up those places where the fix is not needed. The bigexception to that is the `numpy/f2py/crackfortran.py` file. The codethere makes extensive use of loops that modify the contents of thedictionary being looped through, which raises an error. That togetherwith the obscurity of the code in that file made it safest to let the`dict` fixer do its worst.Closes #3050.",32,95,94,numpy/core/numerictypes.py,[u'4'],1,1," -788,7 +788,7 ; -863,7 +863,7 ;","def __getitem__(self, obj);def sctype2char(sctype);"
3205,2,aab46a7, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 19:09:17 -0600","ct: [PATCH 1/2] 2to3: apply `dict` fixer.In Python3 `dict.items()`, `dict.keys()`, and `dict.values()` areiterators. This causes problems when a list is needed so the 2to3 fixerexplicitly constructs a list when is finds on of those functions.However, that is usually not necessary, so a lot of the work here hasbeen cleaning up those places where the fix is not needed. The bigexception to that is the `numpy/f2py/crackfortran.py` file. The codethere makes extensive use of loops that modify the contents of thedictionary being looped through, which raises an error. That togetherwith the obscurity of the code in that file made it safest to let the`dict` fixer do its worst.Closes #3050.",32,95,94,numpy/core/tests/test_blasdot.py,[u'2'],1,1," -105,7 +105,7 ;",def test_dot_array_order();
3205,2,aab46a7, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 19:09:17 -0600","ct: [PATCH 1/2] 2to3: apply `dict` fixer.In Python3 `dict.items()`, `dict.keys()`, and `dict.values()` areiterators. This causes problems when a list is needed so the 2to3 fixerexplicitly constructs a list when is finds on of those functions.However, that is usually not necessary, so a lot of the work here hasbeen cleaning up those places where the fix is not needed. The bigexception to that is the `numpy/f2py/crackfortran.py` file. The codethere makes extensive use of loops that modify the contents of thedictionary being looped through, which raises an error. That togetherwith the obscurity of the code in that file made it safest to let the`dict` fixer do its worst.Closes #3050.",32,95,94,numpy/core/tests/test_multiarray.py,[u'4'],1,1," -1502,7 +1502,7 ; -1549,7 +1549,7 ;",def test_ip_types(self);def test_ip_types(self);
3205,2,aab46a7, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 19:09:17 -0600","ct: [PATCH 1/2] 2to3: apply `dict` fixer.In Python3 `dict.items()`, `dict.keys()`, and `dict.values()` areiterators. This causes problems when a list is needed so the 2to3 fixerexplicitly constructs a list when is finds on of those functions.However, that is usually not necessary, so a lot of the work here hasbeen cleaning up those places where the fix is not needed. The bigexception to that is the `numpy/f2py/crackfortran.py` file. The codethere makes extensive use of loops that modify the contents of thedictionary being looped through, which raises an error. That togetherwith the obscurity of the code in that file made it safest to let the`dict` fixer do its worst.Closes #3050.",32,95,94,numpy/distutils/ccompiler.py,[u'4'],1,1," -192,7 +192,7 ; -255,7 +255,7 ;","def CCompiler_compile(self, sources, output_dir=None, macros=None;def allow(attr);"
3205,2,aab46a7, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 19:09:17 -0600","ct: [PATCH 1/2] 2to3: apply `dict` fixer.In Python3 `dict.items()`, `dict.keys()`, and `dict.values()` areiterators. This causes problems when a list is needed so the 2to3 fixerexplicitly constructs a list when is finds on of those functions.However, that is usually not necessary, so a lot of the work here hasbeen cleaning up those places where the fix is not needed. The bigexception to that is the `numpy/f2py/crackfortran.py` file. The codethere makes extensive use of loops that modify the contents of thedictionary being looped through, which raises an error. That togetherwith the obscurity of the code in that file made it safest to let the`dict` fixer do its worst.Closes #3050.",32,95,94,numpy/distutils/command/build_py.py,[u'2'],1,1," -8,7 +8,7 ;",class build_py(old_build_py);
3205,2,aab46a7, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 19:09:17 -0600","ct: [PATCH 1/2] 2to3: apply `dict` fixer.In Python3 `dict.items()`, `dict.keys()`, and `dict.values()` areiterators. This causes problems when a list is needed so the 2to3 fixerexplicitly constructs a list when is finds on of those functions.However, that is usually not necessary, so a lot of the work here hasbeen cleaning up those places where the fix is not needed. The bigexception to that is the `numpy/f2py/crackfortran.py` file. The codethere makes extensive use of loops that modify the contents of thedictionary being looped through, which raises an error. That togetherwith the obscurity of the code in that file made it safest to let the`dict` fixer do its worst.Closes #3050.",32,95,94,numpy/distutils/conv_template.py,[u'2'],1,1," -303,7 +303,7 ;",def unique_key(adict);
3205,2,aab46a7, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 19:09:17 -0600","ct: [PATCH 1/2] 2to3: apply `dict` fixer.In Python3 `dict.items()`, `dict.keys()`, and `dict.values()` areiterators. This causes problems when a list is needed so the 2to3 fixerexplicitly constructs a list when is finds on of those functions.However, that is usually not necessary, so a lot of the work here hasbeen cleaning up those places where the fix is not needed. The bigexception to that is the `numpy/f2py/crackfortran.py` file. The codethere makes extensive use of loops that modify the contents of thedictionary being looped through, which raises an error. That togetherwith the obscurity of the code in that file made it safest to let the`dict` fixer do its worst.Closes #3050.",32,95,94,numpy/distutils/exec_command.py,[u'2'],1,1," -195,7 +195,7 ;",def exec_command( command;
3205,2,aab46a7, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 19:09:17 -0600","ct: [PATCH 1/2] 2to3: apply `dict` fixer.In Python3 `dict.items()`, `dict.keys()`, and `dict.values()` areiterators. This causes problems when a list is needed so the 2to3 fixerexplicitly constructs a list when is finds on of those functions.However, that is usually not necessary, so a lot of the work here hasbeen cleaning up those places where the fix is not needed. The bigexception to that is the `numpy/f2py/crackfortran.py` file. The codethere makes extensive use of loops that modify the contents of thedictionary being looped through, which raises an error. That togetherwith the obscurity of the code in that file made it safest to let the`dict` fixer do its worst.Closes #3050.",32,95,94,numpy/distutils/fcompiler/__init__.py,[u'4'],1,1," -542,7 +542,7 ; -848,7 +848,7 ;","def get_flags(tag, flags);def new_fcompiler(plat=None;"
3205,2,aab46a7, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 19:09:17 -0600","ct: [PATCH 1/2] 2to3: apply `dict` fixer.In Python3 `dict.items()`, `dict.keys()`, and `dict.values()` areiterators. This causes problems when a list is needed so the 2to3 fixerexplicitly constructs a list when is finds on of those functions.However, that is usually not necessary, so a lot of the work here hasbeen cleaning up those places where the fix is not needed. The bigexception to that is the `numpy/f2py/crackfortran.py` file. The codethere makes extensive use of loops that modify the contents of thedictionary being looped through, which raises an error. That togetherwith the obscurity of the code in that file made it safest to let the`dict` fixer do its worst.Closes #3050.",32,95,94,numpy/distutils/from_template.py,[u'2'],1,1," -111,7 +111,7 ;",def conv(astr);
3205,2,aab46a7, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 19:09:17 -0600","ct: [PATCH 1/2] 2to3: apply `dict` fixer.In Python3 `dict.items()`, `dict.keys()`, and `dict.values()` areiterators. This causes problems when a list is needed so the 2to3 fixerexplicitly constructs a list when is finds on of those functions.However, that is usually not necessary, so a lot of the work here hasbeen cleaning up those places where the fix is not needed. The bigexception to that is the `numpy/f2py/crackfortran.py` file. The codethere makes extensive use of loops that modify the contents of thedictionary being looped through, which raises an error. That togetherwith the obscurity of the code in that file made it safest to let the`dict` fixer do its worst.Closes #3050.",32,95,94,numpy/distutils/misc_util.py,[u'4'],1,1," -2208,12 +2208,12 ;",def get_info(name);
3205,2,aab46a7, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 19:09:17 -0600","ct: [PATCH 1/2] 2to3: apply `dict` fixer.In Python3 `dict.items()`, `dict.keys()`, and `dict.values()` areiterators. This causes problems when a list is needed so the 2to3 fixerexplicitly constructs a list when is finds on of those functions.However, that is usually not necessary, so a lot of the work here hasbeen cleaning up those places where the fix is not needed. The bigexception to that is the `numpy/f2py/crackfortran.py` file. The codethere makes extensive use of loops that modify the contents of thedictionary being looped through, which raises an error. That togetherwith the obscurity of the code in that file made it safest to let the`dict` fixer do its worst.Closes #3050.",32,95,94,numpy/distutils/npy_pkg_config.py,[u'4'],1,1," -143,7 +143,7 ; -222,7 +222,7 ;",def sections(self);def variables(self);
3205,2,aab46a7, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 19:09:17 -0600","ct: [PATCH 1/2] 2to3: apply `dict` fixer.In Python3 `dict.items()`, `dict.keys()`, and `dict.values()` areiterators. This causes problems when a list is needed so the 2to3 fixerexplicitly constructs a list when is finds on of those functions.However, that is usually not necessary, so a lot of the work here hasbeen cleaning up those places where the fix is not needed. The bigexception to that is the `numpy/f2py/crackfortran.py` file. The codethere makes extensive use of loops that modify the contents of thedictionary being looped through, which raises an error. That togetherwith the obscurity of the code in that file made it safest to let the`dict` fixer do its worst.Closes #3050.",32,95,94,numpy/distutils/system_info.py,[u'2'],1,1," -2140,7 +2140,7 ;",def show_all(argv=None);
3205,2,aab46a7, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 19:09:17 -0600","ct: [PATCH 1/2] 2to3: apply `dict` fixer.In Python3 `dict.items()`, `dict.keys()`, and `dict.values()` areiterators. This causes problems when a list is needed so the 2to3 fixerexplicitly constructs a list when is finds on of those functions.However, that is usually not necessary, so a lot of the work here hasbeen cleaning up those places where the fix is not needed. The bigexception to that is the `numpy/f2py/crackfortran.py` file. The codethere makes extensive use of loops that modify the contents of thedictionary being looped through, which raises an error. That togetherwith the obscurity of the code in that file made it safest to let the`dict` fixer do its worst.Closes #3050.",32,95,94,numpy/f2py/auxfuncs.py,[u'2'],1,1," -613,7 +613,7 ;","def replace(str,d,defaultsep='');"
3205,2,aab46a7, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 19:09:17 -0600","ct: [PATCH 1/2] 2to3: apply `dict` fixer.In Python3 `dict.items()`, `dict.keys()`, and `dict.values()` areiterators. This causes problems when a list is needed so the 2to3 fixerexplicitly constructs a list when is finds on of those functions.However, that is usually not necessary, so a lot of the work here hasbeen cleaning up those places where the fix is not needed. The bigexception to that is the `numpy/f2py/crackfortran.py` file. The codethere makes extensive use of loops that modify the contents of thedictionary being looped through, which raises an error. That togetherwith the obscurity of the code in that file made it safest to let the`dict` fixer do its worst.Closes #3050.",32,95,94,numpy/f2py/capi_maps.py,[u'4'],1,1," -192,7 +192,7 ; -491,7 +491,7 ;",";def sign2map(a,var);"
3205,2,aab46a7, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 19:09:17 -0600","ct: [PATCH 1/2] 2to3: apply `dict` fixer.In Python3 `dict.items()`, `dict.keys()`, and `dict.values()` areiterators. This causes problems when a list is needed so the 2to3 fixerexplicitly constructs a list when is finds on of those functions.However, that is usually not necessary, so a lot of the work here hasbeen cleaning up those places where the fix is not needed. The bigexception to that is the `numpy/f2py/crackfortran.py` file. The codethere makes extensive use of loops that modify the contents of thedictionary being looped through, which raises an error. That togetherwith the obscurity of the code in that file made it safest to let the`dict` fixer do its worst.Closes #3050.",32,95,94,numpy/f2py/crackfortran.py,[u'96'],17,18," -680,7 +680,7 ; -836,7 +836,7 ; -1031,7 +1031,7 ; -1205,7 +1205,7 ; -1285,7 +1285,7 ; -1296,7 +1296,7 ; -1322,7 +1322,7 ; -1364,7 +1364,7 ; -1386,9 +1386,9 ; -1407,9 +1407,9 ; -1449,7 +1449,7 ; -1462,7 +1462,7 ; -1496,7 +1496,7 ; -1508,7 +1508,7 ; -1534,7 +1534,7 ; -1587,11 +1587,11 ; -1648,7 +1648,7 ; -1682,7 +1682,7 ; -1752,7 +1752,7 ; -1934,7 +1934,7 ; -1945,12 +1945,12 ; -2067,7 +2067,7 ; -2081,7 +2081,7 ; -2093,14 +2093,14 ; -2109,13 +2109,13 ; -2194,7 +2194,7 ; -2208,7 +2208,7 ; -2255,7 +2255,7 ; -2323,13 +2323,13 ; -2365,12 +2365,12 ; -2384,8 +2384,8 ; -2435,7 +2435,7 ; -2536,7 +2536,7 ; -2566,7 +2566,7 ; -2577,7 +2577,7 ; -2586,7 +2586,7 ; -2595,7 +2595,7 ; -2637,7 +2637,7 ;","def appenddecl(decl,decl2,force=1);def analyzeline(m,case,line);def analyzeline(m,case,line);def cracktypespec0(typespec,ll);def updatevars(typespec,selector,attrspec,entitydecl);def updatevars(typespec,selector,attrspec,entitydecl);def updatevars(typespec,selector,attrspec,entitydecl);def updatevars(typespec,selector,attrspec,entitydecl);def cracktypespec(typespec,selector);def cracktypespec(typespec,selector);def setkindselector(decl,sel,force=0);def setcharselector(decl,sel,force=0);def get_useparameters(block, param_map=None);def get_useparameters(block, param_map=None);def postcrack2(block,tab='',param_map=None);def postcrack(block,args=None,tab='');def postcrack(block,args=None,tab='');def sortvarnames(vars);def buildimplicitrules(block);def _get_depend_dict(name, vars, deps);def get_sorted_names(vars);def _eval_scalar(value,params);def analyzevars(block);def analyzevars(block);def analyzevars(block);def analyzevars(block);def analyzevars(block);def analyzevars(block);def analyzevars(block);def analyzevars(block);def analyzevars(block);def analyzeargs(block);def crack2fortrangen(block,tab='\n', as_interface=False);def crack2fortrangen(block,tab='\n', as_interface=False);def crack2fortrangen(block,tab='\n', as_interface=False);def common2fortran(common,tab='');def use2fortran(use,tab='');def vars2fortran(block,vars,args,tab='', as_interface=False);"
3205,2,aab46a7, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 19:09:17 -0600","ct: [PATCH 1/2] 2to3: apply `dict` fixer.In Python3 `dict.items()`, `dict.keys()`, and `dict.values()` areiterators. This causes problems when a list is needed so the 2to3 fixerexplicitly constructs a list when is finds on of those functions.However, that is usually not necessary, so a lot of the work here hasbeen cleaning up those places where the fix is not needed. The bigexception to that is the `numpy/f2py/crackfortran.py` file. The codethere makes extensive use of loops that modify the contents of thedictionary being looped through, which raises an error. That togetherwith the obscurity of the code in that file made it safest to let the`dict` fixer do its worst.Closes #3050.",32,95,94,numpy/f2py/f2py2e.py,[u'2'],1,1," -469,7 +469,7 ;",def run_compile();
3205,2,aab46a7, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 19:09:17 -0600","ct: [PATCH 1/2] 2to3: apply `dict` fixer.In Python3 `dict.items()`, `dict.keys()`, and `dict.values()` areiterators. This causes problems when a list is needed so the 2to3 fixerexplicitly constructs a list when is finds on of those functions.However, that is usually not necessary, so a lot of the work here hasbeen cleaning up those places where the fix is not needed. The bigexception to that is the `numpy/f2py/crackfortran.py` file. The codethere makes extensive use of loops that modify the contents of thedictionary being looped through, which raises an error. That togetherwith the obscurity of the code in that file made it safest to let the`dict` fixer do its worst.Closes #3050.",32,95,94,numpy/lib/_datasource.py,[u'2'],1,1," -104,7 +104,7 ;",def keys(self);
3205,2,aab46a7, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 19:09:17 -0600","ct: [PATCH 1/2] 2to3: apply `dict` fixer.In Python3 `dict.items()`, `dict.keys()`, and `dict.values()` areiterators. This causes problems when a list is needed so the 2to3 fixerexplicitly constructs a list when is finds on of those functions.However, that is usually not necessary, so a lot of the work here hasbeen cleaning up those places where the fix is not needed. The bigexception to that is the `numpy/f2py/crackfortran.py` file. The codethere makes extensive use of loops that modify the contents of thedictionary being looped through, which raises an error. That togetherwith the obscurity of the code in that file made it safest to let the`dict` fixer do its worst.Closes #3050.",32,95,94,numpy/lib/arraypad.py,[u'2'],1,1," -754,7 +754,7 ;","def pad(array, pad_width, mode=None, **kwargs);"
3205,2,aab46a7, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 19:09:17 -0600","ct: [PATCH 1/2] 2to3: apply `dict` fixer.In Python3 `dict.items()`, `dict.keys()`, and `dict.values()` areiterators. This causes problems when a list is needed so the 2to3 fixerexplicitly constructs a list when is finds on of those functions.However, that is usually not necessary, so a lot of the work here hasbeen cleaning up those places where the fix is not needed. The bigexception to that is the `numpy/f2py/crackfortran.py` file. The codethere makes extensive use of loops that modify the contents of thedictionary being looped through, which raises an error. That togetherwith the obscurity of the code in that file made it safest to let the`dict` fixer do its worst.Closes #3050.",32,95,94,numpy/lib/format.py,[u'2'],1,1," -344,7 +344,7 ;",def read_array_header_1_0(fp);
3205,2,aab46a7, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 19:09:17 -0600","ct: [PATCH 1/2] 2to3: apply `dict` fixer.In Python3 `dict.items()`, `dict.keys()`, and `dict.values()` areiterators. This causes problems when a list is needed so the 2to3 fixerexplicitly constructs a list when is finds on of those functions.However, that is usually not necessary, so a lot of the work here hasbeen cleaning up those places where the fix is not needed. The bigexception to that is the `numpy/f2py/crackfortran.py` file. The codethere makes extensive use of loops that modify the contents of thedictionary being looped through, which raises an error. That togetherwith the obscurity of the code in that file made it safest to let the`dict` fixer do its worst.Closes #3050.",32,95,94,numpy/lib/npyio.py,[u'4'],1,1," -572,7 +572,7 ; -811,7 +811,7 ;","def _savez(file, args, kwds, compress);def split_line(line);"
3205,2,aab46a7, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 19:09:17 -0600","ct: [PATCH 1/2] 2to3: apply `dict` fixer.In Python3 `dict.items()`, `dict.keys()`, and `dict.values()` areiterators. This causes problems when a list is needed so the 2to3 fixerexplicitly constructs a list when is finds on of those functions.However, that is usually not necessary, so a lot of the work here hasbeen cleaning up those places where the fix is not needed. The bigexception to that is the `numpy/f2py/crackfortran.py` file. The codethere makes extensive use of loops that modify the contents of thedictionary being looped through, which raises an error. That togetherwith the obscurity of the code in that file made it safest to let the`dict` fixer do its worst.Closes #3050.",32,95,94,numpy/lib/recfunctions.py,[u'2'],1,1," -317,7 +317,7 ;","def _fix_defaults(output, defaults=None);"
3205,2,aab46a7, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 19:09:17 -0600","ct: [PATCH 1/2] 2to3: apply `dict` fixer.In Python3 `dict.items()`, `dict.keys()`, and `dict.values()` areiterators. This causes problems when a list is needed so the 2to3 fixerexplicitly constructs a list when is finds on of those functions.However, that is usually not necessary, so a lot of the work here hasbeen cleaning up those places where the fix is not needed. The bigexception to that is the `numpy/f2py/crackfortran.py` file. The codethere makes extensive use of loops that modify the contents of thedictionary being looped through, which raises an error. That togetherwith the obscurity of the code in that file made it safest to let the`dict` fixer do its worst.Closes #3050.",32,95,94,numpy/lib/tests/test_io.py,[u'4'],1,1," -1620,7 +1620,7 ; -1629,7 +1629,7 ;",def test_npzfile_dict();def test_npzfile_dict();
3205,2,aab46a7, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 19:09:17 -0600","ct: [PATCH 1/2] 2to3: apply `dict` fixer.In Python3 `dict.items()`, `dict.keys()`, and `dict.values()` areiterators. This causes problems when a list is needed so the 2to3 fixerexplicitly constructs a list when is finds on of those functions.However, that is usually not necessary, so a lot of the work here hasbeen cleaning up those places where the fix is not needed. The bigexception to that is the `numpy/f2py/crackfortran.py` file. The codethere makes extensive use of loops that modify the contents of thedictionary being looped through, which raises an error. That togetherwith the obscurity of the code in that file made it safest to let the`dict` fixer do its worst.Closes #3050.",32,95,94,numpy/lib/utils.py,[u'2'],1,1," -755,7 +755,7 ;","def lookfor(what, module=None, import_modules=True, regenerate=False;"
3205,2,aab46a7, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 19:09:17 -0600","ct: [PATCH 1/2] 2to3: apply `dict` fixer.In Python3 `dict.items()`, `dict.keys()`, and `dict.values()` areiterators. This causes problems when a list is needed so the 2to3 fixerexplicitly constructs a list when is finds on of those functions.However, that is usually not necessary, so a lot of the work here hasbeen cleaning up those places where the fix is not needed. The bigexception to that is the `numpy/f2py/crackfortran.py` file. The codethere makes extensive use of loops that modify the contents of thedictionary being looped through, which raises an error. That togetherwith the obscurity of the code in that file made it safest to let the`dict` fixer do its worst.Closes #3050.",32,95,94,numpy/linalg/lapack_lite/make_lite.py,[u'4'],1,1," -111,12 +111,12 ;","def getRoutine(self, rname);"
3205,2,aab46a7, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 19:09:17 -0600","ct: [PATCH 1/2] 2to3: apply `dict` fixer.In Python3 `dict.items()`, `dict.keys()`, and `dict.values()` areiterators. This causes problems when a list is needed so the 2to3 fixerexplicitly constructs a list when is finds on of those functions.However, that is usually not necessary, so a lot of the work here hasbeen cleaning up those places where the fix is not needed. The bigexception to that is the `numpy/f2py/crackfortran.py` file. The codethere makes extensive use of loops that modify the contents of thedictionary being looped through, which raises an error. That togetherwith the obscurity of the code in that file made it safest to let the`dict` fixer do its worst.Closes #3050.",32,95,94,numpy/ma/core.py,[u'2'],1,1," -5536,7 +5536,7 ;","def __deepcopy__(self, memo=None);"
3205,2,aab46a7, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 19:09:17 -0600","ct: [PATCH 1/2] 2to3: apply `dict` fixer.In Python3 `dict.items()`, `dict.keys()`, and `dict.values()` areiterators. This causes problems when a list is needed so the 2to3 fixerexplicitly constructs a list when is finds on of those functions.However, that is usually not necessary, so a lot of the work here hasbeen cleaning up those places where the fix is not needed. The bigexception to that is the `numpy/f2py/crackfortran.py` file. The codethere makes extensive use of loops that modify the contents of thedictionary being looped through, which raises an error. That togetherwith the obscurity of the code in that file made it safest to let the`dict` fixer do its worst.Closes #3050.",32,95,94,numpy/numarray/session.py,[u'6'],1,2," -268,11 +268,11 ; -332,7 +332,7 ;","def save(variables=None, file=SAVEFILE, dictionary=None, verbose=False);def load(variables=None, file=SAVEFILE, dictionary=None, verbose=False);"
3205,2,aab46a7, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 19:09:17 -0600","ct: [PATCH 1/2] 2to3: apply `dict` fixer.In Python3 `dict.items()`, `dict.keys()`, and `dict.values()` areiterators. This causes problems when a list is needed so the 2to3 fixerexplicitly constructs a list when is finds on of those functions.However, that is usually not necessary, so a lot of the work here hasbeen cleaning up those places where the fix is not needed. The bigexception to that is the `numpy/f2py/crackfortran.py` file. The codethere makes extensive use of loops that modify the contents of thedictionary being looped through, which raises an error. That togetherwith the obscurity of the code in that file made it safest to let the`dict` fixer do its worst.Closes #3050.",32,95,94,tools/c_coverage/c_coverage_report.py,[u'2'],1,1," -110,7 +110,7 ;","def write_html(self, root);"
3205,2,aab46a7, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 19:09:17 -0600","ct: [PATCH 1/2] 2to3: apply `dict` fixer.In Python3 `dict.items()`, `dict.keys()`, and `dict.values()` areiterators. This causes problems when a list is needed so the 2to3 fixerexplicitly constructs a list when is finds on of those functions.However, that is usually not necessary, so a lot of the work here hasbeen cleaning up those places where the fix is not needed. The bigexception to that is the `numpy/f2py/crackfortran.py` file. The codethere makes extensive use of loops that modify the contents of thedictionary being looped through, which raises an error. That togetherwith the obscurity of the code in that file made it safest to let the`dict` fixer do its worst.Closes #3050.",32,95,94,tools/py3tool.py,[u'1'],1,0," -81,6 +81,7 ;",;
3205,2,6339930, Charles Harris <charlesr.harris@gmail.com>," Sun, 7 Apr 2013 09:52:12 -0600","ct: [PATCH 2/2] MAINT: Fixup more dictionary fixer fixes.Most of these are places where an iterator will work as well as alist, but two fix places where `iterkeys` was introduced which isa bug.",5,9,9,numpy/core/_internal.py,[u'6'],3,3," -332,7 +332,7 ; -356,7 +356,7 ; -505,7 +505,7 ;","def _index_fields(ary, fields);def _index_fields(ary, fields);def get_dummy_name();"
3205,2,6339930, Charles Harris <charlesr.harris@gmail.com>," Sun, 7 Apr 2013 09:52:12 -0600","ct: [PATCH 2/2] MAINT: Fixup more dictionary fixer fixes.Most of these are places where an iterator will work as well as alist, but two fix places where `iterkeys` was introduced which isa bug.",5,9,9,numpy/core/code_generators/genapi.py,[u'2'],1,1," -448,7 +448,7 ;",def fullapi_hash(api_dicts);
3205,2,6339930, Charles Harris <charlesr.harris@gmail.com>," Sun, 7 Apr 2013 09:52:12 -0600","ct: [PATCH 2/2] MAINT: Fixup more dictionary fixer fixes.Most of these are places where an iterator will work as well as alist, but two fix places where `iterkeys` was introduced which isa bug.",5,9,9,numpy/core/numerictypes.py,[u'2'],1,1," -863,7 +863,7 ;",def sctype2char(sctype);
3205,2,6339930, Charles Harris <charlesr.harris@gmail.com>," Sun, 7 Apr 2013 09:52:12 -0600","ct: [PATCH 2/2] MAINT: Fixup more dictionary fixer fixes.Most of these are places where an iterator will work as well as alist, but two fix places where `iterkeys` was introduced which isa bug.",5,9,9,numpy/distutils/fcompiler/__init__.py,[u'4'],2,2," -542,7 +542,7 ; -848,7 +848,7 ;","def get_flags(tag, flags);def new_fcompiler(plat=None;"
3205,2,6339930, Charles Harris <charlesr.harris@gmail.com>," Sun, 7 Apr 2013 09:52:12 -0600","ct: [PATCH 2/2] MAINT: Fixup more dictionary fixer fixes.Most of these are places where an iterator will work as well as alist, but two fix places where `iterkeys` was introduced which isa bug.",5,9,9,numpy/distutils/misc_util.py,[u'4'],2,2," -2208,12 +2208,12 ;",def get_info(name);
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/cdoc/numpyfilter.py,[u'2'],1,1," -6,7 +6,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/cython/run_test.py,[u'2'],1,1," -1,5 +1,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/cython/setup.py,[u'2'],1,1," -5,7 +5,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/example.py,[u'2'],1,1," -8,7 +8,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/newdtype_example/example.py,[u'6'],1,1," -1,4 +1,4 ; -12,7 +12,7 ;",;;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/newdtype_example/floatint/__init__.py,[u'2'],1,1," -1,3 +1,3 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/newdtype_example/setup.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/numpybook/comparison/ctypes/filter.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/numpybook/comparison/ctypes/interface.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/numpybook/comparison/pyrex/setup.py,[u'2'],1,1," -1,5 +1,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/numpybook/comparison/timing.py,[u'6'],1,1," -1,4 +1,4 ; -54,9 +54,9 ;",;;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/numpybook/comparison/weave/filter.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/numpybook/comparison/weave/inline.py,[u'6'],1,1," -1,4 +1,4 ; -40,8 +40,8 ;",;def arr(a);
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/numpybook/runcode.py,[u'14'],1,2," -14,7 +14,7 ; -25,8 +25,8 ; -44,8 +44,8 ; -90,7 +90,7 ; -141,7 +141,7 ;",";;def getoutput(tstr, dic);def runpycode(lyxstr, name='MyCode');def main(args);"
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/postprocess.py,[u'2'],1,1," -6,7 +6,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/pyrex/run_test.py,[u'2'],1,1," -1,5 +1,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/pyrex/setup.py,[u'2'],1,1," -12,7 +12,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/source/conf.py,[u'2'],1,1," -1,5 +1,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/sphinxext/numpydoc/__init__.py,[u'2'],1,1," -1,3 +1,3 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/sphinxext/numpydoc/comment_eater.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/sphinxext/numpydoc/compiler_unparse.py,[u'2'],1,1," -10,7 +10,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/sphinxext/numpydoc/docscrape.py,[u'7'],1,1," -1,9 +1,8 ; -11,10 +10,6 ;",;;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/sphinxext/numpydoc/docscrape_sphinx.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/sphinxext/numpydoc/linkcode.py,[u'2'],1,1," -9,7 +9,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/sphinxext/numpydoc/numpydoc.py,[u'2'],1,1," -15,7 +15,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/sphinxext/numpydoc/phantom_import.py,[u'2'],1,1," -14,7 +14,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/sphinxext/numpydoc/plot_directive.py,[u'2'],1,1," -74,7 +74,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/sphinxext/numpydoc/tests/test_docscrape.py,[u'2'],1,1," -1,5 +1,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/sphinxext/numpydoc/tests/test_linkcode.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,.../numpydoc/tests/test_phantom_import.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,.../numpydoc/tests/test_plot_directive.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/sphinxext/numpydoc/tests/test_traitsdoc.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/sphinxext/numpydoc/traitsdoc.py,[u'2'],1,1," -13,7 +13,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/sphinxext/setup.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/summarize.py,[u'24'],2,2," -5,7 +5,7 ; -78,22 +78,22 ;",;def main();
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/swig/test/setup.py,[u'2'],1,1," -1,5 +1,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/swig/test/testArray.py,[u'8'],1,1," -1,5 +1,5 ; -277,8 +277,8 ;",;def testView(self);
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/swig/test/testFarray.py,[u'8'],1,1," -1,5 +1,5 ; -152,8 +152,8 ;",;def testView(self);
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/swig/test/testFortran.py,[u'14'],1,2," -1,5 +1,5 ; -27,14 +27,14 ; -42,7 +42,7 ; -163,8 +163,8 ;",";def __init__(self, methodName=""runTests"");def testSecondElementFortran(self);def __init__(self, methodName=""runTest"");"
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/swig/test/testMatrix.py,[u'62'],5,5," -1,5 +1,5 ; -27,7 +27,7 ; -35,7 +35,7 ; -43,7 +43,7 ; -51,7 +51,7 ; -59,14 +59,14 ; -74,7 +74,7 ; -82,21 +82,21 ; -104,7 +104,7 ; -112,21 +112,21 ; -135,7 +135,7 ; -143,7 +143,7 ; -151,7 +151,7 ; -159,7 +159,7 ; -167,7 +167,7 ; -176,7 +176,7 ; -184,7 +184,7 ; -192,7 +192,7 ; -200,7 +200,7 ; -209,7 +209,7 ; -217,7 +217,7 ; -225,7 +225,7 ; -233,7 +233,7 ; -355,8 +355,8 ;",";def __init__(self, methodName=""runTests"");def testDet(self);def testDetBadList(self);def testDetWrongDim(self);def testDetWrongSize(self);def testMax(self);def testMaxBadList(self);def testMin(self);def testMinBadList(self);def testScale(self);def testScaleWrongDim(self);def testScaleWrongSize(self);def testScaleWrongType(self);def testScaleNonArray(self);def testFloor(self);def testFloorWrongDim(self);def testFloorWrongType(self);def testFloorNonArray(self);def testCeil(self);def testCeilWrongDim(self);def testCeilWrongType(self);def testCeilNonArray(self);def __init__(self, methodName=""runTest"");"
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/swig/test/testTensor.py,[u'62'],5,5," -1,5 +1,5 ; -29,7 +29,7 ; -41,7 +41,7 ; -50,7 +50,7 ; -59,7 +59,7 ; -68,14 +68,14 ; -84,7 +84,7 ; -93,21 +93,21 ; -116,7 +116,7 ; -125,21 +125,21 ; -152,7 +152,7 ; -162,7 +162,7 ; -171,7 +171,7 ; -181,14 +181,14 ; -199,7 +199,7 ; -208,7 +208,7 ; -216,14 +216,14 ; -234,7 +234,7 ; -243,7 +243,7 ; -251,7 +251,7 ; -260,7 +260,7 ; -395,8 +395,8 ;",";def __init__(self, methodName=""runTests"");def testNorm(self);def testNormBadList(self);def testNormWrongDim(self);def testNormWrongSize(self);def testMax(self);def testMaxBadList(self);def testMin(self);def testMinBadList(self);def testScale(self);def testScaleWrongType(self);def testScaleWrongDim(self);def testScaleWrongSize(self);def testFloor(self);def testFloorWrongType(self);def testFloorWrongDim(self);def testCeil(self);def testCeilWrongType(self);def testCeilWrongDim(self);def testCeilNonArray(self);def __init__(self, methodName=""runTest"");"
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,doc/swig/test/testVector.py,[u'70'],5,6," -1,5 +1,5 ; -27,98 +27,98 ; -127,7 +127,7 ; -135,7 +135,7 ; -143,7 +143,7 ; -151,14 +151,14 ; -167,7 +167,7 ; -175,7 +175,7 ; -183,14 +183,14 ; -199,7 +199,7 ; -207,7 +207,7 ; -215,14 +215,14 ; -231,7 +231,7 ; -239,14 +239,14 ; -254,7 +254,7 ; -374,8 +374,8 ;",";def __init__(self, methodName=""runTest"");def testReverse(self);def testReverseWrongDim(self);def testReverseWrongSize(self);def testReverseWrongType(self);def testOnes(self);def testOnesWrongDim(self);def testOnesWrongType(self);def testZeros(self);def testZerosWrongDim(self);def testZerosWrongType(self);def testEOSplit(self);def testTwos(self);def testThrees(self);def __init__(self, methodName=""runTest"");"
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/__init__.py,[u'2'],1,1," -104,7 +104,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/_import_tools.py,[u'12'],1,1," -1,4 +1,4 ; -262,13 +262,13 ; -337,10 +337,10 ;",";def _obj2repr(self,obj);class PackageLoaderDebug(PackageLoader);"
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/add_newdocs.py,[u'2'],1,1," -8,7 +8,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/build_utils/__init__.py,[u'2'],1,1, -1 +1 ;,;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/build_utils/common.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/build_utils/waf.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/compat/__init__.py,[u'2'],1,1," -8,7 +8,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/compat/_inspect.py,[u'14'],1,2," -5,7 +5,7 ; -211,11 +211,11 ;",";def convert(name, locals=locals;"
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/compat/py3k.py,[u'2'],1,1," -2,7 +2,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/compat/setup.py,[u'2'],1,1," -1,5 +1,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/__init__.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/_internal.py,[u'2'],1,1," -4,7 +4,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/_methods.py,[u'2'],1,1," -3,7 +3,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/arrayprint.py,[u'2'],1,1," -3,7 +3,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/code_generators/__init__.py,[u'2'],1,1, -1 +1 ;,;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/code_generators/cversions.py,[u'4'],1,1," -3,7 +3,7 ; -13,4 +13,4 ;",;;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/code_generators/genapi.py,[u'8'],1,1," -6,7 +6,7 ; -254,7 +254,7 ; -483,8 +483,8 ;",";def find_functions(filename, tag='API');def main();"
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/code_generators/generate_numpy_api.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/code_generators/generate_ufunc_api.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/code_generators/generate_umath.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/code_generators/numpy_api.py,[u'2'],1,1," -12,7 +12,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/code_generators/ufunc_docstrings.py,[u'2'],1,1," -9,7 +9,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/defchararray.py,[u'2'],1,1," -15,7 +15,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/fromnumeric.py,[u'2'],1,1," -1,7 +1,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/function_base.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/getlimits.py,[u'14'],1,2," -1,7 +1,7 ; -296,11 +296,11 ;",;def __repr__(self);
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/info.py,[u'2'],1,1," -81,7 +81,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/machar.py,[u'4'],1,1," -5,7 +5,7 ; -338,4 +338,4 ;",;def __str__(self);
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/memmap.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/numeric.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/numerictypes.py,[u'2'],1,1," -80,7 +80,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/records.py,[u'2'],1,1," -34,7 +34,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/setup.py,[u'4'],1,1," -1,4 +1,4 ; -105,7 +105,7 ;",;def win32_checks(deflist);
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/setup_common.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/shape_base.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/src/multiarray/testcalcs.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/tests/test_api.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/tests/test_arrayprint.py,[u'2'],1,1," -1,6 +1,6 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/tests/test_blasdot.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/tests/test_datetime.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/tests/test_defchararray.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/tests/test_deprecations.py,[u'2'],1,1," -3,7 +3,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/tests/test_dtype.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/tests/test_einsum.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/tests/test_errstate.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/tests/test_function_base.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/tests/test_getlimits.py,[u'2'],1,1," -1,7 +1,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/tests/test_half.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/tests/test_indexerrors.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/tests/test_indexing.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/tests/test_item_selection.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/tests/test_machar.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/tests/test_memmap.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/tests/test_multiarray.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/tests/test_multiarray_assignment.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/tests/test_nditer.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/tests/test_numeric.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/tests/test_numerictypes.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/tests/test_print.py,[u'8'],1,1," -1,4 +1,4 ; -145,12 +145,12 ;",";def _test_redirected_print(x, tp, ref=None);"
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/tests/test_records.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/tests/test_regression.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/tests/test_scalarmath.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/tests/test_scalarprint.py,[u'2'],1,1," -2,7 +2,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/tests/test_shape_base.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/tests/test_ufunc.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/tests/test_umath.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/tests/test_umath_complex.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/core/tests/test_unicode.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/ctypeslib.py,[u'2'],1,1," -49,7 +49,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/__init__.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/__version__.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/ccompiler.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/command/__init__.py,[u'2'],1,1," -4,7 +4,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/command/autodist.py,[u'2'],1,1," -1,7 +1,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/command/bdist_rpm.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/command/build.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/command/build_clib.py,[u'2'],1,1," -1,6 +1,6 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/command/build_ext.py,[u'2'],1,1," -1,7 +1,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/command/build_py.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/command/build_scripts.py,[u'2'],1,1," -1,7 +1,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/command/build_src.py,[u'2'],1,1," -1,6 +1,6 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/command/config.py,[u'2'],1,1," -2,7 +2,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/command/config_compiler.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/command/develop.py,[u'2'],1,1," -3,7 +3,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/command/egg_info.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/command/install.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/command/install_clib.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/command/install_data.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/command/install_headers.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/command/sdist.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/compat.py,[u'2'],1,1," -2,7 +2,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/conv_template.py,[u'6'],1,1," -24,7 +24,7 ; -78,7 +78,7 ; -278,7 +278,7 ;",;;def resolve_includes(source);
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/core.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/cpuinfo.py,[u'2'],1,1," -12,7 +12,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/environment.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/exec_command.py,[u'2'],1,1," -44,7 +44,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/extension.py,[u'2'],1,1," -6,7 +6,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/fcompiler/__init__.py,[u'2'],1,1," -13,7 +13,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/fcompiler/absoft.py,[u'2'],1,1," -5,7 +5,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/fcompiler/compaq.py,[u'2'],1,1," -1,6 +1,6 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/fcompiler/g95.py,[u'2'],1,1," -1,5 +1,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/fcompiler/gnu.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/fcompiler/hpux.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/fcompiler/ibm.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/fcompiler/intel.py,[u'2'],1,1," -1,5 +1,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/fcompiler/lahey.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/fcompiler/mips.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/fcompiler/nag.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/fcompiler/none.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/fcompiler/pathf95.py,[u'4'],1,1," -1,4 +1,4 ; -35,4 +35,4 ;",;def get_flags_debug(self);
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/fcompiler/pg.py,[u'6'],1,1," -1,5 +1,5 ; -35,7 +35,7 ; -46,7 +46,7 ;",;class PGroupFCompiler(FCompiler);def get_flags_opt(self);
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/fcompiler/sun.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/fcompiler/vast.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/from_template.py,[u'11'],1,1," -45,7 +45,7 ; -166,10 +166,9 ; -216,7 +215,7 ;",;def listrepl(mobj);def resolve_includes(source);
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/info.py,[u'2'],1,1," -1,6 +1,6 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/intelccompiler.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/lib2def.py,[u'6'],1,1," -1,4 +1,4 ; -48,8 +48,8 ;",;def parse_cmd();
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/line_endings.py,[u'18'],1,2," -1,30 +1,30 ; -42,23 +42,23 ;",;def dos2unix_dir(dir_name);
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/log.py,[u'2'],1,1," -1,5 +1,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/mingw32ccompiler.py,[u'4'],1,1," -7,7 +7,7 ; -240,7 +240,7 ;",;def object_filenames (self;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/misc_util.py,[u'14'],1,2," -1,4 +1,4 ; -220,8 +220,8 ; -232,8 +232,8 ; -627,7 +627,7 ; -1054,7 +1054,7 ;",";def _fix_paths(paths,local_path,include_non_existing);def _fix_paths(paths,local_path,include_non_existing);def get_data_files(data);def add_data_dir(self,data_path);"
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/npy_pkg_config.py,[u'12'],1,1," -1,4 +1,4 ; -429,7 +429,7 ; -455,10 +455,10 ;",";def read_config(pkgname, dirs=None);def read_config(pkgname, dirs=None);"
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/numpy_distribution.py,[u'2'],1,1," -1,5 +1,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/pathccompiler.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/setup.py,[u'2'],1,1," -1,5 +1,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/system_info.py,[u'2'],1,1," -110,7 +110,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/tests/f2py_ext/__init__.py,[u'2'],1,1, -1 +1 ;,;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/tests/f2py_ext/setup.py,[u'2'],1,1," -1,5 +1,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/tests/f2py_ext/tests/test_fib2.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/tests/f2py_f90_ext/__init__.py,[u'2'],1,1, -1 +1 ;,;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/tests/f2py_f90_ext/setup.py,[u'2'],1,1," -1,5 +1,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,.../distutils/tests/f2py_f90_ext/tests/test_foo.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/tests/gen_ext/__init__.py,[u'2'],1,1, -1 +1 ;,;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/tests/gen_ext/setup.py,[u'2'],1,1," -1,5 +1,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/tests/gen_ext/tests/test_fib3.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/tests/pyrex_ext/__init__.py,[u'2'],1,1, -1 +1 ;,;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/tests/pyrex_ext/setup.py,[u'2'],1,1," -1,5 +1,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,.../distutils/tests/pyrex_ext/tests/test_primes.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/tests/setup.py,[u'2'],1,1," -1,5 +1,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/tests/swig_ext/__init__.py,[u'2'],1,1, -1 +1 ;,;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/tests/swig_ext/setup.py,[u'2'],1,1," -1,5 +1,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,.../distutils/tests/swig_ext/tests/test_example.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,.../tests/swig_ext/tests/test_example2.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/tests/test_exec_command.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/tests/test_fcompiler_gnu.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/tests/test_fcompiler_intel.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/tests/test_misc_util.py,[u'2'],1,1," -1,5 +1,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/tests/test_npy_pkg_config.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/distutils/unixccompiler.py,[u'2'],1,1," -2,7 +2,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/doc/__init__.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/doc/basics.py,[u'2'],1,1," -136,5 +136,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/doc/broadcasting.py,[u'2'],1,1," -175,5 +175,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/doc/byteswapping.py,[u'2'],1,1," -135,5 +135,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/doc/constants.py,[u'2'],1,1," -10,7 +10,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/doc/creation.py,[u'2'],1,1," -141,5 +141,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/doc/glossary.py,[u'2'],1,1," -415,5 +415,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/doc/howtofind.py,[u'2'],1,1," -7,5 +7,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/doc/indexing.py,[u'2'],1,1," -405,5 +405,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/doc/internals.py,[u'2'],1,1," -160,5 +160,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/doc/io.py,[u'2'],1,1," -7,5 +7,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/doc/jargon.py,[u'2'],1,1," -7,5 +7,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/doc/methods_vs_functions.py,[u'2'],1,1," -7,5 +7,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/doc/misc.py,[u'2'],1,1," -226,5 +226,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/doc/performance.py,[u'2'],1,1," -7,5 +7,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/doc/structured_arrays.py,[u'2'],1,1," -221,5 +221,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/doc/subclassing.py,[u'2'],1,1," -557,5 +557,5 ;","def __array_wrap__(self, arr, context=None);"
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/doc/ufuncs.py,[u'2'],1,1," -135,5 +135,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/dual.py,[u'2'],1,1," -10,7 +10,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/f2py/__init__.py,[u'2'],1,1," -1,5 +1,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/f2py/__version__.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/f2py/auxfuncs.py,[u'2'],1,1," -14,7 +14,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/f2py/capi_maps.py,[u'2'],1,1," -11,7 +11,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/f2py/cb_rules.py,[u'2'],1,1," -13,7 +13,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/f2py/cfuncs.py,[u'4'],1,1," -14,7 +14,7 ; -1214,7 +1214,7 ;",;def get_needs();
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/f2py/common_rules.py,[u'2'],1,1," -13,7 +13,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/f2py/crackfortran.py,[u'10'],1,1," -138,7 +138,7 ; -922,7 +922,7 ; -1158,7 +1158,7 ; -1182,7 +1182,7 ; -2046,7 +2046,7 ;",";def analyzeline(m,case,line);def analyzeline(m,case,line);def analyzeline(m,case,line);def get_parameters(vars, global_params={});"
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/f2py/diagnose.py,[u'136'],10,11," -1,43 +1,43 ; -48,102 +48,102 ;",;def run();
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/f2py/doc/collectinput.py,[u'14'],1,2," -19,7 +19,7 ; -68,16 +68,16 ;",;;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/f2py/docs/pytest.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/f2py/docs/usersguide/setup_example.py,[u'2'],1,1," -1,5 +1,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/f2py/f2py2e.py,[u'10'],1,1," -14,7 +14,7 ; -212,7 +212,7 ; -242,7 +242,7 ; -477,7 +477,7 ; -533,7 +533,7 ;",;def scaninputline(inputline);def scaninputline(inputline);def run_compile();def run_compile();
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/f2py/f2py_testing.py,[u'14'],1,2," -1,4 +1,4 ; -34,13 +34,13 ;",";def run(runtest,test_functions,repeat=1);"
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/f2py/f90mod_rules.py,[u'4'],1,1," -13,7 +13,7 ; -171,7 +171,7 ;",";def iadd(line,s=ihooks): s[0] = '%s\n%s'%(s[0],line;"
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/f2py/func2subr.py,[u'2'],1,1," -13,7 +13,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/f2py/info.py,[u'2'],1,1," -1,6 +1,6 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/f2py/rules.py,[u'2'],1,1," -50,7 +50,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/f2py/setup.py,[u'2'],1,1," -16,7 +16,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/f2py/tests/test_array_from_pyobj.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/f2py/tests/test_assumed_shape.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/f2py/tests/test_callback.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/f2py/tests/test_kind.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/f2py/tests/test_mixed.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/f2py/tests/test_return_character.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/f2py/tests/test_return_complex.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/f2py/tests/test_return_integer.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/f2py/tests/test_return_logical.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/f2py/tests/test_return_real.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/f2py/tests/test_size.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/f2py/tests/util.py,[u'2'],1,1," -5,7 +5,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/f2py/use_rules.py,[u'4'],1,1," -15,7 +15,7 ; -104,6 +104,6 ;",";def buildusevar(name,realname,vars,usemodulename);"
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/fft/__init__.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/fft/fftpack.py,[u'2'],1,1," -30,7 +30,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/fft/helper.py,[u'2'],1,1," -2,7 +2,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/fft/info.py,[u'2'],1,1," -174,6 +174,6 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/fft/setup.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/fft/tests/test_fftpack.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/fft/tests/test_helper.py,[u'2'],1,1," -4,7 +4,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/__init__.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/_datasource.py,[u'2'],1,1," -31,7 +31,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/_iotools.py,[u'2'],1,1," -1,7 +1,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/arraypad.py,[u'2'],1,1," -3,7 +3,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/arraysetops.py,[u'2'],1,1," -24,7 +24,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/arrayterator.py,[u'2'],1,1," -7,7 +7,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/financial.py,[u'2'],1,1," -8,7 +8,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/format.py,[u'2'],1,1," -134,7 +134,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/function_base.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/index_tricks.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/info.py,[u'2'],1,1," -145,7 +145,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/npyio.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/polynomial.py,[u'2'],1,1," -2,7 +2,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/recfunctions.py,[u'2'],1,1," -5,7 +5,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/scimath.py,[u'2'],1,1," -15,7 +15,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/setup.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/shape_base.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/stride_tricks.py,[u'2'],1,1," -5,7 +5,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/tests/test__datasource.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/tests/test__iotools.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/tests/test_arraypad.py,[u'2'],1,1," -1,7 +1,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/tests/test_arraysetops.py,[u'2'],1,1," -1,7 +1,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/tests/test_arrayterator.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/tests/test_financial.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/tests/test_format.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/tests/test_function_base.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/tests/test_index_tricks.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/tests/test_io.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/tests/test_polynomial.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/tests/test_recfunctions.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/tests/test_regression.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/tests/test_shape_base.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/tests/test_stride_tricks.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/tests/test_twodim_base.py,[u'2'],1,1," -1,7 +1,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/tests/test_type_check.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/tests/test_ufunclike.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/tests/test_utils.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/twodim_base.py,[u'2'],1,1," -1,7 +1,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/type_check.py,[u'2'],1,1," -1,7 +1,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/ufunclike.py,[u'2'],1,1," -3,7 +3,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/user_array.py,[u'20'],1,2," -4,7 +4,7 ; -205,15 +205,15 ;",";def __getattr__(self,attr);"
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/lib/utils.py,[u'60'],4,5," -1,4 +1,4 ; -393,15 +393,15 ; -528,19 +528,19 ; -551,8 +551,8 ; -572,28 +572,28 ; -612,14 +612,14 ; -636,11 +636,11 ; -684,10 +684,10 ; -823,7 +823,7 ;",";def who(vardict=None);def info(object=None,maxwidth=76,output=sys.stdout,toplevel='numpy');def info(object=None,maxwidth=76,output=sys.stdout,toplevel='numpy');def info(object=None,maxwidth=76,output=sys.stdout,toplevel='numpy');def info(object=None,maxwidth=76,output=sys.stdout,toplevel='numpy');def info(object=None,maxwidth=76,output=sys.stdout,toplevel='numpy');def interp(x, xp, fp, left=None, right=None);def relevance_value(a);"
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/linalg/__init__.py,[u'2'],1,1," -42,7 +42,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/linalg/info.py,[u'2'],1,1," -32,6 +32,6 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/linalg/lapack_lite/clapack_scrub.py,[u'4'],1,1," -1,5 +1,5 ; -252,7 +252,7 ;",";def scrubSource(source, nsteps=None, verbose=False);"
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/linalg/lapack_lite/fortran.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/linalg/lapack_lite/make_lite.py,[u'14'],1,2," -1,5 +1,5 ; -156,9 +156,9 ; -236,8 +236,8 ; -249,7 +249,7 ; -257,7 +257,7 ;",";def allRoutinesByType(self, typename);def scrubF2CSource(c_file);def main();def main();"
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/linalg/linalg.py,[u'2'],1,1," -8,7 +8,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/linalg/setup.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/linalg/tests/test_build.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/linalg/tests/test_linalg.py,[u'2'],1,1," -1,6 +1,6 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/linalg/tests/test_regression.py,[u'2'],1,1," -1,6 +1,6 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/ma/__init__.py,[u'2'],1,1," -36,7 +36,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/ma/bench.py,[u'42'],3,4," -1,6 +1,6 ; -42,7 +42,7 ; -51,10 +51,10 ; -62,24 +62,24 ; -90,12 +90,12 ; -149,18 +149,18 ;",";;def timer(s, v='', nloop=500, nrep=3);def timer(s, v='', nloop=500, nrep=3);def compare_functions_2v(func, nloop=500, test=True;def compare_functions_2v(func, nloop=500, test=True;"
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/ma/core.py,[u'2'],1,1," -20,7 +20,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/ma/extras.py,[u'2'],1,1," -8,7 +8,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/ma/mrecords.py,[u'2'],1,1," -8,7 +8,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/ma/setup.py,[u'2'],1,1," -1,5 +1,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/ma/tests/test_core.py,[u'2'],1,1," -4,7 +4,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/ma/tests/test_extras.py,[u'2'],1,1," -7,7 +7,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/ma/tests/test_mrecords.py,[u'2'],1,1," -5,7 +5,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/ma/tests/test_old_ma.py,[u'6'],1,1," -1,4 +1,4 ; -15,10 +15,10 ;",;;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/ma/tests/test_regression.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/ma/tests/test_subclassing.py,[u'2'],1,1," -6,7 +6,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/ma/testutils.py,[u'2'],1,1," -5,7 +5,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/ma/timer_comparison.py,[u'8'],1,1," -1,4 +1,4 ; -452,9 +452,9 ;",;def test_A(self);
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/ma/version.py,[u'2'],1,1," -1,7 +1,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/matlib.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/matrixlib/__init__.py,[u'2'],1,1," -1,7 +1,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/matrixlib/defmatrix.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/matrixlib/setup.py,[u'2'],1,1," -1,5 +1,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/matrixlib/tests/test_defmatrix.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/matrixlib/tests/test_multiarray.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/matrixlib/tests/test_numeric.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/matrixlib/tests/test_regression.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/numarray/__init__.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/numarray/alter_code1.py,[u'2'],1,1," -52,7 +52,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/numarray/alter_code2.py,[u'2'],1,1," -5,7 +5,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/numarray/compat.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/numarray/convolve.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/numarray/fft.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/numarray/functions.py,[u'38'],3,3," -1,4 +1,4 ; -362,47 +362,47 ;",";def info(obj, output=sys.stdout, numpy=0);"
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/numarray/image.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/numarray/linear_algebra.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/numarray/ma.py,[u'2'],1,1," -1,3 +1,3 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/numarray/matrix.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/numarray/mlab.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/numarray/nd_image.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/numarray/numerictypes.py,[u'2'],1,1," -27,7 +27,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/numarray/random_array.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/numarray/session.py,[u'6'],1,1," -72,7 +72,7 ; -126,8 +126,8 ;",;def _callers_modules();
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/numarray/setup.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/numarray/ufuncs.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/numarray/util.py,[u'10'],1,1," -1,4 +1,4 ; -23,22 +23,22 ;",";def handleError(errorStatus, sourcemsg);"
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/oldnumeric/__init__.py,[u'2'],1,1," -1,7 +1,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/oldnumeric/alter_code1.py,[u'2'],1,1," -29,7 +29,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/oldnumeric/alter_code2.py,[u'2'],1,1," -19,7 +19,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/oldnumeric/array_printer.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/oldnumeric/arrayfns.py,[u'2'],1,1," -1,7 +1,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/oldnumeric/compat.py,[u'2'],1,1," -1,7 +1,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/oldnumeric/fft.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/oldnumeric/fix_default_axis.py,[u'4'],1,1," -34,7 +34,7 ; -261,7 +261,7 ;",";def convertfile(filename, import_change=False);"
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/oldnumeric/functions.py,[u'2'],1,1," -1,7 +1,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/oldnumeric/linear_algebra.py,[u'2'],1,1," -6,7 +6,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/oldnumeric/ma.py,[u'2'],1,1," -9,7 +9,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/oldnumeric/matrix.py,[u'2'],1,1," -1,7 +1,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/oldnumeric/misc.py,[u'2'],1,1," -1,7 +1,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/oldnumeric/mlab.py,[u'2'],1,1," -1,7 +1,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/oldnumeric/precision.py,[u'2'],1,1," -6,7 +6,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/oldnumeric/random_array.py,[u'56'],4,5," -1,7 +1,7 ; -192,12 +192,12 ; -205,25 +205,25 ; -233,19 +233,19 ; -256,14 +256,14 ;",";def mean_var_test(x, type, mean, var, skew=[]);def test();def test();def test();"
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/oldnumeric/rng.py,[u'2'],1,1," -4,7 +4,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/oldnumeric/rng_stats.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/oldnumeric/setup.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/oldnumeric/tests/test_oldnumeric.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/oldnumeric/tests/test_regression.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/oldnumeric/typeconv.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/oldnumeric/ufuncs.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/oldnumeric/user_array.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/polynomial/__init__.py,[u'2'],1,1," -13,7 +13,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/polynomial/chebyshev.py,[u'2'],1,1," -85,7 +85,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/polynomial/hermite.py,[u'2'],1,1," -57,7 +57,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/polynomial/hermite_e.py,[u'2'],1,1," -57,7 +57,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/polynomial/laguerre.py,[u'2'],1,1," -57,7 +57,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/polynomial/legendre.py,[u'2'],1,1," -81,7 +81,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/polynomial/polynomial.py,[u'2'],1,1," -52,7 +52,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/polynomial/polytemplate.py,[u'4'],1,1," -9,13 +9,13 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/polynomial/polyutils.py,[u'2'],1,1," -31,7 +31,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/polynomial/setup.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/polynomial/tests/test_chebyshev.py,[u'2'],1,1," -1,7 +1,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/polynomial/tests/test_classes.py,[u'2'],1,1," -3,7 +3,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/polynomial/tests/test_hermite.py,[u'2'],1,1," -1,7 +1,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/polynomial/tests/test_hermite_e.py,[u'2'],1,1," -1,7 +1,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/polynomial/tests/test_laguerre.py,[u'2'],1,1," -1,7 +1,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/polynomial/tests/test_legendre.py,[u'2'],1,1," -1,7 +1,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/polynomial/tests/test_polynomial.py,[u'2'],1,1," -1,7 +1,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/polynomial/tests/test_polyutils.py,[u'2'],1,1," -1,7 +1,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/polynomial/tests/test_printing.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/random/__init__.py,[u'2'],1,1," -86,7 +86,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/random/info.py,[u'2'],1,1," -82,7 +82,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/random/mtrand/generate_mtrand_c.py,[u'7'],1,1," -1,5 +1,5 ; -33,9 +33,8 ;",;;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/random/setup.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/random/tests/test_random.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/random/tests/test_regression.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/setup.py,[u'2'],1,1," -1,5 +1,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/testing/__init__.py,[u'2'],1,1," -5,7 +5,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/testing/decorators.py,[u'2'],1,1," -13,7 +13,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/testing/noseclasses.py,[u'2'],1,1," -4,7 +4,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/testing/nosetester.py,[u'20'],1,2," -4,7 +4,7 ; -195,19 +195,19 ; -335,9 +335,9 ; -437,7 +437,7 ;",";def _show_system_info(self);def test(self, label='fast', verbose=1, extra_argv=None;def bench(self, label='fast', verbose=1, extra_argv=None);"
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/testing/nulltester.py,[u'2'],1,1," -6,7 +6,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/testing/numpytest.py,[u'4'],1,1," -1,4 +1,4 ; -46,7 +46,7 ;",;def importall(package);
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/testing/print_coercion_tables.py,[u'52'],4,4," -2,7 +2,7 ; -20,26 +20,26 ; -65,25 +65,25 ;",";def __radd__(self, other);def print_coercion_table(ntypes, inputfirstvalue, inputsecondvalue, firstarray;"
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/testing/setup.py,[u'2'],1,1," -1,5 +1,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/testing/tests/test_decorators.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/testing/tests/test_doctesting.py,[u'2'],1,1," -1,7 +1,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/testing/tests/test_utils.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/testing/utils.py,[u'2'],1,1," -2,7 +2,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/tests/test_ctypeslib.py,[u'8'],1,1," -1,4 +1,4 ; -23,7 +23,7 ; -36,11 +36,11 ;",;def test_basic(self);def test_basic2(self);
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,numpy/tests/test_matlib.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,pavement.py,[u'2'],1,1," -55,7 +55,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,setup.py,[u'2'],1,1," -13,7 +13,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,setupegg.py,[u'2'],1,1," -12,7 +12,7 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,tools/allocation_tracking/setup.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,tools/allocation_tracking/track_allocations.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,tools/c_coverage/c_coverage_report.py,[u'6'],1,1," -4,7 +4,7 ; -21,7 +21,7 ; -179,6 +179,6 ;",";;def collect_stats(files, fd, pattern);"
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,tools/commitstats.py,[u'8'],1,1," -1,4 +1,4 ; -35,10 +35,10 ;",";def get_count(filename, repo);"
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,tools/osxbuild/build.py,[u'18'],1,2," -10,7 +10,7 ; -26,9 +26,9 ; -39,12 +39,12 ; -60,19 +60,19 ;",;;def remove_dirs();def copy_readme();
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,tools/osxbuild/install_and_test.py,[u'12'],1,1," -2,7 +2,7 ; -16,7 +16,7 ; -34,9 +34,9 ; -44,9 +44,9 ;",;;def color_print(msg);def color_print(msg);
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,tools/py3tool.py,[u'3'],1,1," -18,7 +18,7 ; -80,6 +80,7 ;",;;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,tools/test-installed-numpy.py,[u'2'],1,1," -1,5 +1,5 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,tools/win32build/build.py,[u'4'],1,1," -8,7 +8,7 ; -51,7 +51,7 ;",;def write_site_cfg(arch);
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,tools/win32build/doall.py,[u'2'],1,1," -1,4 +1,4 ;",;
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,tools/win32build/misc/x86analysis.py,[u'16'],1,2," -5,7 +5,7 ; -139,10 +139,10 ; -151,10 +151,10 ;",;def main();def analyse(filename);
3203,1,bb726ca, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 13:25:26 -0600",ct: [PATCH] 2to3: Apply `print` fixer.Add `print_function` to all `from __future__ import ...` statementsand use the python3 print function syntax everywhere.Closes #3078.,422,888,894,tools/win32build/prepare_bootstrap.py,[u'2'],1,1," -1,4 +1,4 ;",;
3202,1,77e09f1, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 10:02:23 -0600",ct: [PATCH] MAINT: Cleanup some imports involving reduce.Because reduce has been available in functools since Python 2.6 wecan get rid of the version checks we currently have before we importit.Also removes some reduce related skips in tools/py3tool.py. We werealready skipping the reduce fixer so this has no effect other thancleaning up the code.,11,13,32,numpy/core/arrayprint.py,[u'3'],1,2," -16,6 +16,7 ; -34,8 +35,6 ;",";def product(x, y): return x*;"
3202,1,77e09f1, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 10:02:23 -0600",ct: [PATCH] MAINT: Cleanup some imports involving reduce.Because reduce has been available in functools since Python 2.6 wecan get rid of the version checks we currently have before we importit.Also removes some reduce related skips in tools/py3tool.py. We werealready skipping the reduce fixer so this has no effect other thancleaning up the code.,11,13,32,numpy/distutils/system_info.py,[u'3'],1,2," -118,6 +118,7 ; -137,8 +138,6 ;",;;
3202,1,77e09f1, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 10:02:23 -0600",ct: [PATCH] MAINT: Cleanup some imports involving reduce.Because reduce has been available in functools since Python 2.6 wecan get rid of the version checks we currently have before we importit.Also removes some reduce related skips in tools/py3tool.py. We werealready skipping the reduce fixer so this has no effect other thancleaning up the code.,11,13,32,numpy/f2py/auxfuncs.py,[u'3'],1,2," -24,6 +24,7 ; -35,8 +36,6 ;",;;
3202,1,77e09f1, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 10:02:23 -0600",ct: [PATCH] MAINT: Cleanup some imports involving reduce.Because reduce has been available in functools since Python 2.6 wecan get rid of the version checks we currently have before we importit.Also removes some reduce related skips in tools/py3tool.py. We werealready skipping the reduce fixer so this has no effect other thancleaning up the code.,11,13,32,numpy/lib/arrayterator.py,[u'3'],1,2," -14,8 +14,7 ;",;
3202,1,77e09f1, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 10:02:23 -0600",ct: [PATCH] MAINT: Cleanup some imports involving reduce.Because reduce has been available in functools since Python 2.6 wecan get rid of the version checks we currently have before we importit.Also removes some reduce related skips in tools/py3tool.py. We werealready skipping the reduce fixer so this has no effect other thancleaning up the code.,11,13,32,numpy/lib/tests/test_arrayterator.py,[u'4'],1,3," -1,15 +1,13 ;",;
3202,1,77e09f1, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 10:02:23 -0600",ct: [PATCH] MAINT: Cleanup some imports involving reduce.Because reduce has been available in functools since Python 2.6 wecan get rid of the version checks we currently have before we importit.Also removes some reduce related skips in tools/py3tool.py. We werealready skipping the reduce fixer so this has no effect other thancleaning up the code.,11,13,32,numpy/ma/core.py,[u'2'],1,1," -24,6 +24,7 ; -35,7 +36,6 ;",;;
3202,1,77e09f1, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 10:02:23 -0600",ct: [PATCH] MAINT: Cleanup some imports involving reduce.Because reduce has been available in functools since Python 2.6 wecan get rid of the version checks we currently have before we importit.Also removes some reduce related skips in tools/py3tool.py. We werealready skipping the reduce fixer so this has no effect other thancleaning up the code.,11,13,32,numpy/ma/tests/test_core.py,[u'3'],1,2," -12,6 +12,7 ; -24,8 +25,6 ;",;;
3202,1,77e09f1, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 10:02:23 -0600",ct: [PATCH] MAINT: Cleanup some imports involving reduce.Because reduce has been available in functools since Python 2.6 wecan get rid of the version checks we currently have before we importit.Also removes some reduce related skips in tools/py3tool.py. We werealready skipping the reduce fixer so this has no effect other thancleaning up the code.,11,13,32,numpy/ma/tests/test_old_ma.py,[u'8'],4,4," -1,15 +1,15 ;",;
3202,1,77e09f1, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 10:02:23 -0600",ct: [PATCH] MAINT: Cleanup some imports involving reduce.Because reduce has been available in functools since Python 2.6 wecan get rid of the version checks we currently have before we importit.Also removes some reduce related skips in tools/py3tool.py. We werealready skipping the reduce fixer so this has no effect other thancleaning up the code.,11,13,32,numpy/ma/timer_comparison.py,[u'4'],1,3," -1,8 +1,8 ; -13,8 +13,6 ;",;;
3202,1,77e09f1, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 10:02:23 -0600",ct: [PATCH] MAINT: Cleanup some imports involving reduce.Because reduce has been available in functools since Python 2.6 wecan get rid of the version checks we currently have before we importit.Also removes some reduce related skips in tools/py3tool.py. We werealready skipping the reduce fixer so this has no effect other thancleaning up the code.,11,13,32,numpy/oldnumeric/ma.py,[u'3'],1,2," -20,9 +20,8 ;",;
3202,1,77e09f1, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 10:02:23 -0600",ct: [PATCH] MAINT: Cleanup some imports involving reduce.Because reduce has been available in functools since Python 2.6 wecan get rid of the version checks we currently have before we importit.Also removes some reduce related skips in tools/py3tool.py. We werealready skipping the reduce fixer so this has no effect other thancleaning up the code.,11,13,32,tools/py3tool.py,[u'9'],0,9," -40,15 +40,6 ;",;
3201,2,8d48c8f, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 08:54:25 -0600","ct: [PATCH 1/2] 2to3: Apply `imports2` fixer.No files were changed by this fixer, so add it to the list offixers to be skipped by 2to3.Closes #3181.",1,2,0,tools/py3tool.py,[u'3'],2,1," -78,7 +78,8 ;",;
3201,2,37d6468, Charles Harris <charlesr.harris@gmail.com>," Sat, 6 Apr 2013 09:05:45 -0600",ct: [PATCH 2/2] MAINT: Append comma to last item tools/py3tool.py skipped fixers.Makes it easier to put in the next fixer.,1,0,0,tools/py3tool.py,[u'2'],1,1," -79,7 +79,7 ;",;
3200,1,129ae08," ""Nathaniel J. Smith"" <njs@pobox.com>"," Sat, 6 Apr 2013 14:46:20 +0100","ct: [PATCH] [BLD] Run 'full' test suite on Travis, including 'slow' testsThere's no reason *not* to run the full test suite on Travis, so longas we fit in under the time limit. And no way to find out if we fitunder the time limit except to try ;-).",1,0,0,.travis.yml,[u'2'],1,1," -45,7 +45,7 ;",script;
3199,4,009d166, Paul Ivanov <pi@berkeley.edu>," Fri, 5 Apr 2013 16:44:27 -0700",ct: [PATCH 1/4] DOC: spell out behaviour of seterr for int arrays,1,7,2,numpy/core/numeric.py,[u'9'],7,2," -2194,8 +2194,10 ; -2259,6 +2261,9 ;","def seterr(all=None, divide=None, over=None, under=None, invalid=None);def seterr(all=None, divide=None, over=None, under=None, invalid=None);"
3199,4,74740c7, Paul Ivanov <pi@berkeley.edu>," Fri, 5 Apr 2013 19:22:18 -0700",ct: [PATCH 2/4] TST: added tests for seterr behavior with integers,1,51,0,numpy/core/tests/test_numeric.py,[u'51'],40,0," -346,6 +346,57 ;",def test_floating_exceptions(self);
3199,4,2b18fc4, Paul Ivanov <pi@berkeley.edu>," Fri, 5 Apr 2013 19:23:22 -0700",ct: [PATCH 3/4] ENH: more detailed error messages,1,5,2,numpy/core/tests/test_numeric.py,[u'7'],5,2," -267,13 +267,16 ;",def test_divide_err(self);
3199,4,47c3de6, Paul Ivanov <pi@berkeley.edu>," Fri, 5 Apr 2013 19:33:52 -0700",ct: [PATCH 4/4] FIX: previously referred to incorrect gh issue,1,0,0,numpy/core/tests/test_numeric.py,[u'2'],1,1," -367,7 +367,7 ;","def grab_int_assertions(self, min, max, one);"
3198,2,cfc78fa, Kan Huang <huangkandiy@gmail.com>," Thu, 4 Apr 2013 11:19:41 -0400","ct: [PATCH 1/2] BUG: solve issue #2649.The issue is similar to #473, multipliaction of a matrix and acolumn-vector returns a row-vector. That solution is to convert 1darray, list, tuple to matrix before multiplying. What causes #2649 is thatmatrix will use dot function which is inherited from ndarray. My solution isto use __mul__ function instead. It will throw an error when user try tomultiply a squre matrix and a 1d array.",1,3,0,numpy/matrixlib/defmatrix.py,[u'3'],3,0," -334,6 +334,8 ; -385,6 +387,7 ;","def __mul__(self, other);def _collapse(self, axis);"
3198,2,a86fe7c, Kan Huang <huangkandiy@gmail.com>," Fri, 5 Apr 2013 15:03:43 -0400","ct: [PATCH 2/2] BUG: fix 2649.The issue is caused by dot function inherited from ndarray. We can use__mul__ instead, which has solved the 1-D vector problem in #473. Onetest is added.",2,27,2,numpy/matrixlib/defmatrix.py,[u'28'],26,2," -334,8 +334,6 ; -388,6 +386,31 ; -448,6 +471,7 ;","def __mul__(self, other);def _collapse(self, axis);def sum(self, axis=None, dtype=None, out=None);"
3198,2,a86fe7c, Kan Huang <huangkandiy@gmail.com>," Fri, 5 Apr 2013 15:03:43 -0400","ct: [PATCH 2/2] BUG: fix 2649.The issue is caused by dot function inherited from ndarray. We can use__mul__ instead, which has solved the 1-D vector problem in #473. Onetest is added.",2,27,2,numpy/matrixlib/tests/test_defmatrix.py,[u'1'],1,0," -224,6 +224,7 ;",def test_basic(self);
3197,1,6869053, Charles Harris <charlesr.harris@gmail.com>," Thu, 4 Apr 2013 19:18:01 -0600",ct: [PATCH] MAINT: Fix release notes formatting.Sphinx was complaining about the title/heading hierarchy. Thisfixes those complaints.,8,101,105,doc/release/1.3.0-notes.rst,[u'5'],2,1," -1,6 +1,5 ; -180,7 +179,7 ;",;The following functions have been added to the multiarray C API;
3197,1,6869053, Charles Harris <charlesr.harris@gmail.com>," Thu, 4 Apr 2013 19:18:01 -0600",ct: [PATCH] MAINT: Fix release notes formatting.Sphinx was complaining about the title/heading hierarchy. Thisfixes those complaints.,8,101,105,doc/release/1.4.0-notes.rst,[u'3'],1,1," -1,6 +1,5 ;",;
3197,1,6869053, Charles Harris <charlesr.harris@gmail.com>," Thu, 4 Apr 2013 19:18:01 -0600",ct: [PATCH] MAINT: Fix release notes formatting.Sphinx was complaining about the title/heading hierarchy. Thisfixes those complaints.,8,101,105,doc/release/1.5.0-notes.rst,[u'25'],7,8," -1,18 +1,17 ; -21,7 +20,7 ; -33,7 +32,7 ; -50,7 +49,7 ; -62,7 +61,7 ; -70,7 +69,7 ; -85,7 +84,7 ; -101,7 +100,7 ; -119,13 +118,13 ;",";at `<http://bitbucket.org/jpellerin/nose3/>`_ however;New feature;turned off in the standard way;instead of the longer alternativ;small/large values, the result is often more accurate than that obtaine;Change;polynomial.polynomia;polynomial.chebyshe;"
3197,1,6869053, Charles Harris <charlesr.harris@gmail.com>," Thu, 4 Apr 2013 19:18:01 -0600",ct: [PATCH] MAINT: Fix release notes formatting.Sphinx was complaining about the title/heading hierarchy. Thisfixes those complaints.,8,101,105,doc/release/1.6.0-notes.rst,[u'31'],9,9," -1,6 +1,5 ; -21,7 +20,7 ; -30,7 +29,7 ; -43,7 +42,7 ; -54,7 +53,7 ; -68,7 +67,7 ; -91,14 +90,14 ; -106,7 +105,7 ; -114,7 +113,7 ; -138,7 +137,7 ; -146,21 +145,21 ; -171,7 +170,7 ;",;New feature;half-float API;iterator;of values without playing unnatural tricks with the domain;that use two argument ``size`` function in dimension specifications;Change;compiler on Linux;a more convenient way to compare floating point arrays tha;Removed feature;removed;Several deprecated items were removed from the ``numpy.ma`` module:;
3197,1,6869053, Charles Harris <charlesr.harris@gmail.com>," Thu, 4 Apr 2013 19:18:01 -0600",ct: [PATCH] MAINT: Fix release notes formatting.Sphinx was complaining about the title/heading hierarchy. Thisfixes those complaints.,8,101,105,doc/release/1.6.1-notes.rst,[u'8'],2,3," -1,12 +1,11 ; -19,4 +18,3 ;",;Issues fixe;
3197,1,6869053, Charles Harris <charlesr.harris@gmail.com>," Thu, 4 Apr 2013 19:18:01 -0600",ct: [PATCH] MAINT: Fix release notes formatting.Sphinx was complaining about the title/heading hierarchy. Thisfixes those complaints.,8,101,105,doc/release/1.6.2-notes.rst,[u'76'],23,22," -1,14 +1,15 ; -29,8 +30,8 ; -42,33 +43,8 ; -78,13 +54,39 ;",;release.  It also includes a number of documentation and build improvements;release.  It also includes a number of documentation and build improvements;BLD:   raise a clearer warning in case of building without cleaning up firs;
3197,1,6869053, Charles Harris <charlesr.harris@gmail.com>," Thu, 4 Apr 2013 19:18:01 -0600",ct: [PATCH] MAINT: Fix release notes formatting.Sphinx was complaining about the title/heading hierarchy. Thisfixes those complaints.,8,101,105,doc/release/1.7.0-notes.rst,[u'33'],10,10," -1,6 +1,5 ; -67,7 +66,7 ; -76,7 +75,7 ; -84,7 +83,7 ; -105,26 +104,26 ; -135,7 +134,7 ; -149,18 +148,18 ; -173,7 +172,7 ; -214,7 +213,7 ; -256,7 +255,7 ; -269,7 +268,7 ;",";New feature;axis=# to pick a single axis.  Now, one can also say axis=(#,#) to pick ;option is set, the reduction result will broadcast correctly to th;The notes in `doc/source/reference/arrays.datetime.rst <https://github.com/nump;pseudo-Vandermonde matrices that can be used for fitting;Current modes are ``constant``, ``edge``, ``linear_ramp``, ``maximum``;Change;and so the collapsing process only continues so long as it encounters othe;Deprecation;Versions of numpy < 1.7.0 ignored axis argument value for 1D arrays. W;"
3197,1,6869053, Charles Harris <charlesr.harris@gmail.com>," Thu, 4 Apr 2013 19:18:01 -0600",ct: [PATCH] MAINT: Fix release notes formatting.Sphinx was complaining about the title/heading hierarchy. Thisfixes those complaints.,8,101,105,doc/release/1.8.0-notes.rst,[u'25'],8,7," -1,6 +1,5 ; -44,15 +43,15 ; -68,17 +67,22 ; -86,11 +90,8 ;",";usage is deprecated. This does not effect the ``NpyIter_New`` o;deprecated, there isn't much use for it and it isn't any more efficien;Deprecation;"
3196,1,cfc78fa, Kan Huang <huangkandiy@gmail.com>," Thu, 4 Apr 2013 11:19:41 -0400","ct: [PATCH] BUG: solve issue #2649.The issue is similar to #473, multipliaction of a matrix and acolumn-vector returns a row-vector. That solution is to convert 1darray, list, tuple to matrix before multiplying. What causes #2649 is thatmatrix will use dot function which is inherited from ndarray. My solution isto use __mul__ function instead. It will throw an error when user try tomultiply a squre matrix and a 1d array.",1,3,0,numpy/matrixlib/defmatrix.py,[u'3'],3,0," -334,6 +334,8 ; -385,6 +387,7 ;","def __mul__(self, other);def _collapse(self, axis);"
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,doc/cdoc/numpyfilter.py,[u'6'],1,1," -13,7 +13,11 ;",;
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,doc/numpybook/runcode.py,[u'6'],1,1," -18,7 +18,7 ; -27,7 +27,7 ; -82,7 +82,7 ;",";;def getnewcodestr(substr, dic);"
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,doc/sphinxext/numpydoc/comment_eater.py,[u'2'],1,1," -4,7 +4,7 ;",;
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,doc/sphinxext/numpydoc/compiler_unparse.py,[u'2'],1,1," -18,7 +18,7 ;",;
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,doc/sphinxext/numpydoc/docscrape.py,[u'2'],1,1," -14,7 +14,7 ;",;
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,doc/sphinxext/numpydoc/plot_directive.py,[u'2'],1,1," -82,7 +82,7 ;",;
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,numpy/__init__.py,[u'9'],1,1," -106,6 +106,8 ; -160,8 +162,11 ;",";def pkgload(*packages, **options);"
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,numpy/core/__init__.py,[u'6'],1,1," -62,10 +62,10 ;",def _ufunc_reduce(func);
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,numpy/core/numeric.py,[u'35'],2,1," -1,5 +1,22 ; -24,19 +41,10 ; -1861,9 +1869,6 ; -1880,8 +1885,8 ;",";;def base_repr(number, base=2, padding=0);def load(file);"
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,numpy/core/numerictypes.py,[u'6'],1,1," -98,7 +98,11 ;",;
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,numpy/core/records.py,[u'4'],1,1," -595,8 +595,8 ;","def fromrecords(recList, dtype=None, shape=None, formats=None, names=None;"
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,numpy/core/setup.py,[u'26'],1,1," -4,12 +4,14 ; -22,11 +24,9 ; -37,25 +37,25 ;",;;def __init__(self);
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,numpy/core/tests/test_print.py,[u'6'],1,1," -6,7 +6,11 ;",;
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,numpy/core/tests/test_regression.py,[u'17'],1,1," -7,8 +7,9 ; -18,10 +19,6 ; -37,7 +34,7 ; -90,7 +87,7 ; -322,7 +319,7 ; -386,7 +383,6 ; -722,10 +718,9 ;",";;def test_mem_empty(self,level=rlevel);def test_negative_nd_indexing(self,level=rlevel);def assign(a, b, c);def test_lexsort(self,level=rlevel);def rs();"
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,numpy/distutils/cpuinfo.py,[u'26'],1,1," -18,10 +18,12 ; -488,25 +490,29 ;",;def __init__(self);
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,numpy/distutils/mingw32ccompiler.py,[u'1'],0,1," -10,7 +10,6 ;",;
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,numpy/distutils/misc_util.py,[u'8'],1,1," -2125,9 +2125,13 ;","def get_info(pkgname, dirs=None);"
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,numpy/distutils/npy_pkg_config.py,[u'7'],1,1," -1,13 +1,14 ;",;
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,numpy/distutils/system_info.py,[u'1'],1,0," -118,6 +118,7 ;",;
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,numpy/distutils/tests/test_exec_command.py,[u'15'],1,1," -2,11 +2,16 ; -62,26 +67,26 ;",;def test_exec_command_stdout();
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,numpy/f2py/__init__.py,[u'2'],1,1," -5,7 +5,7 ;",;
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,numpy/f2py/doc/collectinput.py,[u'8'],1,1," -27,7 +27,11 ; -69,7 +73,7 ;",;;
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,numpy/lib/_datasource.py,[u'12'],1,1," -36,6 +36,7 ; -252,7 +253,10 ; -351,8 +355,10 ;",";def _isurl(self, path);def abspath(self, path);"
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,numpy/lib/_iotools.py,[u'6'],1,1," -8,7 +8,11 ;",;
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,numpy/lib/format.py,[u'11'],1,1," -136,13 +136,16 ; -399,7 +402,7 ; -447,7 +450,7 ;",";def write_array(fp, array, version=(1,0));def read_array(fp);"
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,numpy/lib/npyio.py,[u'18'],1,1," -1,9 +1,5 ; -15,7 +11,6 ; -25,11 +20,18 ; -380,7 +382,7 ;",";;;def load(file, mmap_mode=None);"
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,numpy/lib/tests/test__datasource.py,[u'13'],1,1," -1,17 +1,20 ;",;
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,numpy/lib/tests/test__iotools.py,[u'11'],1,1," -1,22 +1,13 ;",;
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,numpy/lib/tests/test_format.py,[u'48'],2,1," -5,10 +5,7 ; -101,19 +98,19 ; -279,22 +276,15 ; -416,9 +406,9 ; -469,7 +459,7 ; -513,12 +503,12 ; -528,29 +518,29 ; -558,7 +548,7 ;",;;;def teardown_module();def test_memmap_roundtrip();def test_write_version_1_0();def test_bad_magic_args();def test_bad_header();
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,numpy/lib/tests/test_io.py,[u'461'],15,14," -4,31 +4,43 ; -73,7 +85,7 ; -135,7 +147,7 ; -228,95 +240,94 ; -340,29 +351,29 ; -387,15 +398,15 ; -406,8 +417,8 ; -420,23 +431,23 ; -444,8 +455,8 ; -454,8 +465,8 ; -463,16 +474,16 ; -481,14 +492,14 ; -503,16 +514,16 ; -520,7 +531,7 ; -529,7 +540,7 ; -543,7 +554,7 ; -554,8 +565,8 ; -570,12 +581,12 ; -583,23 +594,23 ; -609,29 +620,29 ; -640,8 +651,9 ; -651,8 +663,9 ; -669,7 +682,7 ; -678,15 +691,16 ; -696,8 +710,8 ; -707,8 +721,8 ; -724,13 +738,13 ; -741,7 +755,7 ; -755,36 +769,36 ; -794,7 +808,7 ; -807,19 +821,19 ; -827,9 +841,9 ; -838,9 +852,9 ; -852,7 +866,7 ; -860,7 +874,7 ; -871,7 +885,7 ; -882,7 +896,7 ; -894,7 +908,7 ; -906,7 +920,7 ; -916,7 +930,7 ; -925,7 +939,7 ; -935,26 +949,26 ; -966,11 +980,11 ; -979,7 +993,7 ; -989,12 +1003,12 ; -1004,12 +1018,12 ; -1017,7 +1031,7 ; -1028,7 +1042,7 ; -1038,7 +1052,7 ; -1047,13 +1061,13 ; -1063,7 +1077,7 ; -1075,14 +1089,14 ; -1095,23 +1109,23 ; -1119,9 +1133,9 ; -1131,7 +1145,7 ; -1139,7 +1153,7 ; -1147,7 +1161,7 ; -1156,7 +1170,7 ; -1179,7 +1193,7 ; -1188,7 +1202,7 ; -1196,7 +1210,7 ; -1214,18 +1228,18 ; -1237,7 +1251,7 ; -1245,7 +1259,7 ; -1260,7 +1274,7 ; -1283,7 +1297,7 ; -1307,7 +1321,7 ; -1318,7 +1332,7 ; -1327,7 +1341,7 ; -1335,7 +1349,7 ; -1344,7 +1358,7 ; -1353,7 +1367,7 ; -1363,11 +1377,11 ; -1376,20 +1390,20 ; -1403,17 +1417,17 ; -1423,17 +1437,17 ; -1444,35 +1458,35 ; -1480,7 +1494,7 ; -1491,7 +1505,7 ; -1499,7 +1513,7 ; -1508,7 +1522,7 ; -1537,6 +1551,7 ; -1548,7 +1563,7 ; -1565,9 +1580,9 ; -1581,9 +1596,9 ; -1591,7 +1606,7 ; -1620,7 +1635,7 ;",";def roundtrip(self, save_func, *args, **kwargs);def test_multiple_arrays(self);class TestSaveTxt(TestCase);def test_complex_arrays(self);def _assert_floatstr_lines_equal(actual_lines, expected_lines);def test_record(self);def test_array(self);def test_missing(self);def test_converters_with_usecols(self);def test_comments(self);def test_skiprows(self);def test_usecols(self);def test_fancy_dtype(self);def test_shaped_dtype(self);def test_empty_file(self);def test_empty_file(self);def test_dtype_with_object(self);def test_dtype_with_object(self);def test_universal_newline(self);def test_ndmin_keyword(self);def test_ndmin_keyword(self);def test_ndmin_keyword(self);def test_ndmin_keyword(self);def test_record(self);def test_record_2(self);class TestFromTxt(TestCase);def test_record(self);def test_1D(self);def test_skip_footer(self);def test_skip_footer_with_invalid(self);def test_skip_footer_with_invalid(self);def test_header(self);def test_auto_dtype(self);def test_auto_dtype_uniform(self);def test_names_overwrite(self);def test_names_overwrite(self);def test_commented_header(self);def test_commented_header(self);def test_autonames_and_usecols(self);def test_converters_with_usecols(self);def test_converters_with_usecols_and_names(self);def test_unused_converter(self);def test_invalid_converter(self);def test_tricky_converter_bug1666(self);def test_dtype_with_object(self);def test_dtype_with_object(self);def test_dtype_with_object(self);def test_userconverters_with_explicit_dtype(self);def test_spacedelimiter(self);def test_missing(self);def test_usecols(self);def test_usecols(self);def test_usecols_with_named_columns(self);def test_empty_file(self);def test_empty_file(self);def test_fancy_dtype_alt(self);def test_shaped_dtype(self);def test_user_missing_values(self);def test_user_missing_values(self);def test_user_missing_values(self);def test_user_filling_values(self);def test_withmissing_float(self);def test_with_masked_column_uniform(self);def test_invalid_raise(self);def test_invalid_raise_with_usecols(self);def f(_ret={});def test_inconsistent_dtype(self);def test_default_field_format(self);def test_single_dtype_wo_names(self);def test_single_dtype_w_explicit_names(self);def test_single_dtype_w_implicit_names(self);def test_autostrip(self);def test_replace_space(self);def test_incomplete_names(self);def test_names_with_usecols_bug1636(self);def test_fixed_width_names(self);def test_recfromtxt(self);def test_recfromtxt(self);def test_recfromcsv(self);def test_recfromcsv(self);def test_gft_using_filename(self);def count();def test_gzip_loadtxt();def test_gzip_loadtxt();def test_gzip_loadtxt_from_string();def test_load_refcount();"
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,numpy/lib/tests/test_regression.py,[u'7'],1,1," -1,5 +1,6 ; -202,7 +203,11 ;",;def test_append_fields_dtype_list(self);
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,numpy/lib/tests/test_utils.py,[u'6'],1,1," -1,10 +1,14 ;",;
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,numpy/lib/utils.py,[u'7'],1,1," -848,7 +848,12 ;","def _lookfor_generate_cache(module, import_modules, regenerate);"
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,numpy/linalg/lapack_lite/clapack_scrub.py,[u'4'],1,1," -1,8 +1,8 ;",;
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,numpy/ma/core.py,[u'42'],1,2," -22,6 +22,23 ; -69,23 +86,6 ; -7040,7 +7040,7 ; -7055,7 +7055,7 ; -7079,7 +7079,7 ; -7097,7 +7097,7 ;",";;def dump(a, F);def dumps(a);def load(F);def loads(strg);"
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,numpy/ma/tests/test_core.py,[u'28'],1,1," -10,21 +10,20 ; -369,20 +368,18 ; -390,37 +387,28 ;",;def test_deepcopy(self);def test_pickling_subbaseclass(self);
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,numpy/ma/tests/test_mrecords.py,[u'27'],1,1," -7,30 +7,30 ; -293,11 +293,10 ;",;def test_hardmask(self);
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,numpy/numarray/functions.py,[u'3'],1,1," -25,7 +25,6 ; -44,6 +43,8 ;",;;
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,numpy/oldnumeric/compat.py,[u'25'],1,1," -3,6 +3,17 ; -13,13 +24,6 ; -47,8 +51,7 ; -70,8 +73,7 ; -97,7 +99,6 ;",";;def DumpArray(m, fp);def pickle_array(a);def _LoadArray(fp);"
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,numpy/oldnumeric/misc.py,[u'13'],1,1," -14,18 +14,17 ;",;
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,numpy/testing/utils.py,[u'8'],1,1," -12,6 +12,11 ; -346,8 +351,7 ;",";def print_assert_equal(test_string,actual,desired);"
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,setup.py,[u'6'],1,1," -23,10 +23,10 ;",;
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,tools/py3tool.py,[u'3'],1,1," -77,7 +77,8 ;",;
3191,2,09a52ed, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 17:13:53 -0600","ct: [PATCH 1/2] 2to3: Apply `imports` fixer.The `imports` fixer deals with the standard packages that have beenrenamed, removed, or methods that have moved.cPickle      -- removed, use picklecommands     -- removed, getoutput, getstatusoutput moved to subprocessurlparse     -- removed, urlparse moved to urllib.parsecStringIO    -- removed, use StringIO or io.StringIOcopy_reg     -- renamed copyreg_winreg      -- renamed winregConfigParser -- renamed configparser__builtin__  -- renamed builtinsIn the case of `cPickle`, it is imported as `pickle` when python < 3 andperformance may be a consideration, but otherwise plain old `pickle` isused.Dealing with `StringIO` is a bit tricky. There is an `io.StringIO`function in the `io` module, available since Python 2.6, but it expectsunicode whereas `StringIO.StringIO` expects ascii. The Python 3equivalent is then `io.BytesIO`. What I have done here is used BytesIOfor anything that is emulating a file for testing purposes. That is moreexplicit than using a redefined StringIO as was done before we droppedsupport for Python 2.4 and 2.5.Closes #3180.",44,513,451,tools/win32build/build.py,[u'8'],1,1," -88,8 +88,12 ;","def move_binary(arch, pyver);"
3191,2,4394515, Charles Harris <charlesr.harris@gmail.com>," Tue, 2 Apr 2013 13:47:32 -0600",ct: [PATCH 2/2] BUG: Fix stray '.' in import statement.There was a stray period at the end of an import statement in`doc/cdoc/numpyfilter.py`. Looks like a cut and paste error thatwas fixed elsewhere but escaped there because the module isn'ttested. A search shows that this was the only spot in which theerror was still present.,1,2,2,doc/cdoc/numpyfilter.py,[u'4'],2,2," -17,7 +17,7 ; -47,7 +47,7 ;",;def filter_comment(text);
3188,2,7dad2d3, Alex Ford <fordas@uw.edu>," Mon, 1 Apr 2013 22:52:20 -0700","ct: [PATCH 1/2] Fixing void scalar PyArray_Scalar constructor when *base==null.During call to `PyArray_scalar` a `PyVoidScalarObject` is created, andit's `obval` field set to a newly allocated block of memory of thecorrect item size. With a null `base` member, the subsequent call to`copyswap` can not determine an item size and returns without copying.Adding direct copy of input data if no `base` is provided, as no swap isrequired.Adding regression test for constructor and original pickle repro case.Resolves numpy/numpy#1550.",2,26,0,numpy/core/src/multiarray/scalarapi.c,[u'7'],7,0," -802,6 +802,13 ;","PyArray_Scalar(void *data, PyArray_Descr *descr, PyObject *base;"
3188,2,7dad2d3, Alex Ford <fordas@uw.edu>," Mon, 1 Apr 2013 22:52:20 -0700","ct: [PATCH 1/2] Fixing void scalar PyArray_Scalar constructor when *base==null.During call to `PyArray_scalar` a `PyVoidScalarObject` is created, andit's `obval` field set to a newly allocated block of memory of thecorrect item size. With a null `base` member, the subsequent call to`copyswap` can not determine an item size and returns without copying.Adding direct copy of input data if no `base` is provided, as no swap isrequired.Adding regression test for constructor and original pickle repro case.Resolves numpy/numpy#1550.",2,26,0,numpy/core/tests/test_regression.py,[u'19'],19,0," -1184,6 +1184,25 ;","def test_void_scalar_with_titles(self, level=rlevel);"
3188,2,a0a2e3c, Alex Ford <fordas@uw.edu>," Sat, 6 Apr 2013 11:18:45 -0700",ct: [PATCH 2/2] Resolving void scalar PyArray_Scalar constructor style issues.,2,16,10,numpy/core/src/multiarray/scalarapi.c,[u'12'],7,5," -803,11 +803,13 ;","PyArray_Scalar(void *data, PyArray_Descr *descr, PyObject *base;"
3188,2,a0a2e3c, Alex Ford <fordas@uw.edu>," Sat, 6 Apr 2013 11:18:45 -0700",ct: [PATCH 2/2] Resolving void scalar PyArray_Scalar constructor style issues.,2,16,10,numpy/core/tests/test_regression.py,[u'14'],9,5," -1185,17 +1185,21 ;","def test_void_scalar_with_titles(self, level=rlevel);"
3187,3,a77a7cd, Eric Fode <ericfode@gmail.com>," Thu, 12 Jul 2012 15:35:44 -0400",ct: [PATCH 1/3] First attempt at BF for 2028 and added better tests for scalarmath pow function,2,26,8,numpy/core/src/scalarmathmodule.c.src,[u'19'],13,6," -494,16 +494,25 ; -970,7 +979,7 ; -1130,7 +1139,6 ; -1724,7 +1732,6 ;","half_ctype_remainder(npy_half a, npy_half b, npy_half *out) ;static PyObject ;static PyObject ;get_functions(void;"
3187,3,a77a7cd, Eric Fode <ericfode@gmail.com>," Thu, 12 Jul 2012 15:35:44 -0400",ct: [PATCH 1/3] First attempt at BF for 2028 and added better tests for scalarmath pow function,2,26,8,numpy/core/tests/test_scalarmath.py,[u'15'],13,2," -44,7 +44,7 ; -58,7 +58,18 ;","def test_type_create(self, level=1);def test_large_types(self);"
3187,3,6123625, Eric Fode <ericfode@gmail.com>," Fri, 13 Jul 2012 13:58:13 -0400",ct: [PATCH 2/3] fixed some style problems,2,17,14,numpy/core/src/scalarmathmodule.c.src,[u'16'],8,8," -499,19 +499,19 ;","half_ctype_remainder(npy_half a, npy_half b, npy_half *out) ;"
3187,3,6123625, Eric Fode <ericfode@gmail.com>," Fri, 13 Jul 2012 13:58:13 -0400",ct: [PATCH 2/3] fixed some style problems,2,17,14,numpy/core/tests/test_scalarmath.py,[u'15'],9,6," -59,17 +59,20 ;",def test_large_types(self);
3187,3,8b42156, Eric Fode <ericfode@gmail.com>," Mon, 1 Apr 2013 17:19:07 -0700",ct: [PATCH 3/3] Update scalarmathmodule.c.srcGot rid of some white space in scalarmathmodule.c.src,1,0,0,numpy/core/src/scalarmathmodule.c.src,[u'2'],1,1," -979,7 +979,7 ;",static PyObject ;
3186,4,9899d23, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 17 Mar 2013 16:04:36 +0100","ct: [PATCH 1/4] BUG: Do not reuse nditer buffers when not filled enough.This checks if the previous time around, the buffers were filledwith as much data as they would be filled this time around. SinceThis is difficult for the initial loop before reusing is activatedbecause in that case the buffer may be larger then just thefirst outer reduce dimension. In that case do not allow reuseunless the index along that dimension was 0.When the inner reduce index is not 0, then also the reusing ofthe buffer is dangerous.",1,26,4,numpy/core/src/multiarray/nditer_api.c,[u'30'],26,4," -2062,8 +2062,9 ; -2086,6 +2087,13 ; -2615,6 +2623,7 ; -2622,6 +2631,8 ; -2661,8 +2672,20 ; -2687,7 +2710,6 ;","npyiter_copy_to_buffers(NpyIter *iter, char **prev_dataptrs;npyiter_copy_to_buffers(NpyIter *iter, char **prev_dataptrs;npyiter_checkreducesize(NpyIter *iter, npy_intp count;npyiter_checkreducesize(NpyIter *iter, npy_intp count;npyiter_checkreducesize(NpyIter *iter, npy_intp count;npyiter_checkreducesize(NpyIter *iter, npy_intp count;"
3186,4,5c154df, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 17 Mar 2013 16:50:01 +0100",ct: [PATCH 2/4] TST: Add (slow) nditer reduce buffer reuse test,1,50,0,numpy/core/tests/test_nditer.py,[u'50'],41,0," -2015,6 +2015,56 ;",def test_iter_buffering_growinner();
3186,4,4c2469a, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 18 Mar 2013 15:44:12 +0100","ct: [PATCH 3/4] BUG: no buffer reuse in nditer, if there was no buffer previouslyIf the buffer is used or not can possible change during iteration.In this case, the buffer cannot be reused if it never existed...",1,10,0,numpy/core/src/multiarray/nditer_api.c,[u'10'],10,0," -2192,6 +2192,11 ; -2235,6 +2240,11 ;","npyiter_copy_to_buffers(NpyIter *iter, char **prev_dataptrs;npyiter_copy_to_buffers(NpyIter *iter, char **prev_dataptrs;"
3186,4,dccfdbd, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 18 Mar 2013 15:53:10 +0100",ct: [PATCH 4/4] TST: test no reuse of non-existing buffers in nditerThis slightly changes the test to cover more cases includingthe one where buffers are sometimes used and sometimes not.,1,22,21,numpy/core/tests/test_nditer.py,[u'43'],21,20," -2022,33 +2022,23 ; -2059,10 +2049,21 ;",def test_iter_buffered_reduce_reuse();def get_params();
3185,1,5819d28, Charles Harris <charlesr.harris@gmail.com>," Mon, 1 Apr 2013 17:23:53 -0600","ct: [PATCH] BUG: Raise immediate error in ctypes.load_library when library is bad.This is a fixup of PR #475 due to JeromeRoy. The problem addressed isthat when multiple errors were encountered attempting to import alibrary file, only the last one was preserved. The proposed fix is toraise an error immediately when a file of the correct name fails toimport, and raise a later error if no file is found but no errors areraised in the search.Closes #474, #475.",1,9,8,numpy/ctypeslib.py,[u'17'],9,8," -122,15 +122,16 ;","def load_library(libname, loader_path);"
3182,1,fb6cfd7, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 29 Mar 2013 16:40:31 +0100","ct: [PATCH] BUG: hardcode some known shared library extensionsthe configuration variables are not a reliable mean to get the sharedlibrary extension. darwin, windows and debug linux are wrong in thesevariables.SHLIB_SUFFIX is also wrong as of python 3.3.1closes #3057",2,40,6,numpy/distutils/misc_util.py,[u'28'],23,5," -605,11 +605,29 ;",def get_shared_lib_extension(is_python_ext=False);
3182,1,fb6cfd7, Julian Taylor <jtaylor.debian@googlemail.com>," Fri, 29 Mar 2013 16:40:31 +0100","ct: [PATCH] BUG: hardcode some known shared library extensionsthe configuration variables are not a reliable mean to get the sharedlibrary extension. darwin, windows and debug linux are wrong in thesevariables.SHLIB_SUFFIX is also wrong as of python 3.3.1closes #3057",2,40,6,numpy/distutils/tests/test_misc_util.py,[u'18'],17,1," -2,7 +2,8 ; -54,6 +55,21 ;",;def test_gpaths(self);
3179,1,15b7f9b, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 10:48:45 -0600",ct: [PATCH] MAINT: Fix python3 ResourceWarning when running test_exec_command.pyThe tests in test_exec_command.py used with blocks with a contextmanager that could redirect stderr and stdout to temporary files butthose files were not closed on exit from the block.,1,4,0,numpy/distutils/tests/test_exec_command.py,[u'4'],4,0," -18,6 +18,8 ; -31,6 +33,8 ;",def __enter__(self);def __enter__(self);
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,doc/cdoc/numpyfilter.py,[u'2'],1,1," -6,7 +6,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,doc/cython/run_test.py,[u'2'],1,1," -1,5 +1,5 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,doc/example.py,[u'2'],1,1," -8,7 +8,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,doc/newdtype_example/example.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,doc/newdtype_example/floatint/__init__.py,[u'2'],1,1," -1,3 +1,3 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,doc/numpybook/comparison/ctypes/filter.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,doc/numpybook/comparison/ctypes/interface.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,doc/numpybook/comparison/timing.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,doc/numpybook/comparison/weave/filter.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,doc/numpybook/comparison/weave/inline.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,doc/numpybook/runcode.py,[u'2'],1,1," -14,7 +14,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,doc/postprocess.py,[u'2'],1,1," -6,7 +6,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,doc/pyrex/run_test.py,[u'2'],1,1," -1,5 +1,5 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,doc/source/conf.py,[u'2'],1,1," -1,5 +1,5 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,doc/sphinxext/numpydoc/comment_eater.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,doc/sphinxext/numpydoc/compiler_unparse.py,[u'2'],1,1," -10,7 +10,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,doc/sphinxext/numpydoc/docscrape.py,[u'2'],1,1," -1,7 +1,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,doc/sphinxext/numpydoc/docscrape_sphinx.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,doc/sphinxext/numpydoc/linkcode.py,[u'2'],1,1," -9,7 +9,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,doc/sphinxext/numpydoc/numpydoc.py,[u'2'],1,1," -15,7 +15,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,doc/sphinxext/numpydoc/phantom_import.py,[u'2'],1,1," -14,7 +14,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,doc/sphinxext/numpydoc/plot_directive.py,[u'2'],1,1," -74,7 +74,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,doc/sphinxext/numpydoc/tests/test_docscrape.py,[u'2'],1,1," -1,5 +1,5 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,doc/sphinxext/numpydoc/traitsdoc.py,[u'2'],1,1," -13,7 +13,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,doc/summarize.py,[u'2'],1,1," -5,7 +5,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,doc/swig/test/testArray.py,[u'2'],1,1," -1,5 +1,5 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,doc/swig/test/testFarray.py,[u'2'],1,1," -1,5 +1,5 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,doc/swig/test/testFortran.py,[u'2'],1,1," -1,5 +1,5 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,doc/swig/test/testMatrix.py,[u'2'],1,1," -1,5 +1,5 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,doc/swig/test/testTensor.py,[u'2'],1,1," -1,5 +1,5 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,doc/swig/test/testVector.py,[u'2'],1,1," -1,5 +1,5 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/__init__.py,[u'40'],8,9," -104,7 +104,7 ; -126,43 +126,43 ;",;;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/_import_tools.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/add_newdocs.py,[u'2'],1,1," -8,7 +8,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/build_utils/__init__.py,[u'2'],1,1, -1 +1 ;,;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/build_utils/common.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/build_utils/waf.py,[u'4'],1,1," -1,4 +1,4 ; -7,7 +7,7 ;",;;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/compat/__init__.py,[u'10'],2,3," -8,12 +8,12 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/compat/_inspect.py,[u'2'],1,1," -5,7 +5,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/compat/py3k.py,[u'2'],1,1," -2,7 +2,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/__init__.py,[u'52'],11,11," -1,36 +1,36 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/_internal.py,[u'12'],2,3," -4,7 +4,7 ; -18,7 +18,7 ; -52,7 +52,7 ; -130,7 +130,7 ; -194,7 +194,7 ; -290,7 +290,7 ;",";;def _makenames_list(adict, align);def _array_descr(descriptor);def _commastring(astr);def _newnames(datatype, order);"
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/_methods.py,[u'2'],1,1," -3,7 +3,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/arrayprint.py,[u'18'],4,4," -3,7 +3,7 ; -16,10 +16,10 ; -197,7 +197,7 ; -324,7 +324,7 ; -539,7 +539,7 ; -592,7 +592,7 ;",";;def get_printoptions();def _array2string(a, max_line_width, precision, suppress_small, separator=' ';def __init__(self, data, precision, suppress_small, sign=False);def fillFormat(self, data);"
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/code_generators/__init__.py,[u'2'],1,1, -1 +1 ;,;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/code_generators/cversions.py,[u'6'],1,2," -3,12 +3,12 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/code_generators/genapi.py,[u'2'],1,1," -6,7 +6,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/code_generators/numpy_api.py,[u'2'],1,1," -12,7 +12,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/code_generators/ufunc_docstrings.py,[u'2'],1,1," -9,7 +9,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/defchararray.py,[u'8'],2,2," -15,12 +15,12 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/fromnumeric.py,[u'12'],2,3," -1,7 +1,7 ; -16,11 +16,11 ;",;;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/function_base.py,[u'6'],1,2," -1,9 +1,9 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/getlimits.py,[u'10'],2,3," -1,14 +1,14 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/info.py,[u'2'],1,1," -81,7 +81,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/machar.py,[u'2'],1,1," -5,7 +5,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/memmap.py,[u'4'],1,1," -1,9 +1,9 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/numeric.py,[u'20'],4,5," -1,4 +1,4 ; -26,11 +26,11 ; -911,7 +911,7 ; -1364,7 +1364,7 ; -2591,6 +2591,6 ;",";;def outer(a,b);def cross(a, b, axisa=-1, axisb=-1, axisc=-1, axis=None);def _setdef();"
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/numerictypes.py,[u'2'],1,1," -80,7 +80,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/records.py,[u'8'],2,2," -34,14 +34,14 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/setup_common.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/shape_base.py,[u'6'],1,2," -1,9 +1,9 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/src/multiarray/testcalcs.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/tests/test_api.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/tests/test_arrayprint.py,[u'2'],1,1," -1,6 +1,6 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/tests/test_blasdot.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/tests/test_datetime.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/tests/test_defchararray.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/tests/test_deprecations.py,[u'2'],1,1," -3,7 +3,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/tests/test_dtype.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/tests/test_einsum.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/tests/test_errstate.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/tests/test_function_base.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/tests/test_getlimits.py,[u'2'],1,1," -1,7 +1,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/tests/test_half.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/tests/test_indexerrors.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/tests/test_indexing.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/tests/test_item_selection.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/tests/test_machar.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/tests/test_memmap.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/tests/test_multiarray.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/tests/test_multiarray_assignment.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/tests/test_nditer.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/tests/test_numeric.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/tests/test_numerictypes.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/tests/test_print.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/tests/test_records.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/tests/test_regression.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/tests/test_scalarmath.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/tests/test_scalarprint.py,[u'2'],1,1," -2,7 +2,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/tests/test_shape_base.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/tests/test_ufunc.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/tests/test_umath.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/tests/test_umath_complex.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/core/tests/test_unicode.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/ctypeslib.py,[u'2'],1,1," -49,7 +49,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/__init__.py,[u'12'],2,3," -1,16 +1,16 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/__version__.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/ccompiler.py,[u'4'],1,1," -1,4 +1,4 ; -165,7 +165,7 ;",";def CCompiler_compile(self, sources, output_dir=None, macros=None;"
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/command/__init__.py,[u'2'],1,1," -4,7 +4,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/command/autodist.py,[u'2'],1,1," -1,7 +1,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/command/bdist_rpm.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/command/build.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/command/build_clib.py,[u'2'],1,1," -1,6 +1,6 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/command/build_ext.py,[u'2'],1,1," -1,7 +1,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/command/build_py.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/command/build_scripts.py,[u'2'],1,1," -1,7 +1,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/command/build_src.py,[u'2'],1,1," -1,6 +1,6 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/command/config.py,[u'2'],1,1," -2,7 +2,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/command/config_compiler.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/command/develop.py,[u'2'],1,1," -3,7 +3,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/command/egg_info.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/command/install.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/command/install_clib.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/command/install_data.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/command/install_headers.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/command/sdist.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/compat.py,[u'2'],1,1," -2,7 +2,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/conv_template.py,[u'2'],1,1," -78,7 +78,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/core.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/cpuinfo.py,[u'2'],1,1," -12,7 +12,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/environment.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/exec_command.py,[u'2'],1,1," -44,7 +44,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/extension.py,[u'2'],1,1," -6,7 +6,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/fcompiler/__init__.py,[u'2'],1,1," -13,7 +13,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/fcompiler/absoft.py,[u'2'],1,1," -5,7 +5,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/fcompiler/compaq.py,[u'2'],1,1," -1,6 +1,6 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/fcompiler/g95.py,[u'2'],1,1," -1,5 +1,5 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/fcompiler/gnu.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/fcompiler/hpux.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/fcompiler/ibm.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/fcompiler/intel.py,[u'2'],1,1," -1,5 +1,5 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/fcompiler/lahey.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/fcompiler/mips.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/fcompiler/nag.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/fcompiler/none.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/fcompiler/pathf95.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/fcompiler/pg.py,[u'2'],1,1," -1,5 +1,5 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/fcompiler/sun.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/fcompiler/vast.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/from_template.py,[u'2'],1,1," -45,7 +45,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/info.py,[u'2'],1,1," -1,6 +1,6 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/intelccompiler.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/lib2def.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/line_endings.py,[u'2'],1,1," -1,7 +1,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/log.py,[u'4'],1,1," -1,5 +1,5 ; -7,7 +7,7 ;",;;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/mingw32ccompiler.py,[u'4'],1,1," -7,7 +7,7 ; -19,7 +19,7 ;",;;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/misc_util.py,[u'4'],1,1," -1,4 +1,4 ; -1990,7 +1990,7 ;",";def get_info(self,*names);"
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/npy_pkg_config.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/numpy_distribution.py,[u'2'],1,1," -1,5 +1,5 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/pathccompiler.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/system_info.py,[u'4'],1,1," -110,7 +110,7 ; -929,7 +929,7 ;",;def __init__(self);
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/tests/f2py_ext/__init__.py,[u'2'],1,1, -1 +1 ;,;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/tests/f2py_ext/tests/test_fib2.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/tests/f2py_f90_ext/__init__.py,[u'2'],1,1, -1 +1 ;,;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,.../distutils/tests/f2py_f90_ext/tests/test_foo.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/tests/gen_ext/__init__.py,[u'2'],1,1, -1 +1 ;,;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/tests/gen_ext/tests/test_fib3.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/tests/pyrex_ext/__init__.py,[u'2'],1,1, -1 +1 ;,;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,.../distutils/tests/pyrex_ext/tests/test_primes.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/tests/swig_ext/__init__.py,[u'2'],1,1, -1 +1 ;,;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,.../distutils/tests/swig_ext/tests/test_example.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,.../tests/swig_ext/tests/test_example2.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/tests/test_fcompiler_gnu.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/tests/test_fcompiler_intel.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/tests/test_misc_util.py,[u'2'],1,1," -1,5 +1,5 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/tests/test_npy_pkg_config.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/distutils/unixccompiler.py,[u'4'],1,1," -2,7 +2,7 ; -12,7 +12,7 ;",;;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/doc/__init__.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/doc/basics.py,[u'2'],1,1," -136,5 +136,5 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/doc/broadcasting.py,[u'2'],1,1," -175,5 +175,5 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/doc/byteswapping.py,[u'2'],1,1," -135,5 +135,5 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/doc/constants.py,[u'2'],1,1," -10,7 +10,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/doc/creation.py,[u'2'],1,1," -141,5 +141,5 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/doc/glossary.py,[u'2'],1,1," -415,5 +415,5 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/doc/howtofind.py,[u'2'],1,1," -7,5 +7,5 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/doc/indexing.py,[u'2'],1,1," -405,5 +405,5 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/doc/internals.py,[u'2'],1,1," -160,5 +160,5 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/doc/io.py,[u'2'],1,1," -7,5 +7,5 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/doc/jargon.py,[u'2'],1,1," -7,5 +7,5 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/doc/methods_vs_functions.py,[u'2'],1,1," -7,5 +7,5 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/doc/misc.py,[u'2'],1,1," -226,5 +226,5 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/doc/performance.py,[u'2'],1,1," -7,5 +7,5 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/doc/structured_arrays.py,[u'2'],1,1," -221,5 +221,5 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/doc/subclassing.py,[u'2'],1,1," -557,5 +557,5 ;","def __array_wrap__(self, arr, context=None);"
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/doc/ufuncs.py,[u'2'],1,1," -135,5 +135,5 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/dual.py,[u'2'],1,1," -10,7 +10,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/f2py/__init__.py,[u'10'],2,3," -1,5 +1,5 ; -7,11 +7,11 ;",;;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/f2py/__version__.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/f2py/auxfuncs.py,[u'8'],2,2," -14,17 +14,17 ; -522,7 +522,7 ;",";def getcallprotoargument(rout,cb_map={});"
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/f2py/capi_maps.py,[u'10'],2,3," -11,20 +11,20 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/f2py/cb_rules.py,[u'10'],2,3," -13,11 +13,11 ; -28,8 +28,8 ; -416,7 +416,7 ;",;;def buildcallbacks(m);
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/f2py/cfuncs.py,[u'6'],1,2," -14,11 +14,11 ; -1117,7 +1117,7 ;",;;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/f2py/common_rules.py,[u'12'],2,3," -13,11 +13,11 ; -26,10 +26,10 ;",;;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/f2py/crackfortran.py,[u'6'],1,2," -138,11 +138,11 ; -153,7 +153,7 ;",;;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/f2py/diagnose.py,[u'2'],1,1," -1,5 +1,5 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/f2py/doc/collectinput.py,[u'2'],1,1," -19,7 +19,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/f2py/docs/pytest.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/f2py/docs/usersguide/setup_example.py,[u'2'],1,1," -1,5 +1,5 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/f2py/f2py2e.py,[u'16'],3,4," -14,9 +14,9 ; -28,12 +28,12 ;",;;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/f2py/f2py_testing.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/f2py/f90mod_rules.py,[u'12'],2,3," -13,7 +13,7 ; -25,11 +25,11 ; -84,7 +84,7 ;",;;def findf90modules(m);
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/f2py/func2subr.py,[u'4'],1,1," -13,7 +13,7 ; -26,7 +26,7 ;",;;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/f2py/info.py,[u'2'],1,1," -1,6 +1,6 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/f2py/rules.py,[u'20'],4,5," -50,11 +50,11 ; -66,14 +66,14 ;",;;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/f2py/tests/test_array_from_pyobj.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/f2py/tests/test_assumed_shape.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/f2py/tests/test_callback.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/f2py/tests/test_kind.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/f2py/tests/test_mixed.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/f2py/tests/test_return_character.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/f2py/tests/test_return_complex.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/f2py/tests/test_return_integer.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/f2py/tests/test_return_logical.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/f2py/tests/test_return_real.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/f2py/tests/test_size.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/f2py/tests/util.py,[u'2'],1,1," -5,7 +5,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/f2py/use_rules.py,[u'4'],1,1," -15,7 +15,7 ; -27,7 +27,7 ;",;;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/fft/__init__.py,[u'8'],2,2," -1,10 +1,10 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/fft/fftpack.py,[u'4'],1,1," -30,14 +30,14 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/fft/helper.py,[u'2'],1,1," -2,7 +2,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/fft/info.py,[u'2'],1,1," -174,6 +174,6 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/fft/tests/test_fftpack.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/fft/tests/test_helper.py,[u'2'],1,1," -4,7 +4,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/__init__.py,[u'34'],7,7," -1,26 +1,26 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/_datasource.py,[u'2'],1,1," -31,7 +31,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/_iotools.py,[u'2'],1,1," -1,7 +1,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/arraypad.py,[u'2'],1,1," -3,7 +3,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/arraysetops.py,[u'2'],1,1," -24,7 +24,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/arrayterator.py,[u'2'],1,1," -7,7 +7,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/financial.py,[u'2'],1,1," -8,7 +8,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/format.py,[u'2'],1,1," -134,7 +134,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/function_base.py,[u'12'],2,3," -1,4 +1,4 ; -26,11 +26,11 ;",;;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/index_tricks.py,[u'6'],1,2," -1,4 +1,4 ; -16,9 +16,9 ;",;;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/info.py,[u'2'],1,1," -145,7 +145,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/npyio.py,[u'10'],2,3," -1,11 +1,11 ; -16,10 +16,10 ;",;;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/polynomial.py,[u'2'],1,1," -2,7 +2,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/recfunctions.py,[u'2'],1,1," -5,7 +5,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/scimath.py,[u'2'],1,1," -15,7 +15,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/shape_base.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/stride_tricks.py,[u'2'],1,1," -5,7 +5,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/tests/test__datasource.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/tests/test__iotools.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/tests/test_arraypad.py,[u'2'],1,1," -1,7 +1,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/tests/test_arraysetops.py,[u'2'],1,1," -1,7 +1,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/tests/test_arrayterator.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/tests/test_financial.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/tests/test_format.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/tests/test_function_base.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/tests/test_index_tricks.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/tests/test_io.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/tests/test_polynomial.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/tests/test_recfunctions.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/tests/test_regression.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/tests/test_shape_base.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/tests/test_stride_tricks.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/tests/test_twodim_base.py,[u'2'],1,1," -1,7 +1,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/tests/test_type_check.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/tests/test_ufunclike.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/tests/test_utils.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/twodim_base.py,[u'2'],1,1," -1,7 +1,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/type_check.py,[u'4'],1,1," -1,7 +1,7 ; -11,7 +11,7 ;",;;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/ufunclike.py,[u'2'],1,1," -3,7 +3,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/user_array.py,[u'2'],1,1," -4,7 +4,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/lib/utils.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/linalg/__init__.py,[u'6'],1,2," -42,12 +42,12 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/linalg/info.py,[u'2'],1,1," -32,6 +32,6 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/linalg/lapack_lite/clapack_scrub.py,[u'2'],1,1," -1,5 +1,5 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/linalg/lapack_lite/fortran.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/linalg/lapack_lite/make_lite.py,[u'2'],1,1," -1,5 +1,5 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/linalg/linalg.py,[u'2'],1,1," -8,7 +8,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/linalg/tests/test_build.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/linalg/tests/test_linalg.py,[u'2'],1,1," -1,6 +1,6 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/linalg/tests/test_regression.py,[u'2'],1,1," -1,6 +1,6 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/ma/__init__.py,[u'10'],2,3," -36,18 +36,18 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/ma/bench.py,[u'2'],1,1," -1,6 +1,6 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/ma/core.py,[u'2'],1,1," -20,7 +20,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/ma/extras.py,[u'6'],1,2," -8,7 +8,7 ; -38,8 +38,8 ;",;;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/ma/mrecords.py,[u'2'],1,1," -8,7 +8,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/ma/tests/test_core.py,[u'2'],1,1," -4,7 +4,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/ma/tests/test_extras.py,[u'2'],1,1," -7,7 +7,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/ma/tests/test_mrecords.py,[u'2'],1,1," -5,7 +5,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/ma/tests/test_old_ma.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/ma/tests/test_regression.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/ma/tests/test_subclassing.py,[u'2'],1,1," -6,7 +6,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/ma/testutils.py,[u'4'],1,1," -5,7 +5,7 ; -21,7 +21,7 ;",;;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/ma/timer_comparison.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/ma/version.py,[u'6'],1,2," -1,14 +1,14 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/matlib.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/matrixlib/__init__.py,[u'4'],1,1," -1,9 +1,9 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/matrixlib/defmatrix.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/matrixlib/tests/test_defmatrix.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/matrixlib/tests/test_multiarray.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/matrixlib/tests/test_numeric.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/matrixlib/tests/test_regression.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/numarray/__init__.py,[u'26'],5,6," -1,18 +1,18 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/numarray/alter_code1.py,[u'2'],1,1," -52,7 +52,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/numarray/alter_code2.py,[u'2'],1,1," -5,7 +5,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/numarray/compat.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/numarray/convolve.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/numarray/fft.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/numarray/functions.py,[u'4'],1,1," -1,4 +1,4 ; -40,7 +40,7 ;",;;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/numarray/image.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/numarray/linear_algebra.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/numarray/ma.py,[u'2'],1,1," -1,3 +1,3 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/numarray/matrix.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/numarray/mlab.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/numarray/nd_image.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/numarray/numerictypes.py,[u'2'],1,1," -27,7 +27,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/numarray/random_array.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/numarray/session.py,[u'2'],1,1," -72,7 +72,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/numarray/ufuncs.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/numarray/util.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/oldnumeric/__init__.py,[u'24'],5,5," -1,7 +1,7 ; -15,17 +15,17 ;",";def _move_axis_to_0(a, axis);"
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/oldnumeric/alter_code1.py,[u'2'],1,1," -29,7 +29,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/oldnumeric/alter_code2.py,[u'2'],1,1," -19,7 +19,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/oldnumeric/array_printer.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/oldnumeric/arrayfns.py,[u'2'],1,1," -1,7 +1,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/oldnumeric/compat.py,[u'6'],1,2," -1,7 +1,7 ; -16,7 +16,7 ; -78,7 +78,7 ;",;;def load(fp);
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/oldnumeric/fft.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/oldnumeric/fix_default_axis.py,[u'2'],1,1," -34,7 +34,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/oldnumeric/functions.py,[u'4'],1,1," -1,12 +1,12 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/oldnumeric/linear_algebra.py,[u'2'],1,1," -6,7 +6,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/oldnumeric/ma.py,[u'2'],1,1," -9,7 +9,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/oldnumeric/matrix.py,[u'4'],1,1," -1,12 +1,12 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/oldnumeric/misc.py,[u'4'],1,1," -1,7 +1,7 ; -35,4 +35,4 ;",;;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/oldnumeric/mlab.py,[u'26'],5,6," -1,7 +1,7 ; -21,7 +21,7 ; -98,17 +98,17 ;",";;def corrcoef(x, y=None);"
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/oldnumeric/precision.py,[u'4'],1,1," -6,13 +6,13 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/oldnumeric/random_array.py,[u'2'],1,1," -1,7 +1,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/oldnumeric/rng.py,[u'2'],1,1," -4,7 +4,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/oldnumeric/rng_stats.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/oldnumeric/tests/test_oldnumeric.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/oldnumeric/tests/test_regression.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/oldnumeric/typeconv.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/oldnumeric/ufuncs.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/oldnumeric/user_array.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/polynomial/__init__.py,[u'14'],3,3," -13,16 +13,16 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/polynomial/chebyshev.py,[u'8'],2,2," -85,13 +85,13 ; -416,7 +416,7 ;",;def cheb2poly(c) ;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/polynomial/hermite.py,[u'8'],2,2," -57,13 +57,13 ; -160,7 +160,7 ;",;def herm2poly(c) ;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/polynomial/hermite_e.py,[u'8'],2,2," -57,13 +57,13 ; -160,7 +160,7 ;",;def herme2poly(c) ;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/polynomial/laguerre.py,[u'8'],2,2," -57,13 +57,13 ; -159,7 +159,7 ;",;def lag2poly(c) ;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/polynomial/legendre.py,[u'8'],2,2," -81,13 +81,13 ; -191,7 +191,7 ;",;def leg2poly(c) ;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/polynomial/polynomial.py,[u'6'],1,2," -52,7 +52,7 ; -62,9 +62,9 ;",;;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/polynomial/polytemplate.py,[u'13'],2,4," -9,21 +9,16 ; -918,4 +913,4 ;",";def cast(series, domain=$domain, window=$domain);"
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/polynomial/polyutils.py,[u'2'],1,1," -31,7 +31,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/polynomial/tests/test_chebyshev.py,[u'2'],1,1," -1,7 +1,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/polynomial/tests/test_classes.py,[u'2'],1,1," -3,7 +3,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/polynomial/tests/test_hermite.py,[u'2'],1,1," -1,7 +1,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/polynomial/tests/test_hermite_e.py,[u'2'],1,1," -1,7 +1,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/polynomial/tests/test_laguerre.py,[u'2'],1,1," -1,7 +1,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/polynomial/tests/test_legendre.py,[u'2'],1,1," -1,7 +1,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/polynomial/tests/test_polynomial.py,[u'2'],1,1," -1,7 +1,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/polynomial/tests/test_polyutils.py,[u'2'],1,1," -1,7 +1,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/polynomial/tests/test_printing.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/random/__init__.py,[u'6'],1,2," -86,10 +86,10 ; -98,7 +98,7 ;",;;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/random/info.py,[u'2'],1,1," -82,7 +82,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/random/mtrand/generate_mtrand_c.py,[u'2'],1,1," -1,5 +1,5 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/random/tests/test_random.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/random/tests/test_regression.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/testing/__init__.py,[u'12'],2,3," -5,13 +5,13 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/testing/decorators.py,[u'6'],1,2," -13,7 +13,7 ; -210,7 +210,7 ; -249,7 +249,7 ;",;def knownfail_decorator(f);def deprecate_decorator(f);
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/testing/noseclasses.py,[u'4'],1,1," -4,7 +4,7 ; -15,7 +15,7 ;",;;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/testing/nosetester.py,[u'12'],2,3," -4,7 +4,7 ; -216,7 +216,7 ; -245,7 +245,7 ; -331,7 +331,7 ; -371,7 +371,7 ; -447,7 +447,7 ;",";def _get_custom_doctester(self);def prepare_test_args(self, label='fast', verbose=1, extra_argv=None;def test(self, label='fast', verbose=1, extra_argv=None;def test(self, label='fast', verbose=1, extra_argv=None;def bench(self, label='fast', verbose=1, extra_argv=None);"
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/testing/nulltester.py,[u'2'],1,1," -6,7 +6,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/testing/numpytest.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/testing/print_coercion_tables.py,[u'2'],1,1," -2,7 +2,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/testing/tests/test_decorators.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/testing/tests/test_doctesting.py,[u'2'],1,1," -1,7 +1,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/testing/tests/test_utils.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/testing/utils.py,[u'4'],1,1," -2,7 +2,7 ; -10,7 +10,7 ;",;;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/tests/test_ctypeslib.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,numpy/tests/test_matlib.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,pavement.py,[u'2'],1,1," -55,7 +55,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,setupegg.py,[u'2'],1,1," -12,7 +12,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,tools/allocation_tracking/track_allocations.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,tools/c_coverage/c_coverage_report.py,[u'2'],1,1," -4,7 +4,7 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,tools/commitstats.py,[u'2'],1,1," -1,4 +1,4 ;",;
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,tools/py3tool.py,[u'45'],2,17," -18,7 +18,7 ; -37,10 +37,6 ; -80,7 +76,8 ; -172,38 +169,6 ; -313,10 +278,6 ;",";;;def getenv();def sync_2to3(src, dst, patchfile=None, clean=False);"
3178,3,d4b88c1, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 21:49:08 -0600","ct: [PATCH 1/3] 2to3: Use absolute imports.The new import `absolute_import` is added the `from __future__ import`statement and The 2to3 `import` fixer is run to make the importscompatible. There are several things that need to be dealt with to makethis work.1) Files meant to be run as scripts run in a different environment thanfiles imported as part of a package, and so changes to those files needto be skipped. The affected script files are:    * all setup.py files    * numpy/core/code_generators/generate_umath.py    * numpy/core/code_generators/generate_numpy_api.py    * numpy/core/code_generators/generate_ufunc_api.py2) Some imported modules are not available as they are created duringthe build process and consequently 2to3 is unable to handle themcorrectly. Files that import those modules need a bit of extra work.The affected files are:    * core/__init__.py,    * core/numeric.py,    * core/_internal.py,    * core/arrayprint.py,    * core/fromnumeric.py,    * numpy/__init__.py,    * lib/npyio.py,    * lib/function_base.py,    * fft/fftpack.py,    * random/__init__.pyCloses #3172",378,659,703,tools/test-installed-numpy.py,[u'2'],1,1," -1,5 +1,5 ;",;
3178,3,25ec685, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 09:33:28 -0600",ct: [PATCH 2/3] 2to3: Add `from __future__ import ...` to new files.The new files that came in when doc/sphinxext/numpydoc was restructuredas a package with test stubs did not have `from __future__ import ...`.This fixes that omission.,5,10,0,doc/sphinxext/numpydoc/__init__.py,[u'2'],2,0," -1 +1,3 ;",;
3178,3,25ec685, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 09:33:28 -0600",ct: [PATCH 2/3] 2to3: Add `from __future__ import ...` to new files.The new files that came in when doc/sphinxext/numpydoc was restructuredas a package with test stubs did not have `from __future__ import ...`.This fixes that omission.,5,10,0,doc/sphinxext/numpydoc/tests/test_linkcode.py,[u'2'],2,0," -1,3 +1,5 ;",;
3178,3,25ec685, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 09:33:28 -0600",ct: [PATCH 2/3] 2to3: Add `from __future__ import ...` to new files.The new files that came in when doc/sphinxext/numpydoc was restructuredas a package with test stubs did not have `from __future__ import ...`.This fixes that omission.,5,10,0,doc/sphinxext/numpydoc/tests/test_phantom_import.py,[u'2'],2,0," -1,3 +1,5 ;",;
3178,3,25ec685, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 09:33:28 -0600",ct: [PATCH 2/3] 2to3: Add `from __future__ import ...` to new files.The new files that came in when doc/sphinxext/numpydoc was restructuredas a package with test stubs did not have `from __future__ import ...`.This fixes that omission.,5,10,0,doc/sphinxext/numpydoc/tests/test_plot_directive.py,[u'2'],2,0," -1,3 +1,5 ;",;
3178,3,25ec685, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 09:33:28 -0600",ct: [PATCH 2/3] 2to3: Add `from __future__ import ...` to new files.The new files that came in when doc/sphinxext/numpydoc was restructuredas a package with test stubs did not have `from __future__ import ...`.This fixes that omission.,5,10,0,doc/sphinxext/numpydoc/tests/test_traitsdoc.py,[u'2'],2,0," -1,3 +1,5 ;",;
3178,3,670b126, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 10:03:43 -0600","ct: [PATCH 3/3] 2to3: Add `from __future__ import ...` to some files that were missed.With the exception of numpy/distutils/tests/test_exec_command.py, allof these files are script files in tools/osxbuild and tools/win32build.The import in the  script files omits `absolute_import` as they arenot part of a package.",7,21,6,numpy/distutils/tests/test_exec_command.py,[u'2'],2,0," -1,3 +1,5 ;",;
3178,3,670b126, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 10:03:43 -0600","ct: [PATCH 3/3] 2to3: Add `from __future__ import ...` to some files that were missed.With the exception of numpy/distutils/tests/test_exec_command.py, allof these files are script files in tools/osxbuild and tools/win32build.The import in the  script files omits `absolute_import` as they arenot part of a package.",7,21,6,tools/osxbuild/build.py,[u'1'],1,0," -10,6 +10,7 ;",;
3178,3,670b126, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 10:03:43 -0600","ct: [PATCH 3/3] 2to3: Add `from __future__ import ...` to some files that were missed.With the exception of numpy/distutils/tests/test_exec_command.py, allof these files are script files in tools/osxbuild and tools/win32build.The import in the  script files omits `absolute_import` as they arenot part of a package.",7,21,6,tools/osxbuild/install_and_test.py,[u'5'],4,1," -1,5 +1,8 ;",;
3178,3,670b126, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 10:03:43 -0600","ct: [PATCH 3/3] 2to3: Add `from __future__ import ...` to some files that were missed.With the exception of numpy/distutils/tests/test_exec_command.py, allof these files are script files in tools/osxbuild and tools/win32build.The import in the  script files omits `absolute_import` as they arenot part of a package.",7,21,6,tools/win32build/build.py,[u'12'],8,4," -1,11 +1,15 ;",;
3178,3,670b126, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 10:03:43 -0600","ct: [PATCH 3/3] 2to3: Add `from __future__ import ...` to some files that were missed.With the exception of numpy/distutils/tests/test_exec_command.py, allof these files are script files in tools/osxbuild and tools/win32build.The import in the  script files omits `absolute_import` as they arenot part of a package.",7,21,6,tools/win32build/doall.py,[u'2'],2,0," -1,3 +1,5 ;",;
3178,3,670b126, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 10:03:43 -0600","ct: [PATCH 3/3] 2to3: Add `from __future__ import ...` to some files that were missed.With the exception of numpy/distutils/tests/test_exec_command.py, allof these files are script files in tools/osxbuild and tools/win32build.The import in the  script files omits `absolute_import` as they arenot part of a package.",7,21,6,tools/win32build/misc/x86analysis.py,[u'3'],2,1," -5,6 +5,7 ; -57,7 +58,7 ;",;;
3178,3,670b126, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Mar 2013 10:03:43 -0600","ct: [PATCH 3/3] 2to3: Add `from __future__ import ...` to some files that were missed.With the exception of numpy/distutils/tests/test_exec_command.py, allof these files are script files in tools/osxbuild and tools/win32build.The import in the  script files omits `absolute_import` as they arenot part of a package.",7,21,6,tools/win32build/prepare_bootstrap.py,[u'2'],2,0," -1,3 +1,5 ;",;
3170,1,5ed81bd, Eric Moore <ewm@redtetrahedron.org>," Tue, 26 Mar 2013 15:29:17 -0400",ct: [PATCH] BUG: Adapt flexible dtype similarly from array or objectThe dimensions returned from discover_itemsize were taken fromPyArray_AdaptFlexibleDtype.,3,27,2,numpy/core/src/multiarray/ctors.c,[u'19'],18,1," -522,10 +522,27 ;","discover_itemsize(PyObject *s, int nd, int *itemsize;"
3170,1,5ed81bd, Eric Moore <ewm@redtetrahedron.org>," Tue, 26 Mar 2013 15:29:17 -0400",ct: [PATCH] BUG: Adapt flexible dtype similarly from array or objectThe dimensions returned from discover_itemsize were taken fromPyArray_AdaptFlexibleDtype.,3,27,2,numpy/core/tests/test_defchararray.py,[u'2'],1,1," -16,7 +16,7 ;",def test_from_object_array(self);
3170,1,5ed81bd, Eric Moore <ewm@redtetrahedron.org>," Tue, 26 Mar 2013 15:29:17 -0400",ct: [PATCH] BUG: Adapt flexible dtype similarly from array or objectThe dimensions returned from discover_itemsize were taken fromPyArray_AdaptFlexibleDtype.,3,27,2,numpy/core/tests/test_regression.py,[u'8'],8,0," -1870,6 +1870,14 ;",def test_complex64_alignment(self);
3169,1,84759d8, fkbreitl <frank.breitling@gmx.de>," Tue, 26 Mar 2013 20:01:12 +0100",ct: [PATCH] Update twodim_base.pyUpdate histogram2d example according to http://www.scipy.org/Cookbook/Histograms for variable bin size.,1,60,15,numpy/lib/twodim_base.py,[u'75'],38,10," -585,21 +585,66 ;","def histogram2d(x, y, bins=10, range=None, normed=False, weights=None);"
3168,1,e272631, Julian Taylor <jtaylor.debian@googlemail.com>," Tue, 26 Mar 2013 19:35:06 +0100",ct: [PATCH] fix undefined function and add integer divisions,1,18,5,numpy/numarray/functions.py,[u'23'],18,5," -204,8 +204,8 ; -216,7 +216,7 ; -247,20 +247,33 ;","def fromfile(infile, type=None, shape=None, sizing=STRICT;def fromfile(infile, type=None, shape=None, sizing=STRICT;def fromfile(infile, type=None, shape=None, sizing=STRICT;"
3167,1,df813e5, Ondrej Certik <ondrej.certik@gmail.com>," Mon, 25 Mar 2013 10:54:22 +0100",ct: [PATCH] TST: open the TemporaryFile in ASCII modeThis should fix gh-3165.Conflicts:	numpy/distutils/tests/test_exec_command.py,1,0,0,numpy/distutils/tests/test_exec_command.py,[u'2'],1,1," -69,7 +69,7 ;",def test_exec_command_stdout();
3166,1,1e747d7, Ondrej Certik <ondrej.certik@gmail.com>," Mon, 25 Mar 2013 10:54:22 +0100",ct: [PATCH] TST: open the TemporaryFile in ASCII modeThis should fix gh-3165.,1,0,0,numpy/distutils/tests/test_exec_command.py,[u'2'],1,1," -76,7 +76,7 ;",def test_exec_command_stdout();
3163,5,2ac50f2, Ake Sandgren <ake@hpc2n.umu.se>," Fri, 22 Mar 2013 13:04:18 +0100",ct: [PATCH 1/5] Fix typo in dtype_transfer  - _strided_to_strided_one_to_n_with_finish is missing a d-> when    initializing data_finish_src,1,0,0,numpy/core/src/multiarray/dtype_transfer.c,[u'2'],1,1," -1625,7 +1625,7 ;","_strided_to_strided_one_to_n_with_finish(char *dst, npy_intp dst_stride;"
3163,5,a3023f0, Ake Sandgren <ake@hpc2n.umu.se>," Fri, 22 Mar 2013 13:05:19 +0100","ct: [PATCH 2/5] Fix proper handling of NaNs in allclose in core/numeric.  - The comment in allclose says ""If either array contains one or more    NaNs, False is returned."" but this is not done properly. Some    compilers have problem with abs and NaNs.",1,5,0,numpy/core/numeric.py,[u'5'],5,0," -1981,6 +1981,11 ;","def allclose(a, b, rtol=1.e-5, atol=1.e-8);"
3163,5,bb2d41f, Ake Sandgren <ake@hpc2n.umu.se>," Fri, 22 Mar 2013 13:06:16 +0100","ct: [PATCH 3/5] Fix two occurences of use-before-initialized.  - core/src/multiarray/dtype_transfer.c    _strided_to_strided_string_to_datetime, initialize dt.  - core/src/umath/ufunc_object.c PyUFunc_Reduceat, initialize    need_outer_iterator.",2,2,2,numpy/core/src/multiarray/dtype_transfer.c,[u'2'],1,1," -892,7 +892,7 ;","_strided_to_strided_string_to_datetime(char *dst, npy_intp dst_stride;"
3163,5,bb2d41f, Ake Sandgren <ake@hpc2n.umu.se>," Fri, 22 Mar 2013 13:06:16 +0100","ct: [PATCH 3/5] Fix two occurences of use-before-initialized.  - core/src/multiarray/dtype_transfer.c    _strided_to_strided_string_to_datetime, initialize dt.  - core/src/umath/ufunc_object.c PyUFunc_Reduceat, initialize    need_outer_iterator.",2,2,2,numpy/core/src/umath/ufunc_object.c,[u'2'],1,1," -3158,7 +3158,7 ;","PyUFunc_Reduceat(PyUFuncObject *ufunc, PyArrayObject *arr, PyArrayObject *ind;"
3163,5,d2249e8, Ake Sandgren <ake@hpc2n.umu.se>," Fri, 22 Mar 2013 13:07:19 +0100","ct: [PATCH 4/5] Fix nc_pow@c@ so it uses an optimizer safe way to raise FE_INVALID.  - The original code tried to do a simple subtraction, the result of    which was just discarded. Optimizers throws that away and the raise    never happend.",1,0,2,numpy/core/src/umath/funcs.inc.src,[u'3'],1,2," -360,8 +360,7 ;","nc_pow@c@(@ctype@ *a, @ctype@ *b, @ctype@ *r;"
3163,5,363339d, Ake Sandgren <ake@hpc2n.umu.se>," Fri, 22 Mar 2013 13:08:02 +0100",ct: [PATCH 5/5] Add support for using openblas for the _dotblas function.  - openblas is usually a lot faster then ATLAS so make sure it can get    correctly detected.,1,24,0,numpy/distutils/system_info.py,[u'25'],24,1," -296,6 +296,7 ; -1431,7 +1432,7 ; -1490,6 +1491,11 ; -1535,6 +1541,23 ;","def get_info(name, notfound_action=0);def calc_info(self);def calc_info(self);def calc_info(self);"
3162,4,79d22dc, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 21 Mar 2013 14:23:21 +0100","ct: [PATCH 1/4] BLD: Add NPY_RELAXED_STRIDES_CHECKING flagThis flag will toggle to a new definition for the contiguous flagswhere only the memory layout is forced to be correct. As a particularexample this means that np.ones((3,1)) can be both C and F-Contiguousand its stride[-1] can be arbitrary but the array still contiguous.The flag will also make most new arrays be created with MAX_INTP asstride so that unsafe usage of the stride will surface more commonly.",2,16,0,numpy/core/bscript,[u'7'],7,0," -31,6 +31,7 ; -39,6 +40,12 ;",from setup_common ;if ENABLE_SEPARATE_COMPILATION;
3162,4,79d22dc, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 21 Mar 2013 14:23:21 +0100","ct: [PATCH 1/4] BLD: Add NPY_RELAXED_STRIDES_CHECKING flagThis flag will toggle to a new definition for the contiguous flagswhere only the memory layout is forced to be correct. As a particularexample this means that np.ones((3,1)) can be both C and F-Contiguousand its stride[-1] can be arbitrary but the array still contiguous.The flag will also make most new arrays be created with MAX_INTP asstride so that unsafe usage of the stride will surface more commonly.",2,16,0,numpy/core/setup.py,[u'9'],9,0," -15,6 +15,9 ; -435,6 +438,9 ; -532,6 +538,9 ;",";def generate_config_h(ext, build_dir);def generate_numpyconfig_h(ext, build_dir);"
3162,4,3a4ed02, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 21 Mar 2013 16:34:44 +0100","ct: [PATCH 2/4] ENH: Relax aligned flag for shape[i] <= 1In this case, either the dimensions stride will never be used toaccess an element, so that it does not matter to the data alignment,or the array has a size of 0 and is thus never unaligned.Relaxed align flag is only active if NPY_RELAXED_STRIDES_CHECKINGwas set during compile time.",1,12,0,numpy/core/src/multiarray/common.c,[u'12'],12,0," -628,8 +628,20 ;",_IsAligned(PyArrayObject *ap;
3162,4,7af1c67, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 25 Mar 2013 16:21:18 +0100","ct: [PATCH 3/4] API: Implement new flags API with NPY_RELAXED_STRIDES_CHECKINGThis largly reverts the changes to the flags setting api making thenewer preferable unsafe flags setting available through theNPY_RELAXED_STRIDES_CHECKING eviroment variable. This variable is meantfor testing if code will stop working when the flags definition is changed.The old definition is modified in some details to previously to enforcesafer strides (which was not the case before). This means that ndim==1size==1 arrays are not necessarily considered contiguous. Also emptyarrays are not considered contiguous in some cases that were contiguousbefore, and the rule that an array can only be both C and F-contiguousif it is one (or zero) dimensional is relaxed, as it is incorrect forsize <= 1 arrays.",8,148,27,numpy/core/include/numpy/ndarraytypes.h,[u'12'],4,2," -753,9 +753,15 ;","typedef int (PyArray_FinalizeFunc)(PyArrayObject *, PyObject *);"
3162,4,7af1c67, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 25 Mar 2013 16:21:18 +0100","ct: [PATCH 3/4] API: Implement new flags API with NPY_RELAXED_STRIDES_CHECKINGThis largly reverts the changes to the flags setting api making thenewer preferable unsafe flags setting available through theNPY_RELAXED_STRIDES_CHECKING eviroment variable. This variable is meantfor testing if code will stop working when the flags definition is changed.The old definition is modified in some details to previously to enforcesafer strides (which was not the case before). This means that ndim==1size==1 arrays are not necessarily considered contiguous. Also emptyarrays are not considered contiguous in some cases that were contiguousbefore, and the rule that an array can only be both C and F-contiguousif it is one (or zero) dimensional is relaxed, as it is incorrect forsize <= 1 arrays.",8,148,27,numpy/core/src/multiarray/ctors.c,[u'22'],11,0," -3560,6 +3560,7 ; -3573,6 +3574,7 ; -3582,11 +3584,21 ; -3600,11 +3612,21 ;","_array_fill_strides(npy_intp *strides, npy_intp *dims, int nd, size_t itemsize;_array_fill_strides(npy_intp *strides, npy_intp *dims, int nd, size_t itemsize;_array_fill_strides(npy_intp *strides, npy_intp *dims, int nd, size_t itemsize;_array_fill_strides(npy_intp *strides, npy_intp *dims, int nd, size_t itemsize;"
3162,4,7af1c67, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 25 Mar 2013 16:21:18 +0100","ct: [PATCH 3/4] API: Implement new flags API with NPY_RELAXED_STRIDES_CHECKINGThis largly reverts the changes to the flags setting api making thenewer preferable unsafe flags setting available through theNPY_RELAXED_STRIDES_CHECKING eviroment variable. This variable is meantfor testing if code will stop working when the flags definition is changed.The old definition is modified in some details to previously to enforcesafer strides (which was not the case before). This means that ndim==1size==1 arrays are not necessarily considered contiguous. Also emptyarrays are not considered contiguous in some cases that were contiguousbefore, and the rule that an array can only be both C and F-contiguousif it is one (or zero) dimensional is relaxed, as it is incorrect forsize <= 1 arrays.",8,148,27,numpy/core/src/multiarray/flagsobject.c,[u'56'],26,2," -90,8 +90,33 ; -101,9 +126,10 ; -116,6 +142,17 ; -125,9 +162,10 ; -135,6 +173,16 ;","PyArray_UpdateFlags(PyArrayObject *ret, int flagmask;_UpdateContiguousFlags(PyArrayObject *ap;_UpdateContiguousFlags(PyArrayObject *ap;_UpdateContiguousFlags(PyArrayObject *ap;_UpdateContiguousFlags(PyArrayObject *ap;"
3162,4,7af1c67, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 25 Mar 2013 16:21:18 +0100","ct: [PATCH 3/4] API: Implement new flags API with NPY_RELAXED_STRIDES_CHECKINGThis largly reverts the changes to the flags setting api making thenewer preferable unsafe flags setting available through theNPY_RELAXED_STRIDES_CHECKING eviroment variable. This variable is meantfor testing if code will stop working when the flags definition is changed.The old definition is modified in some details to previously to enforcesafer strides (which was not the case before). This means that ndim==1size==1 arrays are not necessarily considered contiguous. Also emptyarrays are not considered contiguous in some cases that were contiguousbefore, and the rule that an array can only be both C and F-contiguousif it is one (or zero) dimensional is relaxed, as it is incorrect forsize <= 1 arrays.",8,148,27,numpy/core/src/multiarray/multiarraymodule.c,[u'19'],8,2," -1510,20 +1510,31 ; -1664,7 +1675,7 ;","PyArray_EquivTypenums(int typenum1, int typenum2;_array_fromobject(PyObject *NPY_UNUSED(ignored), PyObject *args, PyObject *kws;"
3162,4,7af1c67, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 25 Mar 2013 16:21:18 +0100","ct: [PATCH 3/4] API: Implement new flags API with NPY_RELAXED_STRIDES_CHECKINGThis largly reverts the changes to the flags setting api making thenewer preferable unsafe flags setting available through theNPY_RELAXED_STRIDES_CHECKING eviroment variable. This variable is meantfor testing if code will stop working when the flags definition is changed.The old definition is modified in some details to previously to enforcesafer strides (which was not the case before). This means that ndim==1size==1 arrays are not necessarily considered contiguous. Also emptyarrays are not considered contiguous in some cases that were contiguousbefore, and the rule that an array can only be both C and F-contiguousif it is one (or zero) dimensional is relaxed, as it is incorrect forsize <= 1 arrays.",8,148,27,numpy/core/src/multiarray/shape.c,[u'13'],5,2," -214,9 +214,11 ; -1102,7 +1104,9 ; -1125,4 +1129,7 ;","PyArray_Newshape(PyArrayObject *self, PyArray_Dims *newdims;build_shape_string(npy_intp n, npy_intp *vals;PyArray_RemoveAxesInPlace(PyArrayObject *arr, npy_bool *flags;"
3162,4,7af1c67, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 25 Mar 2013 16:21:18 +0100","ct: [PATCH 3/4] API: Implement new flags API with NPY_RELAXED_STRIDES_CHECKINGThis largly reverts the changes to the flags setting api making thenewer preferable unsafe flags setting available through theNPY_RELAXED_STRIDES_CHECKING eviroment variable. This variable is meantfor testing if code will stop working when the flags definition is changed.The old definition is modified in some details to previously to enforcesafer strides (which was not the case before). This means that ndim==1size==1 arrays are not necessarily considered contiguous. Also emptyarrays are not considered contiguous in some cases that were contiguousbefore, and the rule that an array can only be both C and F-contiguousif it is one (or zero) dimensional is relaxed, as it is incorrect forsize <= 1 arrays.",8,148,27,numpy/core/tests/test_api.py,[u'42'],15,6," -7,6 +7,9 ; -149,10 +152,13 ; -206,7 +212,8 ; -216,8 +223,12 ; -226,11 +237,18 ;",";def check_copy_result(x, y, ccontig, fcontig, strides=False);def check_copy_result(x, y, ccontig, fcontig, strides=False);def check_contig(a, ccontig, fcontig);def check_contig(a, ccontig, fcontig);"
3162,4,7af1c67, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 25 Mar 2013 16:21:18 +0100","ct: [PATCH 3/4] API: Implement new flags API with NPY_RELAXED_STRIDES_CHECKINGThis largly reverts the changes to the flags setting api making thenewer preferable unsafe flags setting available through theNPY_RELAXED_STRIDES_CHECKING eviroment variable. This variable is meantfor testing if code will stop working when the flags definition is changed.The old definition is modified in some details to previously to enforcesafer strides (which was not the case before). This means that ndim==1size==1 arrays are not necessarily considered contiguous. Also emptyarrays are not considered contiguous in some cases that were contiguousbefore, and the rule that an array can only be both C and F-contiguousif it is one (or zero) dimensional is relaxed, as it is incorrect forsize <= 1 arrays.",8,148,27,numpy/core/tests/test_multiarray.py,[u'4'],1,1," -2764,7 +2764,9 ;",def test_export_record(self);
3162,4,7af1c67, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 25 Mar 2013 16:21:18 +0100","ct: [PATCH 3/4] API: Implement new flags API with NPY_RELAXED_STRIDES_CHECKINGThis largly reverts the changes to the flags setting api making thenewer preferable unsafe flags setting available through theNPY_RELAXED_STRIDES_CHECKING eviroment variable. This variable is meantfor testing if code will stop working when the flags definition is changed.The old definition is modified in some details to previously to enforcesafer strides (which was not the case before). This means that ndim==1size==1 arrays are not necessarily considered contiguous. Also emptyarrays are not considered contiguous in some cases that were contiguousbefore, and the rule that an array can only be both C and F-contiguousif it is one (or zero) dimensional is relaxed, as it is incorrect forsize <= 1 arrays.",8,148,27,numpy/core/tests/test_regression.py,[u'7'],4,0," -547,6 +547,9 ; -799,6 +802,10 ;","def test_reshape_zero_size(self, level=rlevel);def test_copy_detection_corner_case(self, level=rlevel);"
3162,4,507b09e, Sebastian Berg <sebastian@sipsolutions.net>," Tue, 2 Apr 2013 20:01:57 +0200",ct: [PATCH 4/4] TST: Add NPY_RELAXED_STRIDES_CHECKING to Travis,2,17,2,.travis.yml,[u'6'],5,1," -10,8 +10,12 ;",matrix;
3162,4,507b09e, Sebastian Berg <sebastian@sipsolutions.net>," Tue, 2 Apr 2013 20:01:57 +0200",ct: [PATCH 4/4] TST: Add NPY_RELAXED_STRIDES_CHECKING to Travis,2,17,2,tools/test-installed-numpy.py,[u'13'],12,1," -12,7 +12,7 ; -35,6 +35,17 ;",;;
3153,4,5e8b322, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 17 Mar 2013 16:04:36 +0100","ct: [PATCH 1/4] BUG: Do not reuse nditer buffers when not filled enough.This checks if the previous time around, the buffers were filledwith as much data as they would be filled this time around. SinceThis is difficult for the initial loop before reusing is activatedbecause in that case the buffer may be larger then just thefirst outer reduce dimension. In that case do not allow reuseunless the index along that dimension was 0.When the inner reduce index is not 0, then also the reusing ofthe buffer is dangerous.",1,26,4,numpy/core/src/multiarray/nditer_api.c,[u'30'],26,4," -2062,8 +2062,9 ; -2086,6 +2087,13 ; -2615,6 +2623,7 ; -2622,6 +2631,8 ; -2661,8 +2672,20 ; -2687,7 +2710,6 ;","npyiter_copy_to_buffers(NpyIter *iter, char **prev_dataptrs;npyiter_copy_to_buffers(NpyIter *iter, char **prev_dataptrs;npyiter_checkreducesize(NpyIter *iter, npy_intp count;npyiter_checkreducesize(NpyIter *iter, npy_intp count;npyiter_checkreducesize(NpyIter *iter, npy_intp count;npyiter_checkreducesize(NpyIter *iter, npy_intp count;"
3153,4,12dce71, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 17 Mar 2013 16:50:01 +0100",ct: [PATCH 2/4] TST: Add (slow) nditer reduce buffer reuse test,1,50,0,numpy/core/tests/test_nditer.py,[u'50'],41,0," -2017,6 +2017,56 ;",def test_iter_buffering_growinner();
3153,4,793e83d, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 18 Mar 2013 15:44:12 +0100","ct: [PATCH 3/4] BUG: no buffer reuse in nditer, if there was no buffer previouslyIf the buffer is used or not can possible change during iteration.In this case, the buffer cannot be reused if it never existed...",1,10,0,numpy/core/src/multiarray/nditer_api.c,[u'10'],10,0," -2192,6 +2192,11 ; -2235,6 +2240,11 ;","npyiter_copy_to_buffers(NpyIter *iter, char **prev_dataptrs;npyiter_copy_to_buffers(NpyIter *iter, char **prev_dataptrs;"
3153,4,1e6d6e6, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 18 Mar 2013 15:53:10 +0100",ct: [PATCH 4/4] TST: test no reuse of non-existing buffers in nditerThis slightly changes the test to cover more cases includingthe one where buffers are sometimes used and sometimes not.,1,22,21,numpy/core/tests/test_nditer.py,[u'43'],21,20," -2024,33 +2024,23 ; -2061,10 +2051,21 ;",def test_iter_buffered_reduce_reuse();def get_params();
3152,1,a29e14b, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 16 Mar 2013 18:19:30 +0100","ct: [PATCH] BUG: Fix possibly incorrect buffer reuse in nditer reductionWhen a buffer is reused, but in the previous iteration the outerreduction iteration was not at 0 (i.e. the first dimensionbeing iterated, that is not part of the reduction), then it waspossible that in the next iteration the buffer was reused, sincethe pointers can be the same. But the amount of data copied inthe new iteration would have been larger then what was bufferedbefore. To avoid this, this does two things:  1. Disallow reusing of buffers when the iteration was not at 0,     (unless it may already be reused, when it is safe)  2. Shrink the buffer, so that its end always corresponds to as     many zeros in the index as possible, so that these are     prefered, since they are safe.",1,31,18,numpy/core/src/multiarray/nditer_api.c,[u'49'],21,13," -2073,7 +2073,7 ; -2661,8 +2661,20 ; -2687,9 +2699,7 ; -2715,28 +2725,31 ;","npyiter_copy_to_buffers(NpyIter *iter, char **prev_dataptrs;npyiter_checkreducesize(NpyIter *iter, npy_intp count;npyiter_checkreducesize(NpyIter *iter, npy_intp count;npyiter_checkreducesize(NpyIter *iter, npy_intp count;"
3149,1,8bbca00, Warren Weckesser <warren.weckesser@gmail.com>," Fri, 15 Mar 2013 14:04:19 -0400",ct: [PATCH] ENH: ufunc: Add an attribute to the ufunc that enables the autogeneration of the function signature in the docstring.,5,109,26,doc/source/reference/ufuncs.rst,[u'6'],2,1," -374,8 +374,9 ; -391,6 +392,7 ;",possess. None of the attributes can be set;possess. None of the attributes can be set;
3149,1,8bbca00, Warren Weckesser <warren.weckesser@gmail.com>," Fri, 15 Mar 2013 14:04:19 -0400",ct: [PATCH] ENH: ufunc: Add an attribute to the ufunc that enables the autogeneration of the function signature in the docstring.,5,109,26,numpy/add_newdocs.py,[u'19'],7,0," -5384,6 +5384,25 ;","def luf(lamdaexpr, *args, **kwargs);"
3149,1,8bbca00, Warren Weckesser <warren.weckesser@gmail.com>," Fri, 15 Mar 2013 14:04:19 -0400",ct: [PATCH] ENH: ufunc: Add an attribute to the ufunc that enables the autogeneration of the function signature in the docstring.,5,109,26,numpy/core/include/numpy/ufuncobject.h,[u'7'],3,0," -212,6 +212,13 ;",typedef struct _tagPyUFuncObject ;
3149,1,8bbca00, Warren Weckesser <warren.weckesser@gmail.com>," Fri, 15 Mar 2013 14:04:19 -0400",ct: [PATCH] ENH: ufunc: Add an attribute to the ufunc that enables the autogeneration of the function signature in the docstring.,5,109,26,numpy/core/src/umath/ufunc_object.c,[u'90'],25,9," -4253,6 +4253,7 ; -4705,40 +4706,52 ; -4827,6 +4840,31 ; -4861,6 +4899,10 ;","PyUFunc_FromFuncAndDataAndSignature(PyUFuncGenericFunction *func, void **data;ufunc_get_doc(PyUFuncObject *ufunc;ufunc_get_signature(PyUFuncObject *ufunc;static PyGetSetDef ufunc_getset[] = ;"
3149,1,8bbca00, Warren Weckesser <warren.weckesser@gmail.com>," Fri, 15 Mar 2013 14:04:19 -0400",ct: [PATCH] ENH: ufunc: Add an attribute to the ufunc that enables the autogeneration of the function signature in the docstring.,5,109,26,numpy/core/tests/test_ufunc.py,[u'13'],5,0," -771,5 +771,18 ;","def add_inplace(a, b);"
3148,18,c7fff1b, Bill Spotz <wfspotz@sandia.gov>," Mon, 11 Mar 2013 20:38:18 -0600","ct: [PATCH 01/18] Got rid of a unit testThis test fails after updating numpy.i to deal with deprecated code.My investigation into the source of the failure is that the test nevershould have passed, so I commented it out.  I could be wrong.",1,12,9,doc/swig/test/testFortran.py,[u'21'],12,9," -24,16 +24,19 ; -41,7 +44,7 ;","def __init__(self, methodName=""runTests"");def testSecondElementFortran(self);"
3148,18,671cde1, Bill Spotz <wfspotz@sandia.gov>," Mon, 11 Mar 2013 20:39:27 -0600","ct: [PATCH 02/18] Upgrade numpy.iThe numpy.i file is now compliant with version 1.7 deprecations, butalso works with previous versions of numpy.  I have tested back tonumpy 1.4.1.Added 4D typemaps and memory-managed typemaps.  These were supplied byEgor Zindy.Fixed bugs in 3D typemaps.  I was referencing $3 when I should havebeen referencing $4.  Thanks to Egor Zindy for catching this.",1,1030,140,doc/swig/numpy.i,[u'1170'],47,7," -6,11 +6,23 ; -23,24 +35,45 ; -50,42 +83,59 ; -94,7 +144,8 ; -113,11 +164,12 ; -128,11 +180,12 ; -141,7 +194,7 ; -154,8 +207,10 ; -166,9 +221,9 ; -180,8 +235,10 ; -191,8 +248,10 ; -204,13 +263,14 ; -231,13 +291,14 ; -251,13 +312,12 ; -298,14 +358,16 ; -316,7 +378,9 ; -340,7 +404,8 ; -349,7 +414,9 ; -389,104 +456,144 ; -546,7 +653,8 ; -573,7 +681,8 ; -601,7 +710,8 ; -629,7 +739,8 ; -685,7 +796,8 ; -714,7 +826,8 ; -743,7 +856,8 ; -772,7 +886,8 ; -893,7 +1008,8 ; -909,6 +1025,161 ; -1204,6 +1475,127 ; -1213,7 +1605,7 ; -1231,7 +1623,7 ; -1259,7 +1651,7 ; -1287,7 +1679,7 ; -1305,7 +1697,7 ; -1318,6 +1710,24 ; -1336,7 +1746,7 ; -1355,7 +1765,7 ; -1375,7 +1785,7 ; -1395,7 +1805,7 ; -1415,8 +1825,8 ; -1436,8 +1846,8 ; -1459,7 +1869,7 ; -1481,7 +1891,7 ; -1503,8 +1913,8 ; -1526,12 +1936,492 ;",;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
3148,18,37e75e6, Bill Spotz <wfspotz@sandia.gov>," Mon, 11 Mar 2013 20:40:46 -0600","ct: [PATCH 03/18] Removed doc from list of sub-directoriesThe doc directory has been moved elsewhere, so I removed the referenceto it in the Makefile.",1,0,0,doc/swig/Makefile,[u'2'],1,1," -1,5 +1,5 ;",;
3148,18,cdf04e9, Bill Spotz <wfspotz@sandia.gov>," Mon, 11 Mar 2013 21:06:36 -0600",ct: [PATCH 04/18] Re-instated a Python 3 fix,1,2,0,doc/swig/numpy.i,[u'2'],2,0," -83,9 +83,11 ;",;
3148,18,64d04cd, Bill Spotz <wfspotz@sandia.gov>," Mon, 11 Mar 2013 21:16:42 -0600",ct: [PATCH 05/18] Added Egor's ARGOUTVIEWM_ARRAY3 typemaps,1,110,0,doc/swig/numpy.i,[u'110'],55,0," -2196,6 +2196,116 ;",;
3148,18,ed4c76b, Bill Spotz <wfspotz@sandia.gov>," Mon, 11 Mar 2013 21:31:16 -0600",ct: [PATCH 06/18] Initialize all DATA_TYPE* data_temp variables to NULL,1,53,53,doc/swig/numpy.i,[u'106'],27,28," -1738,7 +1738,7 ; -1757,7 +1757,7 ; -1776,7 +1776,7 ; -1796,7 +1796,7 ; -1816,7 +1816,7 ; -1837,7 +1837,7 ; -1858,8 +1858,8 ; -1881,7 +1881,7 ; -1902,8 +1902,8 ; -1925,8 +1925,8 ; -1948,8 +1948,8 ; -1972,8 +1972,8 ; -1996,8 +1996,8 ; -2021,8 +2021,8 ; -2050,7 +2050,7 ; -2074,7 +2074,7 ; -2098,7 +2098,7 ; -2123,7 +2123,7 ; -2148,7 +2148,7 ; -2174,7 +2174,7 ; -2200,8 +2200,8 ; -2227,8 +2227,8 ; -2254,8 +2254,8 ; -2282,8 +2282,8 ; -2310,8 +2310,8 ; -2338,8 +2338,8 ; -2366,8 +2366,8 ; -2395,8 +2395,8 ; -2421,11 +2421,11 ; -2448,12 +2448,12 ; -2480,8 +2480,8 ; -2509,8 +2509,8 ;",;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
3148,18,897f335, Bill Spotz <wfspotz@sandia.gov>," Thu, 14 Mar 2013 15:45:09 -0600","ct: [PATCH 07/18] Updated the numpy.i documentationThe RST documentation file is now consistent with the C macros, Cfunctions, and list of typemap signatures of the latest numpy.i file.",1,163,37,doc/source/reference/swig.interface-file.rst,[u'200'],22,5," -49,13 +49,13 ; -76,16 +76,16 ; -169,8 +169,7 ; -232,7 +231,7 ; -266,6 +265,14 ; -302,6 +309,14 ; -335,6 +350,10 ; -345,8 +364,8 ; -354,7 +373,7 ; -383,9 +402,50 ; -556,10 +616,34 ; -576,7 +660,7 ; -587,7 +671,7 ; -668,6 +752,23 ; -688,6 +789,26 ; -772,9 +893,9 ; -848,7 +969,7 ; -857,10 +978,10 ; -903,27 +1024,32 ;","internally convert it to a NumPy array before extracting its dat;either by type or by type and name.  We will refer to such lists a;Using numpy.;could be any of the C data types listed above, and ``DIM_TYPE`` whic;of array.  The input array signatures ar;signatures ar;argument.  The argout signatures ar;or 3D.  This is because of a quirk with the `SWIG`_ typemap syntax an;the user.  This can be dangerous.  There is almost no way to guarante;typemap signatures are therefor;Macro;Routine;Routine;Routine;Routine;Routine;There are other wrapping situations in which ``numpy.i`` may b;helpful when you encounter them;between NumPy arrays and C arrays;"
3148,18,179985f, Bill Spotz <wfspotz@sandia.gov>," Thu, 14 Mar 2013 15:47:17 -0600",ct: [PATCH 08/18] Updated numpy.i testing documentationSimple updates to include proper statistics on the number of typemapsignatures supported and the number of individual unit testsimplemented.,1,3,3,doc/source/reference/swig.testing.rst,[u'6'],3,3," -6,11 +6,11 ;",Introductio;
3148,18,4dcb067, Bill Spotz <wfspotz@sandia.gov>," Thu, 14 Mar 2013 15:50:32 -0600","ct: [PATCH 09/18] Minor adjustments to numpy.iThis includes so formatting adjustments, the removal of two unusedarguments for the make_fortran() function, fixing the number ofsupported typemap signatures, including the ARGOUT_ARRAY4 typemapsignature in the comments section, and renumbering the typemapsignatures.",1,34,34,doc/swig/numpy.i,[u'68'],28,28," -183,7 +183,7 ; -238,9 +238,7 ; -304,7 +302,7 ; -501,7 +499,7 ; -556,41 +554,43 ;",;;;;;
3148,18,91f083a, Egor Zindy <ezindy@gmail.com>," Sat, 16 Mar 2013 12:31:39 +0000",ct: [PATCH 10/18] fixed the testResize1 test in testArray.py -- Changed order of the resize arguments in Array2.h and replaced len(XXXnumpyarray) with XXXnumpyarray.size,2,7,7,doc/swig/test/Array2.h,[u'2'],1,1," -32,7 +32,7 ;",class Array;
3148,18,91f083a, Egor Zindy <ezindy@gmail.com>," Sat, 16 Mar 2013 12:31:39 +0000",ct: [PATCH 10/18] fixed the testResize1 test in testArray.py -- Changed order of the resize arguments in Array2.h and replaced len(XXXnumpyarray) with XXXnumpyarray.size,2,7,7,doc/swig/test/testArray.py,[u'12'],6,6," -69,7 +69,7 ; -177,11 +177,11 ;",def testResize1(self);def testResize0(self);
3148,18,1402d2c, Egor Zindy <ezindy@gmail.com>," Sat, 16 Mar 2013 12:40:34 +0000",ct: [PATCH 11/18] removed the note about testResize1 failing in testArray.py,1,0,5,doc/swig/test/Array.i,[u'5'],0,5," -50,11 +50,6 ;",;
3148,18,0caf9d7, zindy <ezindy@gmail.com>," Sat, 8 Jun 2013 23:27:28 +0200",ct: [PATCH 12/18] Fixed the capsule / cobject memory destructor. Added types to deal with lists of arrays and lists of tensors as input and inplace types.,1,676,165,doc/swig/numpy.i,[u'841'],44,11," -3,7 +3,7 ; -132,6 +132,16 ; -499,7 +509,7 ; -514,83 +524,87 ; -933,6 +947,90 ; -1085,6 +1183,91 ; -1405,6 +1588,74 ; -1523,6 +1774,76 ; -1617,7 +1938,7 ; -1645,7 +1966,7 ; -1673,7 +1994,7 ; -1691,7 +2012,7 ; -1709,7 +2030,7 ; -1717,7 +2038,7 ; -1727,7 +2048,7 ; -1748,9 +2069,11 ; -1767,9 +2090,11 ; -1787,9 +2112,11 ; -1807,9 +2134,11 ; -1829,6 +2158,7 ; -1850,6 +2180,7 ; -1871,9 +2202,11 ; -1893,9 +2226,11 ; -1917,6 +2252,7 ; -1940,6 +2276,7 ; -1951,7 +2288,6 ; -1963,9 +2299,11 ; -1975,7 +2313,6 ; -1987,9 +2324,11 ; -1999,7 +2338,6 ; -2011,8 +2349,9 ; -2024,7 +2363,6 ; -2036,8 +2374,9 ; -2052,7 +2391,6 ; -2061,13 +2399,24 ; -2076,7 +2425,6 ; -2085,13 +2433,24 ; -2100,7 +2459,6 ; -2110,13 +2468,24 ; -2125,7 +2494,6 ; -2135,13 +2503,24 ; -2150,7 +2529,6 ; -2160,12 +2538,22 ; -2176,7 +2564,6 ; -2186,12 +2573,22 ; -2203,7 +2600,6 ; -2214,13 +2610,24 ; -2230,7 +2637,6 ; -2241,13 +2647,24 ; -2257,7 +2674,6 ; -2268,12 +2684,22 ; -2285,7 +2711,6 ; -2296,12 +2721,22 ; -2313,7 +2748,6 ; -2325,13 +2759,24 ; -2341,7 +2786,6 ; -2353,13 +2797,24 ; -2369,7 +2824,6 ; -2381,12 +2835,22 ; -2398,7 +2862,6 ; -2410,12 +2873,22 ; -2427,7 +2900,6 ; -2439,13 +2911,24 ; -2455,7 +2938,6 ; -2467,13 +2949,24 ; -2483,7 +2976,6 ; -2495,12 +2987,22 ; -2512,7 +3014,6 ; -2524,12 +3025,22 ;",;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
3148,18,938f586, Egor Zindy <ezindy@gmail.com>," Sat, 8 Jun 2013 22:52:53 +0100",ct: [PATCH 13/18] cosmetic changes to numpy.i,1,0,8,doc/swig/numpy.i,[u'9'],1,8," -947,7 +947,6 ; -1029,7 +1028,6 ; -1183,7 +1181,7 ; -1267,7 +1265,6 ; -1588,7 +1585,6 ; -1654,7 +1650,6 ; -1774,7 +1769,6 ; -1842,7 +1836,6 ;",;;;;;;;;
3148,18,a21d825, Egor Zindy <ezindy@gmail.com>," Sat, 8 Jun 2013 22:59:48 +0100",ct: [PATCH 14/18] cleaned-up loop indexes in Tensor.cxx,3,52,52,doc/swig/test/Tensor.cxx,[u'80'],24,24," -7,11 +7,11 ; -35,32 +35,32 ; -68,31 +68,31 ; -104,14 +104,14 ;",";TYPE SNAME ## Norm(TYPE tensor[2][2][2]) {	     ;TYPE SNAME ## Min(int rows, int cols, int num, TYPE * tensor) {	;void SNAME ## LUSplit(TYPE tensor[2][2][2], TYPE lower[2][2][2], ;"
3148,18,a21d825, Egor Zindy <ezindy@gmail.com>," Sat, 8 Jun 2013 22:59:48 +0100",ct: [PATCH 14/18] cleaned-up loop indexes in Tensor.cxx,3,52,52,doc/swig/test/Tensor.h,[u'16'],5,5," -5,11 +5,11 ; -29,11 +29,11 ;",;;
3148,18,a21d825, Egor Zindy <ezindy@gmail.com>," Sat, 8 Jun 2013 22:59:48 +0100",ct: [PATCH 14/18] cleaned-up loop indexes in Tensor.cxx,3,52,52,doc/swig/test/Tensor.i,[u'8'],2,3," -17,15 +17,15 ;",;
3148,18,a2bac9d, Egor Zindy <ezindy@gmail.com>," Sat, 8 Jun 2013 23:02:15 +0100","ct: [PATCH 15/18] Added tests for 4D tensors. Now using a consistant cubes,slices,rows,columns index order everywhere.",4,635,0,doc/swig/test/SuperTensor.cxx,[u'144'],15,0," -0,0 +1,144 ;",;
3148,18,a2bac9d, Egor Zindy <ezindy@gmail.com>," Sat, 8 Jun 2013 23:02:15 +0100","ct: [PATCH 15/18] Added tests for 4D tensors. Now using a consistant cubes,slices,rows,columns index order everywhere.",4,635,0,doc/swig/test/SuperTensor.h,[u'53'],6,0," -0,0 +1,53 ;",;
3148,18,a2bac9d, Egor Zindy <ezindy@gmail.com>," Sat, 8 Jun 2013 23:02:15 +0100","ct: [PATCH 15/18] Added tests for 4D tensors. Now using a consistant cubes,slices,rows,columns index order everywhere.",4,635,0,doc/swig/test/SuperTensor.i,[u'50'],5,0," -0,0 +1,50 ;",;
3148,18,a2bac9d, Egor Zindy <ezindy@gmail.com>," Sat, 8 Jun 2013 23:02:15 +0100","ct: [PATCH 15/18] Added tests for 4D tensors. Now using a consistant cubes,slices,rows,columns index order everywhere.",4,635,0,doc/swig/test/testSuperTensor.py,[u'388'],39,0," -0,0 +1,388 ;",;
3148,18,1ed31cd, Egor Zindy <ezindy@gmail.com>," Sun, 16 Jun 2013 21:46:36 +0100","ct: [PATCH 16/18] =?UTF-8?q?Removed=20'static'=20keyword=20from=20pyf?= =?UTF-8?q?ragments.swg=20altoghether.=20I've=20had=20the=20following=20er?= =?UTF-8?q?rors=20In=20function=20=E2=80=98SWIG=5FAsVal=5Flong=E2=80=99:?= =?UTF-8?q?=20error:=20initialiser=20element=20is=20not=20constant=20In=20?= =?UTF-8?q?function=20=E2=80=98SWIG=5FAsVal=5Funsigned=5FSS=5Flong?= =?UTF-8?q?=E2=80=99:=20error:=20initialiser=20element=20is=20not=20consta?= =?UTF-8?q?nt,=20BOTH=20in=20Windows/MinGW=20and=20Linux=20when=20compilin?= =?UTF-8?q?g=20with=20gcc?=MIME-Version: 1.0Content-Type: text/plain; charset=UTF-8Content-Transfer-Encoding: 8bit",1,2,2,doc/swig/pyfragments.swg,[u'4'],2,2," -22,7 +22,7 ; -74,7 +74,7 ;",;;
3148,18,f56411b, Egor Zindy <ezindy@gmail.com>," Sun, 16 Jun 2013 21:59:27 +0100",ct: [PATCH 17/18] Added mention of the SuperTensor tests in the README file,1,40,20,doc/swig/README,[u'60'],38,19," -9,8 +9,8 ; -32,6 +32,11 ; -72,8 +77,21 ; -87,25 +105,27 ;",distribution;The files related to testing are are in the test subdirectory:;Tensor.h:;The objective for the INPLACE_ARRAY signatures is for SWIG to generat;
3148,18,f70632f, Egor Zindy <ezindy@gmail.com>," Sun, 16 Jun 2013 22:50:40 +0100",ct: [PATCH 18/18] Added more mentions of the SuperTensor tests and corrected the number of typemaps and tests (currently 1427 unit tests passed with 'make test': 372+324+324+324+40+19+24),2,10,8,doc/source/reference/swig.interface-file.rst,[u'4'],2,2," -1024,7 +1024,7 ; -1043,7 +1043,7 ;",between NumPy arrays and C arrays;The ``numpy.i`` interface file also provides additional tools fo;
3148,18,f70632f, Egor Zindy <ezindy@gmail.com>," Sun, 16 Jun 2013 22:50:40 +0100",ct: [PATCH 18/18] Added more mentions of the SuperTensor tests and corrected the number of typemaps and tests (currently 1427 unit tests passed with 'make test': 372+324+324+324+40+19+24),2,10,8,doc/source/reference/swig.testing.rst,[u'14'],8,6," -6,11 +6,11 ; -56,9 +56,11 ;",Introductio;each data type supported;
3141,1,e58c22b, Eric Moore <ewm@redtetrahedron.org>," Tue, 12 Mar 2013 19:10:46 -0400","ct: [PATCH] TST: test_umath: fix wrong indent in test_fast_powerAlso, use assert_ instead of assert",1,3,3,numpy/core/tests/test_umath.py,[u'6'],3,3," -158,9 +158,9 ;","def assert_complex_equal(x, y);"
3136,8,6231088, Ralf Gommers <ralf.gommers@googlemail.com>," Wed, 6 Mar 2013 21:41:01 +0100","ct: [PATCH 1/8] BUG: fix issue with distutils.exec_command introduced in 1.7.0.Closes gh-2999 and gh-2915.There are several packages (nose, scipy.weave.inline, Sage inline Fortran) thatreplace stdout, in which case it doesn't have a fileno method.  This method wasattempted to be used (change in gh-2766 to fix a py3k issue).Conflicts:	numpy/distutils/exec_command.py",2,55,16,numpy/distutils/exec_command.py,[u'42'],18,12," -194,7 +194,8 ; -348,12 +349,17 ; -370,13 +376,16 ; -386,8 +395,9 ;","def exec_command( command;def _exec_command( command, use_shell=None, use_tee = None, **env );def _exec_command( command, use_shell=None, use_tee = None, **env );def _exec_command( command, use_shell=None, use_tee = None, **env );"
3136,8,6231088, Ralf Gommers <ralf.gommers@googlemail.com>," Wed, 6 Mar 2013 21:41:01 +0100","ct: [PATCH 1/8] BUG: fix issue with distutils.exec_command introduced in 1.7.0.Closes gh-2999 and gh-2915.There are several packages (nose, scipy.weave.inline, Sage inline Fortran) thatreplace stdout, in which case it doesn't have a fileno method.  This method wasattempted to be used (change in gh-2766 to fix a py3k issue).Conflicts:	numpy/distutils/exec_command.py",2,55,16,numpy/distutils/tests/test_exec_command.py,[u'29'],21,0," -0,0 +1,29 ;",;
3136,8,1c016fb, Ondrej Certik <ondrej.certik@gmail.com>," Thu, 7 Mar 2013 15:40:10 +0100","ct: [PATCH 2/8] FIX: add _supports_fileno() for testing fileno()The new _supports_fileno() function works in all versions of Python.The problem was that in Python 2.x, the fileno() method of StringIO() ismissing, while in Python 3.x, it is present, but raises an exception.",1,15,2,numpy/distutils/exec_command.py,[u'17'],15,2," -140,6 +140,19 ; -194,7 +207,7 ; -349,7 +362,7 ;","def _update_environment( **env );def exec_command( command;def _exec_command( command, use_shell=None, use_tee = None, **env );"
3136,8,361a76c, Ondrej Certik <ondrej.certik@gmail.com>," Thu, 7 Mar 2013 16:10:27 +0100",ct: [PATCH 3/8] PEP8: don't use \,1,2,2,numpy/distutils/exec_command.py,[u'4'],2,2," -207,8 +207,8 ;",def exec_command( command;
3136,8,0ad86c5, Ondrej Certik <ondrej.certik@gmail.com>," Sat, 9 Mar 2013 12:19:24 +0100","ct: [PATCH 4/8] TST: add robust tests for exec_command()First, we test both stdout and stderr.Second, we now test both _exec_command_posix() and _exec_command(), seenumpy/distutils/exec_command.py. This reveals a bug in the implementation whichwill be fixed in the next commit. For now the failing test is commented out sothat all tests still pass.",1,44,0,numpy/distutils/tests/test_exec_command.py,[u'45'],29,1," -1,3 +1,4 ; -17,13 +18,55 ;",";def __exit__(self, exc_type, exc_value, traceback);"
3136,8,8ca9bd5, Ondrej Certik <ondrej.certik@gmail.com>," Sat, 9 Mar 2013 12:22:08 +0100",ct: [PATCH 5/8] Implement separate checking for stdout and stderrAnd enable a test for this that was failing before.,2,14,15,numpy/distutils/exec_command.py,[u'22'],11,11," -362,17 +362,16 ; -389,10 +388,10 ; -408,8 +407,9 ;","def _exec_command( command, use_shell=None, use_tee = None, **env );def _exec_command( command, use_shell=None, use_tee = None, **env );def _exec_command( command, use_shell=None, use_tee = None, **env );"
3136,8,8ca9bd5, Ondrej Certik <ondrej.certik@gmail.com>," Sat, 9 Mar 2013 12:22:08 +0100",ct: [PATCH 5/8] Implement separate checking for stdout and stderrAnd enable a test for this that was failing before.,2,14,15,numpy/distutils/tests/test_exec_command.py,[u'7'],3,4," -66,7 +66,6 ;",def test_exec_command_stderr();
3136,8,eb0e3f8, Ondrej Certik <ondrej.certik@gmail.com>," Sun, 10 Mar 2013 15:21:45 +0100",ct: [PATCH 6/8] TST: Redirect the other stream to temp. fileNow things behave the same if executed with either of:nosetestsnosetests -s,1,11,6,numpy/distutils/tests/test_exec_command.py,[u'17'],11,6," -1,6 +1,7 ; -53,19 +54,23 ;",;def test_exec_command_stdout();
3136,8,1660575, Ondrej Certik <ondrej.certik@gmail.com>," Sun, 10 Mar 2013 15:31:07 +0100",ct: [PATCH 7/8] TST: skip general test on non-posix platformsAdd a comment explaining the issue.,1,15,10,numpy/distutils/tests/test_exec_command.py,[u'25'],15,10," -52,16 +52,20 ; -69,8 +73,9 ;",def test_exec_command_stdout();def test_exec_command_stderr();
3136,8,e151843, Ondrej Certik <ondrej.certik@gmail.com>," Sun, 10 Mar 2013 15:39:59 +0100","ct: [PATCH 8/8] TST: rework tests to work with Python 2.4Instead of using the ""with"" statement, we introduce 'fake_with' function thatdoes the same.",1,21,14,numpy/distutils/tests/test_exec_command.py,[u'35'],18,12," -6,6 +6,13 ; -56,26 +63,26 ;",;def test_exec_command_stdout();
3135,1,1be0d08, Mark Wiebe <mwwiebe@gmail.com>," Thu, 7 Mar 2013 17:19:24 -0800",ct: [PATCH] DOC: Add mention of PyArray_SetBaseObject stealing a reference,1,4,2,doc/source/reference/c-api.array.rst,[u'6'],4,2," -335,10 +335,12 ;",From scratc;
3134,1,07377a6, Maximilian Albert <maximilian.albert@gmail.com>," Wed, 6 Mar 2013 09:00:53 +0000","ct: [PATCH] DOC: Fix typo in fft docs (the indexing variable is 'm', not 'n').",1,0,0,numpy/fft/info.py,[u'2'],1,1," -112,7 +112,7 ;",;
3131,1,8415e89," ""Bradley M. Froehle"" <brad.froehle@gmail.com>"," Tue, 24 Jul 2012 15:59:53 -0700",ct: [PATCH] BUG: Exported f2py_size symbol prevents linking multiple f2py modules.,1,0,0,numpy/f2py/cfuncs.py,[u'2'],1,1," -260,7 +260,7 ;",;
3130,1,5a3ecaf, Mark Wiebe <mwwiebe@gmail.com>," Thu, 7 Mar 2013 17:19:24 -0800",ct: [PATCH] DOC: Add mention of PyArray_SetBaseObject stealing a reference,1,4,2,doc/source/reference/c-api.array.rst,[u'6'],4,2," -335,10 +335,12 ;",From scratc;
3128,7,ff01555, Ralf Gommers <ralf.gommers@googlemail.com>," Wed, 6 Mar 2013 21:41:01 +0100","ct: [PATCH 1/7] BUG: fix issue with distutils.exec_command introduced in 1.7.0.Closes gh-2999 and gh-2915.There are several packages (nose, scipy.weave.inline, Sage inline Fortran) thatreplace stdout, in which case it doesn't have a fileno method.  This method wasattempted to be used (change in gh-2766 to fix a py3k issue).",2,55,16,numpy/distutils/exec_command.py,[u'42'],18,12," -195,7 +195,8 ; -349,12 +350,17 ; -371,13 +377,16 ; -387,8 +396,9 ;","def exec_command( command;def _exec_command( command, use_shell=None, use_tee = None, **env );def _exec_command( command, use_shell=None, use_tee = None, **env );def _exec_command( command, use_shell=None, use_tee = None, **env );"
3128,7,ff01555, Ralf Gommers <ralf.gommers@googlemail.com>," Wed, 6 Mar 2013 21:41:01 +0100","ct: [PATCH 1/7] BUG: fix issue with distutils.exec_command introduced in 1.7.0.Closes gh-2999 and gh-2915.There are several packages (nose, scipy.weave.inline, Sage inline Fortran) thatreplace stdout, in which case it doesn't have a fileno method.  This method wasattempted to be used (change in gh-2766 to fix a py3k issue).",2,55,16,numpy/distutils/tests/test_exec_command.py,[u'29'],21,0," -0,0 +1,29 ;",;
3128,7,7c3b6dd, Ondrej Certik <ondrej.certik@gmail.com>," Thu, 7 Mar 2013 15:40:10 +0100","ct: [PATCH 2/7] FIX: add _supports_fileno() for testing fileno()The new _supports_fileno() function works in all versions of Python.The problem was that in Python 2.x, the fileno() method of StringIO() ismissing, while in Python 3.x, it is present, but raises an exception.",1,15,2,numpy/distutils/exec_command.py,[u'17'],15,2," -141,6 +141,19 ; -195,7 +208,7 ; -350,7 +363,7 ;","def _update_environment( **env );def exec_command( command;def _exec_command( command, use_shell=None, use_tee = None, **env );"
3128,7,6c6194a, Ondrej Certik <ondrej.certik@gmail.com>," Thu, 7 Mar 2013 16:10:27 +0100",ct: [PATCH 3/7] PEP8: don't use \,1,2,2,numpy/distutils/exec_command.py,[u'4'],2,2," -208,8 +208,8 ;",def exec_command( command;
3128,7,2fbdd99, Ondrej Certik <ondrej.certik@gmail.com>," Sat, 9 Mar 2013 12:19:24 +0100","ct: [PATCH 4/7] TST: add robust tests for exec_command()First, we test both stdout and stderr.Second, we now test both _exec_command_posix() and _exec_command(), seenumpy/distutils/exec_command.py. This reveals a bug in the implementation whichwill be fixed in the next commit. For now the failing test is commented out sothat all tests still pass.",1,44,0,numpy/distutils/tests/test_exec_command.py,[u'45'],29,1," -1,3 +1,4 ; -17,13 +18,55 ;",";def __exit__(self, exc_type, exc_value, traceback);"
3128,7,92770f4, Ondrej Certik <ondrej.certik@gmail.com>," Sat, 9 Mar 2013 12:22:08 +0100",ct: [PATCH 5/7] Implement separate checking for stdout and stderrAnd enable a test for this that was failing before.,2,14,15,numpy/distutils/exec_command.py,[u'22'],11,11," -363,17 +363,16 ; -390,10 +389,10 ; -409,8 +408,9 ;","def _exec_command( command, use_shell=None, use_tee = None, **env );def _exec_command( command, use_shell=None, use_tee = None, **env );def _exec_command( command, use_shell=None, use_tee = None, **env );"
3128,7,92770f4, Ondrej Certik <ondrej.certik@gmail.com>," Sat, 9 Mar 2013 12:22:08 +0100",ct: [PATCH 5/7] Implement separate checking for stdout and stderrAnd enable a test for this that was failing before.,2,14,15,numpy/distutils/tests/test_exec_command.py,[u'7'],3,4," -66,7 +66,6 ;",def test_exec_command_stderr();
3128,7,36c4321, Ondrej Certik <ondrej.certik@gmail.com>," Sun, 10 Mar 2013 15:21:45 +0100",ct: [PATCH 6/7] TST: Redirect the other stream to temp. fileNow things behave the same if executed with either of:nosetestsnosetests -s,1,11,6,numpy/distutils/tests/test_exec_command.py,[u'17'],11,6," -1,6 +1,7 ; -53,19 +54,23 ;",;def test_exec_command_stdout();
3128,7,5099683, Ondrej Certik <ondrej.certik@gmail.com>," Sun, 10 Mar 2013 15:31:07 +0100",ct: [PATCH 7/7] TST: skip general test on non-posix platformsAdd a comment explaining the issue.,1,15,10,numpy/distutils/tests/test_exec_command.py,[u'25'],15,10," -52,16 +52,20 ; -69,8 +73,9 ;",def test_exec_command_stdout();def test_exec_command_stderr();
3127,1,ff01555, Ralf Gommers <ralf.gommers@googlemail.com>," Wed, 6 Mar 2013 21:41:01 +0100","ct: [PATCH] BUG: fix issue with distutils.exec_command introduced in 1.7.0.Closes gh-2999 and gh-2915.There are several packages (nose, scipy.weave.inline, Sage inline Fortran) thatreplace stdout, in which case it doesn't have a fileno method.  This method wasattempted to be used (change in gh-2766 to fix a py3k issue).",2,55,16,numpy/distutils/exec_command.py,[u'42'],18,12," -195,7 +195,8 ; -349,12 +350,17 ; -371,13 +377,16 ; -387,8 +396,9 ;","def exec_command( command;def _exec_command( command, use_shell=None, use_tee = None, **env );def _exec_command( command, use_shell=None, use_tee = None, **env );def _exec_command( command, use_shell=None, use_tee = None, **env );"
3127,1,ff01555, Ralf Gommers <ralf.gommers@googlemail.com>," Wed, 6 Mar 2013 21:41:01 +0100","ct: [PATCH] BUG: fix issue with distutils.exec_command introduced in 1.7.0.Closes gh-2999 and gh-2915.There are several packages (nose, scipy.weave.inline, Sage inline Fortran) thatreplace stdout, in which case it doesn't have a fileno method.  This method wasattempted to be used (change in gh-2766 to fix a py3k issue).",2,55,16,numpy/distutils/tests/test_exec_command.py,[u'29'],21,0," -0,0 +1,29 ;",;
3124,1,f781708," ""Bradley M. Froehle"" <brad.froehle@gmail.com>"," Sun, 10 Feb 2013 11:13:49 -0800","ct: [PATCH] BUG: PyArray_LexSort allocates too much temporary memory.PyArray_LexSort was allocating memory to hold actual PyArrayObject'sand PyArrayIterObject's, but only storing pointers to such objectsin the array.",1,2,2,numpy/core/src/multiarray/item_selection.c,[u'4'],2,2," -1288,11 +1288,11 ;","PyArray_LexSort(PyObject *sort_keys, int axis;"
3123,1,c3fedb3, Maximilian Albert <maximilian.albert@gmail.com>," Wed, 6 Mar 2013 09:00:53 +0000","ct: [PATCH] DOC: Fix typo in fft docs (the indexing variable is 'm', not 'n').",1,0,0,numpy/fft/info.py,[u'2'],1,1," -113,7 +113,7 ;",;
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,doc/neps/missing-data.rst,[u'2'],1,1," -320,7 +320,7 ;",A manual loop through a masked array like:;
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,doc/source/reference/arrays.classes.rst,[u'2'],1,1," -340,7 +340,7 ;",The default iterator of an ndarray object is the default Pytho;
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/add_newdocs.py,[u'8'],4,4," -5405,7 +5405,7 ; -5486,7 +5486,7 ; -5666,8 +5666,8 ;","def luf(lamdaexpr, *args, **kwargs);def luf(lamdaexpr, *args, **kwargs);def luf(lamdaexpr, *args, **kwargs);"
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/core/_internal.py,[u'2'],1,1," -414,7 +414,7 ;",def get_dummy_name();
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/core/_methods.py,[u'2'],1,1," -35,7 +35,7 ;","def _all(a, axis=None, dtype=None, out=None, keepdims=False);"
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/core/arrayprint.py,[u'8'],4,4," -480,14 +480,14 ; -498,7 +498,7 ; -509,7 +509,7 ;","def _formatArray(a, format_function, rank, max_line_len;def _formatArray(a, format_function, rank, max_line_len;def _formatArray(a, format_function, rank, max_line_len;"
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/core/code_generators/genapi.py,[u'2'],1,1," -203,7 +203,7 ;","def find_functions(filename, tag='API');"
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/core/machar.py,[u'16'],8,8," -123,7 +123,7 ; -132,7 +132,7 ; -146,7 +146,7 ; -158,7 +158,7 ; -182,7 +182,7 ; -201,7 +201,7 ; -223,7 +223,7 ; -249,7 +249,7 ;","def _do_init(self, float_conv, int_conv, float_to_float, float_to_str, title);def _do_init(self, float_conv, int_conv, float_to_float, float_to_str, title);def _do_init(self, float_conv, int_conv, float_to_float, float_to_str, title);def _do_init(self, float_conv, int_conv, float_to_float, float_to_str, title);def _do_init(self, float_conv, int_conv, float_to_float, float_to_str, title);def _do_init(self, float_conv, int_conv, float_to_float, float_to_str, title);def _do_init(self, float_conv, int_conv, float_to_float, float_to_str, title);def _do_init(self, float_conv, int_conv, float_to_float, float_to_str, title);"
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/core/numeric.py,[u'8'],4,4," -1040,8 +1040,8 ; -1065,7 +1065,7 ; -1213,7 +1213,7 ;","def tensordot(a, b, axes=2);def tensordot(a, b, axes=2);def rollaxis(a, axis, start=0);"
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/core/numerictypes.py,[u'2'],1,1," -112,7 +112,7 ;",class long(int);
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/core/records.py,[u'4'],2,2," -603,7 +603,7 ; -622,7 +622,7 ;","def fromrecords(recList, dtype=None, shape=None, formats=None, names=None;def fromrecords(recList, dtype=None, shape=None, formats=None, names=None;"
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/core/tests/test_blasdot.py,[u'2'],1,1," -49,7 +49,7 ;",def test_dot_3args();
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/core/tests/test_item_selection.py,[u'2'],1,1," -47,7 +47,7 ;",def test_simple(self);
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/core/tests/test_multiarray.py,[u'22'],11,11," -579,7 +579,7 ; -729,7 +729,7 ; -1059,7 +1059,7 ; -1311,10 +1311,10 ; -1379,10 +1379,10 ; -1541,7 +1541,7 ; -2109,7 +2109,7 ; -2532,7 +2532,7 ; -2793,7 +2793,7 ;","def test_sort(self);def test_argsort(self);def test_diagonal_memleak(self);class TestArgmax(TestCase);class TestArgmin(TestCase);def test_masked_array(self);def test_dot_3args(self);def _check(self, spec, wanted);def test_export_endian(self);"
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/core/tests/test_multiarray_assignment.py,[u'2'],1,1," -45,7 +45,7 ;",def _indices(ndims);
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/core/tests/test_nditer.py,[u'26'],13,13," -1435,32 +1435,32 ; -1572,7 +1572,7 ; -1804,7 +1804,7 ;",def test_iter_iterindex();def assign_iter(i);def test_iter_buffered_cast_subarray();
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/core/tests/test_numeric.py,[u'2'],1,1," -520,7 +520,7 ;",def test_can_cast(self);
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/core/tests/test_records.py,[u'6'],3,3," -54,11 +54,11 ; -81,7 +81,7 ;",def test_recarray_from_obj(self);def test_recarray_from_names(self);
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/core/tests/test_regression.py,[u'16'],8,8," -240,7 +240,7 ; -675,7 +675,7 ; -1188,7 +1188,7 ; -1229,8 +1229,8 ; -1413,8 +1413,8 ; -1550,7 +1550,7 ;","def test_arange_endian(self,level=rlevel);def test_mem_string_arr(self, level=rlevel);def test_blasdot_uninitialized_memory(self);def test_huge_arange(self);def test_log1p_compiler_shenanigans(self);def test_uint_int_conversion(self);"
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/core/tests/test_shape_base.py,[u'2'],1,1," -151,7 +151,7 ;",def test_2D_array2(self);
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/core/tests/test_ufunc.py,[u'2'],1,1," -449,7 +449,7 ;",def permute_n(n);
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/core/tests/test_umath_complex.py,[u'4'],2,2," -400,7 +400,7 ; -413,7 +413,7 ;",def test_simple(self);def test_scalar(self);
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/distutils/misc_util.py,[u'2'],1,1," -1047,7 +1047,7 ;","def add_data_dir(self,data_path);"
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/f2py/crackfortran.py,[u'2'],1,1," -292,7 +292,7 ;","def readfortrancode(ffile,dowithline=show,istop=1);"
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/f2py/tests/util.py,[u'2'],1,1," -58,7 +58,7 ;",def get_module_dir();
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/fft/fftpack.py,[u'4'],2,2," -511,7 +511,7 ; -522,7 +522,7 ;","def _cook_nd_args(a, s=None, axes=None, invreal=0);def _cook_nd_args(a, s=None, axes=None, invreal=0);"
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/fft/helper.py,[u'4'],2,2," -60,7 +60,7 ; -108,7 +108,7 ;","def fftshift(x, axes=None);def ifftshift(x, axes=None);"
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/lib/arraypad.py,[u'2'],1,1," -760,7 +760,7 ;","def pad(array, pad_width, mode=None, **kwargs);"
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/lib/function_base.py,[u'4'],2,2," -2589,7 +2589,7 ; -3467,7 +3467,7 ;","def _chbevl(x, vals);def delete(arr, obj, axis=None);"
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/lib/index_tricks.py,[u'2'],1,1," -307,7 +307,7 ;","def __getitem__(self,key);"
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/lib/npyio.py,[u'6'],3,3," -780,7 +780,7 ; -804,7 +804,7 ; -1339,7 +1339,7 ;","def split_line(line);def split_line(line);def genfromtxt(fname, dtype=float, comments='#', delimiter=None;"
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/lib/shape_base.py,[u'4'],2,2," -74,7 +74,7 ; -754,7 +754,7 ;","def apply_along_axis(func1d,axis,arr,*args);def kron(a,b);"
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/lib/tests/test_financial.py,[u'6'],3,3," -124,15 +124,15 ;",def test_broadcast(self);
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/lib/tests/test_function_base.py,[u'2'],1,1," -887,7 +887,7 ;",def test_simple(self);
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/lib/tests/test_io.py,[u'2'],1,1," -160,7 +160,7 ;",def writer(error_list);
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/lib/tests/test_twodim_base.py,[u'2'],1,1," -191,7 +191,7 ;",def test_simple(self);
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/linalg/linalg.py,[u'2'],1,1," -226,7 +226,7 ;","def tensorsolve(a, b, axes=None);"
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/ma/extras.py,[u'4'],2,2," -337,7 +337,7 ; -729,7 +729,7 ;","def apply_along_axis(func1d, axis, arr, *args, **kwargs);def compress_rowcols(x, axis=None);"
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/ma/tests/test_core.py,[u'12'],6,6," -381,7 +381,7 ; -2983,11 +2983,11 ;",def test_pickling(self);def test_masked_where_shape_constraint(self);
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/ma/tests/test_old_ma.py,[u'10'],5,5," -388,13 +388,13 ;",def test_testOddFeatures(self);
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/matrixlib/tests/test_defmatrix.py,[u'4'],2,2," -211,13 +211,13 ;",def test_basic(self);
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/numarray/functions.py,[u'6'],3,3," -155,7 +155,7 ; -405,7 +405,7 ; -441,7 +441,7 ;","class FileSeekWarning(Warning);def put(array, indices, values, axis=0, clipmode=RAISE);def take(array, indices, axis=0, outarr=None, clipmode=RAISE);"
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/oldnumeric/__init__.py,[u'2'],1,1," -11,7 +11,7 ;","def _move_axis_to_0(a, axis);"
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/polynomial/tests/test_chebyshev.py,[u'6'],3,3," -265,7 +265,7 ; -275,7 +275,7 ; -285,7 +285,7 ;",def test_chebint(self) ;def test_chebint(self) ;def test_chebint(self) ;
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/polynomial/tests/test_hermite.py,[u'6'],3,3," -255,7 +255,7 ; -265,7 +265,7 ; -275,7 +275,7 ;",def test_hermint(self) ;def test_hermint(self) ;def test_hermint(self) ;
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/polynomial/tests/test_hermite_e.py,[u'6'],3,3," -252,7 +252,7 ; -262,7 +262,7 ; -272,7 +272,7 ;",def test_hermeint(self) ;def test_hermeint(self) ;def test_hermeint(self) ;
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/polynomial/tests/test_laguerre.py,[u'6'],3,3," -250,7 +250,7 ; -260,7 +260,7 ; -270,7 +270,7 ;",def test_lagint(self) ;def test_lagint(self) ;def test_lagint(self) ;
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/polynomial/tests/test_legendre.py,[u'6'],3,3," -254,7 +254,7 ; -264,7 +264,7 ; -274,7 +274,7 ;",def test_legint(self) ;def test_legint(self) ;def test_legint(self) ;
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/polynomial/tests/test_polynomial.py,[u'6'],3,3," -253,7 +253,7 ; -263,7 +263,7 ; -273,7 +273,7 ;",def test_polyint(self) ;def test_polyint(self) ;def test_polyint(self) ;
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/testing/tests/test_decorators.py,[u'8'],4,4," -88,7 +88,7 ; -102,7 +102,7 ; -121,7 +121,7 ; -136,7 +136,7 ;",def f2(x);def g1(x);def skip_tester();def g1(x);
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,numpy/testing/tests/test_utils.py,[u'2'],1,1," -378,7 +378,7 ;",class TestArrayAlmostEqualNulp(unittest.TestCase);
3122,2,91aa03f, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 21:43:22 -0700","ct: [PATCH 1/2] 2to3: Replace xrange by range and use list(range(...)) where neededIn python3 range is an iterator and `xrange` has been removed. This hastwo consequence for code:    1) Where a list is needed `list(range(...))` must be used.    2) `xrange` must be replaced by `range`Both of these changes also work in python2 and this patch makes both.There are three places fixed that do not need it, but I left them inso that the result would be `xrange` clean.Closes #3092",52,137,136,tools/py3tool.py,[u'1'],1,0," -80,6 +80,7 ;",;
3122,2,b995d00, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Mar 2013 18:49:12 -0600","ct: [PATCH 2/2] BUG: Rebased tools/py3tool.py was missing `,` in list.",1,0,0,tools/py3tool.py,[u'2'],1,1," -79,7 +79,7 ;",;
3121,1,342f074, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 12:09:12 -0700","ct: [PATCH] 2to3: Remove xreadlines and replace f.readlines() by f where valid.An open file `f` has been an iterator since python2.3 and`f.xreadlines()` is no longer needed, so replace it with `f`. Alsoreplace `f.readlines()` with `f` where an iterator will do. Thereplacement of `f.readlines()` is not critical because it is a list inboth python2 and python3, but the code is a bit cleaner.Closes #3093",13,18,20,numpy/core/code_generators/genapi.py,[u'2'],1,1," -465,7 +465,7 ;",def get_versions_hash();
3121,1,342f074, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 12:09:12 -0700","ct: [PATCH] 2to3: Remove xreadlines and replace f.readlines() by f where valid.An open file `f` has been an iterator since python2.3 and`f.xreadlines()` is no longer needed, so replace it with `f`. Alsoreplace `f.readlines()` with `f` where an iterator will do. Thereplacement of `f.readlines()` is not critical because it is a list inboth python2 and python3, but the code is a bit cleaner.Closes #3093",13,18,20,numpy/core/setup.py,[u'2'],1,1," -484,7 +484,7 ;","def generate_config_h(ext, build_dir);"
3121,1,342f074, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 12:09:12 -0700","ct: [PATCH] 2to3: Remove xreadlines and replace f.readlines() by f where valid.An open file `f` has been an iterator since python2.3 and`f.xreadlines()` is no longer needed, so replace it with `f`. Alsoreplace `f.readlines()` with `f` where an iterator will do. Thereplacement of `f.readlines()` is not critical because it is a list inboth python2 and python3, but the code is a bit cleaner.Closes #3093",13,18,20,numpy/distutils/command/build_src.py,[u'8'],3,5," -37,7 +37,7 ; -767,9 +767,8 ; -794,8 +793,7 ;","def subst_vars(target, source, d);def get_swig_target(source);def _find_swig_target(target_dir,name);"
3121,1,342f074, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 12:09:12 -0700","ct: [PATCH] 2to3: Remove xreadlines and replace f.readlines() by f where valid.An open file `f` has been an iterator since python2.3 and`f.xreadlines()` is no longer needed, so replace it with `f`. Alsoreplace `f.readlines()` with `f` where an iterator will do. Thereplacement of `f.readlines()` is not critical because it is a list inboth python2 and python3, but the code is a bit cleaner.Closes #3093",13,18,20,numpy/distutils/command/install.py,[u'2'],1,1," -64,7 +64,7 ;",def run(self);
3121,1,342f074, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 12:09:12 -0700","ct: [PATCH] 2to3: Remove xreadlines and replace f.readlines() by f where valid.An open file `f` has been an iterator since python2.3 and`f.xreadlines()` is no longer needed, so replace it with `f`. Alsoreplace `f.readlines()` with `f` where an iterator will do. Thereplacement of `f.readlines()` is not critical because it is a list inboth python2 and python3, but the code is a bit cleaner.Closes #3093",13,18,20,numpy/distutils/conv_template.py,[u'2'],1,1," -271,7 +271,7 ;",def resolve_includes(source);
3121,1,342f074, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 12:09:12 -0700","ct: [PATCH] 2to3: Remove xreadlines and replace f.readlines() by f where valid.An open file `f` has been an iterator since python2.3 and`f.xreadlines()` is no longer needed, so replace it with `f`. Alsoreplace `f.readlines()` with `f` where an iterator will do. Thereplacement of `f.readlines()` is not critical because it is a list inboth python2 and python3, but the code is a bit cleaner.Closes #3093",13,18,20,numpy/distutils/fcompiler/__init__.py,[u'2'],1,1," -971,7 +971,7 ;",def get_f77flags(src);
3121,1,342f074, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 12:09:12 -0700","ct: [PATCH] 2to3: Remove xreadlines and replace f.readlines() by f where valid.An open file `f` has been an iterator since python2.3 and`f.xreadlines()` is no longer needed, so replace it with `f`. Alsoreplace `f.readlines()` with `f` where an iterator will do. Thereplacement of `f.readlines()` is not critical because it is a list inboth python2 and python3, but the code is a bit cleaner.Closes #3093",13,18,20,numpy/distutils/fcompiler/ibm.py,[u'2'],1,1," -76,7 +76,7 ;",def get_flags_linker_so(self);
3121,1,342f074, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 12:09:12 -0700","ct: [PATCH] 2to3: Remove xreadlines and replace f.readlines() by f where valid.An open file `f` has been an iterator since python2.3 and`f.xreadlines()` is no longer needed, so replace it with `f`. Alsoreplace `f.readlines()` with `f` where an iterator will do. Thereplacement of `f.readlines()` is not critical because it is a list inboth python2 and python3, but the code is a bit cleaner.Closes #3093",13,18,20,numpy/distutils/from_template.py,[u'2'],1,1," -209,7 +209,7 ;",def resolve_includes(source);
3121,1,342f074, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 12:09:12 -0700","ct: [PATCH] 2to3: Remove xreadlines and replace f.readlines() by f where valid.An open file `f` has been an iterator since python2.3 and`f.xreadlines()` is no longer needed, so replace it with `f`. Alsoreplace `f.readlines()` with `f` where an iterator will do. Thereplacement of `f.readlines()` is not critical because it is a list inboth python2 and python3, but the code is a bit cleaner.Closes #3093",13,18,20,numpy/distutils/misc_util.py,[u'5'],2,3," -167,7 +167,7 ; -394,8 +394,7 ;",def get_mathlibs(path=None);def _get_f90_modules(source);
3121,1,342f074, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 12:09:12 -0700","ct: [PATCH] 2to3: Remove xreadlines and replace f.readlines() by f where valid.An open file `f` has been an iterator since python2.3 and`f.xreadlines()` is no longer needed, so replace it with `f`. Alsoreplace `f.readlines()` with `f` where an iterator will do. Thereplacement of `f.readlines()` is not critical because it is a list inboth python2 and python3, but the code is a bit cleaner.Closes #3093",13,18,20,numpy/distutils/system_info.py,[u'2'],1,1," -904,7 +904,7 ;",def get_mkl_rootdir(self);
3121,1,342f074, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 12:09:12 -0700","ct: [PATCH] 2to3: Remove xreadlines and replace f.readlines() by f where valid.An open file `f` has been an iterator since python2.3 and`f.xreadlines()` is no longer needed, so replace it with `f`. Alsoreplace `f.readlines()` with `f` where an iterator will do. Thereplacement of `f.readlines()` is not critical because it is a list inboth python2 and python3, but the code is a bit cleaner.Closes #3093",13,18,20,tools/c_coverage/c_coverage_report.py,[u'4'],2,2," -58,7 +58,7 ; -128,7 +128,7 ;","def mark_line(self, lineno, as_func=None);def collect_stats(files, fd, pattern);"
3121,1,342f074, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 12:09:12 -0700","ct: [PATCH] 2to3: Remove xreadlines and replace f.readlines() by f where valid.An open file `f` has been an iterator since python2.3 and`f.xreadlines()` is no longer needed, so replace it with `f`. Alsoreplace `f.readlines()` with `f` where an iterator will do. Thereplacement of `f.readlines()` is not critical because it is a list inboth python2 and python3, but the code is a bit cleaner.Closes #3093",13,18,20,tools/py3tool.py,[u'3'],2,1," -78,7 +78,8 ;",;
3121,1,342f074, Charles Harris <charlesr.harris@gmail.com>," Tue, 5 Mar 2013 12:09:12 -0700","ct: [PATCH] 2to3: Remove xreadlines and replace f.readlines() by f where valid.An open file `f` has been an iterator since python2.3 and`f.xreadlines()` is no longer needed, so replace it with `f`. Alsoreplace `f.readlines()` with `f` where an iterator will do. Thereplacement of `f.readlines()` is not critical because it is a list inboth python2 and python3, but the code is a bit cleaner.Closes #3093",13,18,20,tools/win32build/misc/x86analysis.py,[u'2'],1,1," -100,7 +100,7 ;",def floupi(line);
3120,1,baeaeac, Charles Harris <charlesr.harris@gmail.com>," Mon, 4 Mar 2013 22:47:03 -0700","ct: [PATCH] 2to3:DEP: Remove interactive setup and gnu compiler configuration.These havn't been deprecated, but I think few have heard of them, muchless used them. Before this change, running setup.py without anyarguments would result in interactive help. This patch removes thatinteractive help and lets setup print its usual list of commands andoptions.All the script uses of the numpy/distutils/fcompiler compilers lookquite broken to me, but I have tried to maintain compatibility with theearlier version of gnu.py after the removal of `raw_input`.These removals solve an incompatibility between Python3 and Python2.The current interactive setup help uses `raw_input`, which has beenremoved in python3 and replaced by `input`.  However, python2 alreadyhas an `input` that has different semantics.  Rather than deal withthis, I think it simpler to keep both `raw_input` and `input` out ofnumpy.Closes #3063Closes #3079",4,5,209,numpy/distutils/core.py,[u'16'],0,4," -104,24 +104,8 ;",def get_distribution(always=False);
3120,1,baeaeac, Charles Harris <charlesr.harris@gmail.com>," Mon, 4 Mar 2013 22:47:03 -0700","ct: [PATCH] 2to3:DEP: Remove interactive setup and gnu compiler configuration.These havn't been deprecated, but I think few have heard of them, muchless used them. Before this change, running setup.py without anyarguments would result in interactive help. This patch removes thatinteractive help and lets setup print its usual list of commands andoptions.All the script uses of the numpy/distutils/fcompiler compilers lookquite broken to me, but I have tried to maintain compatibility with theearlier version of gnu.py after the removal of `raw_input`.These removals solve an incompatibility between Python3 and Python2.The current interactive setup help uses `raw_input`, which has beenremoved in python3 and replaced by `input`.  However, python2 alreadyhas an `input` that has different semantics.  Rather than deal withthis, I think it simpler to keep both `raw_input` and `input` out ofnumpy.Closes #3063Closes #3079",4,5,209,numpy/distutils/fcompiler/gnu.py,[u'4'],1,1," -372,10 +372,11 ; -383,4 +384,3 ;","def _can_target(cmd, arch);def _can_target(cmd, arch);"
3120,1,baeaeac, Charles Harris <charlesr.harris@gmail.com>," Mon, 4 Mar 2013 22:47:03 -0700","ct: [PATCH] 2to3:DEP: Remove interactive setup and gnu compiler configuration.These havn't been deprecated, but I think few have heard of them, muchless used them. Before this change, running setup.py without anyarguments would result in interactive help. This patch removes thatinteractive help and lets setup print its usual list of commands andoptions.All the script uses of the numpy/distutils/fcompiler compilers lookquite broken to me, but I have tried to maintain compatibility with theearlier version of gnu.py after the removal of `raw_input`.These removals solve an incompatibility between Python3 and Python2.The current interactive setup help uses `raw_input`, which has beenremoved in python3 and replaced by `input`.  However, python2 alreadyhas an `input` that has different semantics.  Rather than deal withthis, I think it simpler to keep both `raw_input` and `input` out ofnumpy.Closes #3063Closes #3079",4,5,209,numpy/distutils/interactive.py,[u'190'],0,39," -1,190 +0,0 ;",;
3120,1,baeaeac, Charles Harris <charlesr.harris@gmail.com>," Mon, 4 Mar 2013 22:47:03 -0700","ct: [PATCH] 2to3:DEP: Remove interactive setup and gnu compiler configuration.These havn't been deprecated, but I think few have heard of them, muchless used them. Before this change, running setup.py without anyarguments would result in interactive help. This patch removes thatinteractive help and lets setup print its usual list of commands andoptions.All the script uses of the numpy/distutils/fcompiler compilers lookquite broken to me, but I have tried to maintain compatibility with theearlier version of gnu.py after the removal of `raw_input`.These removals solve an incompatibility between Python3 and Python2.The current interactive setup help uses `raw_input`, which has beenremoved in python3 and replaced by `input`.  However, python2 alreadyhas an `input` that has different semantics.  Rather than deal withthis, I think it simpler to keep both `raw_input` and `input` out ofnumpy.Closes #3063Closes #3079",4,5,209,tools/py3tool.py,[u'4'],1,1," -76,7 +76,9 ;",;
3117,3,1af8949, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 15 Feb 2013 22:11:48 +0100","ct: [PATCH 1/3] BUG: fix random.choice scalar object result and disallow 0-d arraysObject arrays failed due to bad check for finding out if the result shouldbe a scalar type and not an array when size=None. Also in this case thecreation of the new array was wrong. This should be fixed with this.The second fix is to forbid 0-d arrays. Allowing 0-d arrays does notmake much sense. But it is dangerous because for example floats willbe interpreted as 1-d arrays, while one may expect that they are interpretedas integers. This also saves the trouble of reliably detecting all integers...",2,45,18,numpy/random/mtrand/mtrand.pyx,[u'50'],26,13," -124,6 +124,7 ; -994,21 +995,24 ; -1019,7 +1023,10 ; -1060,18 +1067,27 ;","cdef extern from ""initarray.h"";cdef class RandomState;cdef class RandomState;cdef class RandomState;"
3117,3,1af8949, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 15 Feb 2013 22:11:48 +0100","ct: [PATCH 1/3] BUG: fix random.choice scalar object result and disallow 0-d arraysObject arrays failed due to bad check for finding out if the result shouldbe a scalar type and not an array when size=None. Also in this case thecreation of the new array was wrong. This should be fixed with this.The second fix is to forbid 0-d arrays. Allowing 0-d arrays does notmake much sense. But it is dangerous because for example floats willbe interpreted as 1-d arrays, while one may expect that they are interpretedas integers. This also saves the trouble of reliably detecting all integers...",2,45,18,numpy/random/tests/test_random.py,[u'13'],9,1," -149,7 +149,8 ; -169,6 +170,11 ; -177,6 +183,11 ;",def test_choice_noninteger(self);def test_choice_return_shape(self);def test_choice_return_shape(self);
3117,3,8070640, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 6 Mar 2013 23:37:22 +0100",ct: [PATCH 2/3] MAINT: random.choice python 2.4 compatibility changes,3,11,25566,numpy/random/mtrand/mtrand.c,[u'25563'],1,35," -1,25562 +1 ;",;
3117,3,8070640, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 6 Mar 2013 23:37:22 +0100",ct: [PATCH 2/3] MAINT: random.choice python 2.4 compatibility changes,3,11,25566,numpy/random/mtrand/mtrand.pyx,[u'9'],1,1," -998,9 +998,12 ;",cdef class RandomState;
3117,3,8070640, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 6 Mar 2013 23:37:22 +0100",ct: [PATCH 2/3] MAINT: random.choice python 2.4 compatibility changes,3,11,25566,numpy/random/tests/test_random.py,[u'5'],1,1," -150,7 +150,10 ;",def test_choice_noninteger(self);
3117,3,23a2ce2, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 6 Mar 2013 23:39:05 +0100",ct: [PATCH 3/3] MAINT: Regenerate mtrand.c,1,25600,0,numpy/random/mtrand/mtrand.c,[u'25601'],40,1," -1 +1,25600 ;",;
3115,1,9207b4c, Charles Harris <charlesr.harris@gmail.com>," Sun, 3 Mar 2013 12:20:00 -0700",ct: [PATCH] ENH: Skip already applied fixers when running 2to3.This is done in `tools/py3tool.py` by providing a list of fixers thatis passed in the call to 2to3 with with the `-x` option that tells2to3 to skip them.Closes #3113,1,36,0,tools/py3tool.py,[u'37'],36,1," -55,6 +55,36 ; -270,7 +300,12 ;",";def sync_2to3(src, dst, patchfile=None, clean=False);"
3114,2,96ea318, Charles Harris <charlesr.harris@gmail.com>," Sun, 3 Mar 2013 12:40:59 -0700","ct: [PATCH 1/2] MAINT: Get rid of a ResourceWarning.This one in numpy/distutils/system_info.py. Just keep an explicitreference to a file, then close it.",1,6,0,numpy/distutils/system_info.py,[u'7'],6,1," -218,8 +218,11 ; -228,6 +231,8 ;","def libpaths(paths, bits);def libpaths(paths, bits);"
3114,2,31a68dd, Charles Harris <charlesr.harris@gmail.com>," Sun, 3 Mar 2013 15:23:02 -0700","ct: [PATCH 2/2] TST: Get rid of a ResourceWarning.I'm not sure this is the right fix, but test_closing_fid need to checkthat garbage collection will close a file that goes through a bunch ofopenings followed by dropping the reference. So the fix is to ignorewarnings during the test. I'd just ignore ResourceWarning, but it doesnot look to be a built in warning in Python 2.7.",1,15,6,numpy/lib/tests/test_io.py,[u'21'],15,6," -205,12 +205,21 ;",def test_closing_fid(self);
3109,1,1fa4cad," ""Nathaniel J. Smith"" <njs@pobox.com>"," Sat, 2 Mar 2013 11:36:03 +0000",ct: [PATCH] Travis: record some basic information about the build platformThe question has come up sometimes about how much memory etc. we have available for Travis builds. Let's just log the relevant resource limits at the top of every build log.,1,4,0,.travis.yml,[u'4'],4,0," -13,6 +13,10 ;",matrix;
3108,1,d7fd71d, Ralf Gommers <ralf.gommers@googlemail.com>," Tue, 22 Jan 2013 22:16:37 +0100",ct: [PATCH] BUG: npy-pkg-config ini files were missing after Bento build.,1,24,0,numpy/core/bscript,[u'24'],24,0," -94,6 +94,19 ; -302,6 +315,8 ; -361,6 +376,7 ; -406,6 +422,14 ;",def write_numpy_config(conf);def post_configure(context);def process_multiarray_api_generator(self);from os.path import join as pjoi;
3107,5,77b3df0, Bago Amirbekian <mrbago@gmail.com>," Thu, 28 Feb 2013 18:29:51 -0800",ct: [PATCH 1/5] RF - allow ndarray.searchsorted to avoid making a copy for non-contiguous arrays,1,26,18,numpy/core/src/multiarray/item_selection.c,[u'44'],18,12," -1869,7 +1869,7 ; -1883,7 +1883,8 ; -1891,7 +1892,7 ; -1912,7 +1913,7 ; -1926,7 +1927,8 ; -1934,7 +1936,7 ; -1954,8 +1956,9 ; -1968,9 +1971,11 ; -1978,12 +1983,12 ; -2005,8 +2010,9 ; -2019,9 +2025,11 ; -2029,12 +2037,12 ; -2099,7 +2107,7 ; -2125,7 +2133,7 ;","PyArray_LexSort(PyObject *sort_keys, int axis;local_search_left(PyArrayObject *arr, PyArrayObject *key, PyArrayObject *ret;local_search_left(PyArrayObject *arr, PyArrayObject *key, PyArrayObject *ret;local_search_left(PyArrayObject *arr, PyArrayObject *key, PyArrayObject *ret;local_search_right(PyArrayObject *arr, PyArrayObject *key, PyArrayObject *ret;local_search_right(PyArrayObject *arr, PyArrayObject *key, PyArrayObject *ret;local_search_right(PyArrayObject *arr, PyArrayObject *key, PyArrayObject *ret;local_argsearch_left(PyArrayObject *arr, PyArrayObject *key;local_argsearch_left(PyArrayObject *arr, PyArrayObject *key;local_argsearch_left(PyArrayObject *arr, PyArrayObject *key;local_argsearch_right(PyArrayObject *arr, PyArrayObject *key;local_argsearch_right(PyArrayObject *arr, PyArrayObject *key;PyArray_SearchSorted(PyArrayObject *op1, PyObject *op2;PyArray_SearchSorted(PyArrayObject *op1, PyObject *op2;"
3107,5,ebcae1b, Bago Amirbekian <mrbago@gmail.com>," Thu, 16 May 2013 16:57:41 -0700",ct: [PATCH 2/5] TST - add testing of searchsorted on unaligned arrays,1,61,4,numpy/core/tests/test_multiarray.py,[u'65'],34,3," -870,7 +870,6 ; -897,6 +896,41 ; -935,8 +969,9 ; -945,8 +980,30 ;",def test_searchsorted(self);def test_searchsorted(self);def test_searchsorted_with_sorter(self);def test_searchsorted_with_sorter(self);
3107,5,a06b800, Bago Amirbekian <mrbago@gmail.com>," Thu, 16 May 2013 21:57:51 -0700",ct: [PATCH 3/5] BF - cast psorter pointer to intp,1,3,3,numpy/core/src/multiarray/item_selection.c,[u'6'],3,3," -1983,7 +1983,7 ; -2037,7 +2037,7 ; -2117,7 +2117,7 ;","local_argsearch_left(PyArrayObject *arr, PyArrayObject *key;local_argsearch_right(PyArrayObject *arr, PyArrayObject *key;PyArray_SearchSorted(PyArrayObject *op1, PyObject *op2;"
3107,5,bb925ed, Bago Amirbekian <mrbago@gmail.com>," Fri, 2 Aug 2013 19:01:40 -0700",ct: [PATCH 4/5] RF - have searchsorted copy haystack when the needle is bigger than the haystack,1,14,12,numpy/core/src/multiarray/item_selection.c,[u'26'],14,12," -2095,6 +2095,7 ; -2103,23 +2104,24 ; -2148,7 +2150,7 ;","PyArray_SearchSorted(PyArrayObject *op1, PyObject *op2;PyArray_SearchSorted(PyArrayObject *op1, PyObject *op2;PyArray_SearchSorted(PyArrayObject *op1, PyObject *op2;"
3107,5,4674b9e, Bago Amirbekian <mrbago@gmail.com>," Fri, 16 Aug 2013 15:57:18 -0700",ct: [PATCH 5/5] MAINT - update comments related to searchsorted to be consistent with code.,1,8,8,numpy/core/src/multiarray/item_selection.c,[u'16'],8,8," -1866,8 +1866,7 ; -1910,8 +1909,7 ; -1953,8 +1951,7 ; -2007,8 +2004,7 ; -2115,6 +2111,10 ;","PyArray_LexSort(PyObject *sort_keys, int axis;local_search_left(PyArrayObject *arr, PyArrayObject *key, PyArrayObject *ret;local_search_right(PyArrayObject *arr, PyArrayObject *key, PyArrayObject *ret;local_argsearch_left(PyArrayObject *arr, PyArrayObject *key;PyArray_SearchSorted(PyArrayObject *op1, PyObject *op2;"
3106,1,398b076, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 1 Mar 2013 20:39:23 +0100",ct: [PATCH] DOC: Remove documentation of non-existing advanced iter NA flags.,1,0,29,doc/source/reference/c-api.iterator.rst,[u'29'],0,29," -629,35 +629,6 ;",Construction and Destructio;
3105,2,524d8e5, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 24 Feb 2013 21:51:04 +0100","ct: [PATCH 1/2] BUG: initialize op_axes when only itershape is givenIn this case, the initialization used the number of dimensions insteadof setting it to NULL for each operand, leading to possible segmentationfaults.",2,3,0,numpy/core/src/multiarray/nditer_pywrap.c,[u'2'],1,1," -786,7 +786,7 ;","npyiter_init(NewNpyArrayIterObject *self, PyObject *args, PyObject *kwds;"
3105,2,524d8e5, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 24 Feb 2013 21:51:04 +0100","ct: [PATCH 1/2] BUG: initialize op_axes when only itershape is givenIn this case, the initialization used the number of dimensions insteadof setting it to NULL for each operand, leading to possible segmentationfaults.",2,3,0,numpy/core/tests/test_nditer.py,[u'2'],2,0," -598,6 +598,8 ;",def test_iter_itershape();
3105,2,0bf8638, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 1 Mar 2013 20:39:23 +0100",ct: [PATCH 2/2] DOC: Remove documentation of non-existing advanced iter NA flags.,1,0,29,doc/source/reference/c-api.iterator.rst,[u'29'],0,29," -629,35 +629,6 ;",Construction and Destructio;
3104,8,2e8fcc0, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 23 Feb 2013 12:32:58 +0100","ct: [PATCH 1/8] API: Make nditer support ndim == 0 for 0-d iterations.There are relatively few changes necessare here. However there is aconceptionally there are no axes for the 0-d case, and no axesdataneeds to be used. This still uses the first axisdata. Which means thatin a few places ndim == 0 is special cased or special cased to act likendim == 1.It would probably be a little cleaner to to use the base pointers directlyin the 0-d case and no axes iteration at all. That would require similarspecial cases though.This also makes oa_ndim == -1 the ""correct"" way to signal that no op_axesare given with oa_ndim == 0 being, for the time being, dual use. Eithermeaning that nothing may be given, or if something something was givenenforcing a 0-d iteration.The necessary changes to the ufunc machinery are also done.Documented that the dtype transfer functions do not handle the scalarcase unless even shape is set.",6,109,83,numpy/core/src/multiarray/nditer_api.c,[u'15'],2,1," -134,12 +134,10 ; -642,6 +640,9 ; -1750,6 +1751,8 ;","NpyIter_RemoveAxis(NpyIter *iter, int axis;NpyIter_GetIterIndex(NpyIter *iter;npyiter_goto_iterindex(NpyIter *iter, npy_intp iterindex;"
3104,8,2e8fcc0, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 23 Feb 2013 12:32:58 +0100","ct: [PATCH 1/8] API: Make nditer support ndim == 0 for 0-d iterations.There are relatively few changes necessare here. However there is aconceptionally there are no axes for the 0-d case, and no axesdataneeds to be used. This still uses the first axisdata. Which means thatin a few places ndim == 0 is special cased or special cased to act likendim == 1.It would probably be a little cleaner to to use the base pointers directlyin the 0-d case and no axes iteration at all. That would require similarspecial cases though.This also makes oa_ndim == -1 the ""correct"" way to signal that no op_axesare given with oa_ndim == 0 being, for the time being, dual use. Eithermeaning that nothing may be given, or if something something was givenenforcing a 0-d iteration.The necessary changes to the ufunc machinery are also done.Documented that the dtype transfer functions do not handle the scalarcase unless even shape is set.",6,109,83,numpy/core/src/multiarray/nditer_constr.c,[u'168'],14,10," -54,8 +54,7 ; -75,7 +74,7 ; -86,7 +85,7 ; -122,8 +121,7 ; -158,6 +156,22 ; -175,12 +189,6 ; -231,8 +239,7 ; -338,8 +345,7 ; -389,7 +395,7 ; -504,7 +510,7 ; -521,7 +527,7 ; -758,53 +764,60 ; -819,7 +832,7 ; -1439,8 +1452,7 ; -1540,6 +1552,13 ; -1560,7 +1579,7 ; -1681,8 +1700,8 ; -2003,7 +2022,10 ; -2029,7 +2051,7 ; -2399,7 +2421,7 ; -2698,7 +2720,7 ; -2729,7 +2751,7 ; -2902,7 +2924,7 ;","static in;static PyArray_Descr ;npyiter_allocate_arrays(NpyIter *iter;NpyIter_AdvancedNew(int nop, PyArrayObject **op_in, npy_uint32 flags;NpyIter_AdvancedNew(int nop, PyArrayObject **op_in, npy_uint32 flags;NpyIter_AdvancedNew(int nop, PyArrayObject **op_in, npy_uint32 flags;NpyIter_AdvancedNew(int nop, PyArrayObject **op_in, npy_uint32 flags;NpyIter_AdvancedNew(int nop, PyArrayObject **op_in, npy_uint32 flags;NpyIter_AdvancedNew(int nop, PyArrayObject **op_in, npy_uint32 flags;NpyIter_MultiNew(int nop, PyArrayObject **op_in, npy_uint32 flags;NpyIter_New(PyArrayObject *op, npy_uint32 flags;npyiter_check_op_axes(int nop, int oa_ndim, int **op_axes;npyiter_calculate_ndim(int nop, PyArrayObject **op_in;static in;npyiter_fill_axisdata(NpyIter *iter, npy_uint32 flags, npyiter_opitflags *op_it;npyiter_fill_axisdata(NpyIter *iter, npy_uint32 flags, npyiter_opitflags *op_it;npyiter_fill_axisdata(NpyIter *iter, npy_uint32 flags, npyiter_opitflags *op_it;npyiter_replace_axisdata(NpyIter *iter, int iop;npyiter_compute_index_strides(NpyIter *iter, npy_uint32 flags;static PyArray_Descr ;npyiter_allocate_arrays(NpyIter *iter;npyiter_allocate_arrays(NpyIter *iter;npyiter_allocate_arrays(NpyIter *iter;"
3104,8,2e8fcc0, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 23 Feb 2013 12:32:58 +0100","ct: [PATCH 1/8] API: Make nditer support ndim == 0 for 0-d iterations.There are relatively few changes necessare here. However there is aconceptionally there are no axes for the 0-d case, and no axesdataneeds to be used. This still uses the first axisdata. Which means thatin a few places ndim == 0 is special cased or special cased to act likendim == 1.It would probably be a little cleaner to to use the base pointers directlyin the 0-d case and no axes iteration at all. That would require similarspecial cases though.This also makes oa_ndim == -1 the ""correct"" way to signal that no op_axesare given with oa_ndim == 0 being, for the time being, dual use. Eithermeaning that nothing may be given, or if something something was givenenforcing a 0-d iteration.The necessary changes to the ufunc machinery are also done.Documented that the dtype transfer functions do not handle the scalarcase unless even shape is set.",6,109,83,numpy/core/src/multiarray/nditer_impl.h,[u'2'],1,1," -294,7 +294,7 ;",struct NpyIter_AD ;
3104,8,2e8fcc0, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 23 Feb 2013 12:32:58 +0100","ct: [PATCH 1/8] API: Make nditer support ndim == 0 for 0-d iterations.There are relatively few changes necessare here. However there is aconceptionally there are no axes for the 0-d case, and no axesdataneeds to be used. This still uses the first axisdata. Which means thatin a few places ndim == 0 is special cased or special cased to act likendim == 1.It would probably be a little cleaner to to use the base pointers directlyin the 0-d case and no axes iteration at all. That would require similarspecial cases though.This also makes oa_ndim == -1 the ""correct"" way to signal that no op_axesare given with oa_ndim == 0 being, for the time being, dual use. Eithermeaning that nothing may be given, or if something something was givenenforcing a 0-d iteration.The necessary changes to the ufunc machinery are also done.Documented that the dtype transfer functions do not handle the scalarcase unless even shape is set.",6,109,83,numpy/core/src/private/lowlevel_strided_loops.h,[u'1'],1,0," -256,6 +256,7 ;",PyArray_CastRawArrays(npy_intp count;
3104,8,2e8fcc0, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 23 Feb 2013 12:32:58 +0100","ct: [PATCH 1/8] API: Make nditer support ndim == 0 for 0-d iterations.There are relatively few changes necessare here. However there is aconceptionally there are no axes for the 0-d case, and no axesdataneeds to be used. This still uses the first axisdata. Which means thatin a few places ndim == 0 is special cased or special cased to act likendim == 1.It would probably be a little cleaner to to use the base pointers directlyin the 0-d case and no axes iteration at all. That would require similarspecial cases though.This also makes oa_ndim == -1 the ""correct"" way to signal that no op_axesare given with oa_ndim == 0 being, for the time being, dual use. Eithermeaning that nothing may be given, or if something something was givenenforcing a 0-d iteration.The necessary changes to the ufunc machinery are also done.Documented that the dtype transfer functions do not handle the scalarcase unless even shape is set.",6,109,83,numpy/core/src/umath/reduction.c,[u'2'],1,1," -513,7 +513,7 ;","PyUFunc_ReduceWrapper(PyArrayObject *operand, PyArrayObject *out;"
3104,8,2e8fcc0, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 23 Feb 2013 12:32:58 +0100","ct: [PATCH 1/8] API: Make nditer support ndim == 0 for 0-d iterations.There are relatively few changes necessare here. However there is aconceptionally there are no axes for the 0-d case, and no axesdataneeds to be used. This still uses the first axisdata. Which means thatin a few places ndim == 0 is special cased or special cased to act likendim == 1.It would probably be a little cleaner to to use the base pointers directlyin the 0-d case and no axes iteration at all. That would require similarspecial cases though.This also makes oa_ndim == -1 the ""correct"" way to signal that no op_axesare given with oa_ndim == 0 being, for the time being, dual use. Eithermeaning that nothing may be given, or if something something was givenenforcing a 0-d iteration.The necessary changes to the ufunc machinery are also done.Documented that the dtype transfer functions do not handle the scalarcase unless even shape is set.",6,109,83,numpy/core/src/umath/ufunc_object.c,[u'4'],1,1," -1211,7 +1211,7 ; -1509,7 +1509,7 ;",iterator_loop(PyUFuncObject *ufunc;execute_fancy_ufunc_loop(PyUFuncObject *ufunc;
3104,8,acce195, Sebastian Berg <sebastian@sipsolutions.net>," Tue, 26 Feb 2013 22:04:42 +0100",ct: [PATCH 2/8] ENH: Allow np.nditer to support scalar op_axesAlso uses oa_ndim == -1 to signal no op_axes were given. This is slightlycleaner inside pywrap itself and is a cleaner signal for the iterator.,1,8,15,numpy/core/src/multiarray/nditer_pywrap.c,[u'23'],8,15," -95,7 +95,6 ; -526,7 +525,7 ; -545,13 +544,8 ; -575,7 +569,7 ; -589,7 +583,7 ; -726,7 +720,7 ; -784,7 +778,7 ; -800,10 +794,9 ; -860,7 +853,7 ;","NpyIter_GlobalFlagsConverter(PyObject *flags_in, npy_uint32 *flags;npyiter_convert_op_axes(PyObject *op_axes_in, npy_intp nop;npyiter_convert_op_axes(PyObject *op_axes_in, npy_intp nop;npyiter_convert_op_axes(PyObject *op_axes_in, npy_intp nop;npyiter_convert_op_axes(PyObject *op_axes_in, npy_intp nop;npyiter_init(NewNpyArrayIterObject *self, PyObject *args, PyObject *kwds;npyiter_init(NewNpyArrayIterObject *self, PyObject *args, PyObject *kwds;npyiter_init(NewNpyArrayIterObject *self, PyObject *args, PyObject *kwds;NpyIter_NestedIters(PyObject *NPY_UNUSED(self);"
3104,8,c11fa49, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 1 Mar 2013 19:49:10 +0100",ct: [PATCH 3/8] TST: Add basic tests for 0-d np.nditer/np.nested_iter support,1,54,0,numpy/core/tests/test_nditer.py,[u'54'],41,0," -2472,5 +2472,59 ;",def test_iter_allocated_array_dtypes();
3104,8,610faef, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 1 Mar 2013 19:53:39 +0100",ct: [PATCH 4/8] TST: Add test that einsum multiplies scalars fine,1,0,0,numpy/core/tests/test_einsum.py,[u'1'],1,0," -241,6 +241,7 ;","def check_einsum_sums(self, dtype);"
3104,8,22e1fe4, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 23 Feb 2013 12:38:41 +0100",ct: [PATCH 5/8] MAINT: Remove np.ndindex 0-d hack.,1,0,24,numpy/lib/index_tricks.py,[u'25'],1,24," -532,30 +532,7 ;",class ndindex(object);
3104,8,b66a15e, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 1 Mar 2013 20:40:08 +0100",ct: [PATCH 6/8] DOC: Add documentation clarifying the use of oa_ndim,1,8,3,doc/source/reference/c-api.iterator.rst,[u'11'],8,3," -634,12 +634,12 ; -649,6 +649,11 ;",Construction and Destructio;Construction and Destructio;
3104,8,20f44ef, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 1 Mar 2013 20:43:31 +0100",ct: [PATCH 7/8] DOC: mention AdvancedNew iterator change in the release notes.,1,7,0,doc/release/1.8.0-notes.rst,[u'7'],7,0," -37,6 +37,13 ;","compiler, then it's possible you will encounter problems. If so, pleas;"
3104,8,aa4d003, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 2 Mar 2013 03:12:41 +0100",ct: [PATCH 8/8] MAINT: Remove 0-d iterator special case from ufunc_object.c,1,0,12,numpy/core/src/umath/ufunc_object.c,[u'12'],0,12," -1976,18 +1976,6 ;",PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;
3103,1,77ca328, Charles Harris <charlesr.harris@gmail.com>," Fri, 1 Mar 2013 12:31:07 -0700",ct: [PATCH] DEP: Add removal warning to oldnumeric and numarray.Also raise `ImportError` when oldnumeric is imported into Python 3.The decision has been made to remove oldnumeric and numarray in somenear future numpy release. I make that the 1.8 here to make the warningmessage more of an attention grabber.closes #2905closes #3073closes #3082,2,12,0,numpy/numarray/__init__.py,[u'4'],4,0," -13,6 +13,7 ; -27,6 +28,9 ;",;;
3103,1,77ca328, Charles Harris <charlesr.harris@gmail.com>," Fri, 1 Mar 2013 12:31:07 -0700",ct: [PATCH] DEP: Add removal warning to oldnumeric and numarray.Also raise `ImportError` when oldnumeric is imported into Python 3.The decision has been made to remove oldnumeric and numarray in somenear future numpy release. I make that the 1.8 here to make the warningmessage more of an attention grabber.closes #2905closes #3073closes #3082,2,12,0,numpy/oldnumeric/__init__.py,[u'8'],8,0," -26,6 +26,8 ; -44,6 +46,12 ;","def _move_axis_to_0(a, axis);def _move_axis_to_0(a, axis);"
3102,1,e12dc1c, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 24 Feb 2013 21:51:04 +0100","ct: [PATCH] BUG: initialize op_axes when only itershape is givenIn this case, the initialization used the number of dimensions insteadof setting it to NULL for each operand, leading to possible segmentationfaults.",2,3,0,numpy/core/src/multiarray/nditer_pywrap.c,[u'2'],1,1," -786,7 +786,7 ;","npyiter_init(NewNpyArrayIterObject *self, PyObject *args, PyObject *kwds;"
3102,1,e12dc1c, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 24 Feb 2013 21:51:04 +0100","ct: [PATCH] BUG: initialize op_axes when only itershape is givenIn this case, the initialization used the number of dimensions insteadof setting it to NULL for each operand, leading to possible segmentationfaults.",2,3,0,numpy/core/tests/test_nditer.py,[u'2'],2,0," -598,6 +598,8 ;",def test_iter_itershape();
3101,1,d1e6fc3, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 18:46:35 -0700","ct: [PATCH] REM: Remove benchmarks files.The files are very basic, old benchmarks testing numpy against numericand numarray. The competitors are almost defunct and, while benchmarksare awesome, we really need a more polished and complete framework thatruns against the current competition. I think the early results fromthese benchmarks were posted, maybe even presented, and could be foundin a search.Closes #3088 ;) So old a tuple parameter was used.",5,0,146,benchmarks/benchmark.py,[u'42'],0,41," -1,42 +0,0 ;",;
3101,1,d1e6fc3, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 18:46:35 -0700","ct: [PATCH] REM: Remove benchmarks files.The files are very basic, old benchmarks testing numpy against numericand numarray. The competitors are almost defunct and, while benchmarksare awesome, we really need a more polished and complete framework thatruns against the current competition. I think the early results fromthese benchmarks were posted, maybe even presented, and could be foundin a search.Closes #3088 ;) So old a tuple parameter was used.",5,0,146,benchmarks/casting.py,[u'17'],0,17," -1,17 +0,0 ;",;
3101,1,d1e6fc3, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 18:46:35 -0700","ct: [PATCH] REM: Remove benchmarks files.The files are very basic, old benchmarks testing numpy against numericand numarray. The competitors are almost defunct and, while benchmarksare awesome, we really need a more polished and complete framework thatruns against the current competition. I think the early results fromthese benchmarks were posted, maybe even presented, and could be foundin a search.Closes #3088 ;) So old a tuple parameter was used.",5,0,146,benchmarks/creating.py,[u'14'],0,14," -1,14 +0,0 ;",;
3101,1,d1e6fc3, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 18:46:35 -0700","ct: [PATCH] REM: Remove benchmarks files.The files are very basic, old benchmarks testing numpy against numericand numarray. The competitors are almost defunct and, while benchmarksare awesome, we really need a more polished and complete framework thatruns against the current competition. I think the early results fromthese benchmarks were posted, maybe even presented, and could be foundin a search.Closes #3088 ;) So old a tuple parameter was used.",5,0,146,benchmarks/simpleindex.py,[u'48'],0,47," -1,48 +0,0 ;",;
3101,1,d1e6fc3, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 18:46:35 -0700","ct: [PATCH] REM: Remove benchmarks files.The files are very basic, old benchmarks testing numpy against numericand numarray. The competitors are almost defunct and, while benchmarksare awesome, we really need a more polished and complete framework thatruns against the current competition. I think the early results fromthese benchmarks were posted, maybe even presented, and could be foundin a search.Closes #3088 ;) So old a tuple parameter was used.",5,0,146,benchmarks/sorting.py,[u'25'],0,24," -1,25 +0,0 ;",;
3100,1,979767f, wenzao <wenzao.li@gmail.com>," Thu, 28 Feb 2013 17:04:18 -0800","ct: [PATCH] Update info.pyEdited line 116, corrected typo from `\\qquad n = 0,1,\\ldots,n-1.` to `\\qquad m = 0,1,\\ldots,n-1.`",1,2,2,numpy/fft/info.py,[u'4'],2,2," -82,7 +82,7 ; -113,7 +113,7 ;",;;
3099,1,0a5746d, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 17:57:32 -0700",ct: [PATCH] 2to3: Apply `methodattrs` fixes.Replaces old style `f.im_func` and `f.im_class` method attributeswith `f.__func__` and `f.__class__`. Closes #3070.,4,7,10,numpy/compat/_inspect.py,[u'2'],1,1," -125,7 +125,7 ;",def getargspec(func);
3099,1,0a5746d, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 17:57:32 -0700",ct: [PATCH] 2to3: Apply `methodattrs` fixes.Replaces old style `f.im_func` and `f.im_class` method attributeswith `f.__func__` and `f.__class__`. Closes #3070.,4,7,10,numpy/distutils/mingw32ccompiler.py,[u'5'],1,4," -199,10 +199,7 ;",def link(self;
3099,1,0a5746d, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 17:57:32 -0700",ct: [PATCH] 2to3: Apply `methodattrs` fixes.Replaces old style `f.im_func` and `f.im_class` method attributeswith `f.__func__` and `f.__class__`. Closes #3070.,4,7,10,numpy/lib/utils.py,[u'6'],3,3," -557,7 +557,7 ; -593,7 +593,7 ; -621,7 +621,7 ;","def info(object=None,maxwidth=76,output=sys.stdout,toplevel='numpy');def info(object=None,maxwidth=76,output=sys.stdout,toplevel='numpy');def info(object=None,maxwidth=76,output=sys.stdout,toplevel='numpy');"
3099,1,0a5746d, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 17:57:32 -0700",ct: [PATCH] 2to3: Apply `methodattrs` fixes.Replaces old style `f.im_func` and `f.im_class` method attributeswith `f.__func__` and `f.__class__`. Closes #3070.,4,7,10,numpy/testing/noseclasses.py,[u'4'],2,2," -48,7 +48,7 ; -100,7 +100,7 ;","def _from_module(self, module, object);def _find(self, tests, obj, name, module, source_lines, globs, seen);"
3098,1,dbe59cc, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 17:23:13 -0700","ct: [PATCH] 2to3: Apply `raise` fixes. Closes #3077.Replaces the    raise Exception, msg:form with    raise Exception(msg):",12,27,27,doc/numpybook/comparison/weave/filter.py,[u'2'],1,1," -2,7 +2,7 ;",;
3098,1,dbe59cc, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 17:23:13 -0700","ct: [PATCH] 2to3: Apply `raise` fixes. Closes #3077.Replaces the    raise Exception, msg:form with    raise Exception(msg):",12,27,27,doc/numpybook/comparison/weave/inline.py,[u'4'],2,2," -3,7 +3,7 ; -18,7 +18,7 ;",;def example1(a);
3098,1,dbe59cc, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 17:23:13 -0700","ct: [PATCH] 2to3: Apply `raise` fixes. Closes #3077.Replaces the    raise Exception, msg:form with    raise Exception(msg):",12,27,27,numpy/core/code_generators/generate_numpy_api.py,[u'4'],2,2," -221,8 +221,8 ;","def do_generate_api(targets, sources);"
3098,1,dbe59cc, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 17:23:13 -0700","ct: [PATCH] 2to3: Apply `raise` fixes. Closes #3077.Replaces the    raise Exception, msg:form with    raise Exception(msg):",12,27,27,numpy/core/records.py,[u'2'],1,1," -436,7 +436,7 ;","def __setattr__(self, attr, val);"
3098,1,dbe59cc, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 17:23:13 -0700","ct: [PATCH] 2to3: Apply `raise` fixes. Closes #3077.Replaces the    raise Exception, msg:form with    raise Exception(msg):",12,27,27,numpy/f2py/auxfuncs.py,[u'2'],1,1," -447,7 +447,7 ;","def __init__(self,mess);"
3098,1,dbe59cc, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 17:23:13 -0700","ct: [PATCH] 2to3: Apply `raise` fixes. Closes #3077.Replaces the    raise Exception, msg:form with    raise Exception(msg):",12,27,27,numpy/lib/polynomial.py,[u'4'],2,2," -564,9 +564,9 ;","def polyfit(x, y, deg, rcond=None, full=False, w=None, cov=False);"
3098,1,dbe59cc, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 17:23:13 -0700","ct: [PATCH] 2to3: Apply `raise` fixes. Closes #3077.Replaces the    raise Exception, msg:form with    raise Exception(msg):",12,27,27,numpy/ma/extras.py,[u'4'],2,2," -1865,9 +1865,9 ;","def polyfit(x, y, deg, rcond=None, full=False, w=None, cov=False);"
3098,1,dbe59cc, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 17:23:13 -0700","ct: [PATCH] 2to3: Apply `raise` fixes. Closes #3077.Replaces the    raise Exception, msg:form with    raise Exception(msg):",12,27,27,numpy/ma/mrecords.py,[u'2'],1,1," -252,7 +252,7 ;","def __setattr__(self, attr, val);"
3098,1,dbe59cc, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 17:23:13 -0700","ct: [PATCH] 2to3: Apply `raise` fixes. Closes #3077.Replaces the    raise Exception, msg:form with    raise Exception(msg):",12,27,27,numpy/oldnumeric/arrayfns.py,[u'4'],2,2," -20,7 +20,7 ; -38,7 +38,7 ;","def array_set(vals1, indices, vals2);def interp(y, x, z, typ=None);"
3098,1,dbe59cc, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 17:23:13 -0700","ct: [PATCH] 2to3: Apply `raise` fixes. Closes #3077.Replaces the    raise Exception, msg:form with    raise Exception(msg):",12,27,27,numpy/oldnumeric/random_array.py,[u'14'],7,7," -201,20 +201,20 ; -224,18 +224,18 ;",def test();def test();
3098,1,dbe59cc, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 17:23:13 -0700","ct: [PATCH] 2to3: Apply `raise` fixes. Closes #3077.Replaces the    raise Exception, msg:form with    raise Exception(msg):",12,27,27,numpy/oldnumeric/rng.py,[u'10'],5,5," -36,7 +36,7 ; -51,7 +51,7 ; -69,7 +69,7 ; -84,7 +84,7 ; -106,7 +106,7 ;","def _sample(self, rng, n);def __init__(self, m, s);def __init__(self, m, s);def __init__(self, a, b);def __init__(self, seed, dist=None);"
3098,1,dbe59cc, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 17:23:13 -0700","ct: [PATCH] 2to3: Apply `raise` fixes. Closes #3077.Replaces the    raise Exception, msg:form with    raise Exception(msg):",12,27,27,tools/osxbuild/install_and_test.py,[u'2'],1,1," -25,7 +25,7 ;",def color_print(msg);
3097,1,9da706c, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 16:42:45 -0700","ct: [PATCH] 2to3: Apply `sys_exc` fixes. Closes #3086.This uses sys.exc_info in place of sys.exc_value. The new functiongoes back to at least 2002, so should be safe.",2,4,4,numpy/distutils/cpuinfo.py,[u'2'],1,1," -516,7 +516,7 ;",def __init__(self);
3097,1,9da706c, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 16:42:45 -0700","ct: [PATCH] 2to3: Apply `sys_exc` fixes. Closes #3086.This uses sys.exc_info in place of sys.exc_value. The new functiongoes back to at least 2002, so should be safe.",2,4,4,numpy/f2py/diagnose.py,[u'6'],3,3," -29,14 +29,14 ; -47,7 +47,7 ;",def run();def run();
3059,1,80af580, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 11:32:12 -0700","ct: [PATCH] 2to3: Apply `funcattrs` fixer. Closes #3058.This replaces the `b.func_xxxx` with newer `__xxxx__` attribute namesFor example, `f.__name__`  replaces `f.func_name`",7,13,13,doc/sphinxext/phantom_import.py,[u'2'],1,1," -129,7 +129,7 ;","def base_cmp(a, b);"
3059,1,80af580, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 11:32:12 -0700","ct: [PATCH] 2to3: Apply `funcattrs` fixer. Closes #3058.This replaces the `b.func_xxxx` with newer `__xxxx__` attribute namesFor example, `f.__name__`  replaces `f.func_name`",7,13,13,numpy/compat/_inspect.py,[u'8'],4,4," -128,8 +128,8 ; -209,8 +209,8 ;","def getargspec(func);def convert(name, locals=locals;"
3059,1,80af580, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 11:32:12 -0700","ct: [PATCH] 2to3: Apply `funcattrs` fixer. Closes #3058.This replaces the `b.func_xxxx` with newer `__xxxx__` attribute namesFor example, `f.__name__`  replaces `f.func_name`",7,13,13,numpy/distutils/command/build_src.py,[u'2'],1,1," -189,7 +189,7 ;",def build_data_files_sources(self);
3059,1,80af580, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 11:32:12 -0700","ct: [PATCH] 2to3: Apply `funcattrs` fixer. Closes #3058.This replaces the `b.func_xxxx` with newer `__xxxx__` attribute namesFor example, `f.__name__`  replaces `f.func_name`",7,13,13,numpy/distutils/mingw32ccompiler.py,[u'2'],1,1," -202,7 +202,7 ;",def link(self;
3059,1,80af580, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 11:32:12 -0700","ct: [PATCH] 2to3: Apply `funcattrs` fixer. Closes #3058.This replaces the `b.func_xxxx` with newer `__xxxx__` attribute namesFor example, `f.__name__`  replaces `f.func_name`",7,13,13,numpy/distutils/misc_util.py,[u'2'],1,1," -850,7 +850,7 ;","def _get_configuration_from_setup_py(self, setup_py;"
3059,1,80af580, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 11:32:12 -0700","ct: [PATCH] 2to3: Apply `funcattrs` fixer. Closes #3058.This replaces the `b.func_xxxx` with newer `__xxxx__` attribute namesFor example, `f.__name__`  replaces `f.func_name`",7,13,13,numpy/lib/utils.py,[u'8'],4,4," -86,8 +86,8 ; -122,7 +122,7 ; -541,7 +541,7 ;","def get_numarray_include(type=None);def __call__(self, func, *args, **kwargs);def info(object=None,maxwidth=76,output=sys.stdout,toplevel='numpy');"
3059,1,80af580, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 11:32:12 -0700","ct: [PATCH] 2to3: Apply `funcattrs` fixer. Closes #3058.This replaces the `b.func_xxxx` with newer `__xxxx__` attribute namesFor example, `f.__name__`  replaces `f.func_name`",7,13,13,numpy/testing/noseclasses.py,[u'2'],1,1," -35,7 +35,7 ;","def _from_module(self, module, object);"
3056,3,b990ed5, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 10:58:40 -0700","ct: [PATCH 1/3] 2to3: Apply `filter` fixes. Closes #3053.Generally, this involves using list comprehension, or explicit listconstruction as `filter` is an iterator in Python 3.",8,24,24,numpy/_import_tools.py,[u'2'],1,1," -207,7 +207,7 ;","def __call__(self,*packages, **options);"
3056,3,b990ed5, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 10:58:40 -0700","ct: [PATCH 1/3] 2to3: Apply `filter` fixes. Closes #3053.Generally, this involves using list comprehension, or explicit listconstruction as `filter` is an iterator in Python 3.",8,24,24,numpy/distutils/command/build_py.py,[u'2'],1,1," -21,7 +21,7 ;","def find_package_modules(self, package, package_dir);"
3056,3,b990ed5, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 10:58:40 -0700","ct: [PATCH 1/3] 2to3: Apply `filter` fixes. Closes #3053.Generally, this involves using list comprehension, or explicit listconstruction as `filter` is an iterator in Python 3.",8,24,24,numpy/distutils/command/build_src.py,[u'4'],2,2," -186,8 +186,8 ;",def build_data_files_sources(self);
3056,3,b990ed5, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 10:58:40 -0700","ct: [PATCH 1/3] 2to3: Apply `filter` fixes. Closes #3053.Generally, this involves using list comprehension, or explicit listconstruction as `filter` is an iterator in Python 3.",8,24,24,numpy/distutils/misc_util.py,[u'8'],4,4," -555,7 +555,7 ; -566,13 +566,13 ; -808,7 +808,7 ;","def general_source_directories_files(top_path);def get_ext_source_files(ext);def _wildcard_get_subpackage(self, subpackage_name;"
3056,3,b990ed5, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 10:58:40 -0700","ct: [PATCH 1/3] 2to3: Apply `filter` fixes. Closes #3053.Generally, this involves using list comprehension, or explicit listconstruction as `filter` is an iterator in Python 3.",8,24,24,numpy/distutils/system_info.py,[u'6'],3,3," -232,9 +232,9 ;","def libpaths(paths, bits);"
3056,3,b990ed5, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 10:58:40 -0700","ct: [PATCH 1/3] 2to3: Apply `filter` fixes. Closes #3053.Generally, this involves using list comprehension, or explicit listconstruction as `filter` is an iterator in Python 3.",8,24,24,numpy/f2py/f2py2e.py,[u'22'],11,11," -430,13 +430,13 ; -450,12 +450,12 ; -481,8 +481,8 ;",def run_compile();def run_compile();def run_compile();
3056,3,b990ed5, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 10:58:40 -0700","ct: [PATCH 1/3] 2to3: Apply `filter` fixes. Closes #3053.Generally, this involves using list comprehension, or explicit listconstruction as `filter` is an iterator in Python 3.",8,24,24,numpy/testing/utils.py,[u'2'],1,1," -1050,7 +1050,7 ;","def decorate_methods(cls, decorator, testmatch=None);"
3056,3,b990ed5, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 10:58:40 -0700","ct: [PATCH 1/3] 2to3: Apply `filter` fixes. Closes #3053.Generally, this involves using list comprehension, or explicit listconstruction as `filter` is an iterator in Python 3.",8,24,24,setup.py,[u'2'],1,1," -50,7 +50,7 ;",;
3056,3,9a73697, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 13:19:41 -0700",ct: [PATCH 2/3] REF: Replace filters with list comprehensions.2to3 does a lot of list(filter(...)) sort of thing which can beavoided by using list comprehensions instead of filters. Thisalso seems to clarify the code to a considerable degree.,5,26,21,numpy/distutils/command/build_py.py,[u'2'],1,1," -21,7 +21,7 ;","def find_package_modules(self, package, package_dir);"
3056,3,9a73697, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 13:19:41 -0700",ct: [PATCH 2/3] REF: Replace filters with list comprehensions.2to3 does a lot of list(filter(...)) sort of thing which can beavoided by using list comprehensions instead of filters. Thisalso seems to clarify the code to a considerable degree.,5,26,21,numpy/distutils/misc_util.py,[u'8'],4,4," -555,7 +555,7 ; -566,13 +566,13 ; -808,7 +808,7 ;","def general_source_directories_files(top_path);def get_ext_source_files(ext);def _wildcard_get_subpackage(self, subpackage_name;"
3056,3,9a73697, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 13:19:41 -0700",ct: [PATCH 2/3] REF: Replace filters with list comprehensions.2to3 does a lot of list(filter(...)) sort of thing which can beavoided by using list comprehensions instead of filters. Thisalso seems to clarify the code to a considerable degree.,5,26,21,numpy/distutils/system_info.py,[u'6'],3,3," -232,9 +232,9 ;","def libpaths(paths, bits);"
3056,3,9a73697, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 13:19:41 -0700",ct: [PATCH 2/3] REF: Replace filters with list comprehensions.2to3 does a lot of list(filter(...)) sort of thing which can beavoided by using list comprehensions instead of filters. Thisalso seems to clarify the code to a considerable degree.,5,26,21,numpy/f2py/f2py2e.py,[u'29'],17,12," -430,13 +430,14 ; -450,12 +451,13 ; -481,8 +483,11 ;",def run_compile();def run_compile();def run_compile();
3056,3,9a73697, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 13:19:41 -0700",ct: [PATCH 2/3] REF: Replace filters with list comprehensions.2to3 does a lot of list(filter(...)) sort of thing which can beavoided by using list comprehensions instead of filters. Thisalso seems to clarify the code to a considerable degree.,5,26,21,numpy/testing/utils.py,[u'2'],1,1," -1050,7 +1050,7 ;","def decorate_methods(cls, decorator, testmatch=None);"
3056,3,0e4e508, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 13:56:11 -0700",ct: [PATCH 3/3] BUG: Fix `not a in ...` to `a not in ...`.Also break regular expression compiles out of the loop.,1,15,14,numpy/f2py/f2py2e.py,[u'29'],15,14," -430,14 +430,15 ; -452,12 +453,12 ; -484,9 +485,9 ;",def run_compile();def run_compile();def run_compile();
3055,1,36e979c, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 10:23:42 -0700","ct: [PATCH] 2to3: apply `execfile` fixer results.The execfile command is gone in Python 3. The fix is to read the file,then compile and exec the result.",1,0,0,setupegg.py,[u'2'],1,1," -21,4 +21,4 ;",;
3049,1,2429298, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 09:36:20 -0700",ct: [PATCH] 2to3: apply exec fixer results.This changes the `exec` command to the `exec` function.,14,21,21,doc/numpybook/runcode.py,[u'10'],5,5," -33,7 +33,7 ; -94,8 +94,8 ; -109,8 +109,8 ;","def getoutput(tstr, dic);def runpycode(lyxstr, name='MyCode');def runpycode(lyxstr, name='MyCode');"
3049,1,2429298, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 09:36:20 -0700",ct: [PATCH] 2to3: apply exec fixer results.This changes the `exec` command to the `exec` function.,14,21,21,doc/sphinxext/plot_directive.py,[u'4'],2,2," -456,8 +456,8 ;","def run_code(code, code_path, ns=None);"
3049,1,2429298, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 09:36:20 -0700",ct: [PATCH] 2to3: apply exec fixer results.This changes the `exec` command to the `exec` function.,14,21,21,numpy/_import_tools.py,[u'2'],1,1," -66,7 +66,7 ;","def _init_info_modules(self, packages=None);"
3049,1,2429298, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 09:36:20 -0700",ct: [PATCH] 2to3: apply exec fixer results.This changes the `exec` command to the `exec` function.,14,21,21,numpy/f2py/tests/test_array_from_pyobj.py,[u'4'],2,2," -530,14 +530,14 ;",def test_inplace_from_casttype(self);
3049,1,2429298, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 09:36:20 -0700",ct: [PATCH] 2to3: apply exec fixer results.This changes the `exec` command to the `exec` function.,14,21,21,numpy/lib/function_base.py,[u'2'],1,1," -3239,7 +3239,7 ;","def add_newdoc(place, obj, doc);"
3049,1,2429298, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 09:36:20 -0700",ct: [PATCH] 2to3: apply exec fixer results.This changes the `exec` command to the `exec` function.,14,21,21,numpy/numarray/session.py,[u'2'],1,1," -168,7 +168,7 ;",def _loadmodule(module);
3049,1,2429298, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 09:36:20 -0700",ct: [PATCH] 2to3: apply exec fixer results.This changes the `exec` command to the `exec` function.,14,21,21,numpy/polynomial/chebyshev.py,[u'2'],1,1," -2012,4 +2012,4 ;",def chebpts2(npts);
3049,1,2429298, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 09:36:20 -0700",ct: [PATCH] 2to3: apply exec fixer results.This changes the `exec` command to the `exec` function.,14,21,21,numpy/polynomial/hermite.py,[u'2'],1,1," -1747,4 +1747,4 ;",def hermweight(x);
3049,1,2429298, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 09:36:20 -0700",ct: [PATCH] 2to3: apply exec fixer results.This changes the `exec` command to the `exec` function.,14,21,21,numpy/polynomial/hermite_e.py,[u'2'],1,1," -1743,4 +1743,4 ;",def hermeweight(x);
3049,1,2429298, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 09:36:20 -0700",ct: [PATCH] 2to3: apply exec fixer results.This changes the `exec` command to the `exec` function.,14,21,21,numpy/polynomial/laguerre.py,[u'2'],1,1," -1739,4 +1739,4 ;",def lagweight(x);
3049,1,2429298, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 09:36:20 -0700",ct: [PATCH] 2to3: apply exec fixer results.This changes the `exec` command to the `exec` function.,14,21,21,numpy/polynomial/legendre.py,[u'2'],1,1," -1765,4 +1765,4 ;",def legweight(x);
3049,1,2429298, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 09:36:20 -0700",ct: [PATCH] 2to3: apply exec fixer results.This changes the `exec` command to the `exec` function.,14,21,21,numpy/polynomial/polynomial.py,[u'2'],1,1," -1489,4 +1489,4 ;",def polyroots(c);
3049,1,2429298, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 09:36:20 -0700",ct: [PATCH] 2to3: apply exec fixer results.This changes the `exec` command to the `exec` function.,14,21,21,numpy/testing/numpytest.py,[u'2'],1,1," -42,7 +42,7 ;",def importall(package);
3049,1,2429298, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 09:36:20 -0700",ct: [PATCH] 2to3: apply exec fixer results.This changes the `exec` command to the `exec` function.,14,21,21,numpy/testing/utils.py,[u'4'],2,2," -881,7 +881,7 ; -1108,7 +1108,7 ;","def assert_array_less(x, y, err_msg='', verbose=True);def measure(code_str,times=1,label=None);"
3047,1,dd13084, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:34:50 -0700",ct: [PATCH] 2to3: Fix callable.,11,25,14,doc/sphinxext/docscrape.py,[u'3'],2,1," -8,6 +8,7 ; -495,7 +496,7 ;",;def methods(self);
3047,1,dd13084, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:34:50 -0700",ct: [PATCH] 2to3: Fix callable.,11,25,14,doc/sphinxext/docscrape_sphinx.py,[u'3'],2,1," -1,6 +1,7 ; -212,7 +213,7 ;",";def get_doc_object(obj, what=None, doc=None, config={});"
3047,1,dd13084, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:34:50 -0700",ct: [PATCH] 2to3: Fix callable.,11,25,14,doc/sphinxext/linkcode.py,[u'3'],2,1," -10,6 +10,7 ; -29,7 +30,7 ;",";def doctree_read(app, doctree);"
3047,1,dd13084, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:34:50 -0700",ct: [PATCH] 2to3: Fix callable.,11,25,14,doc/sphinxext/numpydoc.py,[u'3'],2,1," -17,6 +17,7 ; -82,7 +83,7 ;",";def mangle_signature(app, what, name, obj, options, sig, retann);"
3047,1,dd13084, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:34:50 -0700",ct: [PATCH] 2to3: Fix callable.,11,25,14,doc/sphinxext/traitsdoc.py,[u'3'],2,1," -25,6 +25,7 ; -117,7 +118,7 ;",";def get_doc_object(obj, what=None, config=None);"
3047,1,dd13084, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:34:50 -0700",ct: [PATCH] 2to3: Fix callable.,11,25,14,doc/summarize.py,[u'3'],2,1," -7,6 +7,7 ; -134,7 +135,7 ;",";def get_undocumented(documented, module, module_name=None, skip=[]);"
3047,1,dd13084, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:34:50 -0700",ct: [PATCH] 2to3: Fix callable.,11,25,14,numpy/core/numeric.py,[u'5'],3,2," -29,6 +29,7 ; -2445,8 +2446,8 ;",;def seterrcall(func);
3047,1,dd13084, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:34:50 -0700",ct: [PATCH] 2to3: Fix callable.,11,25,14,numpy/core/tests/test_records.py,[u'3'],2,1," -4,6 +4,7 ; -94,7 +95,7 ;",;def test_recarray_conflict_fields(self);
3047,1,dd13084, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:34:50 -0700",ct: [PATCH] 2to3: Fix callable.,11,25,14,numpy/lib/function_base.py,[u'3'],2,1," -30,6 +30,7 ; -707,7 +708,7 ;",";def piecewise(x, condlist, funclist, *args, **kw);"
3047,1,dd13084, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:34:50 -0700",ct: [PATCH] 2to3: Fix callable.,11,25,14,numpy/matrixlib/tests/test_defmatrix.py,[u'3'],2,1," -4,6 +4,7 ; -285,7 +286,7 ;",;def test_instance_methods(self);
3047,1,dd13084, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:34:50 -0700",ct: [PATCH] 2to3: Fix callable.,11,25,14,numpy/testing/decorators.py,[u'7'],4,3," -18,6 +18,7 ; -122,7 +123,7 ; -198,7 +199,7 ; -264,7 +265,7 ;",";def skip_decorator(f);def knownfailureif(fail_condition, msg=None);def _deprecated_imp(*args, **kwargs);"
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,benchmarks/benchmark.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,benchmarks/casting.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,benchmarks/creating.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,benchmarks/simpleindex.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,benchmarks/sorting.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/cdoc/numpyfilter.py,[u'2'],1,0," -6,6 +6,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/cython/run_test.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/cython/setup.py,[u'2'],1,0," -3,7 +3,9 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/example.py,[u'2'],1,0," -8,6 +8,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/newdtype_example/example.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/newdtype_example/floatint/__init__.py,[u'3'],1,0," -0,0 +1,3 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/newdtype_example/setup.py,[u'1'],1,0," -1,3 +1,4 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/numpybook/comparison/ctypes/filter.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/numpybook/comparison/ctypes/interface.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/numpybook/comparison/pyrex/setup.py,[u'1'],1,0," -1,4 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/numpybook/comparison/timing.py,[u'1'],1,0," -1,3 +1,4 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/numpybook/comparison/weave/filter.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/numpybook/comparison/weave/inline.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/numpybook/runcode.py,[u'31'],1,2," -1,17 +1,20 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/postprocess.py,[u'2'],1,0," -6,6 +6,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/pyrex/run_test.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/pyrex/setup.py,[u'2'],1,0," -10,7 +10,9 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/source/conf.py,[u'1'],1,0," -1,4 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/sphinxext/__init__.py,[u'2'],1,0," -1 +1,3 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/sphinxext/comment_eater.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/sphinxext/compiler_unparse.py,[u'1'],1,0," -10,6 +10,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/sphinxext/docscrape.py,[u'1'],1,0," -1,6 +1,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/sphinxext/docscrape_sphinx.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/sphinxext/linkcode.py,[u'2'],1,0," -7,7 +7,9 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/sphinxext/numpydoc.py,[u'1'],1,0," -15,6 +15,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/sphinxext/phantom_import.py,[u'2'],1,0," -14,6 +14,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/sphinxext/plot_directive.py,[u'5'],1,1," -36,7 +36,7 ; -74,6 +74,7 ; -94,7 +95,7 ;",;;def setup(app);
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/sphinxext/setup.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/sphinxext/tests/test_docscrape.py,[u'1'],1,0," -1,4 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/sphinxext/traitsdoc.py,[u'1'],1,0," -13,6 +13,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/summarize.py,[u'1'],1,0," -5,6 +5,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/swig/test/setup.py,[u'1'],1,0," -1,4 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/swig/test/testArray.py,[u'1'],1,0," -1,4 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/swig/test/testFarray.py,[u'1'],1,0," -1,4 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/swig/test/testFortran.py,[u'1'],1,0," -1,4 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/swig/test/testMatrix.py,[u'1'],1,0," -1,4 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/swig/test/testTensor.py,[u'1'],1,0," -1,4 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,doc/swig/test/testVector.py,[u'1'],1,0," -1,4 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/__init__.py,[u'1'],1,0," -104,6 +104,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/_import_tools.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/add_newdocs.py,[u'16'],1,1," -1,10 +1,14 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/build_utils/__init__.py,[u'1'],1,0," -0,0 +1 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/build_utils/common.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/build_utils/waf.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/compat/__init__.py,[u'2'],1,0," -8,6 +8,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/compat/_inspect.py,[u'2'],1,0," -3,7 +3,9 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/compat/py3k.py,[u'1'],1,0," -2,6 +2,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/compat/setup.py,[u'2'],1,0," -1,4 +1,6 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/__init__.py,[u'1'],1,0," -1,3 +1,4 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/_internal.py,[u'9'],1,1," -1,5 +1,10 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/_methods.py,[u'8'],1,1," -1,5 +1,9 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/arrayprint.py,[u'3'],1,0," -1,7 +1,10 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/code_generators/__init__.py,[u'1'],1,0," -0,0 +1 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/code_generators/cversions.py,[u'9'],1,1," -1,5 +1,10 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/code_generators/genapi.py,[u'3'],1,0," -4,7 +4,10 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/code_generators/generate_numpy_api.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/code_generators/generate_ufunc_api.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/code_generators/generate_umath.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/code_generators/numpy_api.py,[u'2'],1,0," -10,7 +10,9 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/code_generators/ufunc_docstrings.py,[u'22'],1,1," -1,13 +1,15 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/defchararray.py,[u'1'],1,0," -15,6 +15,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/fromnumeric.py,[u'6'],1,1," -1,4 +1,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/function_base.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/getlimits.py,[u'4'],1,1," -1,5 +1,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/info.py,[u'3'],1,1," -1,4 +1,4 ; -81,6 +81,7 ;",;;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/machar.py,[u'6'],1,1," -1,9 +1,11 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/memmap.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/numeric.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/numerictypes.py,[u'1'],1,0," -80,6 +80,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/records.py,[u'2'],1,0," -34,6 +34,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/setup.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/setup_common.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/shape_base.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/src/multiarray/testcalcs.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/tests/test_api.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/tests/test_arrayprint.py,[u'2'],1,0," -1,5 +1,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/tests/test_blasdot.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/tests/test_datetime.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/tests/test_defchararray.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/tests/test_deprecations.py,[u'3'],1,0," -1,7 +1,10 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/tests/test_dtype.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/tests/test_einsum.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/tests/test_errstate.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/tests/test_function_base.py,[u'1'],1,0," -1,3 +1,4 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/tests/test_getlimits.py,[u'2'],1,0," -1,5 +1,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/tests/test_half.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/tests/test_indexerrors.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/tests/test_indexing.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/tests/test_item_selection.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/tests/test_machar.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/tests/test_memmap.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/tests/test_multiarray.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/tests/test_multiarray_assignment.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/tests/test_nditer.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/tests/test_numeric.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/tests/test_numerictypes.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/tests/test_print.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/tests/test_records.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/tests/test_regression.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/tests/test_scalarmath.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/tests/test_scalarprint.py,[u'1'],1,0," -2,6 +2,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/tests/test_shape_base.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/tests/test_ufunc.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/tests/test_umath.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/tests/test_umath_complex.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/core/tests/test_unicode.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/ctypeslib.py,[u'2'],1,0," -49,6 +49,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/__init__.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/__version__.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/ccompiler.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/command/__init__.py,[u'12'],1,1," -1,7 +1,17 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/command/autodist.py,[u'6'],1,1," -1,4 +1,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/command/bdist_rpm.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/command/build.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/command/build_clib.py,[u'1'],1,0," -1,5 +1,6 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/command/build_ext.py,[u'2'],1,0," -1,5 +1,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/command/build_py.py,[u'1'],1,0," -1,3 +1,4 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/command/build_scripts.py,[u'2'],1,0," -1,5 +1,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/command/build_src.py,[u'1'],1,0," -1,5 +1,6 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/command/config.py,[u'1'],1,0," -2,6 +2,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/command/config_compiler.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/command/develop.py,[u'2'],1,0," -1,7 +1,9 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/command/egg_info.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/command/install.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/command/install_clib.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/command/install_data.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/command/install_headers.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/command/sdist.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/compat.py,[u'3'],1,0," -1,6 +1,9 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/conv_template.py,[u'2'],1,0," -78,6 +78,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/core.py,[u'1'],1,0," -1,3 +1,4 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/cpuinfo.py,[u'2'],1,0," -10,7 +10,9 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/environment.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/exec_command.py,[u'1'],1,0," -44,6 +44,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/extension.py,[u'2'],1,0," -4,7 +4,9 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/fcompiler/__init__.py,[u'2'],1,0," -11,7 +11,9 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/fcompiler/absoft.py,[u'1'],1,0," -5,6 +5,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/fcompiler/compaq.py,[u'1'],1,0," -1,5 +1,6 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/fcompiler/g95.py,[u'1'],1,0," -1,4 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/fcompiler/gnu.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/fcompiler/hpux.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/fcompiler/ibm.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/fcompiler/intel.py,[u'1'],1,0," -1,4 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/fcompiler/lahey.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/fcompiler/mips.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/fcompiler/nag.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/fcompiler/none.py,[u'1'],1,0," -1,3 +1,4 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/fcompiler/pathf95.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/fcompiler/pg.py,[u'2'],1,1," -1,5 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/fcompiler/sun.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/fcompiler/vast.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/from_template.py,[u'1'],1,0," -45,6 +45,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/info.py,[u'1'],1,0," -1,5 +1,6 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/intelccompiler.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/interactive.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/lib2def.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/line_endings.py,[u'2'],1,0," -1,5 +1,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/log.py,[u'1'],1,0," -1,4 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/mingw32ccompiler.py,[u'1'],1,0," -7,6 +7,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/misc_util.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/npy_pkg_config.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/numpy_distribution.py,[u'2'],1,0," -1,4 +1,6 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/pathccompiler.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/setup.py,[u'1'],1,0," -1,4 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/system_info.py,[u'2'],1,0," -108,7 +108,9 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/tests/f2py_ext/__init__.py,[u'1'],1,0," -0,0 +1 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/tests/f2py_ext/setup.py,[u'2'],1,0," -1,4 +1,6 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/tests/f2py_ext/tests/test_fib2.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/tests/f2py_f90_ext/__init__.py,[u'1'],1,0," -0,0 +1 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/tests/f2py_f90_ext/setup.py,[u'2'],1,0," -1,4 +1,6 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,.../distutils/tests/f2py_f90_ext/tests/test_foo.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/tests/gen_ext/__init__.py,[u'1'],1,0," -0,0 +1 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/tests/gen_ext/setup.py,[u'1'],1,0," -1,4 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/tests/gen_ext/tests/test_fib3.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/tests/pyrex_ext/__init__.py,[u'1'],1,0," -0,0 +1 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/tests/pyrex_ext/setup.py,[u'2'],1,0," -1,4 +1,6 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,.../distutils/tests/pyrex_ext/tests/test_primes.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/tests/setup.py,[u'2'],1,0," -1,4 +1,6 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/tests/swig_ext/__init__.py,[u'1'],1,0," -0,0 +1 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/tests/swig_ext/setup.py,[u'2'],1,0," -1,4 +1,6 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,.../distutils/tests/swig_ext/tests/test_example.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,.../tests/swig_ext/tests/test_example2.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/tests/test_fcompiler_gnu.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/tests/test_fcompiler_intel.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/tests/test_misc_util.py,[u'1'],1,0," -1,4 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/tests/test_npy_pkg_config.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/distutils/unixccompiler.py,[u'2'],1,0," -1,6 +1,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/doc/__init__.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/doc/basics.py,[u'2'],1,0," -136,3 +136,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/doc/broadcasting.py,[u'2'],1,0," -175,3 +175,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/doc/byteswapping.py,[u'6'],1,1," -1,4 +1,4 ; -134,4 +134,6 ;",;;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/doc/constants.py,[u'2'],1,0," -10,6 +10,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/doc/creation.py,[u'2'],1,0," -141,3 +141,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/doc/glossary.py,[u'2'],1,0," -415,3 +415,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/doc/howtofind.py,[u'2'],1,0," -7,3 +7,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/doc/indexing.py,[u'2'],1,0," -405,3 +405,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/doc/internals.py,[u'2'],1,0," -160,3 +160,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/doc/io.py,[u'2'],1,0," -7,3 +7,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/doc/jargon.py,[u'2'],1,0," -7,3 +7,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/doc/methods_vs_functions.py,[u'2'],1,0," -7,3 +7,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/doc/misc.py,[u'2'],1,0," -226,3 +226,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/doc/performance.py,[u'2'],1,0," -7,3 +7,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/doc/structured_arrays.py,[u'2'],1,0," -221,3 +221,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/doc/subclassing.py,[u'2'],1,0," -557,3 +557,5 ;","def __array_wrap__(self, arr, context=None);"
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/doc/ufuncs.py,[u'2'],1,0," -135,3 +135,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/dual.py,[u'2'],1,0," -10,6 +10,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/f2py/__init__.py,[u'1'],1,0," -1,4 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/f2py/__version__.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/f2py/auxfuncs.py,[u'3'],1,0," -12,7 +12,10 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/f2py/capi_maps.py,[u'2'],1,0," -9,7 +9,9 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/f2py/cb_rules.py,[u'2'],1,0," -11,7 +11,9 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/f2py/cfuncs.py,[u'2'],1,0," -12,7 +12,9 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/f2py/common_rules.py,[u'2'],1,0," -11,7 +11,9 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/f2py/crackfortran.py,[u'255'],11,10," -1,8 +1,134 ; -11,138 +137,15 ;",;;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/f2py/diagnose.py,[u'1'],1,0," -1,4 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/f2py/doc/collectinput.py,[u'2'],1,0," -17,7 +17,9 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/f2py/docs/pytest.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/f2py/docs/usersguide/setup_example.py,[u'2'],1,0," -1,4 +1,6 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/f2py/f2py2e.py,[u'2'],1,0," -12,7 +12,9 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/f2py/f2py_testing.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/f2py/f90mod_rules.py,[u'2'],1,0," -11,7 +11,9 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/f2py/func2subr.py,[u'2'],1,0," -11,7 +11,9 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/f2py/info.py,[u'1'],1,0," -1,5 +1,6 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/f2py/rules.py,[u'5'],1,1," -39,8 +39,7 ; -49,7 +48,9 ;",;;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/f2py/setup.py,[u'2'],1,0," -14,7 +14,9 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/f2py/tests/test_array_from_pyobj.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/f2py/tests/test_assumed_shape.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/f2py/tests/test_callback.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/f2py/tests/test_kind.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/f2py/tests/test_mixed.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/f2py/tests/test_return_character.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/f2py/tests/test_return_complex.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/f2py/tests/test_return_integer.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/f2py/tests/test_return_logical.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/f2py/tests/test_return_real.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/f2py/tests/test_size.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/f2py/tests/util.py,[u'1'],1,0," -5,6 +5,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/f2py/use_rules.py,[u'2'],1,0," -13,7 +13,9 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/fft/__init__.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/fft/fftpack.py,[u'2'],1,0," -30,6 +30,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/fft/helper.py,[u'3'],1,0," -1,6 +1,9 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/fft/info.py,[u'1'],1,0," -174,5 +174,6 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/fft/setup.py,[u'1'],1,0," -1,3 +1,4 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/fft/tests/test_helper.py,[u'6'],1,1," -1,6 +1,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/__init__.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/_datasource.py,[u'1'],1,0," -31,6 +31,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/_iotools.py,[u'6'],1,1," -1,4 +1,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/arraypad.py,[u'2'],1,0," -1,7 +1,9 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/arraysetops.py,[u'3'],1,0," -22,7 +22,10 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/arrayterator.py,[u'1'],0,1," -7,7 +7,6 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/financial.py,[u'17'],1,1," -1,10 +1,15 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/format.py,[u'1'],1,0," -134,6 +134,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/function_base.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/index_tricks.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/info.py,[u'1'],1,0," -145,6 +145,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/npyio.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/polynomial.py,[u'2'],1,0," -1,6 +1,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/recfunctions.py,[u'2'],1,1," -4,8 +4,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/scimath.py,[u'1'],1,0," -15,6 +15,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/setup.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/shape_base.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/stride_tricks.py,[u'2'],1,0," -5,6 +5,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/tests/test__datasource.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/tests/test__iotools.py,[u'3'],1,0," -1,4 +1,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/tests/test_arraypad.py,[u'7'],1,1," -1,6 +1,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/tests/test_arraysetops.py,[u'3'],1,1," -1,6 +1,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/tests/test_arrayterator.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/tests/test_financial.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/tests/test_format.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/tests/test_function_base.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/tests/test_index_tricks.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/tests/test_io.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/tests/test_polynomial.py,[u'6'],1,1," -1,4 +1,6 ; -74,8 +76,8 ;",;;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/tests/test_recfunctions.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/tests/test_regression.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/tests/test_shape_base.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/tests/test_stride_tricks.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/tests/test_twodim_base.py,[u'3'],1,1," -1,6 +1,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/tests/test_type_check.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/tests/test_ufunclike.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/tests/test_utils.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/twodim_base.py,[u'1'],1,0," -1,6 +1,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/type_check.py,[u'5'],1,1," -1,4 +1,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/ufunclike.py,[u'3'],1,0," -1,7 +1,10 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/user_array.py,[u'2'],1,0," -2,7 +2,9 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/lib/utils.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/linalg/__init__.py,[u'2'],1,0," -42,6 +42,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/linalg/info.py,[u'1'],1,0," -32,5 +32,6 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/linalg/lapack_lite/clapack_scrub.py,[u'1'],1,0," -1,4 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/linalg/lapack_lite/fortran.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/linalg/lapack_lite/make_lite.py,[u'1'],1,0," -1,4 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/linalg/linalg.py,[u'2'],1,0," -8,6 +8,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/linalg/setup.py,[u'1'],1,0," -1,3 +1,4 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/linalg/tests/test_build.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/linalg/tests/test_linalg.py,[u'2'],1,0," -1,5 +1,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/linalg/tests/test_regression.py,[u'2'],1,0," -1,5 +1,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/ma/__init__.py,[u'2'],1,0," -36,6 +36,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/ma/bench.py,[u'1'],1,0," -1,5 +1,6 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/ma/core.py,[u'2'],1,0," -20,6 +20,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/ma/extras.py,[u'2'],1,0," -8,6 +8,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/ma/mrecords.py,[u'3'],1,0," -6,7 +6,10 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/ma/setup.py,[u'2'],1,0," -1,4 +1,6 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/ma/tests/test_core.py,[u'2'],1,0," -4,6 +4,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/ma/tests/test_extras.py,[u'3'],1,0," -5,7 +5,10 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/ma/tests/test_mrecords.py,[u'3'],1,0," -3,7 +3,10 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/ma/tests/test_old_ma.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/ma/tests/test_regression.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/ma/tests/test_subclassing.py,[u'3'],1,0," -4,7 +4,10 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/ma/testutils.py,[u'3'],1,0," -3,7 +3,10 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/ma/timer_comparison.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/ma/version.py,[u'5'],1,1," -1,4 +1,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/matlib.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/matrixlib/__init__.py,[u'6'],1,1," -1,4 +1,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/matrixlib/defmatrix.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/matrixlib/setup.py,[u'2'],1,0," -1,4 +1,6 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/matrixlib/tests/test_defmatrix.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/matrixlib/tests/test_multiarray.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/matrixlib/tests/test_numeric.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/matrixlib/tests/test_regression.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/numarray/__init__.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/numarray/alter_code1.py,[u'2'],1,0," -52,6 +52,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/numarray/alter_code2.py,[u'3'],1,1," -5,7 +5,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/numarray/compat.py,[u'1'],1,0," -1,3 +1,4 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/numarray/convolve.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/numarray/fft.py,[u'1'],1,0," -1,3 +1,4 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/numarray/functions.py,[u'16'],1,1," -1,18 +1,6 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/numarray/image.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/numarray/linear_algebra.py,[u'1'],1,0," -1,3 +1,4 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/numarray/ma.py,[u'1'],1,0," -1,2 +1,3 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/numarray/matrix.py,[u'1'],1,0," -1,3 +1,4 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/numarray/mlab.py,[u'1'],1,0," -1,3 +1,4 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/numarray/nd_image.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/numarray/numerictypes.py,[u'3'],1,0," -25,7 +25,10 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/numarray/random_array.py,[u'1'],1,0," -1,3 +1,4 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/numarray/session.py,[u'1'],1,0," -72,6 +72,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/numarray/setup.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/numarray/ufuncs.py,[u'1'],1,0," -1,3 +1,4 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/numarray/util.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/oldnumeric/__init__.py,[u'6'],1,1," -1,4 +1,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/oldnumeric/alter_code1.py,[u'3'],1,0," -27,7 +27,10 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/oldnumeric/alter_code2.py,[u'2'],1,0," -19,6 +19,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/oldnumeric/array_printer.py,[u'1'],1,0," -1,3 +1,4 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/oldnumeric/arrayfns.py,[u'4'],1,1," -1,5 +1,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/oldnumeric/compat.py,[u'5'],1,1," -1,4 +1,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/oldnumeric/fft.py,[u'1'],1,0," -1,3 +1,4 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/oldnumeric/fix_default_axis.py,[u'3'],1,0," -32,7 +32,10 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/oldnumeric/functions.py,[u'5'],1,1," -1,4 +1,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/oldnumeric/linear_algebra.py,[u'12'],1,1," -1,10 +1,12 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/oldnumeric/ma.py,[u'3'],1,0," -1,4 +1,5 ; -8,6 +9,8 ;",;;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/oldnumeric/matrix.py,[u'5'],1,1," -1,4 +1,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/oldnumeric/misc.py,[u'4'],1,1," -1,5 +1,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/oldnumeric/mlab.py,[u'5'],1,1," -1,4 +1,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/oldnumeric/precision.py,[u'13'],1,1," -1,7 +1,12 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/oldnumeric/random_array.py,[u'5'],1,1," -1,4 +1,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/oldnumeric/rng.py,[u'10'],1,1," -1,8 +1,10 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/oldnumeric/rng_stats.py,[u'1'],1,0," -1,3 +1,4 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/oldnumeric/setup.py,[u'1'],1,0," -1,3 +1,4 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/oldnumeric/tests/test_oldnumeric.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/oldnumeric/tests/test_regression.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/oldnumeric/typeconv.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/oldnumeric/ufuncs.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/oldnumeric/user_array.py,[u'2'],1,1," -1,4 +1,4 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/polynomial/__init__.py,[u'2'],1,0," -13,6 +13,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/polynomial/polytemplate.py,[u'2'],1,0," -9,6 +9,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/polynomial/setup.py,[u'2'],1,1," -1,4 +1,4 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/polynomial/tests/test_printing.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/random/__init__.py,[u'2'],1,0," -86,6 +86,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/random/info.py,[u'1'],1,0," -82,6 +82,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/random/mtrand/generate_mtrand_c.py,[u'2'],1,0," -1,4 +1,6 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/random/setup.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/random/tests/test_random.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/random/tests/test_regression.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/setup.py,[u'2'],1,0," -1,4 +1,6 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/testing/__init__.py,[u'2'],1,0," -3,7 +3,9 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/testing/decorators.py,[u'2'],1,0," -13,6 +13,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/testing/noseclasses.py,[u'1'],1,0," -4,6 +4,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/testing/nosetester.py,[u'2'],1,0," -4,6 +4,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/testing/nulltester.py,[u'6'],1,1," -1,11 +1,13 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/testing/numpytest.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/testing/print_coercion_tables.py,[u'5'],1,1," -1,5 +1,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/testing/setup.py,[u'2'],1,0," -1,4 +1,6 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/testing/tests/test_decorators.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/testing/tests/test_doctesting.py,[u'3'],1,0," -1,5 +1,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/testing/tests/test_utils.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/testing/utils.py,[u'2'],1,0," -1,6 +1,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/tests/test_ctypeslib.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,numpy/tests/test_matlib.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,pavement.py,[u'1'],1,0," -55,6 +55,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,setup.py,[u'2'],1,0," -11,7 +11,9 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,setupegg.py,[u'1'],1,0," -12,6 +12,7 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,tools/allocation_tracking/setup.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,tools/allocation_tracking/track_allocations.py,[u'2'],1,0," -1,3 +1,5 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,tools/c_coverage/c_coverage_report.py,[u'2'],1,0," -2,7 +2,9 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,tools/commitstats.py,[u'1'],1,0," -1,3 +1,4 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,tools/py3tool.py,[u'2'],1,0," -18,6 +18,8 ;",;
3045,3,c31532f, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/3] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",401,988,238,tools/test-installed-numpy.py,[u'1'],1,0," -1,4 +1,5 ;",;
3045,3,8a3609a, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 08:11:02 -0700",ct: [PATCH 2/3] MAINT: Make numpy/f2py/crackfortran docstring read better.The copyright and short summary were moved to the top of thedocstring with the usage description below.,1,12,13,numpy/f2py/crackfortran.py,[u'25'],12,13," -1,5 +1,17 ; -125,19 +137,6 ;",;;
3045,3,bf8e95e, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:34:50 -0700",ct: [PATCH 3/3] 2to3: Fix callable.,11,25,14,doc/sphinxext/docscrape.py,[u'3'],2,1," -9,6 +9,7 ; -496,7 +497,7 ;",;def methods(self);
3045,3,bf8e95e, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:34:50 -0700",ct: [PATCH 3/3] 2to3: Fix callable.,11,25,14,doc/sphinxext/docscrape_sphinx.py,[u'3'],2,1," -3,6 +3,7 ; -214,7 +215,7 ;",";def get_doc_object(obj, what=None, doc=None, config={});"
3045,3,bf8e95e, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:34:50 -0700",ct: [PATCH 3/3] 2to3: Fix callable.,11,25,14,doc/sphinxext/linkcode.py,[u'3'],2,1," -12,6 +12,7 ; -31,7 +32,7 ;",";def doctree_read(app, doctree);"
3045,3,bf8e95e, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:34:50 -0700",ct: [PATCH 3/3] 2to3: Fix callable.,11,25,14,doc/sphinxext/numpydoc.py,[u'3'],2,1," -18,6 +18,7 ; -83,7 +84,7 ;",";def mangle_signature(app, what, name, obj, options, sig, retann);"
3045,3,bf8e95e, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:34:50 -0700",ct: [PATCH 3/3] 2to3: Fix callable.,11,25,14,doc/sphinxext/traitsdoc.py,[u'3'],2,1," -26,6 +26,7 ; -118,7 +119,7 ;",";def get_doc_object(obj, what=None, config=None);"
3045,3,bf8e95e, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:34:50 -0700",ct: [PATCH 3/3] 2to3: Fix callable.,11,25,14,doc/summarize.py,[u'3'],2,1," -8,6 +8,7 ; -135,7 +136,7 ;",";def get_undocumented(documented, module, module_name=None, skip=[]);"
3045,3,bf8e95e, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:34:50 -0700",ct: [PATCH 3/3] 2to3: Fix callable.,11,25,14,numpy/core/numeric.py,[u'5'],3,2," -31,6 +31,7 ; -2447,8 +2448,8 ;",;def seterrcall(func);
3045,3,bf8e95e, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:34:50 -0700",ct: [PATCH 3/3] 2to3: Fix callable.,11,25,14,numpy/core/tests/test_records.py,[u'3'],2,1," -6,6 +6,7 ; -96,7 +97,7 ;",;def test_recarray_conflict_fields(self);
3045,3,bf8e95e, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:34:50 -0700",ct: [PATCH 3/3] 2to3: Fix callable.,11,25,14,numpy/lib/function_base.py,[u'3'],2,1," -32,6 +32,7 ; -709,7 +710,7 ;",";def piecewise(x, condlist, funclist, *args, **kw);"
3045,3,bf8e95e, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:34:50 -0700",ct: [PATCH 3/3] 2to3: Fix callable.,11,25,14,numpy/matrixlib/tests/test_defmatrix.py,[u'3'],2,1," -6,6 +6,7 ; -287,7 +288,7 ;",;def test_instance_methods(self);
3045,3,bf8e95e, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:34:50 -0700",ct: [PATCH 3/3] 2to3: Fix callable.,11,25,14,numpy/testing/decorators.py,[u'7'],4,3," -20,6 +20,7 ; -124,7 +125,7 ; -200,7 +201,7 ; -266,7 +267,7 ;",";def skip_decorator(f);def knownfailureif(fail_condition, msg=None);def _deprecated_imp(*args, **kwargs);"
3039,3,eb5adfb, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 18 Feb 2013 23:34:01 +0100","ct: [PATCH 1/3] BUG: Incref items in np.take on error as they are decrefed laterWhen take fails during copying due to out of bound indices, then the alreadycopied items will be decref'd on array destruction. To avoid that, as wellas possible overlapping or already initialized object arrays, decref andincref during the copy operation itself. Note that all basic types butobject use their own fasttake, so this does not change anything for them.Also use new (conflicting) numpy/core/tests/test_item_selection.py withsmall modifications.",3,102,10,numpy/core/src/multiarray/item_selection.c,[u'58'],24,6," -31,10 +31,11 ; -112,9 +113,11 ; -126,8 +129,20 ; -146,8 +161,20 ; -162,8 +189,20 ; -178,7 +217,6 ;","PyArray_TakeFrom(PyArrayObject *self0, PyObject *indices0, int axis;PyArray_TakeFrom(PyArrayObject *self0, PyObject *indices0, int axis;PyArray_TakeFrom(PyArrayObject *self0, PyObject *indices0, int axis;PyArray_TakeFrom(PyArrayObject *self0, PyObject *indices0, int axis;PyArray_TakeFrom(PyArrayObject *self0, PyObject *indices0, int axis;PyArray_TakeFrom(PyArrayObject *self0, PyObject *indices0, int axis;"
3039,3,eb5adfb, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 18 Feb 2013 23:34:01 +0100","ct: [PATCH 1/3] BUG: Incref items in np.take on error as they are decrefed laterWhen take fails during copying due to out of bound indices, then the alreadycopied items will be decref'd on array destruction. To avoid that, as wellas possible overlapping or already initialized object arrays, decref andincref during the copy operation itself. Note that all basic types butobject use their own fasttake, so this does not change anything for them.Also use new (conflicting) numpy/core/tests/test_item_selection.py withsmall modifications.",3,102,10,numpy/core/tests/test_item_selection.py,[u'43'],22,0," -0,0 +1,43 ;",;
3039,3,eb5adfb, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 18 Feb 2013 23:34:01 +0100","ct: [PATCH 1/3] BUG: Incref items in np.take on error as they are decrefed laterWhen take fails during copying due to out of bound indices, then the alreadycopied items will be decref'd on array destruction. To avoid that, as wellas possible overlapping or already initialized object arrays, decref andincref during the copy operation itself. Note that all basic types butobject use their own fasttake, so this does not change anything for them.Also use new (conflicting) numpy/core/tests/test_item_selection.py withsmall modifications.",3,102,10,numpy/core/tests/test_regression.py,[u'11'],6,0," -590,6 +590,17 ;","def test_take_output(self, level=rlevel);"
3039,3,907e382, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 21 Feb 2013 23:48:29 +0100",ct: [PATCH 2/3] TST: Add test for np.take refcountingAlso make the testcase for take a class.,1,53,36,numpy/core/tests/test_item_selection.py,[u'89'],20,13," -2,42 +2,59 ;",;
3039,3,bff13fa, Sebastian Berg <sebastian@sipsolutions.net>," Tue, 19 Feb 2013 16:52:32 +0100","ct: [PATCH 3/3] BUG: non-empty takes on empty axes failed for clip/wrap logicThese did no checking for this special case. And thus, wrap would gointo infinite loops trying to adjust the index, and clip would (probably)segfault. This raises IndexError explicitely beforehand.",2,11,0,numpy/core/src/multiarray/item_selection.c,[u'7'],7,0," -119,6 +119,13 ;","PyArray_TakeFrom(PyArrayObject *self0, PyObject *indices0, int axis;"
3039,3,bff13fa, Sebastian Berg <sebastian@sipsolutions.net>," Tue, 19 Feb 2013 16:52:32 +0100","ct: [PATCH 3/3] BUG: non-empty takes on empty axes failed for clip/wrap logicThese did no checking for this special case. And thus, wrap would gointo infinite loops trying to adjust the index, and clip would (probably)segfault. This raises IndexError explicitely beforehand.",2,11,0,numpy/core/tests/test_indexerrors.py,[u'4'],4,0," -10,6 +10,8 ; -21,6 +23,8 ;",def test_arraytypes_fasttake(self);def test_take_from_object(self);
3036,1,e887552, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 21:41:20 -0700",ct: [PATCH] 2to3: map fixes.,25,51,51,doc/summarize.py,[u'4'],2,2," -147,8 +147,8 ;","def format_in_columns(lst, max_columns);"
3036,1,e887552, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 21:41:20 -0700",ct: [PATCH] 2to3: map fixes.,25,51,51,numpy/compat/_inspect.py,[u'2'],1,1," -150,7 +150,7 ;",def joinseq(seq);
3036,1,e887552, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 21:41:20 -0700",ct: [PATCH] 2to3: map fixes.,25,51,51,numpy/core/numerictypes.py,[u'2'],1,1," -111,7 +111,7 ;",class long(int);
3036,1,e887552, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 21:41:20 -0700",ct: [PATCH] 2to3: map fixes.,25,51,51,numpy/core/shape_base.py,[u'4'],2,2," -223,7 +223,7 ; -267,7 +267,7 ;",def vstack(tup);def hstack(tup);
3036,1,e887552, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 21:41:20 -0700",ct: [PATCH] 2to3: map fixes.,25,51,51,numpy/core/tests/test_scalarmath.py,[u'4'],2,2," -88,10 +88,10 ;",def test_int_from_long(self);
3036,1,e887552, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 21:41:20 -0700",ct: [PATCH] 2to3: map fixes.,25,51,51,numpy/core/tests/test_shape_base.py,[u'24'],12,12," -8,26 +8,26 ; -44,26 +44,26 ; -78,26 +78,26 ;",;def test_r1array(self);def test_r2array(self);
3036,1,e887552, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 21:41:20 -0700",ct: [PATCH] 2to3: map fixes.,25,51,51,numpy/distutils/system_info.py,[u'2'],1,1," -2070,7 +2070,7 ;","def combine_paths(*args, **kws);"
3036,1,e887552, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 21:41:20 -0700",ct: [PATCH] 2to3: map fixes.,25,51,51,numpy/f2py/auxfuncs.py,[u'4'],2,2," -607,9 +607,9 ;",def stripcomma(s);
3036,1,e887552, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 21:41:20 -0700",ct: [PATCH] 2to3: map fixes.,25,51,51,numpy/f2py/cfuncs.py,[u'2'],1,1," -1210,7 +1210,7 ;",def get_needs();
3036,1,e887552, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 21:41:20 -0700",ct: [PATCH] 2to3: map fixes.,25,51,51,numpy/f2py/common_rules.py,[u'2'],1,1," -94,7 +94,7 ;","def dadd(line,s=doc): s[0] = '%s\n%s'%(s[0],line;"
3036,1,e887552, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 21:41:20 -0700",ct: [PATCH] 2to3: map fixes.,25,51,51,numpy/f2py/crackfortran.py,[u'6'],3,3," -219,7 +219,7 ; -227,7 +227,7 ; -290,7 +290,7 ;","def rmbadname1(name);def undo_rmbadname1(name);def readfortrancode(ffile,dowithline=show,istop=1);"
3036,1,e887552, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 21:41:20 -0700",ct: [PATCH] 2to3: map fixes.,25,51,51,numpy/f2py/f2py2e.py,[u'4'],2,2," -322,7 +322,7 ; -370,7 +370,7 ;",def buildmodules(lst);def run_main(comline_list);
3036,1,e887552, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 21:41:20 -0700",ct: [PATCH] 2to3: map fixes.,25,51,51,numpy/f2py/f90mod_rules.py,[u'2'],1,1," -156,7 +156,7 ;","def iadd(line,s=ihooks): s[0] = '%s\n%s'%(s[0],line;"
3036,1,e887552, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 21:41:20 -0700",ct: [PATCH] 2to3: map fixes.,25,51,51,numpy/f2py/tests/test_array_from_pyobj.py,[u'4'],2,2," -136,10 +136,10 ;","def _init(self,name);"
3036,1,e887552, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 21:41:20 -0700",ct: [PATCH] 2to3: map fixes.,25,51,51,numpy/lib/_iotools.py,[u'2'],1,1," -712,7 +712,7 ;","def iterupgrade(self, value);"
3036,1,e887552, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 21:41:20 -0700",ct: [PATCH] 2to3: map fixes.,25,51,51,numpy/lib/financial.py,[u'10'],5,5," -110,7 +110,7 ; -201,7 +201,7 ; -258,7 +258,7 ; -497,7 +497,7 ; -563,7 +563,7 ;","def fv(rate, nper, pmt, pv, when='end');def pmt(rate, nper, pv, fv=0, when='end');def nper(rate, pmt, pv, fv=0, when='end');def pv(rate, nper, pmt, fv=0.0, when='end');def rate(nper, pmt, pv, fv, when='end', guess=0.10, tol=1e-6, maxiter=100);"
3036,1,e887552, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 21:41:20 -0700",ct: [PATCH] 2to3: map fixes.,25,51,51,numpy/lib/format.py,[u'2'],1,1," -190,7 +190,7 ;",def read_magic(fp);
3036,1,e887552, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 21:41:20 -0700",ct: [PATCH] 2to3: map fixes.,25,51,51,numpy/lib/index_tricks.py,[u'4'],2,2," -161,8 +161,8 ;","def __getitem__(self,key);"
3036,1,e887552, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 21:41:20 -0700",ct: [PATCH] 2to3: map fixes.,25,51,51,numpy/lib/npyio.py,[u'6'],3,3," -1598,7 +1598,7 ; -1657,10 +1657,10 ;","def genfromtxt(fname, dtype=float, comments='#', delimiter=None;def genfromtxt(fname, dtype=float, comments='#', delimiter=None;"
3036,1,e887552, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 21:41:20 -0700",ct: [PATCH] 2to3: map fixes.,25,51,51,numpy/lib/recfunctions.py,[u'2'],1,1," -401,7 +401,7 ;",def merge_arrays(seqarrays;
3036,1,e887552, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 21:41:20 -0700",ct: [PATCH] 2to3: map fixes.,25,51,51,numpy/lib/shape_base.py,[u'2'],1,1," -343,7 +343,7 ;",def dstack(tup);
3036,1,e887552, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 21:41:20 -0700",ct: [PATCH] 2to3: map fixes.,25,51,51,numpy/lib/stride_tricks.py,[u'2'],1,1," -66,7 +66,7 ;",def broadcast_arrays(*args);
3036,1,e887552, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 21:41:20 -0700",ct: [PATCH] 2to3: map fixes.,25,51,51,numpy/matrixlib/defmatrix.py,[u'2'],1,1," -43,7 +43,7 ;",def _convert_from_string(data);
3036,1,e887552, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 21:41:20 -0700",ct: [PATCH] 2to3: map fixes.,25,51,51,numpy/oldnumeric/matrix.py,[u'2'],1,1," -37,7 +37,7 ;",def _convert_from_string(data);
3036,1,e887552, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 21:41:20 -0700",ct: [PATCH] 2to3: map fixes.,25,51,51,numpy/testing/utils.py,[u'2'],1,1," -525,7 +525,7 ;","def assert_approx_equal(actual,desired,significant=7,err_msg='',verbose=True);"
3029,6,a78347a, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:34:50 -0700",ct: [PATCH 1/6] 2to3: Fix callable.,11,25,14,doc/sphinxext/docscrape.py,[u'3'],2,1," -8,6 +8,7 ; -495,7 +496,7 ;",;def methods(self);
3029,6,a78347a, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:34:50 -0700",ct: [PATCH 1/6] 2to3: Fix callable.,11,25,14,doc/sphinxext/docscrape_sphinx.py,[u'3'],2,1," -1,6 +1,7 ; -212,7 +213,7 ;",";def get_doc_object(obj, what=None, doc=None, config={});"
3029,6,a78347a, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:34:50 -0700",ct: [PATCH 1/6] 2to3: Fix callable.,11,25,14,doc/sphinxext/linkcode.py,[u'3'],2,1," -10,6 +10,7 ; -29,7 +30,7 ;",";def doctree_read(app, doctree);"
3029,6,a78347a, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:34:50 -0700",ct: [PATCH 1/6] 2to3: Fix callable.,11,25,14,doc/sphinxext/numpydoc.py,[u'3'],2,1," -17,6 +17,7 ; -82,7 +83,7 ;",";def mangle_signature(app, what, name, obj, options, sig, retann);"
3029,6,a78347a, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:34:50 -0700",ct: [PATCH 1/6] 2to3: Fix callable.,11,25,14,doc/sphinxext/traitsdoc.py,[u'3'],2,1," -25,6 +25,7 ; -117,7 +118,7 ;",";def get_doc_object(obj, what=None, config=None);"
3029,6,a78347a, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:34:50 -0700",ct: [PATCH 1/6] 2to3: Fix callable.,11,25,14,doc/summarize.py,[u'3'],2,1," -7,6 +7,7 ; -134,7 +135,7 ;",";def get_undocumented(documented, module, module_name=None, skip=[]);"
3029,6,a78347a, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:34:50 -0700",ct: [PATCH 1/6] 2to3: Fix callable.,11,25,14,numpy/core/numeric.py,[u'5'],3,2," -29,6 +29,7 ; -2445,8 +2446,8 ;",;def seterrcall(func);
3029,6,a78347a, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:34:50 -0700",ct: [PATCH 1/6] 2to3: Fix callable.,11,25,14,numpy/core/tests/test_records.py,[u'3'],2,1," -4,6 +4,7 ; -94,7 +95,7 ;",;def test_recarray_conflict_fields(self);
3029,6,a78347a, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:34:50 -0700",ct: [PATCH 1/6] 2to3: Fix callable.,11,25,14,numpy/lib/function_base.py,[u'3'],2,1," -30,6 +30,7 ; -707,7 +708,7 ;",";def piecewise(x, condlist, funclist, *args, **kw);"
3029,6,a78347a, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:34:50 -0700",ct: [PATCH 1/6] 2to3: Fix callable.,11,25,14,numpy/matrixlib/tests/test_defmatrix.py,[u'3'],2,1," -4,6 +4,7 ; -285,7 +286,7 ;",;def test_instance_methods(self);
3029,6,a78347a, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:34:50 -0700",ct: [PATCH 1/6] 2to3: Fix callable.,11,25,14,numpy/testing/decorators.py,[u'7'],4,3," -18,6 +18,7 ; -122,7 +123,7 ; -198,7 +199,7 ; -264,7 +265,7 ;",";def skip_decorator(f);def knownfailureif(fail_condition, msg=None);def _deprecated_imp(*args, **kwargs);"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,benchmarks/benchmark.py,[u'2'],1,1," -12,7 +12,7 ;","def __init__(self,modules,title='',runs=3,reps=1000);"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,doc/numpybook/comparison/ctypes/interface.py,[u'2'],1,1," -10,7 +10,7 ;",;
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,doc/sphinxext/compiler_unparse.py,[u'4'],1,1," -504,7 +504,7 ; -517,7 +517,7 ;","def __binary_op(self, t, symbol);def __binary_op(self, t, symbol);"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,doc/sphinxext/docscrape.py,[u'2'],1,1," -371,7 +371,7 ;",def _str_index(self);
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,doc/sphinxext/docscrape_sphinx.py,[u'2'],1,1," -128,7 +128,7 ;",def _str_index(self);
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,doc/sphinxext/numpydoc.py,[u'2'],1,1," -121,7 +121,7 ;","def __init__(self, *a, **kw);"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,doc/sphinxext/plot_directive.py,[u'2'],1,1," -314,7 +314,7 ;","def run(arguments, content, options, state_machine, state, lineno);"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,doc/summarize.py,[u'4'],1,1," -73,7 +73,7 ; -104,7 +104,7 ;",def main();def check_numpy();
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/_import_tools.py,[u'10'],1,2," -105,17 +105,17 ; -222,7 +222,7 ; -310,7 +310,7 ;","def _get_sorted_names(self);def __call__(self,*packages, **options);def get_pkgdocs(self);"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/core/_internal.py,[u'8'],1,2," -15,7 +15,7 ; -327,7 +327,7 ; -351,7 +351,7 ; -500,7 +500,7 ;",";def _index_fields(ary, fields);def _index_fields(ary, fields);def get_dummy_name();"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/core/arrayprint.py,[u'6'],1,1," -257,9 +257,9 ; -273,7 +273,7 ;","def _array2string(a, max_line_width, precision, suppress_small, separator=' ';def _array2string(a, max_line_width, precision, suppress_small, separator=' ';"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/core/code_generators/genapi.py,[u'12'],2,2," -383,7 +383,7 ; -391,7 +391,7 ; -401,18 +401,18 ; -445,7 +445,7 ;",def internal_define(self);def _key(x);def check_api_dict(d);def fullapi_hash(api_dicts);
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/core/code_generators/generate_numpy_api.py,[u'6'],1,1," -210,14 +210,14 ;","def do_generate_api(targets, sources);"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/core/code_generators/generate_ufunc_api.py,[u'2'],1,1," -174,7 +174,7 ;","def do_generate_api(targets, sources);"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/core/memmap.py,[u'2'],1,1," -199,7 +199,7 ;","def __new__(subtype, filename, dtype=uint8, mode='r+', offset=0;"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/core/numeric.py,[u'4'],1,1," -220,7 +220,7 ; -2180,7 +2180,7 ;","def extend_all(module);def array_equiv(a1, a2);"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/core/numerictypes.py,[u'20'],3,3," -284,7 +284,7 ; -300,7 +300,7 ; -311,7 +311,7 ; -353,7 +353,7 ; -431,7 +431,7 ; -783,7 +783,7 ; -858,21 +858,21 ;","def bitname(obj);def _add_types();def _add_aliases();def _add_integer_aliases();def _set_up_aliases();def __getitem__(self, obj);def sctype2char(sctype);"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/core/tests/test_blasdot.py,[u'2'],1,1," -103,7 +103,7 ;",def test_dot_array_order();
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/core/tests/test_multiarray.py,[u'4'],1,1," -1490,7 +1490,7 ; -1537,7 +1537,7 ;",def test_ip_types(self);def test_ip_types(self);
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/core/tests/test_print.py,[u'2'],1,1," -126,7 +126,7 ;",def test_complex_inf_nan();
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/core/tests/test_regression.py,[u'2'],1,1," -1412,7 +1412,7 ;",def test_fromstring_crash(self);
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/distutils/ccompiler.py,[u'6'],1,1," -190,7 +190,7 ; -199,7 +199,7 ; -253,7 +253,7 ;","def CCompiler_compile(self, sources, output_dir=None, macros=None;def CCompiler_compile(self, sources, output_dir=None, macros=None;def allow(attr);"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/distutils/command/build_py.py,[u'2'],1,1," -7,7 +7,7 ;",class build_py(old_build_py);
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/distutils/command/build_src.py,[u'4'],1,1," -211,7 +211,7 ; -252,7 +252,7 ;","def _build_npy_pkg_config(self, info, gd);def build_npy_pkg_config(self);"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/distutils/command/config.py,[u'2'],1,1," -358,7 +358,7 ;","def check_funcs_once(self, funcs;"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/distutils/conv_template.py,[u'2'],1,1," -301,7 +301,7 ;",def unique_key(adict);
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/distutils/core.py,[u'2'],1,1," -54,7 +54,7 ;",;
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/distutils/exec_command.py,[u'6'],1,1," -137,7 +137,7 ; -157,7 +157,7 ; -181,7 +181,7 ;",def _preserve_environment( names );def exec_command( command;def exec_command( command;
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/distutils/fcompiler/__init__.py,[u'6'],1,1," -265,7 +265,7 ; -540,7 +540,7 ; -846,7 +846,7 ;","def set_executable(self, key, value);def get_flags(tag, flags);def new_fcompiler(plat=None;"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/distutils/from_template.py,[u'4'],1,1," -110,7 +110,7 ; -134,7 +134,7 ;",def conv(astr);def listrepl(mobj);
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/distutils/interactive.py,[u'2'],1,1," -14,7 +14,7 ;",def show_information(*args);
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/distutils/misc_util.py,[u'16'],2,3," -715,7 +715,7 ; -792,7 +792,7 ; -1099,7 +1099,7 ; -1324,7 +1324,7 ; -1633,7 +1633,7 ; -2113,7 +2113,7 ; -2150,7 +2150,7 ; -2195,7 +2195,7 ;","def __init__(self;def set_options(self, **options);def _optimize_data_files(self);def paths(self,*paths,**kws);def dict_append(self,**dict);def get_info(pkgname, dirs=None);def default_config_dict(name = None, parent_name = None, local_path=None);def generate_config_py(target);"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/distutils/npy_pkg_config.py,[u'16'],2,3," -140,7 +140,7 ; -175,7 +175,7 ; -183,7 +183,7 ; -194,7 +194,7 ; -219,7 +219,7 ; -308,16 +308,16 ;","def sections(self);class VariableSet(object);def __init__(self, d);def interpolate(self, value);def variables(self);def _read_config_imp(filenames, dirs=None);"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/distutils/system_info.py,[u'6'],1,1," -506,7 +506,7 ; -2088,7 +2088,7 ; -2132,7 +2132,7 ;","def get_info(self, notfound_action=0);def combine_paths(*args, **kws);def show_all(argv=None);"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/dual.py,[u'2'],1,1," -65,5 +65,5 ;",def restore_func(name);
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/f2py/auxfuncs.py,[u'12'],2,2," -572,7 +572,7 ; -610,7 +610,7 ; -628,7 +628,7 ; -642,7 +642,7 ; -667,7 +667,7 ; -682,7 +682,7 ;","def getargs(rout);def replace(str,d,defaultsep='');def dictappend(rd,ar);def dictappend(rd,ar);def applyrules(rules,d,var={});def applyrules(rules,d,var={});"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/f2py/capi_maps.py,[u'18'],2,3," -176,21 +176,21 ; -465,7 +465,7 ; -489,7 +489,7 ; -577,12 +577,12 ;",";def sign2map(a,var);def sign2map(a,var);def routsign2map(rout);"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/f2py/cb_rules.py,[u'2'],1,1," -519,7 +519,7 ;","def buildcallback(rout,um);"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/f2py/cfuncs.py,[u'10'],1,2," -1116,7 +1116,7 ; -1161,12 +1161,12 ; -1177,7 +1177,7 ; -1192,7 +1192,7 ;",";def append_needs(need,flag=1);def append_needs(need,flag=1);def append_needs(need,flag=1);"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/f2py/common_rules.py,[u'2'],1,1," -33,7 +33,7 ;",;
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/f2py/crackfortran.py,[u'92'],12,12," -678,7 +678,7 ; -834,7 +834,7 ; -1029,7 +1029,7 ; -1203,7 +1203,7 ; -1283,7 +1283,7 ; -1294,7 +1294,7 ; -1320,7 +1320,7 ; -1362,7 +1362,7 ; -1384,9 +1384,9 ; -1405,9 +1405,9 ; -1447,7 +1447,7 ; -1460,7 +1460,7 ; -1494,7 +1494,7 ; -1506,7 +1506,7 ; -1532,7 +1532,7 ; -1585,7 +1585,7 ; -1646,7 +1646,7 ; -1680,7 +1680,7 ; -1750,7 +1750,7 ; -1932,7 +1932,7 ; -1943,12 +1943,12 ; -2065,7 +2065,7 ; -2079,7 +2079,7 ; -2091,14 +2091,14 ; -2107,13 +2107,13 ; -2192,7 +2192,7 ; -2206,7 +2206,7 ; -2321,13 +2321,13 ; -2363,12 +2363,12 ; -2382,8 +2382,8 ; -2433,7 +2433,7 ; -2534,7 +2534,7 ; -2564,7 +2564,7 ; -2575,7 +2575,7 ; -2584,7 +2584,7 ; -2593,7 +2593,7 ; -2635,7 +2635,7 ;","def appenddecl(decl,decl2,force=1);def analyzeline(m,case,line);def analyzeline(m,case,line);def cracktypespec0(typespec,ll);def updatevars(typespec,selector,attrspec,entitydecl);def updatevars(typespec,selector,attrspec,entitydecl);def updatevars(typespec,selector,attrspec,entitydecl);def updatevars(typespec,selector,attrspec,entitydecl);def cracktypespec(typespec,selector);def cracktypespec(typespec,selector);def setkindselector(decl,sel,force=0);def setcharselector(decl,sel,force=0);def get_useparameters(block, param_map=None);def get_useparameters(block, param_map=None);def postcrack2(block,tab='',param_map=None);def postcrack(block,args=None,tab='');def postcrack(block,args=None,tab='');def sortvarnames(vars);def buildimplicitrules(block);def _get_depend_dict(name, vars, deps);def get_sorted_names(vars);def _eval_scalar(value,params);def analyzevars(block);def analyzevars(block);def analyzevars(block);def analyzevars(block);def analyzevars(block);def analyzevars(block);def analyzevars(block);def analyzevars(block);def analyzeargs(block);def crack2fortrangen(block,tab='\n', as_interface=False);def crack2fortrangen(block,tab='\n', as_interface=False);def crack2fortrangen(block,tab='\n', as_interface=False);def common2fortran(common,tab='');def use2fortran(use,tab='');def vars2fortran(block,vars,args,tab='', as_interface=False);"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/f2py/f2py2e.py,[u'14'],2,2," -313,7 +313,7 ; -326,7 +326,7 ; -336,7 +336,7 ; -362,7 +362,7 ; -387,7 +387,7 ; -464,14 +464,14 ;",def buildmodules(lst);def buildmodules(lst);def buildmodules(lst);def run_main(comline_list);def run_main(comline_list);def run_compile();
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/f2py/f90mod_rules.py,[u'2'],1,1," -99,7 +99,7 ;","def dadd(line,s=doc): s[0] = '%s\n%s'%(s[0],line;"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/f2py/rules.py,[u'6'],1,1," -1181,7 +1181,7 ; -1217,7 +1217,7 ; -1328,7 +1328,7 ;","def buildmodule(m,um);def buildmodule(m,um);def buildapi(rout);"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/f2py/tests/test_array_from_pyobj.py,[u'2'],1,1," -115,7 +115,7 ;","def __new__(cls,name);"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/f2py/use_rules.py,[u'10'],1,2," -57,13 +57,13 ; -73,12 +73,12 ; -96,7 +96,7 ;","def buildusevars(m,r);def buildusevars(m,r);def buildusevar(name,realname,vars,usemodulename);"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/lib/_datasource.py,[u'6'],1,1," -102,7 +102,7 ; -213,7 +213,7 ; -242,7 +242,7 ;","def keys(self);def _iszip(self, filename);def _possible_names(self, filename);"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/lib/arraypad.py,[u'2'],1,1," -752,7 +752,7 ;","def pad(array, pad_width, mode=None, **kwargs);"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/lib/format.py,[u'2'],1,1," -340,7 +340,7 ;",def read_array_header_1_0(fp);
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/lib/npyio.py,[u'12'],2,2," -553,7 +553,7 ; -568,7 +568,7 ; -807,7 +807,7 ; -1418,7 +1418,7 ; -1478,7 +1478,7 ; -1528,7 +1528,7 ;","def _savez(file, args, kwds, compress);def _savez(file, args, kwds, compress);def split_line(line);def genfromtxt(fname, dtype=float, comments='#', delimiter=None;def genfromtxt(fname, dtype=float, comments='#', delimiter=None;def genfromtxt(fname, dtype=float, comments='#', delimiter=None;"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/lib/polynomial.py,[u'2'],1,1," -1030,7 +1030,7 ;",class poly1d(object);
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/lib/recfunctions.py,[u'2'],1,1," -317,7 +317,7 ;","def _fix_defaults(output, defaults=None);"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/lib/tests/test_io.py,[u'10'],1,2," -1591,19 +1591,19 ;",def test_npzfile_dict();
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/lib/utils.py,[u'8'],1,2," -355,11 +355,11 ; -444,7 +444,7 ; -753,7 +753,7 ;","def who(vardict=None);def _makenamedict(module='numpy');def lookfor(what, module=None, import_modules=True, regenerate=False;"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/linalg/lapack_lite/make_lite.py,[u'4'],1,1," -110,12 +110,12 ;","def getRoutine(self, rname);"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/linalg/tests/test_build.py,[u'2'],1,1," -32,7 +32,7 ;","def grep_dependencies(self, file, deps);"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/ma/core.py,[u'2'],1,1," -5528,7 +5528,7 ;","def __deepcopy__(self, memo=None);"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/ma/mrecords.py,[u'4'],1,1," -710,7 +710,7 ; -720,7 +720,7 ;","def addfield(mrecord, newfield, newfieldname=None);def addfield(mrecord, newfield, newfieldname=None);"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/ma/testutils.py,[u'4'],1,1," -83,7 +83,7 ; -127,7 +127,7 ;","def assert_equal(actual, desired, err_msg='');def fail_if_equal(actual, desired, err_msg='',);"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/numarray/numerictypes.py,[u'2'],1,1," -524,7 +524,7 ;",def getType(type);
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/numarray/session.py,[u'10'],1,2," -118,7 +118,7 ; -233,7 +233,7 ; -267,11 +267,11 ; -331,7 +331,7 ;","def _callers_modules();def _locate(modules, object);def save(variables=None, file=SAVEFILE, dictionary=None, verbose=False);def load(variables=None, file=SAVEFILE, dictionary=None, verbose=False);"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/oldnumeric/alter_code1.py,[u'4'],1,1," -58,14 +58,14 ;",;
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/oldnumeric/precision.py,[u'2'],1,1," -19,7 +19,7 ;",def _get_precisions(typecodes);
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/testing/noseclasses.py,[u'4'],1,1," -81,7 +81,7 ; -93,7 +93,7 ;","def _find(self, tests, obj, name, module, source_lines, globs, seen);def _find(self, tests, obj, name, module, source_lines, globs, seen);"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/testing/nosetester.py,[u'2'],1,1," -348,7 +348,7 ;","def test(self, label='fast', verbose=1, extra_argv=None;"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,numpy/testing/utils.py,[u'4'],1,1," -241,7 +241,7 ; -1050,7 +1050,7 ;","def assert_equal(actual,desired,err_msg='',verbose=True);def decorate_methods(cls, decorator, testmatch=None);"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,pavement.py,[u'2'],1,1," -302,7 +302,7 ;",def bdist_wininst_simple();
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,tools/c_coverage/c_coverage_report.py,[u'6'],1,1," -95,20 +95,20 ;","def clean_path(self, path);"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,tools/py3tool.py,[u'6'],1,1," -74,7 +74,7 ; -250,7 +250,7 ; -261,7 +261,7 ;","def main();def sync_2to3(src, dst, patchfile=None, clean=False);def sync_2to3(src, dst, patchfile=None, clean=False);"
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,tools/win32build/build.py,[u'2'],1,1," -130,7 +130,7 ;",def get_windist_exec(pyver);
3029,6,2c146ce, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 18:38:24 -0700",ct: [PATCH 2/6] 2to3: dict fixes.,71,226,226,tools/win32build/misc/x86analysis.py,[u'2'],1,1," -126,7 +126,7 ;",def has_ppro(seq);
3029,6,35eea98, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 19:03:58 -0700",ct: [PATCH 3/6] 2to3: execfile fixes.,1,0,0,setupegg.py,[u'2'],1,1," -21,4 +21,4 ;",;
3029,6,f3dd495, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 19:11:51 -0700",ct: [PATCH 4/6] 2to3: filter fixes.,8,24,24,numpy/_import_tools.py,[u'2'],1,1," -207,7 +207,7 ;","def __call__(self,*packages, **options);"
3029,6,f3dd495, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 19:11:51 -0700",ct: [PATCH 4/6] 2to3: filter fixes.,8,24,24,numpy/distutils/command/build_py.py,[u'2'],1,1," -21,7 +21,7 ;","def find_package_modules(self, package, package_dir);"
3029,6,f3dd495, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 19:11:51 -0700",ct: [PATCH 4/6] 2to3: filter fixes.,8,24,24,numpy/distutils/command/build_src.py,[u'4'],2,2," -186,8 +186,8 ;",def build_data_files_sources(self);
3029,6,f3dd495, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 19:11:51 -0700",ct: [PATCH 4/6] 2to3: filter fixes.,8,24,24,numpy/distutils/misc_util.py,[u'8'],4,4," -555,7 +555,7 ; -566,13 +566,13 ; -808,7 +808,7 ;","def general_source_directories_files(top_path);def get_ext_source_files(ext);def _wildcard_get_subpackage(self, subpackage_name;"
3029,6,f3dd495, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 19:11:51 -0700",ct: [PATCH 4/6] 2to3: filter fixes.,8,24,24,numpy/distutils/system_info.py,[u'6'],3,3," -232,9 +232,9 ;","def libpaths(paths, bits);"
3029,6,f3dd495, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 19:11:51 -0700",ct: [PATCH 4/6] 2to3: filter fixes.,8,24,24,numpy/f2py/f2py2e.py,[u'22'],11,11," -430,13 +430,13 ; -450,12 +450,12 ; -481,8 +481,8 ;",def run_compile();def run_compile();def run_compile();
3029,6,f3dd495, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 19:11:51 -0700",ct: [PATCH 4/6] 2to3: filter fixes.,8,24,24,numpy/testing/utils.py,[u'2'],1,1," -1050,7 +1050,7 ;","def decorate_methods(cls, decorator, testmatch=None);"
3029,6,f3dd495, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 19:11:51 -0700",ct: [PATCH 4/6] 2to3: filter fixes.,8,24,24,setup.py,[u'2'],1,1," -50,7 +50,7 ;",;
3029,6,802adca, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 19:19:20 -0700",ct: [PATCH 5/6] 2to3: funcattrs fixes.,7,13,13,doc/sphinxext/phantom_import.py,[u'2'],1,1," -129,7 +129,7 ;","def base_cmp(a, b);"
3029,6,802adca, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 19:19:20 -0700",ct: [PATCH 5/6] 2to3: funcattrs fixes.,7,13,13,numpy/compat/_inspect.py,[u'8'],4,4," -128,8 +128,8 ; -209,8 +209,8 ;","def getargspec(func);def convert(name, locals=locals;"
3029,6,802adca, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 19:19:20 -0700",ct: [PATCH 5/6] 2to3: funcattrs fixes.,7,13,13,numpy/distutils/command/build_src.py,[u'2'],1,1," -189,7 +189,7 ;",def build_data_files_sources(self);
3029,6,802adca, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 19:19:20 -0700",ct: [PATCH 5/6] 2to3: funcattrs fixes.,7,13,13,numpy/distutils/mingw32ccompiler.py,[u'2'],1,1," -202,7 +202,7 ;",def link(self;
3029,6,802adca, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 19:19:20 -0700",ct: [PATCH 5/6] 2to3: funcattrs fixes.,7,13,13,numpy/distutils/misc_util.py,[u'2'],1,1," -850,7 +850,7 ;","def _get_configuration_from_setup_py(self, setup_py;"
3029,6,802adca, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 19:19:20 -0700",ct: [PATCH 5/6] 2to3: funcattrs fixes.,7,13,13,numpy/lib/utils.py,[u'8'],4,4," -86,8 +86,8 ; -122,7 +122,7 ; -541,7 +541,7 ;","def get_numarray_include(type=None);def __call__(self, func, *args, **kwargs);def info(object=None,maxwidth=76,output=sys.stdout,toplevel='numpy');"
3029,6,802adca, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 19:19:20 -0700",ct: [PATCH 5/6] 2to3: funcattrs fixes.,7,13,13,numpy/testing/noseclasses.py,[u'2'],1,1," -35,7 +35,7 ;","def _from_module(self, module, object);"
3029,6,f639bf5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 19:38:54 -0700",ct: [PATCH 6/6] 2to3: exec fixes.,13,19,19,doc/numpybook/runcode.py,[u'10'],5,5," -33,7 +33,7 ; -94,8 +94,8 ; -109,8 +109,8 ;","def getoutput(tstr, dic);def runpycode(lyxstr, name='MyCode');def runpycode(lyxstr, name='MyCode');"
3029,6,f639bf5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 19:38:54 -0700",ct: [PATCH 6/6] 2to3: exec fixes.,13,19,19,numpy/_import_tools.py,[u'2'],1,1," -66,7 +66,7 ;","def _init_info_modules(self, packages=None);"
3029,6,f639bf5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 19:38:54 -0700",ct: [PATCH 6/6] 2to3: exec fixes.,13,19,19,numpy/f2py/tests/test_array_from_pyobj.py,[u'4'],2,2," -530,14 +530,14 ;",def test_inplace_from_casttype(self);
3029,6,f639bf5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 19:38:54 -0700",ct: [PATCH 6/6] 2to3: exec fixes.,13,19,19,numpy/lib/function_base.py,[u'2'],1,1," -3240,7 +3240,7 ;","def add_newdoc(place, obj, doc);"
3029,6,f639bf5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 19:38:54 -0700",ct: [PATCH 6/6] 2to3: exec fixes.,13,19,19,numpy/numarray/session.py,[u'2'],1,1," -168,7 +168,7 ;",def _loadmodule(module);
3029,6,f639bf5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 19:38:54 -0700",ct: [PATCH 6/6] 2to3: exec fixes.,13,19,19,numpy/polynomial/chebyshev.py,[u'2'],1,1," -2012,4 +2012,4 ;",def chebpts2(npts);
3029,6,f639bf5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 19:38:54 -0700",ct: [PATCH 6/6] 2to3: exec fixes.,13,19,19,numpy/polynomial/hermite.py,[u'2'],1,1," -1747,4 +1747,4 ;",def hermweight(x);
3029,6,f639bf5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 19:38:54 -0700",ct: [PATCH 6/6] 2to3: exec fixes.,13,19,19,numpy/polynomial/hermite_e.py,[u'2'],1,1," -1743,4 +1743,4 ;",def hermeweight(x);
3029,6,f639bf5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 19:38:54 -0700",ct: [PATCH 6/6] 2to3: exec fixes.,13,19,19,numpy/polynomial/laguerre.py,[u'2'],1,1," -1739,4 +1739,4 ;",def lagweight(x);
3029,6,f639bf5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 19:38:54 -0700",ct: [PATCH 6/6] 2to3: exec fixes.,13,19,19,numpy/polynomial/legendre.py,[u'2'],1,1," -1765,4 +1765,4 ;",def legweight(x);
3029,6,f639bf5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 19:38:54 -0700",ct: [PATCH 6/6] 2to3: exec fixes.,13,19,19,numpy/polynomial/polynomial.py,[u'2'],1,1," -1489,4 +1489,4 ;",def polyroots(c);
3029,6,f639bf5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 19:38:54 -0700",ct: [PATCH 6/6] 2to3: exec fixes.,13,19,19,numpy/testing/numpytest.py,[u'2'],1,1," -42,7 +42,7 ;",def importall(package);
3029,6,f639bf5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 19:38:54 -0700",ct: [PATCH 6/6] 2to3: exec fixes.,13,19,19,numpy/testing/utils.py,[u'4'],2,2," -881,7 +881,7 ; -1108,7 +1108,7 ;","def assert_array_less(x, y, err_msg='', verbose=True);def measure(code_str,times=1,label=None);"
3028,1,c6397ba, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 14:24:35 -0700","ct: [PATCH] 2to3: Updata `except Exception, msg:` syntax in files not in numpy/ .This should finish the updating of the exception syntax.",7,9,9,benchmarks/benchmark.py,[u'2'],1,1," -35,7 +35,7 ;",def run(self);
3028,1,c6397ba, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 14:24:35 -0700","ct: [PATCH] 2to3: Updata `except Exception, msg:` syntax in files not in numpy/ .This should finish the updating of the exception syntax.",7,9,9,doc/sphinxext/docscrape.py,[u'2'],1,1," -428,7 +428,7 ;","def __init__(self, func, role='func', doc=None, config={});"
3028,1,c6397ba, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 14:24:35 -0700","ct: [PATCH] 2to3: Updata `except Exception, msg:` syntax in files not in numpy/ .This should finish the updating of the exception syntax.",7,9,9,doc/sphinxext/plot_directive.py,[u'6'],3,3," -291,7 +291,7 ; -458,7 +458,7 ; -565,7 +565,7 ;","def run(arguments, content, options, state_machine, state, lineno);def run_code(code, code_path, ns=None);def makefig(code, code_path, output_dir, output_base, config);"
3028,1,c6397ba, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 14:24:35 -0700","ct: [PATCH] 2to3: Updata `except Exception, msg:` syntax in files not in numpy/ .This should finish the updating of the exception syntax.",7,9,9,pavement.py,[u'2'],1,1," -316,7 +316,7 ;",def bootstrap(options);
3028,1,c6397ba, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 14:24:35 -0700","ct: [PATCH] 2to3: Updata `except Exception, msg:` syntax in files not in numpy/ .This should finish the updating of the exception syntax.",7,9,9,tools/osxbuild/build.py,[u'2'],1,1," -74,7 +74,7 ;","def shellcmd(cmd, verbose=True);"
3028,1,c6397ba, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 14:24:35 -0700","ct: [PATCH] 2to3: Updata `except Exception, msg:` syntax in files not in numpy/ .This should finish the updating of the exception syntax.",7,9,9,tools/win32build/build.py,[u'2'],1,1," -63,7 +63,7 ;","def build(arch, pyver);"
3028,1,c6397ba, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 14:24:35 -0700","ct: [PATCH] 2to3: Updata `except Exception, msg:` syntax in files not in numpy/ .This should finish the updating of the exception syntax.",7,9,9,tools/win32build/prepare_bootstrap.py,[u'2'],1,1," -18,7 +18,7 ;",def build_sdist();
3027,1,046d057, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 14:43:38 -0700",ct: [PATCH] 2to3: Remove `has_key` use that was missed.The files not in the numpy/ directory were missed. This gets themall (I hope).,2,4,4,doc/sphinxext/docscrape.py,[u'4'],2,2," -113,7 +113,7 ; -450,7 +450,7 ;","def __getitem__(self,key);def __str__(self);"
3027,1,046d057, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 14:43:38 -0700",ct: [PATCH] 2to3: Remove `has_key` use that was missed.The files not in the numpy/ directory were missed. This gets themall (I hope).,2,4,4,doc/sphinxext/plot_directive.py,[u'4'],2,2," -36,7 +36,7 ; -257,7 +257,7 ;",";def run(arguments, content, options, state_machine, state, lineno);"
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/cdoc/numpyfilter.py,[u'2'],1,0," -6,6 +6,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/cython/run_test.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/cython/setup.py,[u'2'],1,0," -3,7 +3,9 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/example.py,[u'2'],1,0," -8,6 +8,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/newdtype_example/example.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/newdtype_example/floatint/__init__.py,[u'3'],1,0," -0,0 +1,3 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/newdtype_example/setup.py,[u'1'],1,0," -1,3 +1,4 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/numpybook/comparison/ctypes/filter.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/numpybook/comparison/ctypes/interface.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/numpybook/comparison/pyrex/setup.py,[u'1'],1,0," -1,4 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/numpybook/comparison/timing.py,[u'1'],1,0," -1,3 +1,4 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/numpybook/comparison/weave/filter.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/numpybook/comparison/weave/inline.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/numpybook/runcode.py,[u'31'],1,2," -1,17 +1,20 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/postprocess.py,[u'2'],1,0," -6,6 +6,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/pyrex/run_test.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/pyrex/setup.py,[u'2'],1,0," -10,7 +10,9 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/source/conf.py,[u'1'],1,0," -1,4 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/sphinxext/numpydoc/comment_eater.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/sphinxext/numpydoc/compiler_unparse.py,[u'1'],1,0," -10,6 +10,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/sphinxext/numpydoc/docscrape.py,[u'1'],1,0," -1,6 +1,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/sphinxext/numpydoc/docscrape_sphinx.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/sphinxext/numpydoc/linkcode.py,[u'2'],1,0," -7,7 +7,9 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/sphinxext/numpydoc/numpydoc.py,[u'1'],1,0," -15,6 +15,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/sphinxext/numpydoc/phantom_import.py,[u'2'],1,0," -14,6 +14,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/sphinxext/numpydoc/plot_directive.py,[u'3'],1,1," -74,6 +74,7 ; -99,7 +100,7 ;",;def setup(app);
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/sphinxext/numpydoc/tests/test_docscrape.py,[u'1'],1,0," -1,4 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/sphinxext/numpydoc/traitsdoc.py,[u'1'],1,0," -13,6 +13,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/sphinxext/setup.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/summarize.py,[u'1'],1,0," -5,6 +5,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/swig/test/setup.py,[u'1'],1,0," -1,4 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/swig/test/testArray.py,[u'1'],1,0," -1,4 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/swig/test/testFarray.py,[u'1'],1,0," -1,4 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/swig/test/testFortran.py,[u'1'],1,0," -1,4 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/swig/test/testMatrix.py,[u'1'],1,0," -1,4 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/swig/test/testTensor.py,[u'1'],1,0," -1,4 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,doc/swig/test/testVector.py,[u'1'],1,0," -1,4 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/__init__.py,[u'1'],1,0," -104,6 +104,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/_import_tools.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/add_newdocs.py,[u'16'],1,1," -1,10 +1,14 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/build_utils/__init__.py,[u'1'],1,0," -0,0 +1 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/build_utils/common.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/build_utils/waf.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/compat/__init__.py,[u'2'],1,0," -8,6 +8,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/compat/_inspect.py,[u'2'],1,0," -3,7 +3,9 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/compat/py3k.py,[u'1'],1,0," -2,6 +2,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/compat/setup.py,[u'2'],1,0," -1,4 +1,6 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/__init__.py,[u'1'],1,0," -1,3 +1,4 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/_internal.py,[u'9'],1,1," -1,5 +1,10 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/_methods.py,[u'8'],1,1," -1,5 +1,9 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/arrayprint.py,[u'3'],1,0," -1,7 +1,10 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/code_generators/__init__.py,[u'1'],1,0," -0,0 +1 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/code_generators/cversions.py,[u'9'],1,1," -1,5 +1,10 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/code_generators/genapi.py,[u'3'],1,0," -4,7 +4,10 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/code_generators/generate_numpy_api.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/code_generators/generate_ufunc_api.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/code_generators/generate_umath.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/code_generators/numpy_api.py,[u'2'],1,0," -10,7 +10,9 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/code_generators/ufunc_docstrings.py,[u'22'],1,1," -1,13 +1,15 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/defchararray.py,[u'1'],1,0," -15,6 +15,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/fromnumeric.py,[u'6'],1,1," -1,4 +1,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/function_base.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/getlimits.py,[u'4'],1,1," -1,5 +1,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/info.py,[u'3'],1,1," -1,4 +1,4 ; -81,6 +81,7 ;",;;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/machar.py,[u'6'],1,1," -1,9 +1,11 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/memmap.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/numeric.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/numerictypes.py,[u'1'],1,0," -80,6 +80,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/records.py,[u'2'],1,0," -34,6 +34,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/setup.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/setup_common.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/shape_base.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/src/multiarray/testcalcs.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/tests/test_api.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/tests/test_arrayprint.py,[u'2'],1,0," -1,5 +1,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/tests/test_blasdot.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/tests/test_datetime.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/tests/test_defchararray.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/tests/test_deprecations.py,[u'3'],1,0," -1,7 +1,10 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/tests/test_dtype.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/tests/test_einsum.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/tests/test_errstate.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/tests/test_function_base.py,[u'1'],1,0," -1,3 +1,4 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/tests/test_getlimits.py,[u'2'],1,0," -1,5 +1,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/tests/test_half.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/tests/test_indexerrors.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/tests/test_indexing.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/tests/test_item_selection.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/tests/test_machar.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/tests/test_memmap.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/tests/test_multiarray.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/tests/test_multiarray_assignment.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/tests/test_nditer.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/tests/test_numeric.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/tests/test_numerictypes.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/tests/test_print.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/tests/test_records.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/tests/test_regression.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/tests/test_scalarmath.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/tests/test_scalarprint.py,[u'1'],1,0," -2,6 +2,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/tests/test_shape_base.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/tests/test_ufunc.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/tests/test_umath.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/tests/test_umath_complex.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/core/tests/test_unicode.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/ctypeslib.py,[u'2'],1,0," -49,6 +49,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/__init__.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/__version__.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/ccompiler.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/command/__init__.py,[u'12'],1,1," -1,7 +1,17 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/command/autodist.py,[u'6'],1,1," -1,4 +1,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/command/bdist_rpm.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/command/build.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/command/build_clib.py,[u'1'],1,0," -1,5 +1,6 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/command/build_ext.py,[u'2'],1,0," -1,5 +1,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/command/build_py.py,[u'1'],1,0," -1,3 +1,4 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/command/build_scripts.py,[u'2'],1,0," -1,5 +1,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/command/build_src.py,[u'1'],1,0," -1,5 +1,6 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/command/config.py,[u'1'],1,0," -2,6 +2,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/command/config_compiler.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/command/develop.py,[u'2'],1,0," -1,7 +1,9 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/command/egg_info.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/command/install.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/command/install_clib.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/command/install_data.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/command/install_headers.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/command/sdist.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/compat.py,[u'3'],1,0," -1,6 +1,9 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/conv_template.py,[u'2'],1,0," -78,6 +78,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/core.py,[u'1'],1,0," -1,3 +1,4 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/cpuinfo.py,[u'2'],1,0," -10,7 +10,9 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/environment.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/exec_command.py,[u'1'],1,0," -44,6 +44,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/extension.py,[u'2'],1,0," -4,7 +4,9 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/fcompiler/__init__.py,[u'2'],1,0," -11,7 +11,9 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/fcompiler/absoft.py,[u'1'],1,0," -5,6 +5,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/fcompiler/compaq.py,[u'1'],1,0," -1,5 +1,6 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/fcompiler/g95.py,[u'1'],1,0," -1,4 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/fcompiler/gnu.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/fcompiler/hpux.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/fcompiler/ibm.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/fcompiler/intel.py,[u'1'],1,0," -1,4 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/fcompiler/lahey.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/fcompiler/mips.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/fcompiler/nag.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/fcompiler/none.py,[u'1'],1,0," -1,3 +1,4 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/fcompiler/pathf95.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/fcompiler/pg.py,[u'2'],1,1," -1,5 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/fcompiler/sun.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/fcompiler/vast.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/from_template.py,[u'1'],1,0," -45,6 +45,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/info.py,[u'1'],1,0," -1,5 +1,6 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/intelccompiler.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/interactive.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/lib2def.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/line_endings.py,[u'2'],1,0," -1,5 +1,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/log.py,[u'1'],1,0," -1,4 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/mingw32ccompiler.py,[u'1'],1,0," -7,6 +7,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/misc_util.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/npy_pkg_config.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/numpy_distribution.py,[u'2'],1,0," -1,4 +1,6 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/pathccompiler.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/setup.py,[u'1'],1,0," -1,4 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/system_info.py,[u'2'],1,0," -108,7 +108,9 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/tests/f2py_ext/__init__.py,[u'1'],1,0," -0,0 +1 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/tests/f2py_ext/setup.py,[u'2'],1,0," -1,4 +1,6 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/tests/f2py_ext/tests/test_fib2.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/tests/f2py_f90_ext/__init__.py,[u'1'],1,0," -0,0 +1 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/tests/f2py_f90_ext/setup.py,[u'2'],1,0," -1,4 +1,6 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,.../distutils/tests/f2py_f90_ext/tests/test_foo.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/tests/gen_ext/__init__.py,[u'1'],1,0," -0,0 +1 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/tests/gen_ext/setup.py,[u'1'],1,0," -1,4 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/tests/gen_ext/tests/test_fib3.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/tests/pyrex_ext/__init__.py,[u'1'],1,0," -0,0 +1 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/tests/pyrex_ext/setup.py,[u'2'],1,0," -1,4 +1,6 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,.../distutils/tests/pyrex_ext/tests/test_primes.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/tests/setup.py,[u'2'],1,0," -1,4 +1,6 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/tests/swig_ext/__init__.py,[u'1'],1,0," -0,0 +1 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/tests/swig_ext/setup.py,[u'2'],1,0," -1,4 +1,6 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,.../distutils/tests/swig_ext/tests/test_example.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,.../tests/swig_ext/tests/test_example2.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/tests/test_fcompiler_gnu.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/tests/test_fcompiler_intel.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/tests/test_misc_util.py,[u'1'],1,0," -1,4 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/tests/test_npy_pkg_config.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/distutils/unixccompiler.py,[u'2'],1,0," -1,6 +1,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/doc/__init__.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/doc/basics.py,[u'2'],1,0," -136,3 +136,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/doc/broadcasting.py,[u'2'],1,0," -175,3 +175,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/doc/byteswapping.py,[u'6'],1,1," -1,4 +1,4 ; -134,4 +134,6 ;",;;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/doc/constants.py,[u'2'],1,0," -10,6 +10,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/doc/creation.py,[u'2'],1,0," -141,3 +141,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/doc/glossary.py,[u'2'],1,0," -415,3 +415,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/doc/howtofind.py,[u'2'],1,0," -7,3 +7,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/doc/indexing.py,[u'2'],1,0," -405,3 +405,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/doc/internals.py,[u'2'],1,0," -160,3 +160,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/doc/io.py,[u'2'],1,0," -7,3 +7,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/doc/jargon.py,[u'2'],1,0," -7,3 +7,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/doc/methods_vs_functions.py,[u'2'],1,0," -7,3 +7,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/doc/misc.py,[u'2'],1,0," -226,3 +226,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/doc/performance.py,[u'2'],1,0," -7,3 +7,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/doc/structured_arrays.py,[u'2'],1,0," -221,3 +221,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/doc/subclassing.py,[u'2'],1,0," -557,3 +557,5 ;","def __array_wrap__(self, arr, context=None);"
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/doc/ufuncs.py,[u'2'],1,0," -135,3 +135,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/dual.py,[u'2'],1,0," -10,6 +10,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/f2py/__init__.py,[u'1'],1,0," -1,4 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/f2py/__version__.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/f2py/auxfuncs.py,[u'3'],1,0," -12,7 +12,10 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/f2py/capi_maps.py,[u'2'],1,0," -9,7 +9,9 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/f2py/cb_rules.py,[u'2'],1,0," -11,7 +11,9 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/f2py/cfuncs.py,[u'2'],1,0," -12,7 +12,9 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/f2py/common_rules.py,[u'2'],1,0," -11,7 +11,9 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/f2py/crackfortran.py,[u'255'],11,10," -1,8 +1,134 ; -11,138 +137,15 ;",;;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/f2py/diagnose.py,[u'1'],1,0," -1,4 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/f2py/doc/collectinput.py,[u'2'],1,0," -17,7 +17,9 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/f2py/docs/pytest.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/f2py/docs/usersguide/setup_example.py,[u'2'],1,0," -1,4 +1,6 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/f2py/f2py2e.py,[u'2'],1,0," -12,7 +12,9 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/f2py/f2py_testing.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/f2py/f90mod_rules.py,[u'2'],1,0," -11,7 +11,9 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/f2py/func2subr.py,[u'2'],1,0," -11,7 +11,9 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/f2py/info.py,[u'1'],1,0," -1,5 +1,6 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/f2py/rules.py,[u'5'],1,1," -39,8 +39,7 ; -49,7 +48,9 ;",;;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/f2py/setup.py,[u'2'],1,0," -14,7 +14,9 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/f2py/tests/test_array_from_pyobj.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/f2py/tests/test_assumed_shape.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/f2py/tests/test_callback.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/f2py/tests/test_kind.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/f2py/tests/test_mixed.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/f2py/tests/test_return_character.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/f2py/tests/test_return_complex.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/f2py/tests/test_return_integer.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/f2py/tests/test_return_logical.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/f2py/tests/test_return_real.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/f2py/tests/test_size.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/f2py/tests/util.py,[u'1'],1,0," -5,6 +5,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/f2py/use_rules.py,[u'2'],1,0," -13,7 +13,9 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/fft/__init__.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/fft/fftpack.py,[u'2'],1,0," -30,6 +30,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/fft/helper.py,[u'3'],1,0," -1,6 +1,9 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/fft/info.py,[u'1'],1,0," -174,5 +174,6 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/fft/setup.py,[u'1'],1,0," -1,3 +1,4 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/fft/tests/test_helper.py,[u'6'],1,1," -1,6 +1,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/__init__.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/_datasource.py,[u'1'],1,0," -31,6 +31,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/_iotools.py,[u'6'],1,1," -1,4 +1,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/arraypad.py,[u'2'],1,0," -1,7 +1,9 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/arraysetops.py,[u'3'],1,0," -22,7 +22,10 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/arrayterator.py,[u'1'],0,1," -7,7 +7,6 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/financial.py,[u'17'],1,1," -1,10 +1,15 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/format.py,[u'1'],1,0," -134,6 +134,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/function_base.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/index_tricks.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/info.py,[u'1'],1,0," -145,6 +145,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/npyio.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/polynomial.py,[u'2'],1,0," -1,6 +1,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/recfunctions.py,[u'2'],1,1," -4,8 +4,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/scimath.py,[u'1'],1,0," -15,6 +15,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/setup.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/shape_base.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/stride_tricks.py,[u'2'],1,0," -5,6 +5,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/tests/test__datasource.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/tests/test__iotools.py,[u'3'],1,0," -1,4 +1,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/tests/test_arraypad.py,[u'7'],1,1," -1,6 +1,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/tests/test_arraysetops.py,[u'3'],1,1," -1,6 +1,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/tests/test_arrayterator.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/tests/test_financial.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/tests/test_format.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/tests/test_function_base.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/tests/test_index_tricks.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/tests/test_io.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/tests/test_polynomial.py,[u'6'],1,1," -1,4 +1,6 ; -74,8 +76,8 ;",;;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/tests/test_recfunctions.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/tests/test_regression.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/tests/test_shape_base.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/tests/test_stride_tricks.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/tests/test_twodim_base.py,[u'3'],1,1," -1,6 +1,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/tests/test_type_check.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/tests/test_ufunclike.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/tests/test_utils.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/twodim_base.py,[u'1'],1,0," -1,6 +1,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/type_check.py,[u'5'],1,1," -1,4 +1,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/ufunclike.py,[u'3'],1,0," -1,7 +1,10 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/user_array.py,[u'2'],1,0," -2,7 +2,9 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/lib/utils.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/linalg/__init__.py,[u'2'],1,0," -42,6 +42,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/linalg/info.py,[u'1'],1,0," -32,5 +32,6 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/linalg/lapack_lite/clapack_scrub.py,[u'1'],1,0," -1,4 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/linalg/lapack_lite/fortran.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/linalg/lapack_lite/make_lite.py,[u'1'],1,0," -1,4 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/linalg/linalg.py,[u'2'],1,0," -8,6 +8,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/linalg/setup.py,[u'1'],1,0," -1,3 +1,4 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/linalg/tests/test_build.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/linalg/tests/test_linalg.py,[u'2'],1,0," -1,5 +1,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/linalg/tests/test_regression.py,[u'2'],1,0," -1,5 +1,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/ma/__init__.py,[u'2'],1,0," -36,6 +36,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/ma/bench.py,[u'1'],1,0," -1,5 +1,6 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/ma/core.py,[u'2'],1,0," -20,6 +20,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/ma/extras.py,[u'2'],1,0," -8,6 +8,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/ma/mrecords.py,[u'3'],1,0," -6,7 +6,10 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/ma/setup.py,[u'2'],1,0," -1,4 +1,6 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/ma/tests/test_core.py,[u'2'],1,0," -4,6 +4,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/ma/tests/test_extras.py,[u'3'],1,0," -5,7 +5,10 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/ma/tests/test_mrecords.py,[u'3'],1,0," -3,7 +3,10 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/ma/tests/test_old_ma.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/ma/tests/test_regression.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/ma/tests/test_subclassing.py,[u'3'],1,0," -4,7 +4,10 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/ma/testutils.py,[u'3'],1,0," -3,7 +3,10 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/ma/timer_comparison.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/ma/version.py,[u'5'],1,1," -1,4 +1,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/matlib.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/matrixlib/__init__.py,[u'6'],1,1," -1,4 +1,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/matrixlib/defmatrix.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/matrixlib/setup.py,[u'2'],1,0," -1,4 +1,6 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/matrixlib/tests/test_defmatrix.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/matrixlib/tests/test_multiarray.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/matrixlib/tests/test_numeric.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/matrixlib/tests/test_regression.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/numarray/__init__.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/numarray/alter_code1.py,[u'2'],1,0," -52,6 +52,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/numarray/alter_code2.py,[u'3'],1,1," -5,7 +5,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/numarray/compat.py,[u'1'],1,0," -1,3 +1,4 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/numarray/convolve.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/numarray/fft.py,[u'1'],1,0," -1,3 +1,4 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/numarray/functions.py,[u'16'],1,1," -1,18 +1,6 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/numarray/image.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/numarray/linear_algebra.py,[u'1'],1,0," -1,3 +1,4 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/numarray/ma.py,[u'1'],1,0," -1,2 +1,3 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/numarray/matrix.py,[u'1'],1,0," -1,3 +1,4 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/numarray/mlab.py,[u'1'],1,0," -1,3 +1,4 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/numarray/nd_image.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/numarray/numerictypes.py,[u'3'],1,0," -25,7 +25,10 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/numarray/random_array.py,[u'1'],1,0," -1,3 +1,4 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/numarray/session.py,[u'1'],1,0," -72,6 +72,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/numarray/setup.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/numarray/ufuncs.py,[u'1'],1,0," -1,3 +1,4 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/numarray/util.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/oldnumeric/__init__.py,[u'6'],1,1," -1,4 +1,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/oldnumeric/alter_code1.py,[u'3'],1,0," -27,7 +27,10 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/oldnumeric/alter_code2.py,[u'2'],1,0," -19,6 +19,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/oldnumeric/array_printer.py,[u'1'],1,0," -1,3 +1,4 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/oldnumeric/arrayfns.py,[u'4'],1,1," -1,5 +1,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/oldnumeric/compat.py,[u'5'],1,1," -1,4 +1,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/oldnumeric/fft.py,[u'1'],1,0," -1,3 +1,4 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/oldnumeric/fix_default_axis.py,[u'3'],1,0," -32,7 +32,10 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/oldnumeric/functions.py,[u'5'],1,1," -1,4 +1,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/oldnumeric/linear_algebra.py,[u'12'],1,1," -1,10 +1,12 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/oldnumeric/ma.py,[u'3'],1,0," -1,4 +1,5 ; -8,6 +9,8 ;",;;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/oldnumeric/matrix.py,[u'5'],1,1," -1,4 +1,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/oldnumeric/misc.py,[u'4'],1,1," -1,5 +1,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/oldnumeric/mlab.py,[u'5'],1,1," -1,4 +1,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/oldnumeric/precision.py,[u'13'],1,1," -1,7 +1,12 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/oldnumeric/random_array.py,[u'5'],1,1," -1,4 +1,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/oldnumeric/rng.py,[u'10'],1,1," -1,8 +1,10 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/oldnumeric/rng_stats.py,[u'1'],1,0," -1,3 +1,4 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/oldnumeric/setup.py,[u'1'],1,0," -1,3 +1,4 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/oldnumeric/tests/test_oldnumeric.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/oldnumeric/tests/test_regression.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/oldnumeric/typeconv.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/oldnumeric/ufuncs.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/oldnumeric/user_array.py,[u'2'],1,1," -1,4 +1,4 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/polynomial/__init__.py,[u'2'],1,0," -13,6 +13,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/polynomial/polytemplate.py,[u'2'],1,0," -9,6 +9,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/polynomial/setup.py,[u'2'],1,1," -1,4 +1,4 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/polynomial/tests/test_printing.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/random/__init__.py,[u'2'],1,0," -86,6 +86,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/random/info.py,[u'1'],1,0," -82,6 +82,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/random/mtrand/generate_mtrand_c.py,[u'2'],1,0," -1,4 +1,6 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/random/setup.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/random/tests/test_random.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/random/tests/test_regression.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/setup.py,[u'2'],1,0," -1,4 +1,6 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/testing/__init__.py,[u'2'],1,0," -3,7 +3,9 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/testing/decorators.py,[u'2'],1,0," -13,6 +13,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/testing/noseclasses.py,[u'1'],1,0," -4,6 +4,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/testing/nosetester.py,[u'2'],1,0," -4,6 +4,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/testing/nulltester.py,[u'6'],1,1," -1,11 +1,13 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/testing/numpytest.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/testing/print_coercion_tables.py,[u'5'],1,1," -1,5 +1,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/testing/setup.py,[u'2'],1,0," -1,4 +1,6 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/testing/tests/test_decorators.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/testing/tests/test_doctesting.py,[u'3'],1,0," -1,5 +1,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/testing/tests/test_utils.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/testing/utils.py,[u'2'],1,0," -1,6 +1,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/tests/test_ctypeslib.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,numpy/tests/test_matlib.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,pavement.py,[u'1'],1,0," -55,6 +55,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,setup.py,[u'2'],1,0," -11,7 +11,9 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,setupegg.py,[u'1'],1,0," -12,6 +12,7 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,tools/allocation_tracking/setup.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,tools/allocation_tracking/track_allocations.py,[u'2'],1,0," -1,3 +1,5 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,tools/c_coverage/c_coverage_report.py,[u'2'],1,0," -2,7 +2,9 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,tools/commitstats.py,[u'1'],1,0," -1,3 +1,4 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,tools/py3tool.py,[u'2'],1,0," -18,6 +18,8 ;",;
3026,2,6aa264c, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 13:26:58 -0700","ct: [PATCH 1/2] 2to3: Put `from __future__ import division in every python file.This should be harmless, as we already are division clean. However,placement of this import takes some care. In the future a scriptcan be used to append new features without worry, at least untilsuch time as it exceeds a single line. Having that ability willmake it easier to deal with absolute imports and printing updates.",395,975,237,tools/test-installed-numpy.py,[u'1'],1,0," -1,4 +1,5 ;",;
3026,2,cabc07e, Charles Harris <charlesr.harris@gmail.com>," Thu, 28 Feb 2013 08:11:02 -0700",ct: [PATCH 2/2] MAINT: Make numpy/f2py/crackfortran docstring read better.The copyright and short summary were moved to the top of thedocstring with the usage description below.,1,12,13,numpy/f2py/crackfortran.py,[u'25'],12,13," -1,5 +1,17 ; -125,19 +137,6 ;",;;
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/add_newdocs.py,[u'4'],1,1," -1009,7 +1009,7 ; -4813,7 +4813,7 ;","def luf(lamdaexpr, *args, **kwargs);def luf(lamdaexpr, *args, **kwargs);"
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/build_utils/common.py,[u'4'],1,1," -43,7 +43,7 ; -57,7 +57,7 ;",def _pyod2();def _pyod3();
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/compat/_inspect.py,[u'6'],1,2," -73,7 +73,7 ; -169,7 +169,7 ; -196,7 +196,7 ;","def getargs(co);def formatargspec(args, varargs=None, varkw=None, defaults=None;def convert(name, locals=locals;"
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/core/arrayprint.py,[u'6'],1,2," -203,12 +203,12 ;",def _leading_trailing(a);
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/core/machar.py,[u'4'],1,1," -177,7 +177,7 ; -285,7 +285,7 ;","def _do_init(self, float_conv, int_conv, float_to_float, float_to_str, title);def _do_init(self, float_conv, int_conv, float_to_float, float_to_str, title);"
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/core/numeric.py,[u'12'],2,3," -975,10 +975,10 ; -1075,7 +1075,7 ; -1083,7 +1083,7 ;","def tensordot(a, b, axes=2);def tensordot(a, b, axes=2);def tensordot(a, b, axes=2);"
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/core/records.py,[u'6'],1,2," -74,7 +74,7 ; -184,7 +184,7 ; -562,7 +562,7 ;",";def _setfieldnames(self, names, titles);def fromarrays(arrayList, dtype=None, shape=None, formats=None;"
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/core/setup_common.py,[u'4'],1,1," -179,7 +179,7 ; -193,7 +193,7 ;",def _pyod2();def _pyod3();
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/core/tests/test_einsum.py,[u'64'],12,13," -106,11 +106,11 ; -118,62 +118,62 ; -182,11 +182,11 ; -204,13 +204,13 ; -218,14 +218,14 ; -233,13 +233,13 ; -247,14 +247,14 ; -262,7 +262,7 ; -275,7 +275,7 ; -294,7 +294,7 ; -313,14 +313,14 ; -397,7 +397,7 ;","def test_einsum_views(self);def test_einsum_views(self);def test_einsum_views(self);def check_einsum_sums(self, dtype);def check_einsum_sums(self, dtype);def check_einsum_sums(self, dtype);def check_einsum_sums(self, dtype);def check_einsum_sums(self, dtype);def check_einsum_sums(self, dtype);def check_einsum_sums(self, dtype);def check_einsum_sums(self, dtype);def check_einsum_sums(self, dtype);"
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/core/tests/test_half.py,[u'2'],1,1," -248,7 +248,7 ;",def test_half_funcs(self);
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/core/tests/test_multiarray.py,[u'22'],4,5," -423,13 +423,13 ; -551,7 +551,7 ; -564,7 +564,7 ; -590,7 +590,7 ; -705,7 +705,7 ; -716,7 +716,7 ; -738,7 +738,7 ; -788,10 +788,10 ;",def test_subarray_comparison(self);def test_sort(self);def test_sort(self);def test_sort(self);def test_argsort(self);def test_argsort(self);def test_argsort(self);def test_argsort(self);
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/core/tests/test_nditer.py,[u'24'],5,5," -74,9 +74,9 ; -100,9 +100,9 ; -127,9 +127,9 ; -154,9 +154,9 ; -417,9 +417,9 ; -1568,7 +1568,7 ; -1800,7 +1800,7 ;",def test_iter_best_order();def test_iter_c_order();def test_iter_f_order();def test_iter_c_or_f_order();def test_iter_no_inner_full_coalesce();def assign_iter(i);def test_iter_buffered_cast_subarray();
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/core/tests/test_records.py,[u'4'],1,1," -50,11 +50,11 ;",def test_recarray_from_obj(self);
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/core/tests/test_regression.py,[u'8'],2,2," -243,7 +243,7 ; -1080,7 +1080,7 ; -1664,7 +1664,7 ; -1758,7 +1758,7 ;","def test_argmax(self,level=rlevel);def test_char_array_creation(self, level=rlevel);def test_ticket_1756(self);def test_assign_obj_listoflists(self);"
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/core/tests/test_ufunc.py,[u'4'],1,1," -142,7 +142,7 ; -153,7 +153,7 ;","def logical_xor(self, obj) ;def logical_xor(self, obj) ;"
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/core/tests/test_umath_complex.py,[u'10'],2,2," -147,7 +147,7 ; -296,7 +296,7 ; -392,7 +392,7 ; -432,7 +432,7 ; -478,7 +478,7 ;","def test_simple(self);def test_special_values(self);def test_simple(self);def test_simple(self);def g(a, b);"
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/distutils/command/build_clib.py,[u'2'],1,1," -16,7 +16,7 ;",;
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/distutils/conv_template.py,[u'2'],1,1," -204,7 +204,7 ;",def parse_loop_header(loophead) ;
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/distutils/from_template.py,[u'4'],1,1," -101,7 +101,7 ; -177,7 +177,7 ;",def find_repl_patterns(astr);def namerepl(mobj);
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/distutils/mingw32ccompiler.py,[u'4'],1,1," -274,14 +274,14 ;","def generate_def(dll, dfile);"
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/distutils/misc_util.py,[u'6'],1,2," -62,7 +62,7 ; -641,7 +641,7 ; -739,7 +739,7 ;",def quote_args(args);def get_frame(level=0);def __init__(self;
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/f2py/auxfuncs.py,[u'4'],1,1," -451,14 +451,14 ;","def __call__(self,var);"
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/f2py/capi_maps.py,[u'4'],1,1," -307,7 +307,7 ; -514,7 +514,7 ;","def getarrdims(a,var,verbose=0);def sign2map(a,var);"
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/f2py/crackfortran.py,[u'4'],1,1," -1039,7 +1039,7 ; -1222,7 +1222,7 ;","def analyzeline(m,case,line);def removespaces(expr);"
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/f2py/docs/pytest.py,[u'4'],1,1," -3,8 +3,8 ;",;
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/f2py/f2py2e.py,[u'12'],2,3," -308,7 +308,7 ; -320,7 +320,7 ; -360,13 +360,13 ; -376,7 +376,7 ; -518,7 +518,7 ;",def buildmodules(lst);def buildmodules(lst);def run_main(comline_list);def run_main(comline_list);def run_compile();
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/f2py/tests/test_kind.py,[u'4'],1,1," -21,11 +21,11 ;",def test_all(self);
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/fft/fftpack.py,[u'4'],1,1," -959,7 +959,7 ; -1079,7 +1079,7 ;","def rfftn(a, s=None, axes=None);def irfftn(a, s=None, axes=None);"
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/lib/_iotools.py,[u'4'],1,1," -217,7 +217,7 ; -854,7 +854,7 ;","def _fixedwidth_splitter(self, line);def easy_dtype(ndtype, names=None, defaultfmt=""f%i"", **validationargs);"
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/lib/arraypad.py,[u'4'],1,1," -344,12 +344,12 ;","def _linear_ramp(vector, pad_tuple, iaxis, kwargs);"
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/lib/arrayterator.py,[u'4'],1,1," -195,7 +195,7 ; -216,7 +216,7 ;",def __iter__(self);def __iter__(self);
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/lib/function_base.py,[u'24'],5,5," -681,7 +681,7 ; -696,7 +696,7 ; -705,7 +705,7 ; -762,7 +762,7 ; -770,7 +770,7 ; -898,7 +898,7 ; -1859,7 +1859,7 ; -1916,7 +1916,7 ; -3299,13 +3299,13 ;","def piecewise(x, condlist, funclist, *args, **kw);def piecewise(x, condlist, funclist, *args, **kw);def piecewise(x, condlist, funclist, *args, **kw);def select(condlist, choicelist, default=0);def select(condlist, choicelist, default=0);def gradient(f, *varargs);def __call__(self, *args, **kwargs);def _func(*vargs);def meshgrid(*xi, **kwargs);"
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/lib/index_tricks.py,[u'10'],2,2," -68,7 +68,7 ; -146,7 +146,7 ; -165,7 +165,7 ; -177,7 +177,7 ; -248,7 +248,7 ;","def ix_(*args);def __getitem__(self,key);def __getitem__(self,key);def __getitem__(self,key);def __getitem__(self,key);"
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/lib/npyio.py,[u'4'],1,1," -52,7 +52,7 ; -1413,7 +1413,7 ;","def seek(self, offset, whence=0);def genfromtxt(fname, dtype=float, comments='#', delimiter=None;"
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/lib/polynomial.py,[u'10'],2,2," -131,7 +131,7 ; -667,7 +667,7 ; -887,7 +887,7 ; -1077,7 +1077,7 ; -1156,7 +1156,7 ;","def poly(seq_of_zeros);def polyval(p, x);def polydiv(u, v);def fmt_float(q);def __pow__(self, val);"
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/lib/shape_base.py,[u'4'],1,1," -346,7 +346,7 ; -392,7 +392,7 ;","def dstack(tup);def array_split(ary,indices_or_sections,axis = 0);"
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/lib/stride_tricks.py,[u'6'],1,2," -77,7 +77,7 ; -85,7 +85,7 ; -100,7 +100,7 ;",def broadcast_arrays(*args);def broadcast_arrays(*args);def broadcast_arrays(*args);
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/lib/tests/test_arrayterator.py,[u'2'],1,1," -14,7 +14,7 ;",def test();
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/lib/tests/test_function_base.py,[u'4'],1,1," -147,7 +147,7 ; -1379,7 +1379,7 ;",def test_returned(self);def test_if_len_x_is_small(self);
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/lib/tests/test_io.py,[u'18'],3,4," -204,7 +204,7 ; -666,7 +666,7 ; -778,13 +778,13 ; -1246,7 +1246,7 ; -1269,7 +1269,7 ; -1289,7 +1289,7 ; -1527,7 +1527,7 ;",def test_closing_fid(self);def test_ndmin_keyword(self);def test_skiprows(self);def test_with_masked_column_various(self);def f(_ret={});def f(_ret={});def test_gft_using_filename(self);
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/lib/tests/test_regression.py,[u'2'],1,1," -20,7 +20,7 ;","def test_cov_parameters(self,level=rlevel);"
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/lib/tests/test_shape_base.py,[u'2'],1,1," -315,7 +315,7 ;",def test_kroncompare(self);
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/lib/tests/test_twodim_base.py,[u'18'],3,4," -76,12 +76,12 ; -91,14 +91,14 ; -158,13 +158,13 ;","class TestDiag(TestCase);def test_matrix(self, vals=None);def test_basic(self);"
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/lib/twodim_base.py,[u'4'],1,1," -484,7 +484,7 ; -510,7 +510,7 ;","def vander(x, N=None);def vander(x, N=None);"
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/lib/utils.py,[u'4'],1,1," -375,7 +375,7 ; -393,7 +393,7 ;",def who(vardict=None);def who(vardict=None);
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/linalg/linalg.py,[u'6'],1,2," -663,7 +663,7 ; -1056,7 +1056,7 ; -1575,7 +1575,7 ;","def qr(a, mode='full');def eig(a);def pinv(a, rcond=1e-15 );"
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/linalg/tests/test_linalg.py,[u'2'],1,1," -456,7 +456,7 ;",def test_matrix_rank(self);
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/ma/extras.py,[u'16'],3,4," -1395,14 +1395,14 ; -1435,7 +1435,7 ; -1605,8 +1605,8 ; -1716,7 +1716,7 ;","def corrcoef(x, y=None, rowvar=True, bias=False, allow_masked=True, ddof=None);def __getitem__(self, key);def notmasked_edges(a, axis=None);def notmasked_contiguous(a, axis=None);"
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/ma/mrecords.py,[u'2'],1,1," -62,7 +62,7 ;","def _checknames(descr, names=None);"
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/ma/tests/test_core.py,[u'8'],2,2," -2700,9 +2700,9 ; -2752,7 +2752,7 ; -2900,7 +2900,7 ;",def test_ptp(self);def test_varstd(self);def test_varstd(self);
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/ma/tests/test_extras.py,[u'2'],1,1," -442,7 +442,7 ;",def test_2d(self);
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/ma/tests/test_old_ma.py,[u'10'],2,2," -790,9 +790,9 ; -826,7 +826,7 ; -874,7 +874,7 ; -882,7 +882,7 ;","def test_ptp(self);def test_varstd(self);def eqmask(m1, m2);def eqmask(m1, m2);"
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/ma/testutils.py,[u'4'],1,1," -62,7 +62,7 ; -134,7 +134,7 ;","def almost(a, b, decimal=6, fill_value=True);def fail_if_equal(actual, desired, err_msg='',);"
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/ma/timer_comparison.py,[u'2'],1,1," -440,7 +440,7 ;",def test_A(self);
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/matrixlib/defmatrix.py,[u'8'],2,2," -20,7 +20,7 ; -173,7 +173,7 ; -185,7 +185,7 ; -354,7 +354,7 ;","def _eval(astr);def matrix_power(M,n);def matrix_power(M,n);def __repr__(self);"
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/numarray/session.py,[u'2'],1,1," -166,7 +166,7 ;",def _loadmodule(module);
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/oldnumeric/matrix.py,[u'2'],1,1," -12,7 +12,7 ;",;
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/polynomial/chebyshev.py,[u'24'],5,5," -367,7 +367,7 ; -426,7 +426,7 ; -545,7 +545,7 ; -858,7 +858,7 ; -947,11 +947,11 ; -1072,7 +1072,7 ; -1083,7 +1083,7 ; -1173,7 +1173,7 ; -1459,7 +1459,7 ; -1943,7 +1943,7 ; -1980,7 +1980,7 ;","def poly2cheb(pol) ;def cheb2poly(c) ;def chebfromroots(roots) ;def chebpow(c, pow, maxpower=16) ;def chebder(c, m=1, scl=1, axis=0) ;def chebint(c, m=1, k=[], lbnd=0, scl=1, axis=0);def chebint(c, m=1, k=[], lbnd=0, scl=1, axis=0);def chebval(x, c, tensor=True);def chebvander(x, deg) ;def chebpts1(npts);def chebpts2(npts);"
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/polynomial/hermite.py,[u'26'],5,5," -117,7 +117,7 ; -173,7 +173,7 ; -292,7 +292,7 ; -440,7 +440,7 ; -504,7 +504,7 ; -571,7 +571,7 ; -628,7 +628,7 ; -712,11 +712,11 ; -831,7 +831,7 ; -840,7 +840,7 ; -936,7 +936,7 ; -1231,7 +1231,7 ;","def poly2herm(pol) ;def herm2poly(c) ;def hermfromroots(roots) ;def hermmulx(c);def hermmul(c1, c2);def hermdiv(c1, c2);def hermpow(c, pow, maxpower=16) ;def hermder(c, m=1, scl=1, axis=0) ;def hermint(c, m=1, k=[], lbnd=0, scl=1, axis=0);def hermint(c, m=1, k=[], lbnd=0, scl=1, axis=0);def hermval(x, c, tensor=True);def hermvander(x, deg) ;"
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/polynomial/hermite_e.py,[u'26'],5,5," -117,7 +117,7 ; -172,7 +172,7 ; -292,7 +292,7 ; -440,7 +440,7 ; -504,7 +504,7 ; -569,7 +569,7 ; -626,7 +626,7 ; -710,11 +710,11 ; -829,7 +829,7 ; -838,7 +838,7 ; -933,7 +933,7 ; -1227,7 +1227,7 ;","def poly2herme(pol) ;def herme2poly(c) ;def hermefromroots(roots) ;def hermemulx(c);def hermemul(c1, c2);def hermediv(c1, c2);def hermepow(c, pow, maxpower=16) ;def hermeder(c, m=1, scl=1, axis=0) ;def hermeint(c, m=1, k=[], lbnd=0, scl=1, axis=0);def hermeint(c, m=1, k=[], lbnd=0, scl=1, axis=0);def hermeval(x, c, tensor=True);def hermevander(x, deg) ;"
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/polynomial/laguerre.py,[u'26'],5,5," -116,7 +116,7 ; -169,7 +169,7 ; -288,7 +288,7 ; -437,7 +437,7 ; -502,7 +502,7 ; -567,7 +567,7 ; -624,7 +624,7 ; -708,11 +708,11 ; -830,7 +830,7 ; -839,7 +839,7 ; -936,7 +936,7 ; -1230,7 +1230,7 ;","def poly2lag(pol) ;def lag2poly(c) ;def lagfromroots(roots) ;def lagmulx(c);def lagmul(c1, c2);def lagdiv(c1, c2);def lagpow(c, pow, maxpower=16) ;def lagder(c, m=1, scl=1, axis=0) ;def lagint(c, m=1, k=[], lbnd=0, scl=1, axis=0);def lagint(c, m=1, k=[], lbnd=0, scl=1, axis=0);def lagval(x, c, tensor=True);def lagvander(x, deg) ;"
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/polynomial/legendre.py,[u'26'],5,5," -142,7 +142,7 ; -201,7 +201,7 ; -319,7 +319,7 ; -467,7 +467,7 ; -536,7 +536,7 ; -604,7 +604,7 ; -658,7 +658,7 ; -747,11 +747,11 ; -872,7 +872,7 ; -883,7 +883,7 ; -973,7 +973,7 ; -1260,7 +1260,7 ;","def poly2leg(pol) ;def leg2poly(c) ;def legfromroots(roots) ;def legmulx(c);def legmul(c1, c2);def legdiv(c1, c2);def legpow(c, pow, maxpower=16) ;def legder(c, m=1, scl=1, axis=0) ;def legint(c, m=1, k=[], lbnd=0, scl=1, axis=0);def legint(c, m=1, k=[], lbnd=0, scl=1, axis=0);def legval(x, c, tensor=True);def legvander(x, deg) ;"
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/polynomial/polynomial.py,[u'16'],3,4," -191,7 +191,7 ; -466,7 +466,7 ; -549,11 +549,11 ; -665,7 +665,7 ; -674,7 +674,7 ; -773,7 +773,7 ; -1059,7 +1059,7 ;","def polyfromroots(roots) ;def polypow(c, pow, maxpower=None) ;def polyder(c, m=1, scl=1, axis=0);def polyint(c, m=1, k=[], lbnd=0, scl=1, axis=0);def polyint(c, m=1, k=[], lbnd=0, scl=1, axis=0);def polyval(x, c, tensor=True);def polyvander(x, deg) ;"
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/polynomial/polyutils.py,[u'2'],1,1," -106,7 +106,7 ;",def trimseq(seq) ;
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/polynomial/tests/test_chebyshev.py,[u'80'],15,16," -30,14 +30,14 ; -62,8 +62,8 ; -72,8 +72,8 ; -84,14 +84,14 ; -100,8 +100,8 ; -129,14 +129,14 ; -215,13 +215,13 ; -231,7 +231,7 ; -239,7 +239,7 ; -249,41 +249,41 ; -313,21 +313,21 ; -355,7 +355,7 ; -363,7 +363,7 ; -464,7 +464,7 ; -473,7 +473,7 ; -493,11 +493,11 ;",def trim(x) ;def test_chebx(self) ;def test_chebadd(self) ;def test_chebsub(self) ;def test_chebmul(self) ;def test_chebval(self) ;def test_chebint(self) ;def test_chebint(self) ;def test_chebint(self) ;def test_chebint(self) ;def test_chebder(self) ;def test_chebvander(self) ;def test_chebvander(self) ;class TestMisc(TestCase) ;def test_chebfromroots(self) ;def test_chebline(self) ;
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/polynomial/tests/test_classes.py,[u'2'],1,1," -459,7 +459,7 ;",def check_pow(Poly) ;
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/polynomial/tests/test_hermite.py,[u'76'],14,15," -47,8 +47,8 ; -57,8 +57,8 ; -69,17 +69,17 ; -89,8 +89,8 ; -118,7 +118,7 ; -126,7 +126,7 ; -205,13 +205,13 ; -221,7 +221,7 ; -229,7 +229,7 ; -239,41 +239,41 ; -303,21 +303,21 ; -345,7 +345,7 ; -353,7 +353,7 ; -454,7 +454,7 ; -466,7 +466,7 ; -486,11 +486,11 ;",class TestArithmetic(TestCase) ;def test_hermadd(self) ;def test_hermsub(self) ;def test_hermmul(self) ;def test_hermval(self) ;def test_hermval(self) ;def test_hermint(self) ;def test_hermint(self) ;def test_hermint(self) ;def test_hermint(self) ;def test_hermder(self) ;def test_hermvander(self) ;def test_hermvander(self) ;class TestMisc(TestCase) ;def test_hermfromroots(self) ;def test_hermline(self) ;
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/polynomial/tests/test_hermite_e.py,[u'76'],14,15," -44,8 +44,8 ; -54,8 +54,8 ; -66,17 +66,17 ; -86,8 +86,8 ; -115,7 +115,7 ; -123,7 +123,7 ; -202,13 +202,13 ; -218,7 +218,7 ; -226,7 +226,7 ; -236,41 +236,41 ; -300,21 +300,21 ; -342,7 +342,7 ; -350,7 +350,7 ; -451,7 +451,7 ; -463,7 +463,7 ; -483,11 +483,11 ;",class TestArithmetic(TestCase) ;def test_hermeadd(self) ;def test_hermesub(self) ;def test_hermemul(self) ;def test_hermeval(self) ;def test_hermeval(self) ;def test_hermeint(self) ;def test_hermeint(self) ;def test_hermeint(self) ;def test_hermeint(self) ;def test_hermeder(self) ;def test_hermevander(self) ;def test_hermevander(self) ;class TestMisc(TestCase) ;def test_hermefromroots(self) ;def test_hermeline(self) ;
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/polynomial/tests/test_laguerre.py,[u'76'],14,15," -43,8 +43,8 ; -53,8 +53,8 ; -65,17 +65,17 ; -85,8 +85,8 ; -113,7 +113,7 ; -121,7 +121,7 ; -200,13 +200,13 ; -216,7 +216,7 ; -224,7 +224,7 ; -234,41 +234,41 ; -298,21 +298,21 ; -340,7 +340,7 ; -348,7 +348,7 ; -449,7 +449,7 ; -461,7 +461,7 ; -481,11 +481,11 ;",class TestArithmetic(TestCase) ;def test_lagadd(self) ;def test_lagsub(self) ;def test_lagmul(self) ;def test_lagval(self) ;def test_lagval(self) ;def test_lagint(self) ;def test_lagint(self) ;def test_lagint(self) ;def test_lagint(self) ;def test_lagder(self) ;def test_lagvander(self) ;def test_lagvander(self) ;class TestMisc(TestCase) ;def test_lagfromroots(self) ;def test_lagline(self) ;
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/polynomial/tests/test_legendre.py,[u'76'],14,15," -46,8 +46,8 ; -56,8 +56,8 ; -68,7 +68,7 ; -76,10 +76,10 ; -89,8 +89,8 ; -117,7 +117,7 ; -125,7 +125,7 ; -204,13 +204,13 ; -220,7 +220,7 ; -228,7 +228,7 ; -238,41 +238,41 ; -302,21 +302,21 ; -344,7 +344,7 ; -352,7 +352,7 ; -452,7 +452,7 ; -464,7 +464,7 ; -484,11 +484,11 ;",class TestArithmetic(TestCase) ;def test_legadd(self) ;def test_legsub(self) ;def test_legmulx(self);def test_legmul(self) ;def test_legval(self) ;def test_legval(self) ;def test_legint(self) ;def test_legint(self) ;def test_legint(self) ;def test_legint(self) ;def test_legder(self) ;def test_legvander(self) ;def test_legvander(self) ;class TestMisc(TestCase) ;def test_legfromroots(self) ;def test_legline(self) ;
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/polynomial/tests/test_polynomial.py,[u'74'],14,14," -44,8 +44,8 ; -54,8 +54,8 ; -66,14 +66,14 ; -91,8 +91,8 ; -119,8 +119,8 ; -129,7 +129,7 ; -208,13 +208,13 ; -222,14 +222,14 ; -237,41 +237,41 ; -301,21 +301,21 ; -343,7 +343,7 ; -351,7 +351,7 ; -388,7 +388,7 ; -397,7 +397,7 ;",def test_polyx(self) ;def test_polyadd(self) ;def test_polysub(self) ;def test_polydiv(self) ;def test_polyval(self) ;def test_polyval(self) ;def test_polyint(self) ;def test_polyint(self) ;def test_polyint(self) ;def test_polyder(self) ;def test_polyvander(self) ;def test_polyvander(self) ;class TestMisc(TestCase) ;def test_polyfromroots(self) ;
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/polynomial/tests/test_polyutils.py,[u'6'],1,2," -10,7 +10,7 ; -22,8 +22,8 ;",;def test_as_series(self) ;
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/random/tests/test_regression.py,[u'2'],1,1," -67,7 +67,7 ;",def test_call_within_randomstate(self);
3025,1,98051a5, Charles Harris <charlesr.harris@gmail.com>," Wed, 27 Feb 2013 06:41:55 -0700","ct: [PATCH] 2to3: Mark legitimate python3 uses of range by using xrange instead.The 2to3 conversion will replaces xrange by range, i.e., using range inthis way is legitimate in both python 2 and python 3. The remaining useof range is then replaced with list(range(*)).The idea is to get the other fixups done, then replace all xrange withrange to finish the job.",74,524,524,numpy/testing/utils.py,[u'8'],2,2," -102,7 +102,7 ; -248,7 +248,7 ; -1092,7 +1092,7 ; -1125,7 +1125,7 ;","def rand(*args);def assert_equal(actual,desired,err_msg='',verbose=True);def measure(code_str,times=1,label=None);def _assert_valid_refcount(op);"
3024,1,23b87a5, Ralf Gommers <ralf.gommers@googlemail.com>," Wed, 27 Feb 2013 07:39:43 +0100",ct: [PATCH] BUG: fix NPY_NO_DEPRECATED_API mechanism.,4,11,4,doc/HOWTO_RELEASE.rst.txt,[u'7'],5,2," -284,11 +284,14 ;","Now, set ``release=True`` in setup.py, the;"
3024,1,23b87a5, Ralf Gommers <ralf.gommers@googlemail.com>," Wed, 27 Feb 2013 07:39:43 +0100",ct: [PATCH] BUG: fix NPY_NO_DEPRECATED_API mechanism.,4,11,4,numpy/core/code_generators/cversions.py,[u'3'],2,1," -5,11 +5,12 ;",;
3024,1,23b87a5, Ralf Gommers <ralf.gommers@googlemail.com>," Wed, 27 Feb 2013 07:39:43 +0100",ct: [PATCH] BUG: fix NPY_NO_DEPRECATED_API mechanism.,4,11,4,numpy/core/code_generators/cversions.txt,[u'4'],3,1," -1,4 +1,6 ;",;
3024,1,23b87a5, Ralf Gommers <ralf.gommers@googlemail.com>," Wed, 27 Feb 2013 07:39:43 +0100",ct: [PATCH] BUG: fix NPY_NO_DEPRECATED_API mechanism.,4,11,4,numpy/core/include/numpy/numpyconfig.h,[u'1'],1,0," -29,5 +29,6 ;",;
3023,1,705bf92, Charles Harris <charlesr.harris@gmail.com>," Tue, 26 Feb 2013 20:04:59 -0700","ct: [PATCH] 2to3: Use modern exception syntax.Example:  except ValueError,msg: -> except ValueError as msg:",26,55,55,numpy/_import_tools.py,[u'6'],3,3," -68,7 +68,7 ; -87,7 +87,7 ; -241,7 +241,7 ;","def _init_info_modules(self, packages=None);def _init_info_modules(self, packages=None);def _execcmd(self,cmdstr);"
3023,1,705bf92, Charles Harris <charlesr.harris@gmail.com>," Tue, 26 Feb 2013 20:04:59 -0700","ct: [PATCH] 2to3: Use modern exception syntax.Example:  except ValueError,msg: -> except ValueError as msg:",26,55,55,numpy/build_utils/waf.py,[u'2'],1,1," -166,7 +166,7 ;","def do_binary_search(conf, type_name, kw);"
3023,1,705bf92, Charles Harris <charlesr.harris@gmail.com>," Tue, 26 Feb 2013 20:04:59 -0700","ct: [PATCH] 2to3: Use modern exception syntax.Example:  except ValueError,msg: -> except ValueError as msg:",26,55,55,numpy/core/tests/test_half.py,[u'2'],1,1," -9,7 +9,7 ;",;
3023,1,705bf92, Charles Harris <charlesr.harris@gmail.com>," Tue, 26 Feb 2013 20:04:59 -0700","ct: [PATCH] 2to3: Use modern exception syntax.Example:  except ValueError,msg: -> except ValueError as msg:",26,55,55,numpy/core/tests/test_machar.py,[u'2'],1,1," -21,7 +21,7 ;",def test_underlow(self);
3023,1,705bf92, Charles Harris <charlesr.harris@gmail.com>," Tue, 26 Feb 2013 20:04:59 -0700","ct: [PATCH] 2to3: Use modern exception syntax.Example:  except ValueError,msg: -> except ValueError as msg:",26,55,55,numpy/core/tests/test_nditer.py,[u'6'],3,3," -632,7 +632,7 ; -647,7 +647,7 ; -664,7 +664,7 ;",def test_iter_broadcasting_errors();def test_iter_broadcasting_errors();def test_iter_broadcasting_errors();
3023,1,705bf92, Charles Harris <charlesr.harris@gmail.com>," Tue, 26 Feb 2013 20:04:59 -0700","ct: [PATCH] 2to3: Use modern exception syntax.Example:  except ValueError,msg: -> except ValueError as msg:",26,55,55,numpy/core/tests/test_numeric.py,[u'2'],1,1," -269,7 +269,7 ;","def assert_raises_fpe(self, fpeerr, flop, x, y);"
3023,1,705bf92, Charles Harris <charlesr.harris@gmail.com>," Tue, 26 Feb 2013 20:04:59 -0700","ct: [PATCH] 2to3: Use modern exception syntax.Example:  except ValueError,msg: -> except ValueError as msg:",26,55,55,numpy/core/tests/test_print.py,[u'2'],1,1," -225,7 +225,7 ;",def test_scalar_format();
3023,1,705bf92, Charles Harris <charlesr.harris@gmail.com>," Tue, 26 Feb 2013 20:04:59 -0700","ct: [PATCH] 2to3: Use modern exception syntax.Example:  except ValueError,msg: -> except ValueError as msg:",26,55,55,numpy/core/tests/test_regression.py,[u'10'],5,5," -1185,10 +1185,10 ; -1199,10 +1199,10 ; -1412,7 +1412,7 ;",def test_zeros(self);def test_huge_arange(self);def test_ticket_1539(self);
3023,1,705bf92, Charles Harris <charlesr.harris@gmail.com>," Tue, 26 Feb 2013 20:04:59 -0700","ct: [PATCH] 2to3: Use modern exception syntax.Example:  except ValueError,msg: -> except ValueError as msg:",26,55,55,numpy/ctypeslib.py,[u'2'],1,1," -126,7 +126,7 ;","def load_library(libname, loader_path);"
3023,1,705bf92, Charles Harris <charlesr.harris@gmail.com>," Tue, 26 Feb 2013 20:04:59 -0700","ct: [PATCH] 2to3: Use modern exception syntax.Example:  except ValueError,msg: -> except ValueError as msg:",26,55,55,numpy/distutils/interactive.py,[u'4'],2,2," -87,7 +87,7 ; -178,7 +178,7 ;",def interactive_sys_argv(argv);def interactive_sys_argv(argv);
3023,1,705bf92, Charles Harris <charlesr.harris@gmail.com>," Tue, 26 Feb 2013 20:04:59 -0700","ct: [PATCH] 2to3: Use modern exception syntax.Example:  except ValueError,msg: -> except ValueError as msg:",26,55,55,numpy/distutils/system_info.py,[u'2'],1,1," -1667,7 +1667,7 ;",def calc_info(self);
3023,1,705bf92, Charles Harris <charlesr.harris@gmail.com>," Tue, 26 Feb 2013 20:04:59 -0700","ct: [PATCH] 2to3: Use modern exception syntax.Example:  except ValueError,msg: -> except ValueError as msg:",26,55,55,numpy/f2py/capi_maps.py,[u'2'],1,1," -192,7 +192,7 ;",;
3023,1,705bf92, Charles Harris <charlesr.harris@gmail.com>," Tue, 26 Feb 2013 20:04:59 -0700","ct: [PATCH] 2to3: Use modern exception syntax.Example:  except ValueError,msg: -> except ValueError as msg:",26,55,55,numpy/f2py/crackfortran.py,[u'8'],4,4," -993,7 +993,7 ; -2034,7 +2034,7 ; -2062,7 +2062,7 ; -2805,7 +2805,7 ;","def analyzeline(m,case,line);def get_parameters(vars, global_params={});def _eval_scalar(value,params);def crack2fortran(block);"
3023,1,705bf92, Charles Harris <charlesr.harris@gmail.com>," Tue, 26 Feb 2013 20:04:59 -0700","ct: [PATCH] 2to3: Use modern exception syntax.Example:  except ValueError,msg: -> except ValueError as msg:",26,55,55,numpy/f2py/diagnose.py,[u'18'],9,9," -54,7 +54,7 ; -62,7 +62,7 ; -77,7 +77,7 ; -91,10 +91,10 ; -110,10 +110,10 ; -128,7 +128,7 ; -140,7 +140,7 ;",def run();def run();def run();def run();def run();def run();def run();
3023,1,705bf92, Charles Harris <charlesr.harris@gmail.com>," Tue, 26 Feb 2013 20:04:59 -0700","ct: [PATCH] 2to3: Use modern exception syntax.Example:  except ValueError,msg: -> except ValueError as msg:",26,55,55,numpy/f2py/f2py2e.py,[u'2'],1,1," -235,7 +235,7 ;",def scaninputline(inputline);
3023,1,705bf92, Charles Harris <charlesr.harris@gmail.com>," Tue, 26 Feb 2013 20:04:59 -0700","ct: [PATCH] 2to3: Use modern exception syntax.Example:  except ValueError,msg: -> except ValueError as msg:",26,55,55,numpy/f2py/tests/test_array_from_pyobj.py,[u'12'],6,6," -297,7 +297,7 ; -313,7 +313,7 ; -398,7 +398,7 ; -411,7 +411,7 ; -429,7 +429,7 ; -456,7 +456,7 ;",def test_inout_2seq(self);def test_f_inout_23seq(self);def test_in_cache_from_2casttype(self);def test_in_cache_from_2casttype_failure(self);def test_cache_hidden(self);def test_hidden(self);
3023,1,705bf92, Charles Harris <charlesr.harris@gmail.com>," Tue, 26 Feb 2013 20:04:59 -0700","ct: [PATCH] 2to3: Use modern exception syntax.Example:  except ValueError,msg: -> except ValueError as msg:",26,55,55,numpy/f2py/tests/util.py,[u'2'],1,1," -71,7 +71,7 ;","def wrapper(*a, **kw);"
3023,1,705bf92, Charles Harris <charlesr.harris@gmail.com>," Tue, 26 Feb 2013 20:04:59 -0700","ct: [PATCH] 2to3: Use modern exception syntax.Example:  except ValueError,msg: -> except ValueError as msg:",26,55,55,numpy/lib/format.py,[u'4'],2,2," -334,7 +334,7 ; -356,7 +356,7 ;",def read_array_header_1_0(fp);def read_array_header_1_0(fp);
3023,1,705bf92, Charles Harris <charlesr.harris@gmail.com>," Tue, 26 Feb 2013 20:04:59 -0700","ct: [PATCH] 2to3: Use modern exception syntax.Example:  except ValueError,msg: -> except ValueError as msg:",26,55,55,numpy/lib/tests/test__datasource.py,[u'2'],1,1," -92,7 +92,7 ;",def test_InvalidHTTP(self);
3023,1,705bf92, Charles Harris <charlesr.harris@gmail.com>," Tue, 26 Feb 2013 20:04:59 -0700","ct: [PATCH] 2to3: Use modern exception syntax.Example:  except ValueError,msg: -> except ValueError as msg:",26,55,55,numpy/lib/tests/test_io.py,[u'4'],2,2," -151,7 +151,7 ; -207,7 +207,7 ;",def writer(error_list);def test_closing_fid(self);
3023,1,705bf92, Charles Harris <charlesr.harris@gmail.com>," Tue, 26 Feb 2013 20:04:59 -0700","ct: [PATCH] 2to3: Use modern exception syntax.Example:  except ValueError,msg: -> except ValueError as msg:",26,55,55,numpy/lib/utils.py,[u'4'],2,2," -1154,11 +1154,11 ;",def safe_eval(source);
3023,1,705bf92, Charles Harris <charlesr.harris@gmail.com>," Tue, 26 Feb 2013 20:04:59 -0700","ct: [PATCH] 2to3: Use modern exception syntax.Example:  except ValueError,msg: -> except ValueError as msg:",26,55,55,numpy/linalg/tests/test_linalg.py,[u'2'],1,1," -63,7 +63,7 ;",def test_empty(self);
3023,1,705bf92, Charles Harris <charlesr.harris@gmail.com>," Tue, 26 Feb 2013 20:04:59 -0700","ct: [PATCH] 2to3: Use modern exception syntax.Example:  except ValueError,msg: -> except ValueError as msg:",26,55,55,numpy/ma/core.py,[u'2'],1,1," -110,7 +110,7 ;",def get_object_signature(obj);
3023,1,705bf92, Charles Harris <charlesr.harris@gmail.com>," Tue, 26 Feb 2013 20:04:59 -0700","ct: [PATCH] 2to3: Use modern exception syntax.Example:  except ValueError,msg: -> except ValueError as msg:",26,55,55,numpy/testing/numpytest.py,[u'2'],1,1," -43,7 +43,7 ;",def importall(package);
3023,1,705bf92, Charles Harris <charlesr.harris@gmail.com>," Tue, 26 Feb 2013 20:04:59 -0700","ct: [PATCH] 2to3: Use modern exception syntax.Example:  except ValueError,msg: -> except ValueError as msg:",26,55,55,numpy/testing/utils.py,[u'2'],1,1," -643,7 +643,7 ;","def chk_same_position(x_id, y_id, hasval='nan');"
3023,1,705bf92, Charles Harris <charlesr.harris@gmail.com>," Tue, 26 Feb 2013 20:04:59 -0700","ct: [PATCH] 2to3: Use modern exception syntax.Example:  except ValueError,msg: -> except ValueError as msg:",26,55,55,numpy/tests/test_ctypeslib.py,[u'4'],2,2," -18,7 +18,7 ; -35,7 +35,7 ;",def test_basic(self);def test_basic2(self);
3020,1,93c4db0, Charles Harris <charlesr.harris@gmail.com>," Tue, 26 Feb 2013 19:20:29 -0700",ct: [PATCH] 2to3: Change use 'has_key' to 'key in'.Part of the 2to3 project.,1,4,4,numpy/distutils/npy_pkg_config.py,[u'8'],4,4," -238,11 +238,11 ; -313,7 +313,7 ; -328,7 +328,7 ;",def parse_meta(config);def _read_config(f);def _read_config(f);
3014,1,a226daa," ""Bradley M. Froehle"" <brad.froehle@gmail.com>"," Sun, 24 Feb 2013 21:31:28 -0800","ct: [PATCH] BUG: Choose a more unique PY_ARRAY_UNIQUE_SYMBOL in f2py.In a few exceptional cases where symbols are shared between differentPython modules the use of `PyArray_API` in f2py (fortranobject.h)conflicts with the regular use of the same symbol in the multiarraymodule. Generally the symptom of this conflicting use is a segfaultwhen importing a f2py'ed module. This occurs because the module initcode somehow overwrites the first element of `PyArray_API` with thelocation of `PyArray_API`, causing a crash when`PyArray_GetNDArrayCVersion` is called.Closes gh-2521.",1,0,0,numpy/f2py/src/fortranobject.h,[u'2'],1,1," -9,7 +9,7 ;","extern ""C"" ;"
3012,14,3c5e93b, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 24 Feb 2013 21:51:04 +0100","ct: [PATCH 01/14] BUG: initialize op_axes when only itershape is givenIn this case, the initialization used the number of dimensions insteadof setting it to NULL for each operand, leading to possible segmentationfaults.",2,3,0,numpy/core/src/multiarray/nditer_pywrap.c,[u'2'],1,1," -786,7 +786,7 ;","npyiter_init(NewNpyArrayIterObject *self, PyObject *args, PyObject *kwds;"
3012,14,3c5e93b, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 24 Feb 2013 21:51:04 +0100","ct: [PATCH 01/14] BUG: initialize op_axes when only itershape is givenIn this case, the initialization used the number of dimensions insteadof setting it to NULL for each operand, leading to possible segmentationfaults.",2,3,0,numpy/core/tests/test_nditer.py,[u'2'],2,0," -598,6 +598,8 ;",def test_iter_itershape();
3012,14,c4296ff, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 23 Feb 2013 12:32:58 +0100","ct: [PATCH 02/14] FIX: Make nditer support ndim == 0 for 0-d iterations.There are relatively few changes necessare here. However there is aconceptionally cleaner fix by not using axisdata at all. This fills oneof the axisdata slots even though ndim=0, so that it holds pointersto the data, shape, etc. With some modifications to the buffering codeand some more/other special cases elsewhere this could probably be fullydropped.The dtype transfer functions in lowlevel_strided_loops did not supportndim=0 as well, so a check is added there. This check should not be necessaryas such here, since the shape, etc. should be reasonably filled, howeverthe function should probably support the 0-d case anyway.",4,88,77,.../src/multiarray/lowlevel_strided_loops.c.src,[u'10'],2,0," -967,6 +967,11 ; -1086,6 +1091,11 ;",PyArray_TransferNDimToStrided(npy_intp ndim;PyArray_TransferStridedToNDim(npy_intp ndim;
3012,14,c4296ff, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 23 Feb 2013 12:32:58 +0100","ct: [PATCH 02/14] FIX: Make nditer support ndim == 0 for 0-d iterations.There are relatively few changes necessare here. However there is aconceptionally cleaner fix by not using axisdata at all. This fills oneof the axisdata slots even though ndim=0, so that it holds pointersto the data, shape, etc. With some modifications to the buffering codeand some more/other special cases elsewhere this could probably be fullydropped.The dtype transfer functions in lowlevel_strided_loops did not supportndim=0 as well, so a check is added there. This check should not be necessaryas such here, since the shape, etc. should be reasonably filled, howeverthe function should probably support the 0-d case anyway.",4,88,77,numpy/core/src/multiarray/nditer_api.c,[u'13'],1,1," -134,12 +134,10 ; -642,6 +640,9 ;","NpyIter_RemoveAxis(NpyIter *iter, int axis;NpyIter_GetIterIndex(NpyIter *iter;"
3012,14,c4296ff, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 23 Feb 2013 12:32:58 +0100","ct: [PATCH 02/14] FIX: Make nditer support ndim == 0 for 0-d iterations.There are relatively few changes necessare here. However there is aconceptionally cleaner fix by not using axisdata at all. This fills oneof the axisdata slots even though ndim=0, so that it holds pointersto the data, shape, etc. With some modifications to the buffering codeand some more/other special cases elsewhere this could probably be fullydropped.The dtype transfer functions in lowlevel_strided_loops did not supportndim=0 as well, so a check is added there. This check should not be necessaryas such here, since the shape, etc. should be reasonably filled, howeverthe function should probably support the 0-d case anyway.",4,88,77,numpy/core/src/multiarray/nditer_constr.c,[u'140'],10,11," -54,8 +54,7 ; -75,7 +74,7 ; -86,7 +85,7 ; -122,8 +121,7 ; -175,12 +173,6 ; -231,8 +223,7 ; -338,8 +329,7 ; -389,7 +379,7 ; -758,53 +748,54 ; -1439,8 +1430,7 ; -1540,6 +1530,13 ; -1560,7 +1557,7 ; -1681,8 +1678,8 ; -2003,7 +2000,10 ; -2029,7 +2029,7 ; -2399,7 +2399,7 ; -2698,7 +2698,7 ; -2729,7 +2729,7 ; -2902,7 +2902,7 ;","static in;static PyArray_Descr ;npyiter_allocate_arrays(NpyIter *iter;NpyIter_AdvancedNew(int nop, PyArrayObject **op_in, npy_uint32 flags;NpyIter_AdvancedNew(int nop, PyArrayObject **op_in, npy_uint32 flags;NpyIter_AdvancedNew(int nop, PyArrayObject **op_in, npy_uint32 flags;NpyIter_AdvancedNew(int nop, PyArrayObject **op_in, npy_uint32 flags;NpyIter_AdvancedNew(int nop, PyArrayObject **op_in, npy_uint32 flags;npyiter_check_op_axes(int nop, int oa_ndim, int **op_axes;static in;npyiter_fill_axisdata(NpyIter *iter, npy_uint32 flags, npyiter_opitflags *op_it;npyiter_fill_axisdata(NpyIter *iter, npy_uint32 flags, npyiter_opitflags *op_it;npyiter_fill_axisdata(NpyIter *iter, npy_uint32 flags, npyiter_opitflags *op_it;npyiter_replace_axisdata(NpyIter *iter, int iop;npyiter_compute_index_strides(NpyIter *iter, npy_uint32 flags;static PyArray_Descr ;npyiter_allocate_arrays(NpyIter *iter;npyiter_allocate_arrays(NpyIter *iter;npyiter_allocate_arrays(NpyIter *iter;"
3012,14,c4296ff, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 23 Feb 2013 12:32:58 +0100","ct: [PATCH 02/14] FIX: Make nditer support ndim == 0 for 0-d iterations.There are relatively few changes necessare here. However there is aconceptionally cleaner fix by not using axisdata at all. This fills oneof the axisdata slots even though ndim=0, so that it holds pointersto the data, shape, etc. With some modifications to the buffering codeand some more/other special cases elsewhere this could probably be fullydropped.The dtype transfer functions in lowlevel_strided_loops did not supportndim=0 as well, so a check is added there. This check should not be necessaryas such here, since the shape, etc. should be reasonably filled, howeverthe function should probably support the 0-d case anyway.",4,88,77,numpy/core/src/multiarray/nditer_impl.h,[u'2'],1,1," -294,7 +294,7 ;",struct NpyIter_AD ;
3012,14,09b5e19, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 23 Feb 2013 12:38:41 +0100",ct: [PATCH 03/14] MAINT: Remove np.ndindex 0-d hack.,1,0,24,numpy/lib/index_tricks.py,[u'25'],1,24," -530,30 +530,7 ;",class ndindex(object);
3012,14,be16e9a, Sebastian Berg <sebastian@sipsolutions.net>," Tue, 26 Feb 2013 19:55:59 +0100",ct: [PATCH 04/14] TST: Add some very basic tests for 0-d iterationMostly check that iterator.ndim == 0.,1,26,2,numpy/core/tests/test_nditer.py,[u'28'],26,2," -598,8 +598,6 ; -2470,5 +2468,31 ;",def test_iter_itershape();def test_iter_allocated_array_dtypes();
3012,14,998205e, Sebastian Berg <sebastian@sipsolutions.net>," Tue, 26 Feb 2013 20:57:05 +0100","ct: [PATCH 05/14] API: Add NPY_ITER_USE_ZERO_OA_NDIM flag to allow forced 0-d shapenditer had the problem that it was impossible to provide op_axesor itershape with dimension 0. This means that it was not possibleto force a 0-d iteration or do one without setting op_axes anditershape to NULL.Passing the new flag, -1 is used for oa_ndim to signal that noitershape and op_axes are given. When the flag is set and oa_ndimis zero, a 0-d iteration is forced.",2,14,3,numpy/core/include/numpy/ndarraytypes.h,[u'2'],2,0," -980,6 +980,8 ;",typedef void (NpyIter_GetMultiIndexFunc)(NpyIter *iter;
3012,14,998205e, Sebastian Berg <sebastian@sipsolutions.net>," Tue, 26 Feb 2013 20:57:05 +0100","ct: [PATCH 05/14] API: Add NPY_ITER_USE_ZERO_OA_NDIM flag to allow forced 0-d shapenditer had the problem that it was impossible to provide op_axesor itershape with dimension 0. This means that it was not possibleto force a 0-d iteration or do one without setting op_axes anditershape to NULL.Passing the new flag, -1 is used for oa_ndim to signal that noitershape and op_axes are given. When the flag is set and oa_ndimis zero, a 0-d iteration is forced.",2,14,3,numpy/core/src/multiarray/nditer_constr.c,[u'15'],12,3," -156,6 +156,11 ; -748,15 +753,19 ; -810,7 +819,7 ;","NpyIter_AdvancedNew(int nop, PyArrayObject **op_in, npy_uint32 flags;npyiter_check_op_axes(int nop, int oa_ndim, int **op_axes;npyiter_calculate_ndim(int nop, PyArrayObject **op_in;"
3012,14,e5c0908, Sebastian Berg <sebastian@sipsolutions.net>," Tue, 26 Feb 2013 22:04:42 +0100",ct: [PATCH 06/14] ENH: Use NPY_ITER_USE_ZERO_OA_NDIM to allow scalar op_axesThis allows forcing the iteration to be 0d when arrays are notby selecting no axes.,2,14,15,numpy/core/src/multiarray/nditer_pywrap.c,[u'23'],8,15," -95,7 +95,6 ; -526,7 +525,7 ; -545,13 +544,8 ; -575,7 +569,7 ; -589,7 +583,7 ; -721,12 +715,12 ; -784,7 +778,7 ; -800,10 +794,9 ;","NpyIter_GlobalFlagsConverter(PyObject *flags_in, npy_uint32 *flags;npyiter_convert_op_axes(PyObject *op_axes_in, npy_intp nop;npyiter_convert_op_axes(PyObject *op_axes_in, npy_intp nop;npyiter_convert_op_axes(PyObject *op_axes_in, npy_intp nop;npyiter_convert_op_axes(PyObject *op_axes_in, npy_intp nop;npyiter_init(NewNpyArrayIterObject *self, PyObject *args, PyObject *kwds;npyiter_init(NewNpyArrayIterObject *self, PyObject *args, PyObject *kwds;npyiter_init(NewNpyArrayIterObject *self, PyObject *args, PyObject *kwds;"
3012,14,e5c0908, Sebastian Berg <sebastian@sipsolutions.net>," Tue, 26 Feb 2013 22:04:42 +0100",ct: [PATCH 06/14] ENH: Use NPY_ITER_USE_ZERO_OA_NDIM to allow scalar op_axesThis allows forcing the iteration to be 0d when arrays are notby selecting no axes.,2,14,15,numpy/core/tests/test_nditer.py,[u'6'],6,0," -2482,6 +2482,12 ;",def test_0d_iter();
3012,14,392c8c7, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 27 Feb 2013 12:35:02 +0100","ct: [PATCH 07/14] Fixup for nditer_constr.c, the not NULLs should be enforced anyway",1,0,5,numpy/core/src/multiarray/nditer_constr.c,[u'6'],1,5," -762,10 +762,6 ; -775,7 +771,7 ;","npyiter_check_op_axes(int nop, int oa_ndim, int **op_axes;npyiter_check_op_axes(int nop, int oa_ndim, int **op_axes;"
3012,14,95d6d8f, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 27 Feb 2013 12:35:48 +0100","ct: [PATCH 08/14] Fixup for 0-d iteration support, need to reread baseoffsetsThis is during resetting.",1,2,0,numpy/core/src/multiarray/nditer_api.c,[u'2'],2,0," -1751,6 +1751,8 ;","npyiter_goto_iterindex(NpyIter *iter, npy_intp iterindex;"
3012,14,21dac81, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 27 Feb 2013 12:36:51 +0100","ct: [PATCH 09/14] Fixup for use of new flag in pywrap, forgot that for nested_iter",1,0,0,numpy/core/src/multiarray/nditer_pywrap.c,[u'2'],1,1," -853,7 +853,7 ;",NpyIter_NestedIters(PyObject *NPY_UNUSED(self);
3012,14,c772fc4, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 27 Feb 2013 12:37:12 +0100","ct: [PATCH 10/14] Fixup for Tests, this adds tests for nested iters",1,23,0,numpy/core/tests/test_nditer.py,[u'24'],23,1," -2483,7 +2483,7 ; -2500,5 +2500,27 ;",def test_0d_iter();def test_0d_iter();
3012,14,ae4e322, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 27 Feb 2013 12:57:41 +0100","ct: [PATCH 11/14] ENH: Use NPY_ITER_USE_ZERO_OA_NDIM for einsumThis allows for scalar multiplication with einsum, without anyfurther special casing.",2,2,0,numpy/core/src/multiarray/einsum.c.src,[u'1'],1,0," -3001,6 +3001,7 ;","PyArray_EinsteinSum(char *subscripts, npy_intp nop;"
3012,14,ae4e322, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 27 Feb 2013 12:57:41 +0100","ct: [PATCH 11/14] ENH: Use NPY_ITER_USE_ZERO_OA_NDIM for einsumThis allows for scalar multiplication with einsum, without anyfurther special casing.",2,2,0,numpy/core/tests/test_einsum.py,[u'1'],1,0," -239,6 +239,7 ;","def check_einsum_sums(self, dtype);"
3012,14,2893252, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 27 Feb 2013 13:23:40 +0100","ct: [PATCH 12/14] Fixup, use -1 in oa_ndim for simple AdvancedNew constructors",1,2,2,numpy/core/src/multiarray/nditer_constr.c,[u'4'],2,2," -499,7 +499,7 ; -516,7 +516,7 ;","NpyIter_MultiNew(int nop, PyArrayObject **op_in, npy_uint32 flags;NpyIter_New(PyArrayObject *op, npy_uint32 flags;"
3012,14,818cc19, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 27 Feb 2013 16:41:16 +0100","ct: [PATCH 13/14] MAINT: Use oa_ndim = -1 for NpyIter_AdvancedNew to signal no axesNone of the iterations actually using oa_ndim support 0, so nochanges are necessary.",2,3,3,numpy/core/src/umath/reduction.c,[u'2'],1,1," -513,7 +513,7 ;","PyUFunc_ReduceWrapper(PyArrayObject *operand, PyArrayObject *out;"
3012,14,818cc19, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 27 Feb 2013 16:41:16 +0100","ct: [PATCH 13/14] MAINT: Use oa_ndim = -1 for NpyIter_AdvancedNew to signal no axesNone of the iterations actually using oa_ndim support 0, so nochanges are necessary.",2,3,3,numpy/core/src/umath/ufunc_object.c,[u'4'],2,2," -1205,7 +1205,7 ; -1503,7 +1503,7 ;",iterator_loop(PyUFuncObject *ufunc;execute_fancy_ufunc_loop(PyUFuncObject *ufunc;
3012,14,154e3d1, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 27 Feb 2013 23:30:51 +0100",ct: [PATCH 14/14] DOC: Document changes to the AdvancedNew iteratorThis are notes related to flag NPY_ITER_USE_ZERO_OA_NDIM.,1,24,2,doc/source/reference/c-api.iterator.rst,[u'26'],24,2," -658,15 +658,29 ; -701,6 +715,14 ;",Construction and Destructio;Construction and Destructio;
3010,35,9e7be8c, Eric Moore <ewm@redtetrahedron.org>," Fri, 22 Feb 2013 17:30:52 -0500","ct: [PATCH 01/35] BUG: Overflow in tan and tanh for large complex valuesgh-2321 (trac 1726).np.tanh(1000+0j) gave nan+nan*j, should be 1.0+0j.  Thesame bug was present in np.tan(0+1000j).Bug fixed by replacing our complex tan and tanh implementationwith one from FreeBSD.",4,133,35,numpy/core/include/numpy/npy_math.h,[u'9'],2,0," -420,6 +420,9 ; -435,6 +438,9 ; -450,6 +456,9 ;",npy_cdouble npy_csqrt(npy_cdouble z);npy_cfloat npy_csqrtf(npy_cfloat z);npy_clongdouble npy_csqrtl(npy_clongdouble z);
3010,35,9e7be8c, Eric Moore <ewm@redtetrahedron.org>," Fri, 22 Feb 2013 17:30:52 -0500","ct: [PATCH 01/35] BUG: Overflow in tan and tanh for large complex valuesgh-2321 (trac 1726).np.tanh(1000+0j) gave nan+nan*j, should be 1.0+0j.  Thesame bug was present in np.tan(0+1000j).Bug fixed by replacing our complex tan and tanh implementationwith one from FreeBSD.",4,133,35,numpy/core/setup_common.py,[u'2'],1,1," -144,7 +144,7 ;","def check_api_version(apiversion, codegen_dir);"
3010,35,9e7be8c, Eric Moore <ewm@redtetrahedron.org>," Fri, 22 Feb 2013 17:30:52 -0500","ct: [PATCH 01/35] BUG: Overflow in tan and tanh for large complex valuesgh-2321 (trac 1726).np.tanh(1000+0j) gave nan+nan*j, should be 1.0+0j.  Thesame bug was present in np.tan(0+1000j).Bug fixed by replacing our complex tan and tanh implementationwith one from FreeBSD.",4,133,35,numpy/core/src/npymath/npy_math_complex.c.src,[u'123'],25,1," -4,7 +4,7 ; -227,6 +227,123 ; -254,8 +371,8 ;",;;;
3010,35,9e7be8c, Eric Moore <ewm@redtetrahedron.org>," Fri, 22 Feb 2013 17:30:52 -0500","ct: [PATCH 01/35] BUG: Overflow in tan and tanh for large complex valuesgh-2321 (trac 1726).np.tanh(1000+0j) gave nan+nan*j, should be 1.0+0j.  Thesame bug was present in np.tan(0+1000j).Bug fixed by replacing our complex tan and tanh implementationwith one from FreeBSD.",4,133,35,numpy/core/src/umath/funcs.inc.src,[u'34'],1,6," -671,42 +671,14 ;","nc_sinh@c@(@ctype@ *x, @ctype@ *r;"
3010,35,f442ead, Eric Moore <ewm@redtetrahedron.org>," Fri, 1 Mar 2013 14:42:23 -0500","ct: [PATCH 02/35] STY: npymath: tabs -> spaces, long lines",1,52,51,numpy/core/src/npymath/npy_math_complex.c.src,[u'103'],13,13," -231,9 +231,9 ; -285,60 +285,61 ;",;;
3010,35,d62c590, Eric Moore <ewm@redtetrahedron.org>," Wed, 6 Mar 2013 16:33:53 -0500","ct: [PATCH 03/35] ENH: Check for, and use all C99 complex functions if availablePreviously, a number of functions operating on complex numbers from C99were checked for during the configuration stage.  If they existed, theywere used.  This commit extends this to all of the C99 complexfunctions.All of our local implementations are now in npymath, instead of beingspread between npymath and umath/funcs.inc.src. Functions that numpy hasbut C99 does not are still in funcs.inc.src.",4,391,331,numpy/core/include/numpy/npy_math.h,[u'34'],2,1," -257,7 +257,7 ; -422,8 +422,18 ; -440,8 +450,19 ; -458,8 +479,19 ;","float npy_nextafterf(float x, float y);npy_cdouble npy_ccos(npy_cdouble z);npy_cfloat npy_ccosf(npy_cfloat z);npy_clongdouble npy_ccosl(npy_clongdouble z);"
3010,35,d62c590, Eric Moore <ewm@redtetrahedron.org>," Wed, 6 Mar 2013 16:33:53 -0500","ct: [PATCH 03/35] ENH: Check for, and use all C99 complex functions if availablePreviously, a number of functions operating on complex numbers from C99were checked for during the configuration stage.  If they existed, theywere used.  This commit extends this to all of the C99 complexfunctions.All of our local implementations are now in npymath, instead of beingspread between npymath and umath/funcs.inc.src. Functions that numpy hasbut C99 does not are still in funcs.inc.src.",4,391,331,numpy/core/setup_common.py,[u'5'],1,1," -143,8 +143,9 ;","def check_api_version(apiversion, codegen_dir);"
3010,35,d62c590, Eric Moore <ewm@redtetrahedron.org>," Wed, 6 Mar 2013 16:33:53 -0500","ct: [PATCH 03/35] ENH: Check for, and use all C99 complex functions if availablePreviously, a number of functions operating on complex numbers from C99were checked for during the configuration stage.  If they existed, theywere used.  This commit extends this to all of the C99 complexfunctions.All of our local implementations are now in npymath, instead of beingspread between npymath and umath/funcs.inc.src. Functions that numpy hasbut C99 does not are still in funcs.inc.src.",4,391,331,numpy/core/src/npymath/npy_math_complex.c.src,[u'359'],24,2," -31,17 +31,87 ; -193,18 +263,75 ; -237,6 +364,26 ; -345,6 +492,188 ; -372,8 +701,8 ;",;;;;;
3010,35,d62c590, Eric Moore <ewm@redtetrahedron.org>," Wed, 6 Mar 2013 16:33:53 -0500","ct: [PATCH 03/35] ENH: Check for, and use all C99 complex functions if availablePreviously, a number of functions operating on complex numbers from C99were checked for during the configuration stage.  If they existed, theywere used.  This commit extends this to all of the C99 complexfunctions.All of our local implementations are now in npymath, instead of beingspread between npymath and umath/funcs.inc.src. Functions that numpy hasbut C99 does not are still in funcs.inc.src.",4,391,331,numpy/core/src/umath/funcs.inc.src,[u'324'],1,22," -206,49 +206,8 ; -258,26 +217,6 ; -336,164 +275,28 ; -501,134 +304,35 ; -653,18 +357,14 ; -682,6 +382,4 ;","npy_ObjectLogicalNot(PyObject *i1;nc_neg@c@(@ctype@ *a, @ctype@ *r;nc_expm1@c@(@ctype@ *x, @ctype@ *r;nc_asin@c@(@ctype@ *x, @ctype@ *r;nc_log2@c@(@ctype@ *x, @ctype@ *r;nc_tanh@c@(@ctype@ *x, @ctype@ *r;"
3010,35,af5ff55, Eric Moore <ewm@redtetrahedron.org>," Thu, 7 Mar 2013 19:51:54 -0500","ct: [PATCH 04/35] ENH: npymath: Use a better complex division algorithm.Using the same technique used for divide complex arrays, copied fromumath/loops.c.src.",1,20,3,numpy/core/src/npymath/npy_math_complex.c.src,[u'23'],20,3," -78,13 +78,30 ;","static NPY_INLINE @ctype@ cmul@c@(@ctype@ a, @ctype@ b;"
3010,35,e6b99c9, Eric Moore <ewm@redtetrahedron.org>," Sat, 9 Mar 2013 11:40:03 -0500",ct: [PATCH 05/35] MAINT: umath: generate the ldexp and frexp ufuncs like all the others.,3,103,97,numpy/core/code_generators/generate_umath.py,[u'38'],9,1," -20,6 +20,12 ; -27,7 +33,7 ; -795,6 +801,30 ; -854,7 +884,7 ; -880,6 +910,10 ;",;class TypeDescription(object);def english_upper(s);def make_arrays(funcdict);def make_arrays(funcdict);
3010,35,e6b99c9, Eric Moore <ewm@redtetrahedron.org>," Sat, 9 Mar 2013 11:40:03 -0500",ct: [PATCH 05/35] MAINT: umath: generate the ldexp and frexp ufuncs like all the others.,3,103,97,numpy/core/code_generators/ufunc_docstrings.py,[u'62'],15,0," -3312,3 +3312,65 ;","def add_newdoc(place, name, doc);"
3010,35,e6b99c9, Eric Moore <ewm@redtetrahedron.org>," Sat, 9 Mar 2013 11:40:03 -0500",ct: [PATCH 05/35] MAINT: umath: generate the ldexp and frexp ufuncs like all the others.,3,103,97,numpy/core/src/umath/umathmodule.c,[u'100'],2,23," -201,99 +201,6 ; -409,8 +316,6 ; -418,6 +323,11 ;","ufunc_frompyfunc(PyObject *NPY_UNUSED(dummy), PyObject *args, PyObject *NPY_UNU;PyMODINIT_FUNC initumath(void;PyMODINIT_FUNC initumath(void;"
3010,35,0fdaa54, Eric Moore <ewm@redtetrahedron.org>," Sat, 9 Mar 2013 17:12:36 -0500","ct: [PATCH 06/35] MAINT: umath/npymath: Add ldexp and frexp to npymathnpy_frexp and npy_ldexp are used unconditionally in umath. (i.e.HAVE_LDEXPF, etc. no longer appears in umath.)",4,54,22,numpy/core/include/numpy/npy_math.h,[u'9'],9,0," -152,6 +152,9 ; -256,6 +259,9 ; -297,6 +303,9 ;","double npy_copysign(double x, double y);float npy_copysignf(float x, float y);npy_longdouble npy_copysignl(npy_longdouble x, npy_longdouble y);"
3010,35,0fdaa54, Eric Moore <ewm@redtetrahedron.org>," Sat, 9 Mar 2013 17:12:36 -0500","ct: [PATCH 06/35] MAINT: umath/npymath: Add ldexp and frexp to npymathnpy_frexp and npy_ldexp are used unconditionally in umath. (i.e.HAVE_LDEXPF, etc. no longer appears in umath.)",4,54,22,numpy/core/src/npymath/npy_math.c.src,[u'35'],35,0," -305,6 +305,7 ; -367,6 +368,26 ; -413,6 +434,20 ;",double npy_log2(double x;double npy_log2(double x;double npy_log2(double x;
3010,35,0fdaa54, Eric Moore <ewm@redtetrahedron.org>," Sat, 9 Mar 2013 17:12:36 -0500","ct: [PATCH 06/35] MAINT: umath/npymath: Add ldexp and frexp to npymathnpy_frexp and npy_ldexp are used unconditionally in umath. (i.e.HAVE_LDEXPF, etc. no longer appears in umath.)",4,54,22,numpy/core/src/umath/loops.c.src,[u'28'],10,18," -1717,25 +1717,22 ; -1752,7 +1749,7 ; -1760,15 +1757,14 ; -2033,25 +2029,22 ; -2068,7 +2061,7 ; -2076,15 +2069,14 ;","NPY_NO_EXPORT voi;NPY_NO_EXPORT voi;NPY_NO_EXPORT voi;HALF_modf(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY_UNUSED(;HALF_ldexp_long(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY_U;HALF_ldexp_long(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY_U;"
3010,35,0fdaa54, Eric Moore <ewm@redtetrahedron.org>," Sat, 9 Mar 2013 17:12:36 -0500","ct: [PATCH 06/35] MAINT: umath/npymath: Add ldexp and frexp to npymathnpy_frexp and npy_ldexp are used unconditionally in umath. (i.e.HAVE_LDEXPF, etc. no longer appears in umath.)",4,54,22,numpy/core/src/umath/loops.h.src,[u'4'],0,4," -277,17 +277,13 ;",NPY_NO_EXPORT voi;
3010,35,2d33f7c, Eric Moore <ewm@redtetrahedron.org>," Sun, 10 Mar 2013 09:52:03 -0400",ct: [PATCH 07/35] ENH: npymath: handle clog edge cases more carefully.,1,66,0,numpy/core/src/npymath/npy_math_complex.c.src,[u'67'],26,1," -1,4 +1,6 ; -37,6 +39,8 ; -205,9 +209,70 ;",;;static NPY_INLINE @ctype@ cmuli@c@(@ctype@ a;
3010,35,50d6720, Eric Moore <ewm@redtetrahedron.org>," Mon, 30 Sep 2013 21:17:55 -0400","ct: [PATCH 08/35] ENH: evaluate c99 complex funcs at build timeFor all of the C99 complex function excepting the creal, cimag, cabs andcarg (which are either trivial or defined by a C89 function) we now runa set of build time tests to evaluate if we want to use the systemversion of these functions or our own.  These tests involve all of thespecial values for these functions defined in Annxex G of the C99standard as well as any tests that were existing in the numpy testsuite. These tests do not consider the sign of NAN.",3,1616,3,numpy/core/setup.py,[u'23'],1,0," -220,6 +220,29 ;",def check_prec(prec);
3010,35,50d6720, Eric Moore <ewm@redtetrahedron.org>," Mon, 30 Sep 2013 21:17:55 -0400","ct: [PATCH 08/35] ENH: evaluate c99 complex funcs at build timeFor all of the C99 complex function excepting the creal, cimag, cabs andcarg (which are either trivial or defined by a C89 function) we now runa set of build time tests to evaluate if we want to use the systemversion of these functions or our own.  These tests involve all of thespecial values for these functions defined in Annxex G of the C99standard as well as any tests that were existing in the numpy testsuite. These tests do not consider the sign of NAN.",3,1616,3,numpy/core/setup_common.py,[u'7'],1,1," -143,9 +143,10 ;","def check_api_version(apiversion, codegen_dir);"
3010,35,50d6720, Eric Moore <ewm@redtetrahedron.org>," Mon, 30 Sep 2013 21:17:55 -0400","ct: [PATCH 08/35] ENH: evaluate c99 complex funcs at build timeFor all of the C99 complex function excepting the creal, cimag, cabs andcarg (which are either trivial or defined by a C89 function) we now runa set of build time tests to evaluate if we want to use the systemversion of these functions or our own.  These tests involve all of thespecial values for these functions defined in Annxex G of the C99standard as well as any tests that were existing in the numpy testsuite. These tests do not consider the sign of NAN.",3,1616,3,numpy/core/test_c99complex.c,[u'1589'],42,0," -0,0 +1,1589 ;",;
3010,35,d504ea1, Eric Moore <ewm@redtetrahedron.org>," Wed, 2 Oct 2013 17:35:27 -0400",ct: [PATCH 09/35] BUG: NPY_LOGE2 is log(2),1,4,4,numpy/core/test_c99complex.c,[u'8'],4,4," -16,7 +16,7 ; -28,7 +28,7 ; -40,7 +40,7 ; -1452,7 +1452,7 ;",;;;int test_cpow(;
3010,35,5362b35, Eric Moore <ewm@redtetrahedron.org>," Wed, 2 Oct 2013 18:05:49 -0400","ct: [PATCH 10/35] BUG: Test aginst +/-TANH_HUGEThis is a bug introduced when adapting the FreeBSD implementation. Sincethey play some games extracting parts of the double and comparing themas unsigned ints and we don't. We don't since that doesn't generalize tofloat, and long double as we do in npy_math_complex.c.src",1,0,0,numpy/core/src/npymath/npy_math_complex.c.src,[u'2'],1,1," -556,7 +556,7 ;",static NPY_INLINE @ctype@ cmuli@c@(@ctype@ a;
3010,35,e61e74f, Eric Moore <ewm@redtetrahedron.org>," Wed, 2 Oct 2013 18:09:44 -0400",ct: [PATCH 11/35] TST: check for tanh(1000+0j) == 1 + 0j etc.This is a test for the fix for gh-2321.,1,10,0,numpy/core/tests/test_umath_complex.py,[u'10'],10,0," -517,6 +517,16 ;",def test_special_values(self);
3010,35,852cd10, Eric Moore <ewm@redtetrahedron.org>," Wed, 2 Oct 2013 18:50:01 -0400","ct: [PATCH 12/35] BUG: Fix up some corner cases in npy_cexpThe failing c99 annex G values for cexp were:cexp(Inf, -0) == (NAN, -0)cexp(Inf, Inf) == (+-Inf, NAN) + raises FE_INVALIDThe first returned (NAN, 0) and the second was correct but failed toraise the invalid floating-point exception.",2,7,0,numpy/core/src/npymath/npy_math_complex.c.src,[u'3'],2,1," -172,7 +172,7 ; -188,6 +188,7 ;",static NPY_INLINE @ctype@ cmuli@c@(@ctype@ a;static NPY_INLINE @ctype@ cmuli@c@(@ctype@ a;
3010,35,852cd10, Eric Moore <ewm@redtetrahedron.org>," Wed, 2 Oct 2013 18:50:01 -0400","ct: [PATCH 12/35] BUG: Fix up some corner cases in npy_cexpThe failing c99 annex G values for cexp were:cexp(Inf, -0) == (NAN, -0)cexp(Inf, Inf) == (+-Inf, NAN) + raises FE_INVALIDThe first returned (NAN, 0) and the second was correct but failed toraise the invalid floating-point exception.",2,7,0,numpy/core/tests/test_umath_complex.py,[u'5'],5,0," -123,6 +123,11 ;",def _check_inf_nan(dummy);
3010,35,0f57b42, Eric Moore <ewm@redtetrahedron.org>," Wed, 2 Oct 2013 19:00:33 -0400",ct: [PATCH 13/35] MAINT: remove debug print statement,1,0,0,numpy/core/setup.py,[u'1'],0,1," -238,7 +238,6 ;",def check_prec(prec);
3010,35,eb06557, Eric Moore <ewm@redtetrahedron.org>," Thu, 3 Oct 2013 20:22:57 -0400",ct: [PATCH 14/35] MAINT: fix two typos in test_c99complex.c,1,3,3,numpy/core/test_c99complex.c,[u'6'],3,3," -11,7 +11,7 ; -126,7 +126,7 ; -307,7 +307,7 ;",;const TYPE NZERO =  -1.0 * 0.0;typedef TYPE (*realfunc)(TYPE);
3010,35,77705ab, Eric Moore <ewm@redtetrahedron.org>," Thu, 3 Oct 2013 20:25:26 -0400","ct: [PATCH 15/35] ENH: Be more careful with large real parts in npy_cexpThis change is adapted from k_exp.c in FreeBSD.The idea is to calculate a scaled exponential, which is then multiplied bycos(imag) and sin(imag) and rescaled to the appropriate value.  This meansthat for float64, things like np.exp(complex(729, 1e-16)) which used to giveinf+infj now gives (inf+3.987285262042597e+300j)",1,56,7,numpy/core/src/npymath/npy_math_complex.c.src,[u'63'],24,3," -147,6 +147,50 ; -158,15 +202,20 ;",static NPY_INLINE @ctype@ cmuli@c@(@ctype@ a;static NPY_INLINE @ctype@ cmuli@c@(@ctype@ a;
3010,35,e574e29, Eric Moore <ewm@redtetrahedron.org>," Thu, 3 Oct 2013 21:29:00 -0400","ct: [PATCH 16/35] ENH: Import the ccosh/ccos implementation from FreeBSDThe code from FreeBSD was lightly adapted to fit with the numpy styleand to correct an Annex G failure. (ccosh(Inf + 0j) should be (Inf + 0),and symmetric).With this commit, npy_ccosh(f) and npy_ccos(f) pass all of the tests intest_c99complex.c.",1,131,11,numpy/core/src/npymath/npy_math_complex.c.src,[u'142'],24,2," -157,16 +157,20 ; -291,7 +295,7 ; -470,10 +474,8 ; -493,17 +495,135 ;","static NPY_INLINE @ctype@ cmuli@c@(@ctype@ a;static @ctype@ _npy_scaled_cexp@c@(@type@ x, @type@ y, int expt;static @ctype@ _npy_scaled_cexp@c@(@type@ x, @type@ y, int expt;static @ctype@ _npy_scaled_cexp@c@(@type@ x, @type@ y, int expt;"
3010,35,3710481, Eric Moore <ewm@redtetrahedron.org>," Thu, 3 Oct 2013 22:56:23 -0400","ct: [PATCH 17/35] ENH: Import the csinh/csin implementation from FreeBSDThe code from FreeBSD was lightly adapted to fit with the numpy style.With this commit, npy_csinh(f) and npy_csin(f) pass all of the tests intest_c99complex.c.",1,124,6,numpy/core/src/npymath/npy_math_complex.c.src,[u'130'],24,2," -482,10 +482,9 ; -627,13 +626,132 ;","static @ctype@ _npy_scaled_cexp@c@(@type@ x, @type@ y, npy_int expt;static @ctype@ _npy_scaled_cexp@c@(@type@ x, @type@ y, npy_int expt;"
3010,35,a837853, Eric Moore <ewm@redtetrahedron.org>," Wed, 9 Oct 2013 13:32:30 -0400","ct: [PATCH 18/35] ENH: Import the catanh/catan implemenation from FreeBSDThe code from FreeBSD was lightly adapted to fit with the numpy style.An incorrect test for the branch cuts of both arctanh and arctan wascorrected in both test_umath.py and test_c99complex.c.With this commit, npy_catanh(f) and npy_catan(f) pass all of the testsin test_c99complex.c.",3,242,95,numpy/core/src/npymath/npy_math_complex.c.src,[u'259'],20,6," -7,6 +7,7 ; -41,6 +42,7 ; -194,7 +196,6 ; -922,38 +923,9 ; -1007,41 +979,208 ;",";;static @ctype@ _npy_scaled_cexp@c@(@type@ x, @type@ y, npy_int expt;static @ctype@ _npy_scaled_cexp@c@(@type@ x, @type@ y, npy_int expt;static @ctype@ _npy_scaled_cexp@c@(@type@ x, @type@ y, npy_int expt;"
3010,35,a837853, Eric Moore <ewm@redtetrahedron.org>," Wed, 9 Oct 2013 13:32:30 -0400","ct: [PATCH 18/35] ENH: Import the catanh/catan implemenation from FreeBSDThe code from FreeBSD was lightly adapted to fit with the numpy style.An incorrect test for the branch cuts of both arctanh and arctan wascorrected in both test_umath.py and test_c99complex.c.With this commit, npy_catanh(f) and npy_catan(f) pass all of the testsin test_c99complex.c.",3,242,95,numpy/core/test_c99complex.c,[u'70'],4,3," -91,7 +91,7 ; -103,8 +103,8 ; -113,6 +113,15 ; -309,7 +318,7 ; -420,7 +429,7 ; -439,7 +448,7 ; -479,7 +488,7 ; -517,7 +526,7 ; -557,7 +566,7 ; -567,7 +576,7 ; -592,7 +601,7 ; -628,8 +637,8 ; -638,7 +647,7 ; -673,7 +682,7 ; -731,10 +740,10 ; -770,7 +779,7 ; -806,10 +815,9 ; -817,7 +825,7 ; -967,7 +975,7 ; -1165,7 +1173,7 ; -1281,7 +1289,7 ; -1317,7 +1325,7 ; -1338,7 +1346,7 ; -1390,7 +1398,7 ; -1406,7 +1414,7 ; -1494,7 +1502,7 ; -1509,7 +1517,7 ;","const TYPE NZERO =  -1.0 * 0.0;const TYPE NZERO =  -1.0 * 0.0;const TYPE NZERO =  -1.0 * 0.0;int check_branch_cut(complexfunc cfunc, TYPE complex x0, TYPE complex dx;int clp_internal(complexfunc cfunc, realfunc rfunc, int real, TYPE x;int check_loss_of_precision(complexfunc cfunc, realfunc rfunc, int real;int test_cacos(;int test_cacos(;int test_casin(;int test_casin(;int test_catan(;int test_catan(;int test_catan(;int test_cacosh(;int test_casinh(;int test_catanh(;int test_catanh(;int test_catanh(;int test_csin(;int test_csinh(;int test_cexp(;int test_clog(;int test_clog(;int test_cpow(;int test_cpow(;int test_csqrt(;int test_csqrt(;"
3010,35,a837853, Eric Moore <ewm@redtetrahedron.org>," Wed, 9 Oct 2013 13:32:30 -0400","ct: [PATCH 18/35] ENH: Import the catanh/catan implemenation from FreeBSDThe code from FreeBSD was lightly adapted to fit with the numpy style.An incorrect test for the branch cuts of both arctanh and arctan wascorrected in both test_umath.py and test_c99complex.c.With this commit, npy_catanh(f) and npy_catan(f) pass all of the testsin test_c99complex.c.",3,242,95,numpy/core/tests/test_umath.py,[u'8'],1,1," -1122,11 +1122,11 ; -1149,10 +1149,10 ;",def test_branch_cuts(self);def test_branch_cuts_failing(self);
3010,35,36e0d8b, Eric Moore <ewm@redtetrahedron.org>," Wed, 9 Oct 2013 15:11:04 -0400",ct: [PATCH 19/35] BUG: printf requires a literal for the first argument.Not sure why this shows up as a warning on py2.x but as an error onpy3.x.,1,3,6,numpy/core/test_c99complex.c,[u'9'],3,6," -395,8 +395,7 ; -453,8 +452,7 ; -465,8 +463,7 ;","int check_near_crossover(complexfunc cfunc, const char* fname;int check_loss_of_precision(complexfunc cfunc, realfunc rfunc, int real;int check_loss_of_precision(complexfunc cfunc, realfunc rfunc, int real;"
3010,35,330b54a, Eric Moore <ewm@redtetrahedron.org>," Wed, 9 Oct 2013 16:07:12 -0400","ct: [PATCH 20/35] BUG: Py3 '-2j' is (NZERO - 2j) causes test failuresOn python2.x evaluating '-2j' produces complex(0,-2), however, onpython3, it instead produces complex(NZERO, -2).  This ends up causinga test for the complex arctan to fail.This happens I suppose for the same reason it does in C.  The expression-2j ends up being evaluated as (-2 + 0j) * (0 + 1j) == (-0 + -2j).",1,10,10,numpy/core/tests/test_umath.py,[u'20'],10,10," -1120,22 +1120,22 ; -1149,8 +1149,8 ;",def test_branch_cuts(self);def test_branch_cuts_failing(self);
3010,35,def6327, Eric Moore <ewm@redtetrahedron.org>," Thu, 10 Oct 2013 10:57:42 -0400","ct: [PATCH 21/35] ENH: Import the cacos,casin,cacosh,casinh implemenation from FreeBSDThe code from FreeBSD was lightly adapted to fit with the numpy style.Several incorrect branch cut tests where fixed. (All of these for all ofthe arc* functions that were changed have to do with getting the correctbranch cut for (x,0) or (0,x).)With this commit npy_cacos(f), npy_casin(f), npy_cacosh(f), andnpy_casinh(f) pass all of the tests in test_c99complex.c.",3,459,110,numpy/core/src/npymath/npy_math_complex.c.src,[u'521'],21,5," -34,6 +34,9 ; -56,7 +59,7 ; -109,7 +112,7 ; -120,17 +123,6 ; -864,59 +856,348 ; -932,49 +1213,112 ; -1110,19 +1454,18 ; -1164,7 +1507,7 ;",";static const @ctype@ c_ihalf@c@ = {0.0, 0.5@C@};static NPY_INLINE @ctype@ cdiv@c@(@ctype@ a, @ctype@ b;static NPY_INLINE @ctype@ cmuli@c@(@ctype@ a;static @ctype@ _npy_scaled_cexp@c@(@type@ x, @type@ y, npy_int expt;static @ctype@ _npy_scaled_cexp@c@(@type@ x, @type@ y, npy_int expt;static inline npy_longdouble _real_part_reciprocall(npy_longdouble x, npy_longd;static inline npy_longdouble _real_part_reciprocall(npy_longdouble x, npy_longd;"
3010,35,def6327, Eric Moore <ewm@redtetrahedron.org>," Thu, 10 Oct 2013 10:57:42 -0400","ct: [PATCH 21/35] ENH: Import the cacos,casin,cacosh,casinh implemenation from FreeBSDThe code from FreeBSD was lightly adapted to fit with the numpy style.Several incorrect branch cut tests where fixed. (All of these for all ofthe arc* functions that were changed have to do with getting the correctbranch cut for (x,0) or (0,x).)With this commit npy_cacos(f), npy_casin(f), npy_cacosh(f), andnpy_casinh(f) pass all of the tests in test_c99complex.c.",3,459,110,numpy/core/test_c99complex.c,[u'36'],1,1," -11,8 +11,10 ; -23,8 +25,10 ; -34,9 +38,11 ; -248,9 +254,9 ; -316,8 +322,8 ; -502,7 +508,7 ; -518,7 +524,7 ; -579,7 +585,7 ; -755,7 +761,7 ;",;;;const TYPE NZERO =  -1.0 * 0.0;typedef TYPE (*realfunc)(TYPE);int test_cacos(;int test_cacos(;int test_casin(;int test_casinh(;
3010,35,def6327, Eric Moore <ewm@redtetrahedron.org>," Thu, 10 Oct 2013 10:57:42 -0400","ct: [PATCH 21/35] ENH: Import the cacos,casin,cacosh,casinh implemenation from FreeBSDThe code from FreeBSD was lightly adapted to fit with the numpy style.Several incorrect branch cut tests where fixed. (All of these for all ofthe arc* functions that were changed have to do with getting the correctbranch cut for (x,0) or (0,x).)With this commit npy_cacos(f), npy_casin(f), npy_cacosh(f), andnpy_casinh(f) pass all of the tests in test_c99complex.c.",3,459,110,numpy/core/tests/test_umath.py,[u'12'],1,1," -1120,11 +1120,11 ; -1147,10 +1147,10 ;",def test_branch_cuts(self);def test_branch_cuts_failing(self);
3010,35,c8f13ee, Eric Moore <ewm@redtetrahedron.org>," Thu, 10 Oct 2013 12:06:46 -0400","ct: [PATCH 22/35] TST: Enable signed zero branch cut testsNow we have our own implementations that can pass these tests and weonly link against the system versions if they can also pass.Additionally, run the branch cut tests for complex64.",1,55,39,numpy/core/tests/test_umath.py,[u'94'],24,18," -1114,19 +1114,19 ; -1137,22 +1137,30 ; -1316,8 +1324,12 ; -1332,16 +1344,20 ;","def test_precisions_consistent(self) ;def test_branch_cuts(self);def _check_branch_cut(f, x0, dx, re_sign=1, im_sign=-1, sig_zero_ok=False;def _check_branch_cut(f, x0, dx, re_sign=1, im_sign=-1, sig_zero_ok=False;"
3010,35,eab5228, Eric Moore <ewm@redtetrahedron.org>," Thu, 10 Oct 2013 13:28:21 -0400","ct: [PATCH 23/35] BUG: fix cpow tests to match what npy_cpow does.Annex G of the C99 standard does not define any special values for cpow,allowing the implementation to be as simple as cpow(z,w) =cexp(w*clog(z)).  We have a large number of tests for our cpow function,both in the test suite and in test_c99complex.c. (There are actuallymore in test_c99complex.c, since I'm doing all combinations fromTestCpow::test_scalar in test_umath_complex.py.)As of right now, these tests probably mean that we will never use asystem cpow implemenation. This is fine, since we handle a large numberof edge cases in a sane way and at least glibc does not.With this commit all 48 of our complex functions pass test_c99complex.c.",1,5,5,numpy/core/test_c99complex.c,[u'10'],5,5," -1458,7 +1458,7 ; -1473,13 +1473,13 ;",int test_cpow(;int test_cpow(;
3010,35,2b5f1ad, Eric Moore <ewm@redtetrahedron.org>," Thu, 10 Oct 2013 13:52:12 -0400","ct: [PATCH 24/35] STY: long lines, whitespace",2,18,10,numpy/core/setup.py,[u'2'],1,1," -231,7 +231,7 ;",def check_prec(prec);
3010,35,2b5f1ad, Eric Moore <ewm@redtetrahedron.org>," Thu, 10 Oct 2013 13:52:12 -0400","ct: [PATCH 24/35] STY: long lines, whitespace",2,18,10,numpy/core/src/npymath/npy_math_complex.c.src,[u'26'],17,9," -536,17 +536,20 ; -661,17 +664,20 ; -1058,7 +1064,8 ; -1387,7 +1394,7 ; -1421,7 +1428,8 ;","static @ctype@ _npy_scaled_cexp@c@(@type@ x, @type@ y, npy_int expt;static @ctype@ _npy_scaled_cexp@c@(@type@ x, @type@ y, npy_int expt;static inline void _do_hard_work@c@(@type@ x, @type@ y, @type@ *rx;static inline npy_float _real_part_reciprocalf(npy_float x, npy_float y;static inline npy_double _real_part_reciprocal(npy_double x, npy_double y;"
3010,35,1fb1b74, Eric Moore <ewm@redtetrahedron.org>," Fri, 11 Oct 2013 12:30:42 -0400",ct: [PATCH 25/35] MAINT: remove gccisms and unbreak MSVC build.,1,63,45,numpy/core/src/npymath/npy_math_complex.c.src,[u'108'],15,11," -175,7 +175,7 ; -211,7 +211,7 ; -220,7 +220,7 ; -235,7 +235,7 ; -342,7 +342,7 ; -375,10 +375,10 ; -409,17 +409,17 ; -506,21 +506,26 ; -542,7 +547,7 ; -633,22 +638,26 ; -670,7 +679,7 ; -851,7 +860,7 ; -939,17 +948,21 ; -1068,16 +1081,21 ; -1146,7 +1164,7 ; -1158,7 +1176,7 ; -1294,7 +1312,7 ; -1502,7 +1520,7 ;","static @ctype@ _npy_scaled_cexp@c@(@type@ x, @type@ y, npy_int expt;static @ctype@ _npy_scaled_cexp@c@(@type@ x, @type@ y, npy_int expt;static @ctype@ _npy_scaled_cexp@c@(@type@ x, @type@ y, npy_int expt;static @ctype@ _npy_scaled_cexp@c@(@type@ x, @type@ y, npy_int expt;static @ctype@ _npy_scaled_cexp@c@(@type@ x, @type@ y, npy_int expt;static @ctype@ _npy_scaled_cexp@c@(@type@ x, @type@ y, npy_int expt;static @ctype@ _npy_scaled_cexp@c@(@type@ x, @type@ y, npy_int expt;static @ctype@ _npy_scaled_cexp@c@(@type@ x, @type@ y, npy_int expt;static @ctype@ _npy_scaled_cexp@c@(@type@ x, @type@ y, npy_int expt;static @ctype@ _npy_scaled_cexp@c@(@type@ x, @type@ y, npy_int expt;static @ctype@ _npy_scaled_cexp@c@(@type@ x, @type@ y, npy_int expt;static @ctype@ _npy_scaled_cexp@c@(@type@ x, @type@ y, npy_int expt;static inline void _do_hard_work@c@(@type@ x, @type@ y, @type@ *rx;static inline void _clog_for_large_values@c@(@type@ x, @type@ y;static inline void _clog_for_large_values@c@(@type@ x, @type@ y;static inline void _clog_for_large_values@c@(@type@ x, @type@ y;static inline void _clog_for_large_values@c@(@type@ x, @type@ y;static inline npy_longdouble _real_part_reciprocall(npy_longdouble x;"
3010,35,be42cae, Eric Moore <ewm@redtetrahedron.org>," Fri, 11 Oct 2013 12:32:00 -0400",ct: [PATCH 26/35] MAINT: fix ldexp/frexp changes to compile with MSVC.Regenerated loops.h.,2,79,104,numpy/core/src/private/npy_config.h,[u'10'],0,3," -10,16 +10,6 ;",;
3010,35,be42cae, Eric Moore <ewm@redtetrahedron.org>," Fri, 11 Oct 2013 12:32:00 -0400",ct: [PATCH 26/35] MAINT: fix ldexp/frexp changes to compile with MSVC.Regenerated loops.h.,2,79,104,numpy/core/src/umath/loops.h,[u'173'],16,20," -1689,17 +1689,13 ; -1843,17 +1839,13 ; -1997,17 +1989,13 ; -2151,17 +2139,13 ; -2181,14 +2165,14 ; -2203,36 +2187,36 ; -2242,15 +2226,15 ; -2276,20 +2260,20 ; -2297,14 +2281,14 ; -2319,36 +2303,36 ; -2358,15 +2342,15 ; -2392,20 +2376,20 ; -2413,14 +2397,14 ; -2435,36 +2419,36 ; -2474,15 +2458,15 ; -2508,20 +2492,20 ; -2552,81 +2536,81 ; -2691,27 +2675,27 ; -2726,3 +2710,4 ;","HALF_sign(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY_UNUSED(;FLOAT_sign(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY_UNUSED;DOUBLE_sign(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY_UNUSE;LONGDOUBLE_sign(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY_U;LONGDOUBLE_ldexp_long(char **args, npy_intp *dimensions, npy_intp *steps, void ;CFLOAT_divide(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY_UNU;CFLOAT_logical_xor(char **args, npy_intp *dimensions, npy_intp *steps, void *NP;CFLOAT__arg(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY_UNUSE;CFLOAT_fmin(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY_UNUSE;CDOUBLE_divide(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY_UN;CDOUBLE_logical_xor(char **args, npy_intp *dimensions, npy_intp *steps, void *N;CDOUBLE__arg(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY_UNUS;CDOUBLE_fmin(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY_UNUS;CLONGDOUBLE_divide(char **args, npy_intp *dimensions, npy_intp *steps, void *NP;CLONGDOUBLE_logical_xor(char **args, npy_intp *dimensions, npy_intp *steps, voi;CLONGDOUBLE__arg(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY_;TIMEDELTA_absolute(char **args, npy_intp *dimensions, npy_intp *steps, void *NP;TIMEDELTA_mm_d_divide(char **args, npy_intp *dimensions, npy_intp *steps, void ;OBJECT_sign(char **args, npy_intp *dimensions, npy_intp *steps, void *NPY_UNUSE;"
3010,35,ac075b2, Eric Moore <ewm@redtetrahedron.org>," Tue, 15 Oct 2013 11:32:29 -0400","ct: [PATCH 27/35] MAINT: npy_a(exp,log,sqrt,fabs) don't really exist.",1,0,4,numpy/core/include/numpy/npy_math.h,[u'4'],0,4," -118,10 +118,6 ;",double npy_tanh(double x);
3010,35,79afefd, Eric Moore <ewm@redtetrahedron.org>," Wed, 16 Oct 2013 17:00:52 -0400",ct: [PATCH 28/35] ENH: Run the test_c99complex.c tests with the test suite too.Some of the other tests in test_umath_complex.py are duplicates of thesetests.,4,850,333,numpy/core/setup.py,[u'10'],1,0," -1018,6 +1018,16 ;","def get_dotblas_sources(ext, build_dir);"
3010,35,79afefd, Eric Moore <ewm@redtetrahedron.org>," Wed, 16 Oct 2013 17:00:52 -0400",ct: [PATCH 28/35] ENH: Run the test_c99complex.c tests with the test suite too.Some of the other tests in test_umath_complex.py are duplicates of thesetests.,4,850,333,numpy/core/src/npymath/npymath_tests.c,[u'135'],5,0," -0,0 +1,135 ;",;
3010,35,79afefd, Eric Moore <ewm@redtetrahedron.org>," Wed, 16 Oct 2013 17:00:52 -0400",ct: [PATCH 28/35] ENH: Run the test_c99complex.c tests with the test suite too.Some of the other tests in test_umath_complex.py are duplicates of thesetests.,4,850,333,numpy/core/test_c99complex.c,[u'890'],21,12," -4,11 +4,12 ; -16,27 +17,21 ; -44,29 +39,282 ; -74,13 +322,12 ; -105,16 +352,13 ; -140,22 +384,15 ; -168,17 +405,13 ; -196,17 +429,17 ; -220,23 +453,21 ; -247,37 +478,18 ; -285,30 +497,30 ; -316,66 +528,73 ; -385,57 +604,55 ; -452,63 +669,58 ; -535,9 +747,9 ; -545,10 +757,10 ; -559,10 +771,10 ; -589,16 +801,16 ; -613,24 +825,24 ; -640,8 +852,8 ; -654,40 +866,40 ; -707,25 +919,25 ; -736,10 +948,10 ; -767,16 +979,16 ; -791,24 +1003,24 ; -818,8 +1030,8 ; -833,16 +1045,16 ; -905,16 +1117,16 ; -977,16 +1189,16 ; -1028,7 +1240,7 ; -1038,9 +1250,9 ; -1103,16 +1315,16 ; -1175,16 +1387,16 ; -1226,7 +1438,7 ; -1236,9 +1448,9 ; -1301,42 +1513,42 ; -1352,19 +1564,19 ; -1457,13 +1669,13 ; -1490,9 +1702,9 ; -1534,10 +1746,10 ; -1546,55 +1758,67 ;",";;;const TYPE NZERO =  -1.0 * 0.0;const TYPE NZERO =  -1.0 * 0.0;const TYPE NZERO =  -1.0 * 0.0;const TYPE NZERO =  -1.0 * 0.0;const TYPE NZERO =  -1.0 * 0.0;const TYPE NZERO =  -1.0 * 0.0;const TYPE NZERO =  -1.0 * 0.0;TYPE complex cpack(TYPE r, TYPE i;int isequal(TYPE a, TYPE b;int check_near_crossover(complexfunc cfunc, const char* fname;int check_loss_of_precision(complexfunc cfunc, realfunc rfunc, int real;int test_cacos(;int test_casin(;int test_casin(;int test_casin(;int test_catan(;int test_catan(;int test_catan(;int test_cacosh(;int test_casinh(;int test_casinh(;int test_catanh(;int test_catanh(;int test_catanh(;int test_ccos(;int test_csin(;int test_ctan(;int test_ctan(;int test_ccosh(;int test_csinh(;int test_ctanh(;int test_ctanh(;int test_cexp(;int test_clog(;int test_cpow(;int test_cpow(;int test_csqrt(;int test_csqrt(;"
3010,35,79afefd, Eric Moore <ewm@redtetrahedron.org>," Wed, 16 Oct 2013 17:00:52 -0400",ct: [PATCH 28/35] ENH: Run the test_c99complex.c tests with the test suite too.Some of the other tests in test_umath_complex.py are duplicates of thesetests.,4,850,333,numpy/core/tests/test_umath_complex.py,[u'148'],6,0," -1,4 +1,5 ; -7,6 +8,8 ; -532,6 +535,151 ;",;;def test_simple(self);
3010,35,cfe9fcc, Eric Moore <ewm@redtetrahedron.org>," Mon, 21 Oct 2013 19:24:26 -0400",ct: [PATCH 29/35] BUG: Fix tests to compile under MSVC,1,6,0,numpy/core/test_c99complex.c,[u'7'],6,1," -99,11 +99,16 ;",;
3010,35,cbc97fa, Eric Moore <ewm@redtetrahedron.org>," Mon, 21 Oct 2013 19:56:38 -0400",ct: [PATCH 30/35] MAINT: pick sunmath.h from npy_math.h,1,3,0,numpy/core/test_c99complex.c,[u'3'],3,0," -2,6 +2,9 ;",;
3010,35,863d97d, Eric Moore <ewm@redtetrahedron.org>," Mon, 21 Oct 2013 20:26:46 -0400",ct: [PATCH 31/35] MAINT: Update note about FreeBSD.The names and copyright dates were updated earlier.,1,2,2,numpy/core/src/npymath/npy_math_complex.c.src,[u'4'],2,2," -3,8 +3,8 ;",;
3010,35,2348023, Eric Moore <ewm@redtetrahedron.org>," Thu, 24 Oct 2013 18:59:22 -0400",ct: [PATCH 32/35] MAINT: make sure npy_math builds when long double is double double,1,8,0,numpy/core/src/npymath/npy_math_complex.c.src,[u'8'],8,0," -1444,6 +1444,7 ; -1472,6 +1473,13 ;","static inline npy_double _real_part_reciprocal(npy_double x, npy_double y;static inline npy_longdouble _real_part_reciprocall(npy_longdouble x;"
3010,35,5771dae, Eric Moore <ewm@redtetrahedron.org>," Wed, 6 Nov 2013 22:22:05 -0500","ct: [PATCH 33/35] MAINT: move npy_(get,clear)_floatstatus() to their own file.",3,259,256,numpy/core/setup.py,[u'3'],1,1," -712,7 +712,8 ;",def get_mathlib_info(*args);
3010,35,5771dae, Eric Moore <ewm@redtetrahedron.org>," Wed, 6 Nov 2013 22:22:05 -0500","ct: [PATCH 33/35] MAINT: move npy_(get,clear)_floatstatus() to their own file.",3,259,256,numpy/core/src/npymath/fpstatus.c,[u'257'],35,0," -0,0 +1,257 ;",;
3010,35,5771dae, Eric Moore <ewm@redtetrahedron.org>," Wed, 6 Nov 2013 22:22:05 -0500","ct: [PATCH 33/35] MAINT: move npy_(get,clear)_floatstatus() to their own file.",3,259,256,numpy/core/src/npymath/ieee754.c.src,[u'255'],0,34," -556,258 +556,3 ;","npy_longdouble npy_nextafterl(npy_longdouble x, npy_longdouble y;"
3010,35,566c15e, Eric Moore <ewm@redtetrahedron.org>," Wed, 6 Nov 2013 23:39:57 -0500",ct: [PATCH 34/35] BUG Use the floating point status functions in build time tests,3,110,54,numpy/core/setup.py,[u'9'],2,1," -233,13 +233,16 ;",def check_prec(prec);
3010,35,566c15e, Eric Moore <ewm@redtetrahedron.org>," Wed, 6 Nov 2013 23:39:57 -0500",ct: [PATCH 34/35] BUG Use the floating point status functions in build time tests,3,110,54,numpy/core/src/npymath/fpstatus.c,[u'5'],2,0," -3,7 +3,12 ;",;
3010,35,566c15e, Eric Moore <ewm@redtetrahedron.org>," Wed, 6 Nov 2013 23:39:57 -0500",ct: [PATCH 34/35] BUG Use the floating point status functions in build time tests,3,110,54,numpy/core/test_c99complex.c,[u'150'],25,13," -1,11 +1,16 ; -154,6 +159,18 ; -239,6 +256,18 ; -273,6 +302,25 ; -440,14 +488,14 ; -464,15 +512,15 ; -828,10 +876,10 ; -1006,10 +1054,10 ; -1071,16 +1119,16 ; -1110,7 +1158,7 ; -1143,16 +1191,16 ; -1182,7 +1230,7 ; -1213,8 +1261,8 ; -1269,16 +1317,16 ; -1308,7 +1356,7 ; -1341,16 +1389,16 ; -1380,7 +1428,7 ; -1411,8 +1459,8 ; -1466,8 +1514,8 ; -1501,7 +1549,7 ; -1534,11 +1582,11 ;",;;;;;;RETTYPE ADDSUFFIX(test_catan)(void;RETTYPE ADDSUFFIX(test_catanh)(void;RETTYPE ADDSUFFIX(test_ccos)(void;RETTYPE ADDSUFFIX(test_ccos)(void;RETTYPE ADDSUFFIX(test_csin)(void;RETTYPE ADDSUFFIX(test_csin)(void;RETTYPE ADDSUFFIX(test_ctan)(void;RETTYPE ADDSUFFIX(test_ccosh)(void;RETTYPE ADDSUFFIX(test_ccosh)(void;RETTYPE ADDSUFFIX(test_csinh)(void;RETTYPE ADDSUFFIX(test_csinh)(void;RETTYPE ADDSUFFIX(test_ctanh)(void;RETTYPE ADDSUFFIX(test_cexp)(void;RETTYPE ADDSUFFIX(test_cexp)(void;RETTYPE ADDSUFFIX(test_clog)(void;
3010,35,503047b, Eric Moore <ewm@redtetrahedron.org>," Wed, 6 Nov 2013 23:50:32 -0500",ct: [PATCH 35/35] MAINT: move test_c99complex.c to npymath,4,1885,1884,numpy/core/setup.py,[u'3'],1,1," -233,7 +233,8 ;",def check_prec(prec);
3010,35,503047b, Eric Moore <ewm@redtetrahedron.org>," Wed, 6 Nov 2013 23:50:32 -0500",ct: [PATCH 35/35] MAINT: move test_c99complex.c to npymath,4,1885,1884,numpy/core/src/npymath/npymath_tests.c,[u'6'],1,1," -25,15 +25,15 ;",;
3010,35,503047b, Eric Moore <ewm@redtetrahedron.org>," Wed, 6 Nov 2013 23:50:32 -0500",ct: [PATCH 35/35] MAINT: move test_c99complex.c to npymath,4,1885,1884,numpy/core/src/npymath/test_c99complex.c,[u'1880'],30,0," -0,0 +1,1880 ;",;
3010,35,503047b, Eric Moore <ewm@redtetrahedron.org>," Wed, 6 Nov 2013 23:50:32 -0500",ct: [PATCH 35/35] MAINT: move test_c99complex.c to npymath,4,1885,1884,numpy/core/test_c99complex.c,[u'1880'],0,30," -1,1880 +0,0 ;",;
3009,1,436b521, daveydave400 <dhoese@gmail.com>," Fri, 22 Feb 2013 12:38:42 -0600",ct: [PATCH] Added 'subok' keyword documentation to zeros_like and ones_like functions.,1,8,0,numpy/core/numeric.py,[u'8'],8,0," -81,6 +81,10 ; -167,6 +171,10 ;","def zeros_like(a, dtype=None, order='K', subok=True);def ones_like(a, dtype=None, order='K', subok=True);"
3007,1,b84555a, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 20 Feb 2013 15:04:33 +0100","ct: [PATCH] BUG: Fix regression of bad error/random behavior in item methodAppearently .item() for arrays with size != 1 correctly returned an errorin 1.6., but failed to raise the error (due to missing return) in 1.7.",2,6,0,numpy/core/src/multiarray/methods.c,[u'1'],1,0," -633,6 +633,7 ;","array_toscalar(PyArrayObject *self, PyObject *args;"
3007,1,b84555a, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 20 Feb 2013 15:04:33 +0100","ct: [PATCH] BUG: Fix regression of bad error/random behavior in item methodAppearently .item() for arrays with size != 1 correctly returned an errorin 1.6., but failed to raise the error (due to missing return) in 1.7.",2,6,0,numpy/core/tests/test_regression.py,[u'5'],5,0," -1032,6 +1032,11 ;","def test_recarray_tolist(self, level=rlevel);"
3006,1,04b89c6, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 20 Feb 2013 15:04:33 +0100","ct: [PATCH] BUG: Fix regression of bad error/random behavior in item methodAppearently .item() for arrays with size != 1 correctly returned an errorin 1.6., but failed to raise the error (due to missing return) in 1.7.",2,6,0,numpy/core/src/multiarray/methods.c,[u'1'],1,0," -633,6 +633,7 ;","array_toscalar(PyArrayObject *self, PyObject *args;"
3006,1,04b89c6, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 20 Feb 2013 15:04:33 +0100","ct: [PATCH] BUG: Fix regression of bad error/random behavior in item methodAppearently .item() for arrays with size != 1 correctly returned an errorin 1.6., but failed to raise the error (due to missing return) in 1.7.",2,6,0,numpy/core/tests/test_regression.py,[u'5'],5,0," -1068,6 +1068,11 ;","def test_recarray_tolist(self, level=rlevel);"
3005,1,a3f2e04, Julien Phalip <jphalip@gmail.com>," Wed, 20 Feb 2013 06:44:50 +0000",ct: [PATCH] ENH: add `invert` parameter to numpy.in1d().,5,59,11,doc/release/1.8.0-notes.rst,[u'6'],5,1," -66,11 +66,15 ;",without needing to convert to a matrix. The 'economic' mode is simpl;
3005,1,a3f2e04, Julien Phalip <jphalip@gmail.com>," Wed, 20 Feb 2013 06:44:50 +0000",ct: [PATCH] ENH: add `invert` parameter to numpy.in1d().,5,59,11,numpy/lib/arraysetops.py,[u'33'],26,7," -281,7 +281,7 ; -297,6 +297,13 ; -325,7 +332,11 ; -333,9 +344,14 ; -349,8 +365,11 ;","def setxor1d(ar1, ar2, assume_unique=False);def in1d(ar1, ar2, assume_unique=False);def in1d(ar1, ar2, assume_unique=False);def in1d(ar1, ar2, assume_unique=False);def in1d(ar1, ar2, assume_unique=False);"
3005,1,a3f2e04, Julien Phalip <jphalip@gmail.com>," Wed, 20 Feb 2013 06:44:50 +0000",ct: [PATCH] ENH: add `invert` parameter to numpy.in1d().,5,59,11,numpy/lib/tests/test_arraysetops.py,[u'9'],9,0," -190,6 +190,15 ;",def test_in1d_char_array( self );
3005,1,a3f2e04, Julien Phalip <jphalip@gmail.com>," Wed, 20 Feb 2013 06:44:50 +0000",ct: [PATCH] ENH: add `invert` parameter to numpy.in1d().,5,59,11,numpy/ma/extras.py,[u'9'],6,3," -1121,7 +1121,7 ; -1147,8 +1147,11 ;","def setxor1d(ar1, ar2, assume_unique=False);def in1d(ar1, ar2, assume_unique=False);"
3005,1,a3f2e04, Julien Phalip <jphalip@gmail.com>," Wed, 20 Feb 2013 06:44:50 +0000",ct: [PATCH] ENH: add `invert` parameter to numpy.in1d().,5,59,11,numpy/ma/tests/test_extras.py,[u'13'],13,0," -810,6 +810,19 ;",def test_in1d(self);
3002,3,b343f43, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 18 Feb 2013 23:34:01 +0100","ct: [PATCH 1/3] BUG: Incref items in np.take on error as they are decrefed laterWhen take fails during copying due to out of bound indices, then the alreadycopied items will be decref'd on array destruction. To avoid that, as wellas possible overlapping or already initialized object arrays, decref andincref during the copy operation itself. Note that all basic types butobject use their own fasttake, so this does not change anything for them.",3,65,14,numpy/core/src/multiarray/item_selection.c,[u'58'],24,6," -31,10 +31,11 ; -110,9 +111,11 ; -124,8 +127,20 ; -144,8 +159,20 ; -160,8 +187,20 ; -176,7 +215,6 ;","PyArray_TakeFrom(PyArrayObject *self0, PyObject *indices0, int axis;PyArray_TakeFrom(PyArrayObject *self0, PyObject *indices0, int axis;PyArray_TakeFrom(PyArrayObject *self0, PyObject *indices0, int axis;PyArray_TakeFrom(PyArrayObject *self0, PyObject *indices0, int axis;PyArray_TakeFrom(PyArrayObject *self0, PyObject *indices0, int axis;PyArray_TakeFrom(PyArrayObject *self0, PyObject *indices0, int axis;"
3002,3,b343f43, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 18 Feb 2013 23:34:01 +0100","ct: [PATCH 1/3] BUG: Incref items in np.take on error as they are decrefed laterWhen take fails during copying due to out of bound indices, then the alreadycopied items will be decref'd on array destruction. To avoid that, as wellas possible overlapping or already initialized object arrays, decref andincref during the copy operation itself. Note that all basic types butobject use their own fasttake, so this does not change anything for them.",3,65,14,numpy/core/tests/test_item_selection.py,[u'10'],3,3," -4,7 +4,7 ; -15,10 +15,12 ;",;def test_take();
3002,3,b343f43, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 18 Feb 2013 23:34:01 +0100","ct: [PATCH 1/3] BUG: Incref items in np.take on error as they are decrefed laterWhen take fails during copying due to out of bound indices, then the alreadycopied items will be decref'd on array destruction. To avoid that, as wellas possible overlapping or already initialized object arrays, decref andincref during the copy operation itself. Note that all basic types butobject use their own fasttake, so this does not change anything for them.",3,65,14,numpy/core/tests/test_regression.py,[u'11'],6,0," -626,6 +626,17 ;","def test_take_output(self, level=rlevel);"
3002,3,58548e6, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 21 Feb 2013 23:48:29 +0100",ct: [PATCH 2/3] TST: Add test for np.take refcountingAlso make the testcase for take a class.,1,56,38,numpy/core/tests/test_item_selection.py,[u'94'],20,13," -2,44 +2,62 ;",;
3002,3,230ee3a, Sebastian Berg <sebastian@sipsolutions.net>," Tue, 19 Feb 2013 16:52:32 +0100","ct: [PATCH 3/3] BUG: non-empty takes on empty axes failed for clip/wrap logicThese did no checking for this special case. And thus, wrap would gointo infinite loops trying to adjust the index, and clip would (probably)segfault. This raises IndexError explicitely beforehand.",2,11,0,numpy/core/src/multiarray/item_selection.c,[u'7'],7,0," -117,6 +117,13 ;","PyArray_TakeFrom(PyArrayObject *self0, PyObject *indices0, int axis;"
3002,3,230ee3a, Sebastian Berg <sebastian@sipsolutions.net>," Tue, 19 Feb 2013 16:52:32 +0100","ct: [PATCH 3/3] BUG: non-empty takes on empty axes failed for clip/wrap logicThese did no checking for this special case. And thus, wrap would gointo infinite loops trying to adjust the index, and clip would (probably)segfault. This raises IndexError explicitely beforehand.",2,11,0,numpy/core/tests/test_indexerrors.py,[u'4'],4,0," -10,6 +10,8 ; -21,6 +23,8 ;",def test_arraytypes_fasttake(self);def test_take_from_object(self);
2996,1,c5478ef, Andreas Hilboll <andreas@hilboll.de>," Sun, 17 Feb 2013 12:56:41 +0100",ct: [PATCH] Update numpy/lib/function_base.pyfix percentile docstring,1,0,0,numpy/lib/function_base.py,[u'2'],1,1," -3053,7 +3053,7 ;","def percentile(a, q, axis=None, out=None, overwrite_input=False);"
2994,10,cedba8e, Pauli Virtanen <pav@iki.fi>," Fri, 7 Dec 2012 21:16:50 +0200","ct: [PATCH 01/10] BUG: numpydoc/linkcode: do not detect linkcode config changesSince the linkcode_resolve is a function, it triggers configurationchange on each rebuild, resulting to full rebuild always. It's betterto make it not do that.",1,0,0,doc/sphinxext/linkcode.py,[u'2'],1,1," -76,4 +76,4 ;","def doctree_read(app, doctree);"
2994,10,c5cb18f, Pauli Virtanen <pav@iki.fi>," Sun, 9 Dec 2012 19:31:21 +0200",ct: [PATCH 02/10] DOC: numpydoc/linkcode: mention that the extension will be in Sphinx upstream,1,2,2,doc/sphinxext/linkcode.py,[u'4'],2,2," -10,8 +10,8 ;",;
2994,10,a4cd4ff, Pauli Virtanen <pav@iki.fi>," Sun, 9 Dec 2012 19:38:53 +0200",ct: [PATCH 03/10] ENH: numpydoc: deal with duplicated signatures,2,25,7,doc/sphinxext/docscrape.py,[u'18'],11,7," -265,13 +265,17 ;",def _parse_summary(self);
2994,10,a4cd4ff, Pauli Virtanen <pav@iki.fi>," Sun, 9 Dec 2012 19:38:53 +0200",ct: [PATCH 03/10] ENH: numpydoc: deal with duplicated signatures,2,25,7,doc/sphinxext/tests/test_docscrape.py,[u'14'],14,0," -609,6 +609,20 ;","def ham(self, c, d);"
2994,10,7f2da39, Pauli Virtanen <pav@iki.fi>," Sat, 16 Feb 2013 15:44:01 +0200","ct: [PATCH 04/10] ENH: numpydoc: Python 2 & 3 in single codebase, restructure as a package",24,3615,3573,doc/sphinxext/MANIFEST.in,[u'2'],1,1," -1,2 +1,2 ;",;
2994,10,7f2da39, Pauli Virtanen <pav@iki.fi>," Sat, 16 Feb 2013 15:44:01 +0200","ct: [PATCH 04/10] ENH: numpydoc: Python 2 & 3 in single codebase, restructure as a package",24,3615,3573,doc/sphinxext/__init__.py,[u'1'],0,1," -1 +0,0 ;",;
2994,10,7f2da39, Pauli Virtanen <pav@iki.fi>," Sat, 16 Feb 2013 15:44:01 +0200","ct: [PATCH 04/10] ENH: numpydoc: Python 2 & 3 in single codebase, restructure as a package",24,3615,3573,doc/sphinxext/comment_eater.py,[u'158'],0,5," -1,158 +0,0 ;",;
2994,10,7f2da39, Pauli Virtanen <pav@iki.fi>," Sat, 16 Feb 2013 15:44:01 +0200","ct: [PATCH 04/10] ENH: numpydoc: Python 2 & 3 in single codebase, restructure as a package",24,3615,3573,doc/sphinxext/compiler_unparse.py,[u'860'],0,24," -1,860 +0,0 ;",;
2994,10,7f2da39, Pauli Virtanen <pav@iki.fi>," Sat, 16 Feb 2013 15:44:01 +0200","ct: [PATCH 04/10] ENH: numpydoc: Python 2 & 3 in single codebase, restructure as a package",24,3615,3573,doc/sphinxext/docscrape.py,[u'509'],0,15," -1,509 +0,0 ;",;
2994,10,7f2da39, Pauli Virtanen <pav@iki.fi>," Sat, 16 Feb 2013 15:44:01 +0200","ct: [PATCH 04/10] ENH: numpydoc: Python 2 & 3 in single codebase, restructure as a package",24,3615,3573,doc/sphinxext/docscrape_sphinx.py,[u'227'],0,7," -1,227 +0,0 ;",;
2994,10,7f2da39, Pauli Virtanen <pav@iki.fi>," Sat, 16 Feb 2013 15:44:01 +0200","ct: [PATCH 04/10] ENH: numpydoc: Python 2 & 3 in single codebase, restructure as a package",24,3615,3573,doc/sphinxext/linkcode.py,[u'79'],0,3," -1,79 +0,0 ;",;
2994,10,7f2da39, Pauli Virtanen <pav@iki.fi>," Sat, 16 Feb 2013 15:44:01 +0200","ct: [PATCH 04/10] ENH: numpydoc: Python 2 & 3 in single codebase, restructure as a package",24,3615,3573,doc/sphinxext/numpydoc.py,[u'169'],0,5," -1,169 +0,0 ;",;
2994,10,7f2da39, Pauli Virtanen <pav@iki.fi>," Sat, 16 Feb 2013 15:44:01 +0200","ct: [PATCH 04/10] ENH: numpydoc: Python 2 & 3 in single codebase, restructure as a package",24,3615,3573,doc/sphinxext/numpydoc/__init__.py,[u'1'],1,0," -0,0 +1 ;",;
2994,10,7f2da39, Pauli Virtanen <pav@iki.fi>," Sat, 16 Feb 2013 15:44:01 +0200","ct: [PATCH 04/10] ENH: numpydoc: Python 2 & 3 in single codebase, restructure as a package",24,3615,3573,doc/sphinxext/numpydoc/comment_eater.py,[u'167'],5,0," -0,0 +1,167 ;",;
2994,10,7f2da39, Pauli Virtanen <pav@iki.fi>," Sat, 16 Feb 2013 15:44:01 +0200","ct: [PATCH 04/10] ENH: numpydoc: Python 2 & 3 in single codebase, restructure as a package",24,3615,3573,doc/sphinxext/numpydoc/compiler_unparse.py,[u'864'],25,0," -0,0 +1,864 ;",;
2994,10,7f2da39, Pauli Virtanen <pav@iki.fi>," Sat, 16 Feb 2013 15:44:01 +0200","ct: [PATCH 04/10] ENH: numpydoc: Python 2 & 3 in single codebase, restructure as a package",24,3615,3573,doc/sphinxext/numpydoc/docscrape.py,[u'514'],15,0," -0,0 +1,514 ;",;
2994,10,7f2da39, Pauli Virtanen <pav@iki.fi>," Sat, 16 Feb 2013 15:44:01 +0200","ct: [PATCH 04/10] ENH: numpydoc: Python 2 & 3 in single codebase, restructure as a package",24,3615,3573,doc/sphinxext/numpydoc/docscrape_sphinx.py,[u'227'],7,0," -0,0 +1,227 ;",;
2994,10,7f2da39, Pauli Virtanen <pav@iki.fi>," Sat, 16 Feb 2013 15:44:01 +0200","ct: [PATCH 04/10] ENH: numpydoc: Python 2 & 3 in single codebase, restructure as a package",24,3615,3573,doc/sphinxext/numpydoc/linkcode.py,[u'79'],3,0," -0,0 +1,79 ;",;
2994,10,7f2da39, Pauli Virtanen <pav@iki.fi>," Sat, 16 Feb 2013 15:44:01 +0200","ct: [PATCH 04/10] ENH: numpydoc: Python 2 & 3 in single codebase, restructure as a package",24,3615,3573,doc/sphinxext/numpydoc/numpydoc.py,[u'176'],5,0," -0,0 +1,176 ;",;
2994,10,7f2da39, Pauli Virtanen <pav@iki.fi>," Sat, 16 Feb 2013 15:44:01 +0200","ct: [PATCH 04/10] ENH: numpydoc: Python 2 & 3 in single codebase, restructure as a package",24,3615,3573,doc/sphinxext/numpydoc/phantom_import.py,[u'165'],5,0," -0,0 +1,165 ;",;
2994,10,7f2da39, Pauli Virtanen <pav@iki.fi>," Sat, 16 Feb 2013 15:44:01 +0200","ct: [PATCH 04/10] ENH: numpydoc: Python 2 & 3 in single codebase, restructure as a package",24,3615,3573,doc/sphinxext/numpydoc/plot_directive.py,[u'641'],18,0," -0,0 +1,641 ;",;
2994,10,7f2da39, Pauli Virtanen <pav@iki.fi>," Sat, 16 Feb 2013 15:44:01 +0200","ct: [PATCH 04/10] ENH: numpydoc: Python 2 & 3 in single codebase, restructure as a package",24,3615,3573,doc/sphinxext/numpydoc/tests/test_docscrape.py,[u'632'],18,0," -0,0 +1,632 ;",;
2994,10,7f2da39, Pauli Virtanen <pav@iki.fi>," Sat, 16 Feb 2013 15:44:01 +0200","ct: [PATCH 04/10] ENH: numpydoc: Python 2 & 3 in single codebase, restructure as a package",24,3615,3573,doc/sphinxext/numpydoc/traitsdoc.py,[u'140'],4,0," -0,0 +1,140 ;",;
2994,10,7f2da39, Pauli Virtanen <pav@iki.fi>," Sat, 16 Feb 2013 15:44:01 +0200","ct: [PATCH 04/10] ENH: numpydoc: Python 2 & 3 in single codebase, restructure as a package",24,3615,3573,doc/sphinxext/phantom_import.py,[u'162'],0,5," -1,162 +0,0 ;",;
2994,10,7f2da39, Pauli Virtanen <pav@iki.fi>," Sat, 16 Feb 2013 15:44:01 +0200","ct: [PATCH 04/10] ENH: numpydoc: Python 2 & 3 in single codebase, restructure as a package",24,3615,3573,doc/sphinxext/plot_directive.py,[u'636'],0,18," -1,636 +0,0 ;",;
2994,10,7f2da39, Pauli Virtanen <pav@iki.fi>," Sat, 16 Feb 2013 15:44:01 +0200","ct: [PATCH 04/10] ENH: numpydoc: Python 2 & 3 in single codebase, restructure as a package",24,3615,3573,doc/sphinxext/setup.py,[u'10'],1,1," -1,11 +1,16 ; -20,4 +25,5 ;",;;
2994,10,7f2da39, Pauli Virtanen <pav@iki.fi>," Sat, 16 Feb 2013 15:44:01 +0200","ct: [PATCH 04/10] ENH: numpydoc: Python 2 & 3 in single codebase, restructure as a package",24,3615,3573,doc/sphinxext/tests/test_docscrape.py,[u'629'],0,18," -1,629 +0,0 ;",;
2994,10,7f2da39, Pauli Virtanen <pav@iki.fi>," Sat, 16 Feb 2013 15:44:01 +0200","ct: [PATCH 04/10] ENH: numpydoc: Python 2 & 3 in single codebase, restructure as a package",24,3615,3573,doc/sphinxext/traitsdoc.py,[u'140'],0,4," -1,140 +0,0 ;",;
2994,10,cc83253, Pauli Virtanen <pav@iki.fi>," Sat, 16 Feb 2013 15:46:10 +0200","ct: [PATCH 05/10] MAINT: always use plot directive from Matplotlib, and prefer Sphinx linkcode",1,3,22,doc/source/conf.py,[u'25'],3,22," -20,24 +20,8 ; -283,9 +267,6 ; -294,7 +275,7 ;",;;;
2994,10,c5efee8, Pauli Virtanen <pav@iki.fi>," Sat, 16 Feb 2013 15:54:23 +0200","ct: [PATCH 06/10] TST: numpydoc: add stub test files, to check that files at least import",4,12,0,doc/sphinxext/numpydoc/tests/test_linkcode.py,[u'3'],3,0," -0,0 +1,3 ;",;
2994,10,c5efee8, Pauli Virtanen <pav@iki.fi>," Sat, 16 Feb 2013 15:54:23 +0200","ct: [PATCH 06/10] TST: numpydoc: add stub test files, to check that files at least import",4,12,0,doc/sphinxext/numpydoc/tests/test_phantom_import.py,[u'3'],3,0," -0,0 +1,3 ;",;
2994,10,c5efee8, Pauli Virtanen <pav@iki.fi>," Sat, 16 Feb 2013 15:54:23 +0200","ct: [PATCH 06/10] TST: numpydoc: add stub test files, to check that files at least import",4,12,0,doc/sphinxext/numpydoc/tests/test_plot_directive.py,[u'3'],3,0," -0,0 +1,3 ;",;
2994,10,c5efee8, Pauli Virtanen <pav@iki.fi>," Sat, 16 Feb 2013 15:54:23 +0200","ct: [PATCH 06/10] TST: numpydoc: add stub test files, to check that files at least import",4,12,0,doc/sphinxext/numpydoc/tests/test_traitsdoc.py,[u'3'],3,0," -0,0 +1,3 ;",;
2994,10,fd9064f, Pauli Virtanen <pav@iki.fi>," Sat, 16 Feb 2013 16:22:32 +0200",ct: [PATCH 07/10] BUG: numpydoc: fix bugs in attribute docstring extraction + improve presentation,2,34,16,doc/sphinxext/numpydoc/docscrape.py,[u'23'],16,7," -490,12 +490,19 ; -511,4 +518,6 ;","def __init__(self, cls, doc=None, modulename='', func_doc=FunctionDoc;def properties(self);"
2994,10,fd9064f, Pauli Virtanen <pav@iki.fi>," Sat, 16 Feb 2013 16:22:32 +0200",ct: [PATCH 07/10] BUG: numpydoc: fix bugs in attribute docstring extraction + improve presentation,2,34,16,doc/sphinxext/numpydoc/docscrape_sphinx.py,[u'27'],18,9," -72,7 +72,16 ; -82,15 +91,15 ;","def _str_member_list(self, name);def _str_member_list(self, name);"
2994,10,1b2e585, Pauli Virtanen <pav@iki.fi>," Sat, 16 Feb 2013 16:28:58 +0200",ct: [PATCH 08/10] TST: numpydoc: more class tests,1,114,2,doc/sphinxext/numpydoc/tests/test_docscrape.py,[u'116'],24,1," -1,6 +1,6 ; -164,11 +164,12 ; -597,20 +598,29 ; -626,6 +636,108 ;",";def test_examples();def spam(self, a, b);def test_duplicate_signature();"
2994,10,a3bc146, Pauli Virtanen <pav@iki.fi>," Sat, 16 Feb 2013 16:42:46 +0200",ct: [PATCH 09/10] BUG: numpydoc: check that it works with sub-classes,2,5,0,doc/sphinxext/numpydoc/docscrape.py,[u'2'],1,1," -511,7 +511,7 ;",def methods(self);
2994,10,a3bc146, Pauli Virtanen <pav@iki.fi>," Sat, 16 Feb 2013 16:42:46 +0200",ct: [PATCH 09/10] BUG: numpydoc: check that it works with sub-classes,2,5,0,doc/sphinxext/numpydoc/tests/test_docscrape.py,[u'4'],4,0," -603,6 +603,10 ;",def spammity(self);
2994,10,9d8722b, Pauli Virtanen <pav@iki.fi>," Wed, 27 Feb 2013 19:48:28 +0200",ct: [PATCH 10/10] DOC: fix doc/source/conf.py to work with Python 3,1,2,2,doc/source/conf.py,[u'4'],2,2," -45,7 +45,7 ; -283,7 +283,7 ;",;;
2992,2,a530098, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 15 Feb 2013 22:11:48 +0100","ct: [PATCH 1/2] BUG: fix random.choice scalar object result and disallow 0-d arraysObject arrays failed due to bad check for finding out if the result shouldbe a scalar type and not an array when size=None. Also in this case thecreation of the new array was wrong. This should be fixed with this.The second fix is to forbid 0-d arrays. Allowing 0-d arrays does notmake much sense. But it is dangerous because for example floats willbe interpreted as 1-d arrays, while one may expect that they are interpretedas integers. This also saves the trouble of reliably detecting all integers...",2,45,18,numpy/random/mtrand/mtrand.pyx,[u'50'],26,13," -124,6 +124,7 ; -994,21 +995,24 ; -1019,7 +1023,10 ; -1060,18 +1067,27 ;","cdef extern from ""initarray.h"";cdef class RandomState;cdef class RandomState;cdef class RandomState;"
2992,2,a530098, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 15 Feb 2013 22:11:48 +0100","ct: [PATCH 1/2] BUG: fix random.choice scalar object result and disallow 0-d arraysObject arrays failed due to bad check for finding out if the result shouldbe a scalar type and not an array when size=None. Also in this case thecreation of the new array was wrong. This should be fixed with this.The second fix is to forbid 0-d arrays. Allowing 0-d arrays does notmake much sense. But it is dangerous because for example floats willbe interpreted as 1-d arrays, while one may expect that they are interpretedas integers. This also saves the trouble of reliably detecting all integers...",2,45,18,numpy/random/tests/test_random.py,[u'13'],9,1," -149,7 +149,8 ; -169,6 +170,11 ; -177,6 +183,11 ;",def test_choice_noninteger(self);def test_choice_return_shape(self);def test_choice_return_shape(self);
2992,2,66ffc58, Sebastian Berg <sebastian@sipsolutions.net>," Mon, 4 Mar 2013 14:13:33 +0100",ct: [PATCH 2/2] MAINT: regenerate mtrand.c,1,4405,4223,numpy/random/mtrand/mtrand.c,[u'8628'],21,21," -1,4 +1,4 ; -430,7 +430,7 ; -821,149 +821,150 ; -1012,6 +1013,7 ; -1056,6 +1058,7 ; -1089,43 +1092,40 ; -1213,21 +1213,25 ; -1274,6 +1278,7 ; -1310,6 +1315,7 ; -1364,22 +1370,22 ; -1399,72 +1405,71 ; -1472,37 +1477,40 ; -1526,7 +1534,7 ; -1536,7 +1544,7 ; -1544,7 +1552,7 ; -1553,24 +1561,24 ; -1578,7 +1586,7 ; -1586,7 +1594,7 ; -1595,7 +1603,7 ; -1604,7 +1612,7 ; -1614,7 +1622,7 ; -1624,7 +1632,7 ; -1653,7 +1661,7 ; -1678,7 +1686,7 ; -1688,7 +1696,7 ; -1696,7 +1704,7 ; -1705,24 +1713,24 ; -1730,7 +1738,7 ; -1738,7 +1746,7 ; -1747,7 +1755,7 ; -1756,7 +1764,7 ; -1766,7 +1774,7 ; -1776,7 +1784,7 ; -1805,7 +1813,7 ; -1833,7 +1841,7 ; -1843,20 +1851,20 ; -1865,7 +1873,7 ; -1874,20 +1882,20 ; -1897,7 +1905,7 ; -1906,7 +1914,7 ; -1919,24 +1927,24 ; -1944,7 +1952,7 ; -1952,7 +1960,7 ; -1961,20 +1969,20 ; -1984,23 +1992,23 ; -2010,7 +2018,7 ; -2019,7 +2027,7 ; -2028,7 +2036,7 ; -2040,7 +2048,7 ; -2069,7 +2077,7 ; -2094,7 +2102,7 ; -2104,7 +2112,7 ; -2112,7 +2120,7 ; -2121,24 +2129,24 ; -2146,7 +2154,7 ; -2154,7 +2162,7 ; -2163,7 +2171,7 ; -2172,7 +2180,7 ; -2182,7 +2190,7 ; -2192,7 +2200,7 ; -2221,7 +2229,7 ; -2248,7 +2256,7 ; -2258,33 +2266,33 ; -2293,7 +2301,7 ; -2303,7 +2311,7 ; -2312,7 +2320,7 ; -2321,7 +2329,7 ; -2330,7 +2338,7 ; -2343,24 +2351,24 ; -2368,7 +2376,7 ; -2376,7 +2384,7 ; -2385,20 +2393,20 ; -2408,23 +2416,23 ; -2434,7 +2442,7 ; -2443,7 +2451,7 ; -2452,7 +2460,7 ; -2461,7 +2469,7 ; -2470,7 +2478,7 ; -2482,7 +2490,7 ; -2510,7 +2518,7 ; -2535,7 +2543,7 ; -2545,7 +2553,7 ; -2553,7 +2561,7 ; -2562,24 +2570,24 ; -2587,7 +2595,7 ; -2595,7 +2603,7 ; -2604,7 +2612,7 ; -2613,7 +2621,7 ; -2623,7 +2631,7 ; -2633,7 +2641,7 ; -2662,7 +2670,7 ; -2690,7 +2698,7 ; -2700,33 +2708,33 ; -2735,7 +2743,7 ; -2745,7 +2753,7 ; -2754,7 +2762,7 ; -2763,7 +2771,7 ; -2772,7 +2780,7 ; -2781,7 +2789,7 ; -2794,24 +2802,24 ; -2819,7 +2827,7 ; -2827,7 +2835,7 ; -2836,20 +2844,20 ; -2859,23 +2867,23 ; -2885,7 +2893,7 ; -2894,7 +2902,7 ; -2903,7 +2911,7 ; -2912,7 +2920,7 ; -2921,7 +2929,7 ; -2933,7 +2941,7 ; -2961,7 +2969,7 ; -2986,7 +2994,7 ; -2996,7 +3004,7 ; -3004,7 +3012,7 ; -3013,19 +3021,19 ; -3033,7 +3041,7 ; -3041,7 +3049,7 ; -3050,7 +3058,7 ; -3059,7 +3067,7 ; -3069,7 +3077,7 ; -3079,7 +3087,7 ; -3108,7 +3116,7 ; -3133,7 +3141,7 ; -3143,7 +3151,7 ; -3151,7 +3159,7 ; -3160,19 +3168,19 ; -3180,7 +3188,7 ; -3188,7 +3196,7 ; -3197,7 +3205,7 ; -3206,7 +3214,7 ; -3216,7 +3224,7 ; -3226,7 +3234,7 ; -3255,7 +3263,7 ; -3282,7 +3290,7 ; -3292,33 +3300,33 ; -3327,7 +3335,7 ; -3337,7 +3345,7 ; -3346,7 +3354,7 ; -3355,7 +3363,7 ; -3364,7 +3372,7 ; -3377,19 +3385,19 ; -3397,7 +3405,7 ; -3405,7 +3413,7 ; -3414,20 +3422,20 ; -3437,23 +3445,23 ; -3463,7 +3471,7 ; -3472,7 +3480,7 ; -3481,7 +3489,7 ; -3490,7 +3498,7 ; -3499,7 +3507,7 ; -3511,7 +3519,7 ; -3539,7 +3547,7 ; -3564,7 +3572,7 ; -3574,7 +3582,7 ; -3582,7 +3590,7 ; -3591,19 +3599,19 ; -3611,7 +3619,7 ; -3619,7 +3627,7 ; -3628,7 +3636,7 ; -3637,7 +3645,7 ; -3647,7 +3655,7 ; -3657,7 +3665,7 ; -3686,7 +3694,7 ; -3713,7 +3721,7 ; -3723,33 +3731,33 ; -3758,7 +3766,7 ; -3768,7 +3776,7 ; -3777,7 +3785,7 ; -3786,7 +3794,7 ; -3795,7 +3803,7 ; -3808,19 +3816,19 ; -3828,7 +3836,7 ; -3836,7 +3844,7 ; -3845,20 +3853,20 ; -3868,23 +3876,23 ; -3894,7 +3902,7 ; -3903,7 +3911,7 ; -3912,7 +3920,7 ; -3921,7 +3929,7 ; -3930,7 +3938,7 ; -3942,7 +3950,7 ; -3970,7 +3978,7 ; -3995,7 +4003,7 ; -4005,7 +4013,7 ; -4013,7 +4021,7 ; -4022,19 +4030,19 ; -4042,7 +4050,7 ; -4050,7 +4058,7 ; -4059,7 +4067,7 ; -4068,7 +4076,7 ; -4078,7 +4086,7 ; -4088,7 +4096,7 ; -4117,7 +4125,7 ; -4145,7 +4153,7 ; -4155,33 +4163,33 ; -4190,7 +4198,7 ; -4200,7 +4208,7 ; -4209,7 +4217,7 ; -4218,7 +4226,7 ; -4227,7 +4235,7 ; -4236,7 +4244,7 ; -4249,19 +4257,19 ; -4269,7 +4277,7 ; -4277,7 +4285,7 ; -4286,20 +4294,20 ; -4309,23 +4317,23 ; -4335,7 +4343,7 ; -4344,7 +4352,7 ; -4353,7 +4361,7 ; -4362,7 +4370,7 ; -4371,7 +4379,7 ; -4383,7 +4391,7 ; -4411,7 +4419,7 ; -4436,7 +4444,7 ; -4446,7 +4454,7 ; -4454,7 +4462,7 ; -4463,19 +4471,19 ; -4483,7 +4491,7 ; -4491,7 +4499,7 ; -4500,7 +4508,7 ; -4509,7 +4517,7 ; -4519,7 +4527,7 ; -4529,7 +4537,7 ; -4558,7 +4566,7 ; -4586,7 +4594,7 ; -4596,20 +4604,20 ; -4618,7 +4626,7 ; -4627,20 +4635,20 ; -4650,7 +4658,7 ; -4659,7 +4667,7 ; -4672,19 +4680,19 ; -4692,7 +4700,7 ; -4700,7 +4708,7 ; -4709,20 +4717,20 ; -4732,23 +4740,23 ; -4758,7 +4766,7 ; -4767,7 +4775,7 ; -4776,7 +4784,7 ; -4788,7 +4796,7 ; -4817,7 +4825,7 ; -4836,7 +4844,7 ; -4845,7 +4853,7 ; -4854,7 +4862,7 ; -4864,7 +4872,7 ; -4873,7 +4881,7 ; -4882,7 +4890,7 ; -4891,7 +4899,7 ; -4901,7 +4909,7 ; -4928,7 +4936,7 ; -4953,7 +4961,7 ; -4966,7 +4974,7 ; -4988,7 +4996,7 ; -4997,21 +5005,21 ; -5039,7 +5047,7 ; -5052,7 +5060,7 ; -5062,7 +5070,7 ; -5071,7 +5079,7 ; -5098,7 +5106,7 ; -5123,7 +5131,7 ; -5136,7 +5144,7 ; -5162,7 +5170,7 ; -5172,7 +5180,7 ; -5183,7 +5191,7 ; -5193,79 +5201,79 ; -5303,7 +5311,7 ; -5324,24 +5332,24 ; -5349,7 +5357,7 ; -5357,7 +5365,7 ; -5366,24 +5374,24 ; -5391,7 +5399,7 ; -5400,7 +5408,7 ; -5408,21 +5416,21 ; -5471,7 +5479,7 ; -5505,54 +5513,54 ; -5564,7 +5572,7 ; -5577,14 +5585,14 ; -5592,7 +5600,7 ; -5600,27 +5608,27 ; -5630,14 +5638,14 ; -5645,14 +5653,14 ; -5664,7 +5672,7 ; -5677,14 +5685,14 ; -5692,7 +5700,7 ; -5700,7 +5708,7 ; -5710,7 +5718,7 ; -5724,14 +5732,14 ; -5747,7 +5755,7 ; -5757,19 +5765,19 ; -5794,7 +5802,7 ; -5804,23 +5812,23 ; -5829,7 +5837,7 ; -5838,24 +5846,24 ; -5889,7 +5897,7 ; -5907,7 +5915,7 ; -5915,9 +5923,9 ; -5948,7 +5956,7 ; -5967,21 +5975,21 ; -6012,7 +6020,7 ; -6031,7 +6039,7 ; -6039,20 +6047,20 ; -6093,7 +6101,7 ; -6118,7 +6126,7 ; -6131,7 +6139,7 ; -6151,7 +6159,7 ; -6159,7 +6167,7 ; -6189,7 +6197,7 ; -6214,7 +6222,7 ; -6227,7 +6235,7 ; -6247,7 +6255,7 ; -6255,7 +6263,7 ; -6287,7 +6295,7 ; -6323,7 +6331,7 ; -6340,7 +6348,7 ; -6373,7 +6381,7 ; -6383,7 +6391,7 ; -6392,42 +6400,42 ; -6437,23 +6445,23 ; -6462,7 +6470,7 ; -6472,7 +6480,7 ; -6481,7 +6489,7 ; -6489,7 +6497,7 ; -6498,19 +6506,19 ; -6518,7 +6526,7 ; -6526,7 +6534,7 ; -6535,7 +6543,7 ; -6544,7 +6552,7 ; -6554,7 +6562,7 ; -6563,7 +6571,7 ; -6573,7 +6581,7 ; -6611,7 +6619,7 ; -6624,7 +6632,7 ; -6643,19 +6651,19 ; -6664,7 +6672,7 ; -6691,7 +6699,7 ; -6704,12 +6712,12 ; -6747,7 +6755,7 ; -6766,7 +6774,7 ; -6794,17 +6802,20 ; -6813,674 +6824,788 ; -7490,72 +7615,72 ; -7563,160 +7688,160 ; -7725,123 +7850,123 ; -7850,213 +7975,227 ; -8094,11 +8233,11 ; -8134,7 +8273,7 ; -8151,7 +8290,7 ; -8180,7 +8319,7 ; -8189,7 +8328,7 ; -8198,7 +8337,7 ; -8208,7 +8347,7 ; -8216,7 +8355,7 ; -8225,7 +8364,7 ; -8234,45 +8373,45 ; -8280,14 +8419,14 ; -8296,20 +8435,20 ; -8317,7 +8456,7 ; -8358,7 +8497,7 ; -8379,18 +8518,18 ; -8398,9 +8537,9 ; -8410,7 +8549,7 ; -8418,12 +8557,12 ; -8464,7 +8603,7 ; -8485,18 +8624,18 ; -8504,9 +8643,9 ; -8516,7 +8655,7 ; -8524,14 +8663,14 ; -8569,7 +8708,7 ; -8605,7 +8744,7 ; -8622,7 +8761,7 ; -8647,7 +8786,7 ; -8657,7 +8796,7 ; -8668,7 +8807,7 ; -8682,7 +8821,7 ; -8690,11 +8829,11 ; -8705,7 +8844,7 ; -8741,7 +8880,7 ; -8766,7 +8905,7 ; -8779,7 +8918,7 ; -8799,7 +8938,7 ; -8807,7 +8946,7 ; -8838,10 +8977,10 ; -8878,7 +9017,7 ; -8895,7 +9034,7 ; -8923,7 +9062,7 ; -8932,7 +9071,7 ; -8941,7 +9080,7 ; -8951,7 +9090,7 ; -8961,23 +9100,23 ; -8985,7 +9124,7 ; -8994,7 +9133,7 ; -9003,50 +9142,50 ; -9054,40 +9193,40 ; -9095,7 +9234,7 ; -9120,7 +9259,7 ; -9132,7 +9271,7 ; -9158,7 +9297,7 ; -9167,7 +9306,7 ; -9184,7 +9323,7 ; -9212,7 +9351,7 ; -9221,7 +9360,7 ; -9230,7 +9369,7 ; -9240,7 +9379,7 ; -9250,23 +9389,23 ; -9276,23 +9415,23 ; -9300,7 +9439,7 ; -9309,7 +9448,7 ; -9318,50 +9457,50 ; -9369,57 +9508,57 ; -9427,40 +9566,40 ; -9468,7 +9607,7 ; -9503,9 +9642,9 ; -9536,7 +9675,7 ; -9551,7 +9690,7 ; -9577,7 +9716,7 ; -9586,7 +9725,7 ; -9596,7 +9735,7 ; -9606,23 +9745,23 ; -9630,7 +9769,7 ; -9639,7 +9778,7 ; -9648,39 +9787,39 ; -9688,40 +9827,40 ; -9729,7 +9868,7 ; -9763,7 +9902,7 ; -9788,7 +9927,7 ; -9801,7 +9940,7 ; -9821,7 +9960,7 ; -9829,7 +9968,7 ; -9860,7 +9999,7 ; -9889,7 +10028,7 ; -9904,7 +10043,7 ; -9930,7 +10069,7 ; -9939,7 +10078,7 ; -9949,7 +10088,7 ; -9959,23 +10098,23 ; -9983,7 +10122,7 ; -9992,7 +10131,7 ; -10001,39 +10140,39 ; -10041,40 +10180,40 ; -10082,7 +10221,7 ; -10117,9 +10256,9 ; -10154,7 +10293,7 ; -10171,7 +10310,7 ; -10199,7 +10338,7 ; -10208,7 +10347,7 ; -10217,7 +10356,7 ; -10227,7 +10366,7 ; -10237,23 +10376,23 ; -10263,23 +10402,23 ; -10287,7 +10426,7 ; -10296,7 +10435,7 ; -10305,52 +10444,52 ; -10358,59 +10497,59 ; -10418,40 +10557,40 ; -10459,7 +10598,7 ; -10496,7 +10635,7 ; -10522,7 +10661,7 ; -10531,7 +10670,7 ; -10548,7 +10687,7 ; -10576,7 +10715,7 ; -10585,7 +10724,7 ; -10594,7 +10733,7 ; -10604,7 +10743,7 ; -10614,23 +10753,23 ; -10640,23 +10779,23 ; -10664,7 +10803,7 ; -10673,7 +10812,7 ; -10682,52 +10821,52 ; -10735,59 +10874,59 ; -10795,40 +10934,40 ; -10836,7 +10975,7 ; -10874,7 +11013,7 ; -10901,12 +11040,12 ; -10915,7 +11054,7 ; -10934,7 +11073,7 ; -10964,7 +11103,7 ; -10973,7 +11112,7 ; -10982,7 +11121,7 ; -10991,7 +11130,7 ; -11001,7 +11140,7 ; -11011,23 +11150,23 ; -11037,23 +11176,23 ; -11063,23 +11202,23 ; -11088,14 +11227,14 ; -11104,7 +11243,7 ; -11113,65 +11252,65 ; -11179,59 +11318,59 ; -11239,59 +11378,59 ; -11299,40 +11438,40 ; -11341,14 +11480,14 ; -11385,7 +11524,7 ; -11414,7 +11553,7 ; -11429,7 +11568,7 ; -11455,7 +11594,7 ; -11464,7 +11603,7 ; -11474,7 +11613,7 ; -11484,23 +11623,23 ; -11508,7 +11647,7 ; -11517,7 +11656,7 ; -11526,39 +11665,39 ; -11566,40 +11705,40 ; -11607,7 +11746,7 ; -11643,7 +11782,7 ; -11669,7 +11808,7 ; -11678,7 +11817,7 ; -11695,7 +11834,7 ; -11723,7 +11862,7 ; -11732,7 +11871,7 ; -11741,7 +11880,7 ; -11751,7 +11890,7 ; -11761,23 +11900,23 ; -11787,23 +11926,23 ; -11812,14 +11951,14 ; -11828,7 +11967,7 ; -11837,52 +11976,52 ; -11890,59 +12029,59 ; -11950,40 +12089,40 ; -11992,14 +12131,14 ; -12034,7 +12173,7 ; -12059,7 +12198,7 ; -12072,7 +12211,7 ; -12092,7 +12231,7 ; -12100,7 +12239,7 ; -12131,7 +12270,7 ; -12160,7 +12299,7 ; -12175,7 +12314,7 ; -12201,7 +12340,7 ; -12210,7 +12349,7 ; -12220,7 +12359,7 ; -12230,23 +12369,23 ; -12254,7 +12393,7 ; -12263,7 +12402,7 ; -12272,39 +12411,39 ; -12312,40 +12451,40 ; -12353,7 +12492,7 ; -12389,7 +12528,7 ; -12415,7 +12554,7 ; -12424,7 +12563,7 ; -12441,7 +12580,7 ; -12469,7 +12608,7 ; -12478,7 +12617,7 ; -12487,7 +12626,7 ; -12497,7 +12636,7 ; -12507,23 +12646,23 ; -12531,7 +12670,7 ; -12540,7 +12679,7 ; -12549,52 +12688,52 ; -12602,40 +12741,40 ; -12643,7 +12782,7 ; -12679,7 +12818,7 ; -12708,7 +12847,7 ; -12723,7 +12862,7 ; -12749,7 +12888,7 ; -12758,7 +12897,7 ; -12768,7 +12907,7 ; -12778,23 +12917,23 ; -12802,7 +12941,7 ; -12811,7 +12950,7 ; -12820,39 +12959,39 ; -12860,40 +12999,40 ; -12901,7 +13040,7 ; -12936,7 +13075,7 ; -12965,7 +13104,7 ; -12980,7 +13119,7 ; -13006,7 +13145,7 ; -13015,7 +13154,7 ; -13025,7 +13164,7 ; -13035,23 +13174,23 ; -13059,7 +13198,7 ; -13068,7 +13207,7 ; -13077,39 +13216,39 ; -13117,40 +13256,40 ; -13158,7 +13297,7 ; -13193,7 +13332,7 ; -13222,7 +13361,7 ; -13237,7 +13376,7 ; -13263,7 +13402,7 ; -13272,7 +13411,7 ; -13282,7 +13421,7 ; -13292,23 +13431,23 ; -13316,7 +13455,7 ; -13325,7 +13464,7 ; -13334,39 +13473,39 ; -13374,40 +13513,40 ; -13415,7 +13554,7 ; -13450,10 +13589,10 ; -13490,7 +13629,7 ; -13507,7 +13646,7 ; -13535,7 +13674,7 ; -13544,7 +13683,7 ; -13553,7 +13692,7 ; -13563,7 +13702,7 ; -13573,23 +13712,23 ; -13597,7 +13736,7 ; -13606,7 +13745,7 ; -13615,52 +13754,52 ; -13668,40 +13807,40 ; -13709,7 +13848,7 ; -13745,10 +13884,10 ; -13785,7 +13924,7 ; -13802,7 +13941,7 ; -13830,7 +13969,7 ; -13839,7 +13978,7 ; -13848,7 +13987,7 ; -13858,7 +13997,7 ; -13868,23 +14007,23 ; -13892,7 +14031,7 ; -13901,7 +14040,7 ; -13910,52 +14049,52 ; -13963,40 +14102,40 ; -14004,7 +14143,7 ; -14040,10 +14179,10 ; -14080,7 +14219,7 ; -14097,7 +14236,7 ; -14125,7 +14264,7 ; -14134,7 +14273,7 ; -14143,7 +14282,7 ; -14153,7 +14292,7 ; -14163,23 +14302,23 ; -14187,7 +14326,7 ; -14196,7 +14335,7 ; -14205,52 +14344,52 ; -14258,40 +14397,40 ; -14299,7 +14438,7 ; -14335,10 +14474,10 ; -14375,7 +14514,7 ; -14392,7 +14531,7 ; -14420,7 +14559,7 ; -14429,7 +14568,7 ; -14438,7 +14577,7 ; -14448,7 +14587,7 ; -14458,23 +14597,23 ; -14482,7 +14621,7 ; -14491,7 +14630,7 ; -14500,52 +14639,52 ; -14553,40 +14692,40 ; -14594,7 +14733,7 ; -14629,9 +14768,9 ; -14662,7 +14801,7 ; -14677,7 +14816,7 ; -14703,7 +14842,7 ; -14712,7 +14851,7 ; -14722,7 +14861,7 ; -14732,23 +14871,23 ; -14756,7 +14895,7 ; -14765,7 +14904,7 ; -14774,39 +14913,39 ; -14814,40 +14953,40 ; -14855,7 +14994,7 ; -14891,7 +15030,7 ; -14917,7 +15056,7 ; -14926,7 +15065,7 ; -14943,7 +15082,7 ; -14971,7 +15110,7 ; -14980,7 +15119,7 ; -14989,7 +15128,7 ; -14999,7 +15138,7 ; -15009,23 +15148,23 ; -15035,23 +15174,23 ; -15059,7 +15198,7 ; -15068,7 +15207,7 ; -15077,52 +15216,52 ; -15130,58 +15269,58 ; -15189,40 +15328,40 ; -15230,7 +15369,7 ; -15268,7 +15407,7 ; -15295,12 +15434,12 ; -15309,7 +15448,7 ; -15328,7 +15467,7 ; -15358,7 +15497,7 ; -15367,7 +15506,7 ; -15376,7 +15515,7 ; -15385,7 +15524,7 ; -15395,7 +15534,7 ; -15405,23 +15544,23 ; -15431,23 +15570,23 ; -15457,23 +15596,23 ; -15482,14 +15621,14 ; -15498,7 +15637,7 ; -15507,63 +15646,63 ; -15571,57 +15710,57 ; -15629,57 +15768,57 ; -15687,40 +15826,40 ; -15729,14 +15868,14 ; -15774,7 +15913,7 ; -15800,7 +15939,7 ; -15809,7 +15948,7 ; -15826,7 +15965,7 ; -15854,7 +15993,7 ; -15863,7 +16002,7 ; -15872,7 +16011,7 ; -15882,7 +16021,7 ; -15892,23 +16031,23 ; -15918,22 +16057,22 ; -15943,23 +16082,23 ; -15967,7 +16106,7 ; -15976,7 +16115,7 ; -15985,50 +16124,50 ; -16036,57 +16175,57 ; -16094,57 +16233,57 ; -16152,40 +16291,40 ; -16193,7 +16332,7 ; -16230,7 +16369,7 ; -16256,7 +16395,7 ; -16265,7 +16404,7 ; -16282,7 +16421,7 ; -16310,7 +16449,7 ; -16319,7 +16458,7 ; -16328,7 +16467,7 ; -16338,7 +16477,7 ; -16348,23 +16487,23 ; -16374,22 +16513,22 ; -16399,23 +16538,23 ; -16424,14 +16563,14 ; -16440,7 +16579,7 ; -16449,50 +16588,50 ; -16500,57 +16639,57 ; -16558,57 +16697,57 ; -16616,40 +16755,40 ; -16658,14 +16797,14 ; -16700,9 +16839,9 ; -16733,7 +16872,7 ; -16748,7 +16887,7 ; -16774,7 +16913,7 ; -16783,7 +16922,7 ; -16793,66 +16932,66 ; -16860,7 +16999,7 ; -16869,7 +17008,7 ; -16878,37 +17017,37 ; -16916,59 +17055,59 ; -16976,40 +17115,40 ; -17017,7 +17156,7 ; -17052,7 +17191,7 ; -17081,7 +17220,7 ; -17096,7 +17235,7 ; -17122,7 +17261,7 ; -17131,7 +17270,7 ; -17141,7 +17280,7 ; -17151,23 +17290,23 ; -17175,7 +17314,7 ; -17184,7 +17323,7 ; -17193,39 +17332,39 ; -17233,40 +17372,40 ; -17274,7 +17413,7 ; -17309,7 +17448,7 ; -17338,7 +17477,7 ; -17353,7 +17492,7 ; -17379,7 +17518,7 ; -17388,7 +17527,7 ; -17398,7 +17537,7 ; -17408,23 +17547,23 ; -17434,23 +17573,23 ; -17458,7 +17597,7 ; -17467,7 +17606,7 ; -17476,39 +17615,39 ; -17516,59 +17655,59 ; -17576,40 +17715,40 ; -17617,7 +17756,7 ; -17654,7 +17793,7 ; -17681,12 +17820,12 ; -17695,7 +17834,7 ; -17714,7 +17853,7 ; -17745,7 +17884,7 ; -17754,7 +17893,7 ; -17763,7 +17902,7 ; -17772,7 +17911,7 ; -17782,122 +17921,122 ; -17906,14 +18045,14 ; -17922,7 +18061,7 ; -17931,63 +18070,63 ; -17995,57 +18134,57 ; -18053,57 +18192,57 ; -18111,62 +18250,62 ; -18174,11 +18313,11 ; -18186,40 +18325,40 ; -18228,14 +18367,14 ; -18273,7 +18412,7 ; -18302,7 +18441,7 ; -18317,7 +18456,7 ; -18343,7 +18482,7 ; -18352,7 +18491,7 ; -18362,7 +18501,7 ; -18372,23 +18511,23 ; -18398,23 +18537,23 ; -18422,7 +18561,7 ; -18431,7 +18570,7 ; -18440,39 +18579,39 ; -18480,59 +18619,59 ; -18540,40 +18679,40 ; -18581,7 +18720,7 ; -18617,7 +18756,7 ; -18643,7 +18782,7 ; -18652,7 +18791,7 ; -18669,7 +18808,7 ; -18708,24 +18847,24 ; -18733,24 +18872,24 ; -18758,7 +18897,7 ; -18768,14 +18907,14 ; -18783,7 +18922,7 ; -18795,63 +18934,63 ; -18859,63 +18998,63 ; -18928,14 +19067,14 ; -18947,120 +19086,120 ; -19069,35 +19208,35 ; -19105,19 +19244,19 ; -19130,7 +19269,7 ; -19146,15 +19285,15 ; -19164,7 +19303,7 ; -19172,7 +19311,7 ; -19182,36 +19321,36 ; -19219,7 +19358,7 ; -19227,19 +19366,19 ; -19250,25 +19389,25 ; -19319,7 +19458,7 ; -19345,7 +19484,7 ; -19354,7 +19493,7 ; -19365,13 +19504,13 ; -19407,30 +19546,30 ; -19439,7 +19578,7 ; -19449,23 +19588,23 ; -19475,16 +19614,16 ; -19494,7 +19633,7 ; -19504,16 +19643,16 ; -19527,21 +19666,21 ; -19549,19 +19688,19 ; -19569,14 +19708,14 ; -19586,7 +19725,7 ; -19595,7 +19734,7 ; -19604,7 +19743,7 ; -19615,7 +19754,7 ; -19624,7 +19763,7 ; -19633,7 +19772,7 ; -19643,7 +19782,7 ; -19652,11 +19791,11 ; -19665,7 +19804,7 ; -19675,7 +19814,7 ; -19687,7 +19826,7 ; -19698,7 +19837,7 ; -19708,7 +19847,7 ; -19720,7 +19859,7 ; -19730,7 +19869,7 ; -19773,7 +19912,7 ; -19802,7 +19941,7 ; -19817,7 +19956,7 ; -19854,30 +19993,30 ; -19886,7 +20025,7 ; -19896,16 +20035,16 ; -19915,7 +20054,7 ; -19925,16 +20064,16 ; -19948,21 +20087,21 ; -19970,24 +20109,24 ; -19995,14 +20134,14 ; -20012,7 +20151,7 ; -20021,7 +20160,7 ; -20030,7 +20169,7 ; -20039,7 +20178,7 ; -20050,7 +20189,7 ; -20059,7 +20198,7 ; -20069,7 +20208,7 ; -20078,7 +20217,7 ; -20088,7 +20227,7 ; -20097,11 +20236,11 ; -20111,7 +20250,7 ; -20121,7 +20260,7 ; -20131,7 +20270,7 ; -20173,7 +20312,7 ; -20200,36 +20339,36 ; -20237,35 +20376,35 ; -20273,7 +20412,7 ; -20284,7 +20423,7 ; -20293,40 +20432,40 ; -20339,7 +20478,7 ; -20350,7 +20489,7 ; -20359,23 +20498,23 ; -20415,7 +20554,7 ; -20436,19 +20575,19 ; -20459,28 +20598,28 ; -20490,24 +20629,24 ; -20516,27 +20655,27 ; -20811,43 +20950,40 ; -20935,21 +21071,25 ; -20996,6 +21136,7 ; -21032,6 +21173,7 ; -21084,8 +21226,8 ; -21095,168 +21237,168 ; -21264,11 +21406,11 ; -21277,1495 +21419,1523 ; -22855,8 +23025,8 ; -22876,953 +23046,965 ; -23832,49 +24014,49 ;",";typedef long (*__pyx_t_6mtrand_rk_discnmN)(rk_state *, long, long, long);static char __pyx_k_1[] = ""size is not compatible with inputs"";static char __pyx_k__empty[] = ""empty"";static char __pyx_k__allclose[] = ""allclose"";static char __pyx_k__negative_binomial[] = ""negative_binomial"";static PyObject *__pyx_kp_u_275;static PyObject *__pyx_n_s__gumbel;static PyObject *__pyx_n_s__normal;static PyObject *__pyx_int_1;static PyObject *__pyx_k_tuple_27;static PyObject *__pyx_k_tuple_141;static PyObject *__pyx_f_6mtrand_cont0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont1_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont1_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont1_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont1_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont1_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont1_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont1_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont1_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont1_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont1_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont1_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont2_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont2_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont2_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont2_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont2_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont2_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont2_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont2_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont2_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont2_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont2_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont3_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont3_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont3_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont3_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont3_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont3_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont3_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont3_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont3_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont3_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_cont3_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_disc0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_disc0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_disc0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_disc0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_disc0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_disc0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_disc0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_disc0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_disc0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_disc0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_disc0_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discnp_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discnp_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discnp_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discnp_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discnp_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discnp_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discnp_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discnp_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discnp_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discnp_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discnp_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnp_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discdd_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discdd_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discdd_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discdd_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discdd_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discdd_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discdd_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discdd_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discdd_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discdd_array_sc(rk_state *__pyx_v_state, __pyx;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discdd_array(rk_state *__pyx_v_state, __pyx_t_;static PyObject *__pyx_f_6mtrand_discnmN_array_sc(rk_state *__pyx_v_state, __py;static PyObject *__pyx_f_6mtrand_discnmN_array_sc(rk_state *__pyx_v_state, __py;static PyObject *__pyx_f_6mtrand_discnmN_array_sc(rk_state *__pyx_v_state, __py;static PyObject *__pyx_f_6mtrand_discnmN_array_sc(rk_state *__pyx_v_state, __py;static PyObject *__pyx_f_6mtrand_discnmN_array_sc(rk_state *__pyx_v_state, __py;static PyObject *__pyx_f_6mtrand_discnmN_array_sc(rk_state *__pyx_v_state, __py;static PyObject *__pyx_f_6mtrand_discnmN_array_sc(rk_state *__pyx_v_state, __py;static PyObject *__pyx_f_6mtrand_discnmN_array_sc(rk_state *__pyx_v_state, __py;static PyObject *__pyx_f_6mtrand_discnmN_array_sc(rk_state *__pyx_v_state, __py;static PyObject *__pyx_f_6mtrand_discnmN_array_sc(rk_state *__pyx_v_state, __py;static PyObject *__pyx_f_6mtrand_discnmN_array_sc(rk_state *__pyx_v_state, __py;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discnmN_array(rk_state *__pyx_v_state, __pyx_t;static PyObject *__pyx_f_6mtrand_discd_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_discd_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_discd_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_discd_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_discd_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_discd_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_discd_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_discd_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_discd_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_discd_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_discd_array_sc(rk_state *__pyx_v_state, __pyx_;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static PyObject *__pyx_f_6mtrand_discd_array(rk_state *__pyx_v_state, __pyx_t_6;static double __pyx_f_6mtrand_kahan_sum(double *__pyx_v_darr, npy_intp __pyx_v_;static double __pyx_f_6mtrand_kahan_sum(double *__pyx_v_darr, npy_intp __pyx_v_;static double __pyx_f_6mtrand_kahan_sum(double *__pyx_v_darr, npy_intp __pyx_v_;static double __pyx_f_6mtrand_kahan_sum(double *__pyx_v_darr, npy_intp __pyx_v_;static double __pyx_f_6mtrand_kahan_sum(double *__pyx_v_darr, npy_intp __pyx_v_;static double __pyx_f_6mtrand_kahan_sum(double *__pyx_v_darr, npy_intp __pyx_v_;static double __pyx_f_6mtrand_kahan_sum(double *__pyx_v_darr, npy_intp __pyx_v_;static double __pyx_f_6mtrand_kahan_sum(double *__pyx_v_darr, npy_intp __pyx_v_;static int __pyx_pw_6mtrand_11RandomState_1__init__(PyObject *__pyx_v_self, PyO;static int __pyx_pw_6mtrand_11RandomState_1__init__(PyObject *__pyx_v_self, PyO;static int __pyx_pw_6mtrand_11RandomState_1__init__(PyObject *__pyx_v_self, PyO;static int __pyx_pf_6mtrand_11RandomState___init__(struct __pyx_obj_6mtrand_Ran;static int __pyx_pf_6mtrand_11RandomState___init__(struct __pyx_obj_6mtrand_Ran;static void __pyx_pw_6mtrand_11RandomState_3__dealloc__(PyObject *__pyx_v_self;static void __pyx_pf_6mtrand_11RandomState_2__dealloc__(struct __pyx_obj_6mtran;static void __pyx_pf_6mtrand_11RandomState_2__dealloc__(struct __pyx_obj_6mtran;static void __pyx_pf_6mtrand_11RandomState_2__dealloc__(struct __pyx_obj_6mtran;static PyObject *__pyx_pw_6mtrand_11RandomState_5seed(PyObject *__pyx_v_self, P;static PyObject *__pyx_pw_6mtrand_11RandomState_5seed(PyObject *__pyx_v_self, P;static PyObject *__pyx_pw_6mtrand_11RandomState_5seed(PyObject *__pyx_v_self, P;static PyObject *__pyx_pf_6mtrand_11RandomState_4seed(struct __pyx_obj_6mtrand_;static PyObject *__pyx_pf_6mtrand_11RandomState_4seed(struct __pyx_obj_6mtrand_;static PyObject *__pyx_pf_6mtrand_11RandomState_4seed(struct __pyx_obj_6mtrand_;static PyObject *__pyx_pf_6mtrand_11RandomState_4seed(struct __pyx_obj_6mtrand_;static PyObject *__pyx_pw_6mtrand_11RandomState_7get_state(PyObject *__pyx_v_se;static PyObject *__pyx_pf_6mtrand_11RandomState_6get_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_6get_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_6get_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_6get_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_6get_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_6get_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_6get_state(struct __pyx_obj_6mt;static PyObject *__pyx_pw_6mtrand_11RandomState_9set_state(PyObject *__pyx_v_se;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_8set_state(struct __pyx_obj_6mt;static PyObject *__pyx_pw_6mtrand_11RandomState_11__getstate__(PyObject *__pyx_;static PyObject *__pyx_pf_6mtrand_11RandomState_10__getstate__(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_10__getstate__(struct __pyx_obj;static PyObject *__pyx_pw_6mtrand_11RandomState_13__setstate__(PyObject *__pyx_;static PyObject *__pyx_pf_6mtrand_11RandomState_12__setstate__(struct __pyx_obj;static PyObject *__pyx_pw_6mtrand_11RandomState_15__reduce__(PyObject *__pyx_v_;static PyObject *__pyx_pf_6mtrand_11RandomState_14__reduce__(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_14__reduce__(struct __pyx_obj_6;static PyObject *__pyx_pw_6mtrand_11RandomState_17random_sample(PyObject *__pyx;static PyObject *__pyx_pw_6mtrand_11RandomState_17random_sample(PyObject *__pyx;static PyObject *__pyx_pw_6mtrand_11RandomState_17random_sample(PyObject *__pyx;static PyObject *__pyx_pf_6mtrand_11RandomState_16random_sample(struct __pyx_ob;static PyObject *__pyx_pf_6mtrand_11RandomState_16random_sample(struct __pyx_ob;static PyObject *__pyx_pw_6mtrand_11RandomState_19tomaxint(PyObject *__pyx_v_se;static PyObject *__pyx_pw_6mtrand_11RandomState_19tomaxint(PyObject *__pyx_v_se;static PyObject *__pyx_pw_6mtrand_11RandomState_19tomaxint(PyObject *__pyx_v_se;static PyObject *__pyx_pf_6mtrand_11RandomState_18tomaxint(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_18tomaxint(struct __pyx_obj_6mt;static PyObject *__pyx_pw_6mtrand_11RandomState_21randint(PyObject *__pyx_v_sel;static PyObject *__pyx_pw_6mtrand_11RandomState_21randint(PyObject *__pyx_v_sel;static PyObject *__pyx_pw_6mtrand_11RandomState_21randint(PyObject *__pyx_v_sel;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_20randint(struct __pyx_obj_6mtr;static PyObject *__pyx_pw_6mtrand_11RandomState_23bytes(PyObject *__pyx_v_self;static PyObject *__pyx_pw_6mtrand_11RandomState_23bytes(PyObject *__pyx_v_self;static PyObject *__pyx_pf_6mtrand_11RandomState_22bytes(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_22bytes(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_22bytes(struct __pyx_obj_6mtran;static PyObject *__pyx_pw_6mtrand_11RandomState_25choice(PyObject *__pyx_v_self;static PyObject *__pyx_pw_6mtrand_11RandomState_25choice(PyObject *__pyx_v_self;static PyObject *__pyx_pw_6mtrand_11RandomState_25choice(PyObject *__pyx_v_self;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_24choice(struct __pyx_obj_6mtra;static PyObject *__pyx_pw_6mtrand_11RandomState_27uniform(PyObject *__pyx_v_sel;static PyObject *__pyx_pw_6mtrand_11RandomState_27uniform(PyObject *__pyx_v_sel;static PyObject *__pyx_pw_6mtrand_11RandomState_27uniform(PyObject *__pyx_v_sel;static PyObject *__pyx_pf_6mtrand_11RandomState_26uniform(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_26uniform(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_26uniform(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_26uniform(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_26uniform(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_26uniform(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_26uniform(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_26uniform(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_26uniform(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_26uniform(struct __pyx_obj_6mtr;static PyObject *__pyx_pw_6mtrand_11RandomState_29rand(PyObject *__pyx_v_self, ;static PyObject *__pyx_pf_6mtrand_11RandomState_28rand(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_28rand(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_28rand(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_28rand(struct __pyx_obj_6mtrand;static PyObject *__pyx_pw_6mtrand_11RandomState_31randn(PyObject *__pyx_v_self;static PyObject *__pyx_pf_6mtrand_11RandomState_30randn(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_30randn(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_30randn(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_30randn(struct __pyx_obj_6mtran;static PyObject *__pyx_pw_6mtrand_11RandomState_33random_integers(PyObject *__p;static PyObject *__pyx_pw_6mtrand_11RandomState_33random_integers(PyObject *__p;static PyObject *__pyx_pw_6mtrand_11RandomState_33random_integers(PyObject *__p;static PyObject *__pyx_pf_6mtrand_11RandomState_32random_integers(struct __pyx_;static PyObject *__pyx_pf_6mtrand_11RandomState_32random_integers(struct __pyx_;static PyObject *__pyx_pf_6mtrand_11RandomState_32random_integers(struct __pyx_;static PyObject *__pyx_pf_6mtrand_11RandomState_32random_integers(struct __pyx_;static PyObject *__pyx_pf_6mtrand_11RandomState_32random_integers(struct __pyx_;static PyObject *__pyx_pf_6mtrand_11RandomState_32random_integers(struct __pyx_;static PyObject *__pyx_pw_6mtrand_11RandomState_35standard_normal(PyObject *__p;static PyObject *__pyx_pw_6mtrand_11RandomState_35standard_normal(PyObject *__p;static PyObject *__pyx_pw_6mtrand_11RandomState_35standard_normal(PyObject *__p;static PyObject *__pyx_pf_6mtrand_11RandomState_34standard_normal(struct __pyx_;static PyObject *__pyx_pf_6mtrand_11RandomState_34standard_normal(struct __pyx_;static PyObject *__pyx_pw_6mtrand_11RandomState_37normal(PyObject *__pyx_v_self;static PyObject *__pyx_pw_6mtrand_11RandomState_37normal(PyObject *__pyx_v_self;static PyObject *__pyx_pw_6mtrand_11RandomState_37normal(PyObject *__pyx_v_self;static PyObject *__pyx_pf_6mtrand_11RandomState_36normal(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_36normal(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_36normal(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_36normal(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_36normal(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_36normal(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_36normal(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_36normal(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_36normal(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_36normal(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_36normal(struct __pyx_obj_6mtra;static PyObject *__pyx_pw_6mtrand_11RandomState_39beta(PyObject *__pyx_v_self, ;static PyObject *__pyx_pw_6mtrand_11RandomState_39beta(PyObject *__pyx_v_self, ;static PyObject *__pyx_pw_6mtrand_11RandomState_39beta(PyObject *__pyx_v_self, ;static PyObject *__pyx_pw_6mtrand_11RandomState_39beta(PyObject *__pyx_v_self, ;static PyObject *__pyx_pf_6mtrand_11RandomState_38beta(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_38beta(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_38beta(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_38beta(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_38beta(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_38beta(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_38beta(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_38beta(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_38beta(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_38beta(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_38beta(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_38beta(struct __pyx_obj_6mtrand;static PyObject *__pyx_pw_6mtrand_11RandomState_41exponential(PyObject *__pyx_v;static PyObject *__pyx_pw_6mtrand_11RandomState_41exponential(PyObject *__pyx_v;static PyObject *__pyx_pw_6mtrand_11RandomState_41exponential(PyObject *__pyx_v;static PyObject *__pyx_pf_6mtrand_11RandomState_40exponential(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_40exponential(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_40exponential(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_40exponential(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_40exponential(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_40exponential(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_40exponential(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_40exponential(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_40exponential(struct __pyx_obj_;static PyObject *__pyx_pw_6mtrand_11RandomState_43standard_exponential(PyObjec;static PyObject *__pyx_pw_6mtrand_11RandomState_43standard_exponential(PyObjec;static PyObject *__pyx_pw_6mtrand_11RandomState_43standard_exponential(PyObjec;static PyObject *__pyx_pf_6mtrand_11RandomState_42standard_exponential(struct _;static PyObject *__pyx_pf_6mtrand_11RandomState_42standard_exponential(struct _;static PyObject *__pyx_pw_6mtrand_11RandomState_45standard_gamma(PyObject *__py;static PyObject *__pyx_pw_6mtrand_11RandomState_45standard_gamma(PyObject *__py;static PyObject *__pyx_pw_6mtrand_11RandomState_45standard_gamma(PyObject *__py;static PyObject *__pyx_pf_6mtrand_11RandomState_44standard_gamma(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_44standard_gamma(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_44standard_gamma(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_44standard_gamma(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_44standard_gamma(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_44standard_gamma(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_44standard_gamma(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_44standard_gamma(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_44standard_gamma(struct __pyx_o;static PyObject *__pyx_pw_6mtrand_11RandomState_47gamma(PyObject *__pyx_v_self;static PyObject *__pyx_pw_6mtrand_11RandomState_47gamma(PyObject *__pyx_v_self;static PyObject *__pyx_pw_6mtrand_11RandomState_47gamma(PyObject *__pyx_v_self;static PyObject *__pyx_pf_6mtrand_11RandomState_46gamma(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_46gamma(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_46gamma(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_46gamma(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_46gamma(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_46gamma(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_46gamma(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_46gamma(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_46gamma(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_46gamma(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_46gamma(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_46gamma(struct __pyx_obj_6mtran;static PyObject *__pyx_pw_6mtrand_11RandomState_49f(PyObject *__pyx_v_self, PyO;static PyObject *__pyx_pw_6mtrand_11RandomState_49f(PyObject *__pyx_v_self, PyO;static PyObject *__pyx_pw_6mtrand_11RandomState_49f(PyObject *__pyx_v_self, PyO;static PyObject *__pyx_pw_6mtrand_11RandomState_49f(PyObject *__pyx_v_self, PyO;static PyObject *__pyx_pf_6mtrand_11RandomState_48f(struct __pyx_obj_6mtrand_Ra;static PyObject *__pyx_pf_6mtrand_11RandomState_48f(struct __pyx_obj_6mtrand_Ra;static PyObject *__pyx_pf_6mtrand_11RandomState_48f(struct __pyx_obj_6mtrand_Ra;static PyObject *__pyx_pf_6mtrand_11RandomState_48f(struct __pyx_obj_6mtrand_Ra;static PyObject *__pyx_pf_6mtrand_11RandomState_48f(struct __pyx_obj_6mtrand_Ra;static PyObject *__pyx_pf_6mtrand_11RandomState_48f(struct __pyx_obj_6mtrand_Ra;static PyObject *__pyx_pf_6mtrand_11RandomState_48f(struct __pyx_obj_6mtrand_Ra;static PyObject *__pyx_pf_6mtrand_11RandomState_48f(struct __pyx_obj_6mtrand_Ra;static PyObject *__pyx_pf_6mtrand_11RandomState_48f(struct __pyx_obj_6mtrand_Ra;static PyObject *__pyx_pf_6mtrand_11RandomState_48f(struct __pyx_obj_6mtrand_Ra;static PyObject *__pyx_pf_6mtrand_11RandomState_48f(struct __pyx_obj_6mtrand_Ra;static PyObject *__pyx_pf_6mtrand_11RandomState_48f(struct __pyx_obj_6mtrand_Ra;static PyObject *__pyx_pw_6mtrand_11RandomState_51noncentral_f(PyObject *__pyx_;static PyObject *__pyx_pw_6mtrand_11RandomState_51noncentral_f(PyObject *__pyx_;static PyObject *__pyx_pw_6mtrand_11RandomState_51noncentral_f(PyObject *__pyx_;static PyObject *__pyx_pw_6mtrand_11RandomState_51noncentral_f(PyObject *__pyx_;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_50noncentral_f(struct __pyx_obj;static PyObject *__pyx_pw_6mtrand_11RandomState_53chisquare(PyObject *__pyx_v_s;static PyObject *__pyx_pw_6mtrand_11RandomState_53chisquare(PyObject *__pyx_v_s;static PyObject *__pyx_pw_6mtrand_11RandomState_53chisquare(PyObject *__pyx_v_s;static PyObject *__pyx_pf_6mtrand_11RandomState_52chisquare(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_52chisquare(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_52chisquare(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_52chisquare(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_52chisquare(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_52chisquare(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_52chisquare(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_52chisquare(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_52chisquare(struct __pyx_obj_6m;static PyObject *__pyx_pw_6mtrand_11RandomState_55noncentral_chisquare(PyObjec;static PyObject *__pyx_pw_6mtrand_11RandomState_55noncentral_chisquare(PyObjec;static PyObject *__pyx_pw_6mtrand_11RandomState_55noncentral_chisquare(PyObjec;static PyObject *__pyx_pw_6mtrand_11RandomState_55noncentral_chisquare(PyObjec;static PyObject *__pyx_pf_6mtrand_11RandomState_54noncentral_chisquare(struct _;static PyObject *__pyx_pf_6mtrand_11RandomState_54noncentral_chisquare(struct _;static PyObject *__pyx_pf_6mtrand_11RandomState_54noncentral_chisquare(struct _;static PyObject *__pyx_pf_6mtrand_11RandomState_54noncentral_chisquare(struct _;static PyObject *__pyx_pf_6mtrand_11RandomState_54noncentral_chisquare(struct _;static PyObject *__pyx_pf_6mtrand_11RandomState_54noncentral_chisquare(struct _;static PyObject *__pyx_pf_6mtrand_11RandomState_54noncentral_chisquare(struct _;static PyObject *__pyx_pf_6mtrand_11RandomState_54noncentral_chisquare(struct _;static PyObject *__pyx_pf_6mtrand_11RandomState_54noncentral_chisquare(struct _;static PyObject *__pyx_pf_6mtrand_11RandomState_54noncentral_chisquare(struct _;static PyObject *__pyx_pf_6mtrand_11RandomState_54noncentral_chisquare(struct _;static PyObject *__pyx_pf_6mtrand_11RandomState_54noncentral_chisquare(struct _;static PyObject *__pyx_pw_6mtrand_11RandomState_57standard_cauchy(PyObject *__p;static PyObject *__pyx_pw_6mtrand_11RandomState_57standard_cauchy(PyObject *__p;static PyObject *__pyx_pw_6mtrand_11RandomState_57standard_cauchy(PyObject *__p;static PyObject *__pyx_pf_6mtrand_11RandomState_56standard_cauchy(struct __pyx_;static PyObject *__pyx_pf_6mtrand_11RandomState_56standard_cauchy(struct __pyx_;static PyObject *__pyx_pw_6mtrand_11RandomState_59standard_t(PyObject *__pyx_v_;static PyObject *__pyx_pw_6mtrand_11RandomState_59standard_t(PyObject *__pyx_v_;static PyObject *__pyx_pw_6mtrand_11RandomState_59standard_t(PyObject *__pyx_v_;static PyObject *__pyx_pf_6mtrand_11RandomState_58standard_t(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_58standard_t(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_58standard_t(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_58standard_t(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_58standard_t(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_58standard_t(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_58standard_t(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_58standard_t(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_58standard_t(struct __pyx_obj_6;static PyObject *__pyx_pw_6mtrand_11RandomState_61vonmises(PyObject *__pyx_v_se;static PyObject *__pyx_pw_6mtrand_11RandomState_61vonmises(PyObject *__pyx_v_se;static PyObject *__pyx_pw_6mtrand_11RandomState_61vonmises(PyObject *__pyx_v_se;static PyObject *__pyx_pw_6mtrand_11RandomState_61vonmises(PyObject *__pyx_v_se;static PyObject *__pyx_pf_6mtrand_11RandomState_60vonmises(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_60vonmises(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_60vonmises(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_60vonmises(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_60vonmises(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_60vonmises(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_60vonmises(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_60vonmises(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_60vonmises(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_60vonmises(struct __pyx_obj_6mt;static PyObject *__pyx_pw_6mtrand_11RandomState_63pareto(PyObject *__pyx_v_self;static PyObject *__pyx_pw_6mtrand_11RandomState_63pareto(PyObject *__pyx_v_self;static PyObject *__pyx_pw_6mtrand_11RandomState_63pareto(PyObject *__pyx_v_self;static PyObject *__pyx_pf_6mtrand_11RandomState_62pareto(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_62pareto(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_62pareto(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_62pareto(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_62pareto(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_62pareto(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_62pareto(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_62pareto(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_62pareto(struct __pyx_obj_6mtra;static PyObject *__pyx_pw_6mtrand_11RandomState_65weibull(PyObject *__pyx_v_sel;static PyObject *__pyx_pw_6mtrand_11RandomState_65weibull(PyObject *__pyx_v_sel;static PyObject *__pyx_pw_6mtrand_11RandomState_65weibull(PyObject *__pyx_v_sel;static PyObject *__pyx_pf_6mtrand_11RandomState_64weibull(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_64weibull(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_64weibull(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_64weibull(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_64weibull(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_64weibull(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_64weibull(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_64weibull(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_64weibull(struct __pyx_obj_6mtr;static PyObject *__pyx_pw_6mtrand_11RandomState_67power(PyObject *__pyx_v_self;static PyObject *__pyx_pw_6mtrand_11RandomState_67power(PyObject *__pyx_v_self;static PyObject *__pyx_pw_6mtrand_11RandomState_67power(PyObject *__pyx_v_self;static PyObject *__pyx_pf_6mtrand_11RandomState_66power(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_66power(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_66power(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_66power(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_66power(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_66power(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_66power(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_66power(struct __pyx_obj_6mtran;static PyObject *__pyx_pf_6mtrand_11RandomState_66power(struct __pyx_obj_6mtran;static PyObject *__pyx_pw_6mtrand_11RandomState_69laplace(PyObject *__pyx_v_sel;static PyObject *__pyx_pw_6mtrand_11RandomState_69laplace(PyObject *__pyx_v_sel;static PyObject *__pyx_pw_6mtrand_11RandomState_69laplace(PyObject *__pyx_v_sel;static PyObject *__pyx_pf_6mtrand_11RandomState_68laplace(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_68laplace(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_68laplace(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_68laplace(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_68laplace(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_68laplace(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_68laplace(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_68laplace(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_68laplace(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_68laplace(struct __pyx_obj_6mtr;static PyObject *__pyx_pw_6mtrand_11RandomState_71gumbel(PyObject *__pyx_v_self;static PyObject *__pyx_pw_6mtrand_11RandomState_71gumbel(PyObject *__pyx_v_self;static PyObject *__pyx_pw_6mtrand_11RandomState_71gumbel(PyObject *__pyx_v_self;static PyObject *__pyx_pf_6mtrand_11RandomState_70gumbel(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_70gumbel(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_70gumbel(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_70gumbel(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_70gumbel(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_70gumbel(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_70gumbel(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_70gumbel(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_70gumbel(struct __pyx_obj_6mtra;static PyObject *__pyx_pf_6mtrand_11RandomState_70gumbel(struct __pyx_obj_6mtra;static PyObject *__pyx_pw_6mtrand_11RandomState_73logistic(PyObject *__pyx_v_se;static PyObject *__pyx_pw_6mtrand_11RandomState_73logistic(PyObject *__pyx_v_se;static PyObject *__pyx_pw_6mtrand_11RandomState_73logistic(PyObject *__pyx_v_se;static PyObject *__pyx_pf_6mtrand_11RandomState_72logistic(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_72logistic(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_72logistic(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_72logistic(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_72logistic(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_72logistic(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_72logistic(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_72logistic(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_72logistic(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_72logistic(struct __pyx_obj_6mt;static PyObject *__pyx_pw_6mtrand_11RandomState_75lognormal(PyObject *__pyx_v_s;static PyObject *__pyx_pw_6mtrand_11RandomState_75lognormal(PyObject *__pyx_v_s;static PyObject *__pyx_pw_6mtrand_11RandomState_75lognormal(PyObject *__pyx_v_s;static PyObject *__pyx_pf_6mtrand_11RandomState_74lognormal(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_74lognormal(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_74lognormal(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_74lognormal(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_74lognormal(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_74lognormal(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_74lognormal(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_74lognormal(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_74lognormal(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_74lognormal(struct __pyx_obj_6m;static PyObject *__pyx_pw_6mtrand_11RandomState_77rayleigh(PyObject *__pyx_v_se;static PyObject *__pyx_pw_6mtrand_11RandomState_77rayleigh(PyObject *__pyx_v_se;static PyObject *__pyx_pw_6mtrand_11RandomState_77rayleigh(PyObject *__pyx_v_se;static PyObject *__pyx_pf_6mtrand_11RandomState_76rayleigh(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_76rayleigh(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_76rayleigh(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_76rayleigh(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_76rayleigh(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_76rayleigh(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_76rayleigh(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_76rayleigh(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_76rayleigh(struct __pyx_obj_6mt;static PyObject *__pyx_pw_6mtrand_11RandomState_79wald(PyObject *__pyx_v_self, ;static PyObject *__pyx_pw_6mtrand_11RandomState_79wald(PyObject *__pyx_v_self, ;static PyObject *__pyx_pw_6mtrand_11RandomState_79wald(PyObject *__pyx_v_self, ;static PyObject *__pyx_pw_6mtrand_11RandomState_79wald(PyObject *__pyx_v_self, ;static PyObject *__pyx_pf_6mtrand_11RandomState_78wald(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_78wald(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_78wald(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_78wald(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_78wald(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_78wald(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_78wald(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_78wald(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_78wald(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_78wald(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_78wald(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_78wald(struct __pyx_obj_6mtrand;static PyObject *__pyx_pw_6mtrand_11RandomState_81triangular(PyObject *__pyx_v_;static PyObject *__pyx_pw_6mtrand_11RandomState_81triangular(PyObject *__pyx_v_;static PyObject *__pyx_pw_6mtrand_11RandomState_81triangular(PyObject *__pyx_v_;static PyObject *__pyx_pw_6mtrand_11RandomState_81triangular(PyObject *__pyx_v_;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_80triangular(struct __pyx_obj_6;static PyObject *__pyx_pw_6mtrand_11RandomState_83binomial(PyObject *__pyx_v_se;static PyObject *__pyx_pw_6mtrand_11RandomState_83binomial(PyObject *__pyx_v_se;static PyObject *__pyx_pw_6mtrand_11RandomState_83binomial(PyObject *__pyx_v_se;static PyObject *__pyx_pw_6mtrand_11RandomState_83binomial(PyObject *__pyx_v_se;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_82binomial(struct __pyx_obj_6mt;static PyObject *__pyx_pw_6mtrand_11RandomState_85negative_binomial(PyObject *_;static PyObject *__pyx_pw_6mtrand_11RandomState_85negative_binomial(PyObject *_;static PyObject *__pyx_pw_6mtrand_11RandomState_85negative_binomial(PyObject *_;static PyObject *__pyx_pw_6mtrand_11RandomState_85negative_binomial(PyObject *_;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pf_6mtrand_11RandomState_84negative_binomial(struct __py;static PyObject *__pyx_pw_6mtrand_11RandomState_87poisson(PyObject *__pyx_v_sel;static PyObject *__pyx_pw_6mtrand_11RandomState_87poisson(PyObject *__pyx_v_sel;static PyObject *__pyx_pw_6mtrand_11RandomState_87poisson(PyObject *__pyx_v_sel;static PyObject *__pyx_pf_6mtrand_11RandomState_86poisson(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_86poisson(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_86poisson(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_86poisson(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_86poisson(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_86poisson(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_86poisson(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_86poisson(struct __pyx_obj_6mtr;static PyObject *__pyx_pf_6mtrand_11RandomState_86poisson(struct __pyx_obj_6mtr;static PyObject *__pyx_pw_6mtrand_11RandomState_89zipf(PyObject *__pyx_v_self, ;static PyObject *__pyx_pw_6mtrand_11RandomState_89zipf(PyObject *__pyx_v_self, ;static PyObject *__pyx_pw_6mtrand_11RandomState_89zipf(PyObject *__pyx_v_self, ;static PyObject *__pyx_pf_6mtrand_11RandomState_88zipf(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_88zipf(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_88zipf(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_88zipf(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_88zipf(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_88zipf(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_88zipf(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_88zipf(struct __pyx_obj_6mtrand;static PyObject *__pyx_pf_6mtrand_11RandomState_88zipf(struct __pyx_obj_6mtrand;static PyObject *__pyx_pw_6mtrand_11RandomState_91geometric(PyObject *__pyx_v_s;static PyObject *__pyx_pw_6mtrand_11RandomState_91geometric(PyObject *__pyx_v_s;static PyObject *__pyx_pw_6mtrand_11RandomState_91geometric(PyObject *__pyx_v_s;static PyObject *__pyx_pf_6mtrand_11RandomState_90geometric(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_90geometric(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_90geometric(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_90geometric(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_90geometric(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_90geometric(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_90geometric(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_90geometric(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_90geometric(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_90geometric(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_90geometric(struct __pyx_obj_6m;static PyObject *__pyx_pw_6mtrand_11RandomState_93hypergeometric(PyObject *__py;static PyObject *__pyx_pw_6mtrand_11RandomState_93hypergeometric(PyObject *__py;static PyObject *__pyx_pw_6mtrand_11RandomState_93hypergeometric(PyObject *__py;static PyObject *__pyx_pw_6mtrand_11RandomState_93hypergeometric(PyObject *__py;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pf_6mtrand_11RandomState_92hypergeometric(struct __pyx_o;static PyObject *__pyx_pw_6mtrand_11RandomState_95logseries(PyObject *__pyx_v_s;static PyObject *__pyx_pw_6mtrand_11RandomState_95logseries(PyObject *__pyx_v_s;static PyObject *__pyx_pw_6mtrand_11RandomState_95logseries(PyObject *__pyx_v_s;static PyObject *__pyx_pf_6mtrand_11RandomState_94logseries(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_94logseries(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_94logseries(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_94logseries(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_94logseries(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_94logseries(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_94logseries(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_94logseries(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_94logseries(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_94logseries(struct __pyx_obj_6m;static PyObject *__pyx_pf_6mtrand_11RandomState_94logseries(struct __pyx_obj_6m;static PyObject *__pyx_pw_6mtrand_11RandomState_97multivariate_normal(PyObject ;static PyObject *__pyx_pw_6mtrand_11RandomState_97multivariate_normal(PyObject ;static PyObject *__pyx_pw_6mtrand_11RandomState_97multivariate_normal(PyObject ;static PyObject *__pyx_pw_6mtrand_11RandomState_97multivariate_normal(PyObject ;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pf_6mtrand_11RandomState_96multivariate_normal(struct __;static PyObject *__pyx_pw_6mtrand_11RandomState_99multinomial(PyObject *__pyx_v;static PyObject *__pyx_pw_6mtrand_11RandomState_99multinomial(PyObject *__pyx_v;static PyObject *__pyx_pw_6mtrand_11RandomState_99multinomial(PyObject *__pyx_v;static PyObject *__pyx_pw_6mtrand_11RandomState_99multinomial(PyObject *__pyx_v;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pf_6mtrand_11RandomState_98multinomial(struct __pyx_obj_;static PyObject *__pyx_pw_6mtrand_11RandomState_101dirichlet(PyObject *__pyx_v_;static PyObject *__pyx_pw_6mtrand_11RandomState_101dirichlet(PyObject *__pyx_v_;static PyObject *__pyx_pw_6mtrand_11RandomState_101dirichlet(PyObject *__pyx_v_;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pf_6mtrand_11RandomState_100dirichlet(struct __pyx_obj_6;static PyObject *__pyx_pw_6mtrand_11RandomState_103shuffle(PyObject *__pyx_v_se;static PyObject *__pyx_pf_6mtrand_11RandomState_102shuffle(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_102shuffle(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_102shuffle(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_102shuffle(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_102shuffle(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_102shuffle(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_102shuffle(struct __pyx_obj_6mt;static PyObject *__pyx_pf_6mtrand_11RandomState_102shuffle(struct __pyx_obj_6mt;static PyObject *__pyx_pw_6mtrand_11RandomState_105permutation(PyObject *__pyx_;static PyObject *__pyx_pf_6mtrand_11RandomState_104permutation(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_104permutation(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_104permutation(struct __pyx_obj;static PyObject *__pyx_pf_6mtrand_11RandomState_104permutation(struct __pyx_obj;static struct PyModuleDef __pyx_moduledef = ;static __Pyx_StringTabEntry __pyx_string_tab[] = ;static __Pyx_StringTabEntry __pyx_string_tab[] = ;static __Pyx_StringTabEntry __pyx_string_tab[] = ;static __Pyx_StringTabEntry __pyx_string_tab[] = ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;static int __Pyx_InitCachedConstants(void) ;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;PyMODINIT_FUNC PyInit_mtrand(void;"
2988,4,1d04300, Eric Moore <ewm@redtetrahedron.org>," Thu, 14 Feb 2013 22:45:39 -0500",ct: [PATCH 1/4] BUG: gh-2687 make multiarray dot method accept out array and keyword args.,2,16,5,numpy/core/src/multiarray/methods.c,[u'13'],8,5," -1847,10 +1847,11 ; -1862,8 +1863,10 ; -2222,7 +2225,7 ;","array_cumprod(PyArrayObject *self, PyObject *args, PyObject *kwds;array_dot(PyArrayObject *self, PyObject *args, PyObject *kwds;NPY_NO_EXPORT PyMethodDef array_methods[] = ;"
2988,4,1d04300, Eric Moore <ewm@redtetrahedron.org>," Thu, 14 Feb 2013 22:45:39 -0500",ct: [PATCH 1/4] BUG: gh-2687 make multiarray dot method accept out array and keyword args.,2,16,5,numpy/core/tests/test_multiarray.py,[u'8'],8,0," -902,6 +902,14 ;",def test_dot(self);
2988,4,914294a, Eric Moore <ewm@redtetrahedron.org>," Fri, 15 Feb 2013 09:52:16 -0500",ct: [PATCH 2/4] FIX: use PyObject_CallMethodObjArgs in array_dotand make added comments in test_multiarray.py helpful.,2,9,4,numpy/core/src/multiarray/methods.c,[u'9'],6,3," -1847,7 +1847,7 ; -1863,10 +1863,13 ;","array_cumprod(PyArrayObject *self, PyObject *args, PyObject *kwds;array_dot(PyArrayObject *self, PyObject *args, PyObject *kwds;"
2988,4,914294a, Eric Moore <ewm@redtetrahedron.org>," Fri, 15 Feb 2013 09:52:16 -0500",ct: [PATCH 2/4] FIX: use PyObject_CallMethodObjArgs in array_dotand make added comments in test_multiarray.py helpful.,2,9,4,numpy/core/tests/test_multiarray.py,[u'4'],3,1," -902,10 +902,12 ;",def test_dot(self);
2988,4,bc60223, Eric Moore <ewm@redtetrahedron.org>," Fri, 15 Feb 2013 11:53:21 -0500",ct: [PATCH 3/4] BUG: PyString_FromString isn't py3 compatible.Use PyUnicode_FromString instead.,1,0,0,numpy/core/src/multiarray/methods.c,[u'2'],1,1," -1863,7 +1863,7 ;","array_dot(PyArrayObject *self, PyObject *args, PyObject *kwds;"
2988,4,eb5de87, Eric Moore <ewm@redtetrahedron.org>," Fri, 15 Feb 2013 15:01:55 -0500",ct: [PATCH 4/4] BUG: use the PyUString_FromString macro for Py3 compat instead.,1,0,0,numpy/core/src/multiarray/methods.c,[u'2'],1,1," -1863,7 +1863,7 ;","array_dot(PyArrayObject *self, PyObject *args, PyObject *kwds;"
2985,2,ead4a95, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 25 Jan 2013 19:36:35 +0100","ct: [PATCH 1/2] BUG: Fix dtypes in sorting functions to npy_intpSome of the iteration variables were int, causing sorts to fail for largearrays. Fixes github issue 427.",1,8,8,numpy/core/src/multiarray/item_selection.c,[u'16'],8,8," -797,10 +797,10 ; -954,7 +954,8 ; -1210,13 +1211,12 ;","_new_argsort(PyArrayObject *op, int axis, NPY_SORTKIND which;PyArray_Sort(PyArrayObject *op, int axis, NPY_SORTKIND which;PyArray_LexSort(PyObject *sort_keys, int axis;"
2985,2,0a343f3, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 10 Feb 2013 01:18:50 +0100","ct: [PATCH 2/2] BUG: Fix reporting of memory error inside sortingPyDataMem_NEW was not checked for error and the occurance oferrors not returned correctly in new_sort. Also for PyArray_LexSortand new_argsort it should now raise MemoryError correctly.This is done by setting PyErr_NoMemory() when no error is alreadypresent, as the low level sorting can only fail for this reason.",2,28,6,numpy/core/src/multiarray/item_selection.c,[u'29'],28,1," -752,6 +752,9 ; -785,9 +788,11 ; -834,7 +839,14 ; -880,6 +892,10 ; -1333,7 +1349,14 ; -1402,6 +1425,10 ;","_new_sort(PyArrayObject *op, int axis, NPY_SORTKIND which;_new_sort(PyArrayObject *op, int axis, NPY_SORTKIND which;_new_argsort(PyArrayObject *op, int axis, NPY_SORTKIND which;_new_argsort(PyArrayObject *op, int axis, NPY_SORTKIND which;PyArray_LexSort(PyObject *sort_keys, int axis;PyArray_LexSort(PyObject *sort_keys, int axis;"
2985,2,0a343f3, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 10 Feb 2013 01:18:50 +0100","ct: [PATCH 2/2] BUG: Fix reporting of memory error inside sortingPyDataMem_NEW was not checked for error and the occurance oferrors not returned correctly in new_sort. Also for PyArray_LexSortand new_argsort it should now raise MemoryError correctly.This is done by setting PyErr_NoMemory() when no error is alreadypresent, as the low level sorting can only fail for this reason.",2,28,6,numpy/core/src/npysort/mergesort.c.src,[u'5'],0,5," -112,7 +112,6 ; -176,7 +175,6 ; -259,13 +257,11 ; -335,7 +331,6 ;","mergesort_@suff@(@type@ *start, npy_intp num, void *NOT_USED;amergesort_@suff@(@type@ *v, npy_intp *tosort, npy_intp num, void *NOT_USED;mergesort_@suff@(@type@ *start, npy_intp num, PyArrayObject *arr;amergesort_@suff@(@type@ *v, npy_intp *tosort, npy_intp num, PyArrayObject *arr;"
2984,2,9448491, Charles Harris <charlesr.harris@gmail.com>," Wed, 23 Jan 2013 20:04:05 -0700","ct: [PATCH 1/2] BUG: gh-2790, fix column scaling in polynomial package least squares.The columns should be scaled using their 2-norm, but in the complex casethat was being incorrectly computed as the square root of the sum of thesquared elements rather than as the square root of the  sum of their squaredreal and imaginary parts.",6,48,12,numpy/polynomial/chebyshev.py,[u'10'],8,2," -1742,8 +1742,14 ;","def chebfit(x, y, deg, rcond=None, full=False, w=None);"
2984,2,9448491, Charles Harris <charlesr.harris@gmail.com>," Wed, 23 Jan 2013 20:04:05 -0700","ct: [PATCH 1/2] BUG: gh-2790, fix column scaling in polynomial package least squares.The columns should be scaled using their 2-norm, but in the complex casethat was being incorrectly computed as the square root of the sum of thesquared elements rather than as the square root of the  sum of their squaredreal and imaginary parts.",6,48,12,numpy/polynomial/hermite.py,[u'10'],8,2," -1519,8 +1519,14 ;","def hermfit(x, y, deg, rcond=None, full=False, w=None);"
2984,2,9448491, Charles Harris <charlesr.harris@gmail.com>," Wed, 23 Jan 2013 20:04:05 -0700","ct: [PATCH 1/2] BUG: gh-2790, fix column scaling in polynomial package least squares.The columns should be scaled using their 2-norm, but in the complex casethat was being incorrectly computed as the square root of the sum of thesquared elements rather than as the square root of the  sum of their squaredreal and imaginary parts.",6,48,12,numpy/polynomial/hermite_e.py,[u'10'],8,2," -1515,8 +1515,14 ;","def hermefit(x, y, deg, rcond=None, full=False, w=None);"
2984,2,9448491, Charles Harris <charlesr.harris@gmail.com>," Wed, 23 Jan 2013 20:04:05 -0700","ct: [PATCH 1/2] BUG: gh-2790, fix column scaling in polynomial package least squares.The columns should be scaled using their 2-norm, but in the complex casethat was being incorrectly computed as the square root of the sum of thesquared elements rather than as the square root of the  sum of their squaredreal and imaginary parts.",6,48,12,numpy/polynomial/laguerre.py,[u'10'],8,2," -1518,8 +1518,14 ;","def lagfit(x, y, deg, rcond=None, full=False, w=None);"
2984,2,9448491, Charles Harris <charlesr.harris@gmail.com>," Wed, 23 Jan 2013 20:04:05 -0700","ct: [PATCH 1/2] BUG: gh-2790, fix column scaling in polynomial package least squares.The columns should be scaled using their 2-norm, but in the complex casethat was being incorrectly computed as the square root of the sum of thesquared elements rather than as the square root of the  sum of their squaredreal and imaginary parts.",6,48,12,numpy/polynomial/legendre.py,[u'10'],8,2," -1543,8 +1543,14 ;","def legfit(x, y, deg, rcond=None, full=False, w=None);"
2984,2,9448491, Charles Harris <charlesr.harris@gmail.com>," Wed, 23 Jan 2013 20:04:05 -0700","ct: [PATCH 1/2] BUG: gh-2790, fix column scaling in polynomial package least squares.The columns should be scaled using their 2-norm, but in the complex casethat was being incorrectly computed as the square root of the sum of thesquared elements rather than as the square root of the  sum of their squaredreal and imaginary parts.",6,48,12,numpy/polynomial/polynomial.py,[u'10'],8,2," -1365,8 +1365,14 ;","def polyfit(x, y, deg, rcond=None, full=False, w=None);"
2984,2,f9be8e4, Charles Harris <charlesr.harris@gmail.com>," Wed, 23 Jan 2013 20:07:49 -0700","ct: [PATCH 2/2] TST: Add Test for column scaling in the polynomial package fits.The test uses the complex set of sample points [1, 1j, -1, -1j] whosesquared sum is exactly zero. This would fail before the column scalingwas fixed.",6,25,0,numpy/polynomial/tests/test_chebyshev.py,[u'4'],4,0," -435,6 +435,10 ;",def f(x) ;
2984,2,f9be8e4, Charles Harris <charlesr.harris@gmail.com>," Wed, 23 Jan 2013 20:07:49 -0700","ct: [PATCH 2/2] TST: Add Test for column scaling in the polynomial package fits.The test uses the complex set of sample points [1, 1j, -1, -1j] whosesquared sum is exactly zero. This would fail before the column scalingwas fixed.",6,25,0,numpy/polynomial/tests/test_hermite.py,[u'4'],4,0," -425,6 +425,10 ;",def f(x) ;
2984,2,f9be8e4, Charles Harris <charlesr.harris@gmail.com>," Wed, 23 Jan 2013 20:07:49 -0700","ct: [PATCH 2/2] TST: Add Test for column scaling in the polynomial package fits.The test uses the complex set of sample points [1, 1j, -1, -1j] whosesquared sum is exactly zero. This would fail before the column scalingwas fixed.",6,25,0,numpy/polynomial/tests/test_hermite_e.py,[u'4'],4,0," -422,6 +422,10 ;",def f(x) ;
2984,2,f9be8e4, Charles Harris <charlesr.harris@gmail.com>," Wed, 23 Jan 2013 20:07:49 -0700","ct: [PATCH 2/2] TST: Add Test for column scaling in the polynomial package fits.The test uses the complex set of sample points [1, 1j, -1, -1j] whosesquared sum is exactly zero. This would fail before the column scalingwas fixed.",6,25,0,numpy/polynomial/tests/test_laguerre.py,[u'4'],4,0," -420,6 +420,10 ;",def f(x) ;
2984,2,f9be8e4, Charles Harris <charlesr.harris@gmail.com>," Wed, 23 Jan 2013 20:07:49 -0700","ct: [PATCH 2/2] TST: Add Test for column scaling in the polynomial package fits.The test uses the complex set of sample points [1, 1j, -1, -1j] whosesquared sum is exactly zero. This would fail before the column scalingwas fixed.",6,25,0,numpy/polynomial/tests/test_legendre.py,[u'4'],4,0," -423,6 +423,10 ;",def f(x) ;
2984,2,f9be8e4, Charles Harris <charlesr.harris@gmail.com>," Wed, 23 Jan 2013 20:07:49 -0700","ct: [PATCH 2/2] TST: Add Test for column scaling in the polynomial package fits.The test uses the complex set of sample points [1, 1j, -1, -1j] whosesquared sum is exactly zero. This would fail before the column scalingwas fixed.",6,25,0,numpy/polynomial/tests/test_polynomial.py,[u'5'],5,0," -440,6 +440,11 ;",def f(x) ;
2983,1,3819bf8, Charles Harris <charlesr.harris@gmail.com>," Tue, 12 Feb 2013 16:00:56 -0700",ct: [PATCH] BUG: gh-2969: Backport memory leak fix 80b3a34.,2,8,0,numpy/core/src/multiarray/item_selection.c,[u'1'],1,0," -1885,6 +1885,7 ;","PyArray_Diagonal(PyArrayObject *self, int offset, int axis1, int axis2;"
2983,1,3819bf8, Charles Harris <charlesr.harris@gmail.com>," Tue, 12 Feb 2013 16:00:56 -0700",ct: [PATCH] BUG: gh-2969: Backport memory leak fix 80b3a34.,2,8,0,numpy/core/tests/test_multiarray.py,[u'7'],7,0," -1028,6 +1028,13 ;",def get_data_and_write(getter);
2982,1,4753c19, Charles Harris <charlesr.harris@gmail.com>," Tue, 12 Feb 2013 08:10:14 -0700","ct: [PATCH] BUG: Make nansum work with booleans.This broke when function_base._nannop tried to fill a boolean array withinteger zeros, raising a 'safe_casting' error. It looks like nanargmax andnanargmin would also break, and were probably incorrect for booleans in anycase. The fix is not to use fill values for boolean and integer dtypes.Previously that was only done for the integer dtypes.",2,12,0,numpy/lib/function_base.py,[u'4'],3,1," -1381,8 +1381,10 ;","def _nanop(op, fill, a, axis=None);"
2982,1,4753c19, Charles Harris <charlesr.harris@gmail.com>," Tue, 12 Feb 2013 08:10:14 -0700","ct: [PATCH] BUG: Make nansum work with booleans.This broke when function_base._nannop tried to fill a boolean array withinteger zeros, raising a 'safe_casting' error. It looks like nanargmax andnanargmin would also break, and were probably incorrect for booleans in anycase. The fix is not to use fill values for boolean and integer dtypes.Previously that was only done for the integer dtypes.",2,12,0,numpy/lib/tests/test_regression.py,[u'9'],9,0," -218,5 +218,14 ;",def test_loadtxt_fields_subarrays(self);
2979,1,8552cd5, Charles Harris <charlesr.harris@gmail.com>," Tue, 12 Feb 2013 08:10:14 -0700","ct: [PATCH] BUG: Make nansum work with booleans.This broke when function_base._nannop tried to fill a boolean array withinteger zeros, raising a 'safe_casting' error. It looks like nanargmax andnanargmin would also break, and were probably incorrect for booleans in anycase. The fix is not to use fill values for boolean and integer dtypes.Previously that was only done for the integer dtypes.",2,12,0,numpy/lib/function_base.py,[u'4'],3,1," -1381,8 +1381,10 ;","def _nanop(op, fill, a, axis=None);"
2979,1,8552cd5, Charles Harris <charlesr.harris@gmail.com>," Tue, 12 Feb 2013 08:10:14 -0700","ct: [PATCH] BUG: Make nansum work with booleans.This broke when function_base._nannop tried to fill a boolean array withinteger zeros, raising a 'safe_casting' error. It looks like nanargmax andnanargmin would also break, and were probably incorrect for booleans in anycase. The fix is not to use fill values for boolean and integer dtypes.Previously that was only done for the integer dtypes.",2,12,0,numpy/lib/tests/test_regression.py,[u'9'],9,0," -218,5 +218,14 ;",def test_loadtxt_fields_subarrays(self);
2976,1,91376d7," ""Bradley M. Froehle"" <brad.froehle@gmail.com>"," Sun, 10 Feb 2013 11:13:49 -0800","ct: [PATCH] BUG: PyArray_LexSort allocates too much temporary memory.PyArray_LexSort was allocating memory to hold actual PyArrayObject'sand PyArrayIterObject's, but only storing pointers to such objectsin the array.",1,2,2,numpy/core/src/multiarray/item_selection.c,[u'4'],2,2," -1225,11 +1225,11 ;","PyArray_LexSort(PyObject *sort_keys, int axis;"
2975,1,9254542," ""Bradley M. Froehle"" <brad.froehle@gmail.com>"," Sun, 10 Feb 2013 10:46:33 -0800","ct: [PATCH] ENH: Use tp_basicsize, not NPY_SIZEOF_PYARRAYOBJECT, for memory allocation.This change allows C-API level subtypes of PyArray_Type without forcing thedeveloper to rewrite the tp_alloc function and only change the amount ofmemory allocated.",1,0,0,numpy/core/src/multiarray/arrayobject.c,[u'2'],1,1," -1655,7 +1655,7 ;","array_alloc(PyTypeObject *type, Py_ssize_t NPY_UNUSED(nitems);"
2974,2,7ccf530, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 25 Jan 2013 19:36:35 +0100","ct: [PATCH 1/2] BUG: Fix dtypes in sorting functions to npy_intpSome of the iteration variables were int, causing sorts to fail for largearrays. Fixes github issue 427.",1,8,8,numpy/core/src/multiarray/item_selection.c,[u'16'],8,8," -795,10 +795,10 ; -952,7 +952,8 ; -1208,13 +1209,12 ;","_new_argsort(PyArrayObject *op, int axis, NPY_SORTKIND which;PyArray_Sort(PyArrayObject *op, int axis, NPY_SORTKIND which;PyArray_LexSort(PyObject *sort_keys, int axis;"
2974,2,2b76da3, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 10 Feb 2013 01:18:50 +0100","ct: [PATCH 2/2] BUG: Fix reporting of memory error inside sortingPyDataMem_NEW was not checked for error and the occurance oferrors not returned correctly in new_sort. Also for PyArray_LexSortand new_argsort it should now raise MemoryError correctly.This is done by setting PyErr_NoMemory() when no error is alreadypresent, as the low level sorting can only fail for this reason.",2,28,6,numpy/core/src/multiarray/item_selection.c,[u'29'],28,1," -750,6 +750,9 ; -783,9 +786,11 ; -832,7 +837,14 ; -878,6 +890,10 ; -1331,7 +1347,14 ; -1400,6 +1423,10 ;","_new_sort(PyArrayObject *op, int axis, NPY_SORTKIND which;_new_sort(PyArrayObject *op, int axis, NPY_SORTKIND which;_new_argsort(PyArrayObject *op, int axis, NPY_SORTKIND which;_new_argsort(PyArrayObject *op, int axis, NPY_SORTKIND which;PyArray_LexSort(PyObject *sort_keys, int axis;PyArray_LexSort(PyObject *sort_keys, int axis;"
2974,2,2b76da3, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 10 Feb 2013 01:18:50 +0100","ct: [PATCH 2/2] BUG: Fix reporting of memory error inside sortingPyDataMem_NEW was not checked for error and the occurance oferrors not returned correctly in new_sort. Also for PyArray_LexSortand new_argsort it should now raise MemoryError correctly.This is done by setting PyErr_NoMemory() when no error is alreadypresent, as the low level sorting can only fail for this reason.",2,28,6,numpy/core/src/npysort/mergesort.c.src,[u'5'],0,5," -112,7 +112,6 ; -176,7 +175,6 ; -259,13 +257,11 ; -335,7 +331,6 ;","mergesort_@suff@(@type@ *start, npy_intp num, void *NOT_USED;amergesort_@suff@(@type@ *v, npy_intp *tosort, npy_intp num, void *NOT_USED;mergesort_@suff@(@type@ *start, npy_intp num, PyArrayObject *arr;amergesort_@suff@(@type@ *v, npy_intp *tosort, npy_intp num, PyArrayObject *arr;"
2973,1,08ea266, Christoph Gohlke <cgohlke@uci.edu>," Sat, 9 Feb 2013 19:57:48 -0800",ct: [PATCH] Fix `1` is printed during numpy.test(),1,0,0,numpy/core/tests/test_regression.py,[u'1'],0,1," -193,7 +193,6 ;","def test_endian_recarray(self,level=rlevel);"
2970,8,e5d0518, Jonathan Helmus <jjhelmus@gmail.com>," Thu, 7 Feb 2013 16:37:02 -0600",ct: [PATCH 1/8] Enhancement to percentile function.,2,146,29,numpy/lib/function_base.py,[u'48'],10,3," -2994,7 +2994,9 ; -3006,6 +3008,16 ; -3074,6 +3086,9 ; -3091,13 +3106,14 ; -3111,16 +3127,29 ; -3129,6 +3158,7 ;","def median(a, axis=None, out=None, overwrite_input=False);def percentile(a, q, axis=None, out=None, overwrite_input=False);def percentile(a, q, axis=None, out=None, overwrite_input=False);def percentile(a, q, axis=None, out=None, overwrite_input=False);def _compute_qth_percentile(sorted, q, axis, out);def _compute_qth_percentile(sorted, q, axis, out);"
2970,8,e5d0518, Jonathan Helmus <jjhelmus@gmail.com>," Thu, 7 Feb 2013 16:37:02 -0600",ct: [PATCH 1/8] Enhancement to percentile function.,2,146,29,numpy/lib/tests/test_function_base.py,[u'127'],28,6," -1383,26 +1383,113 ;","def compare_results(res, desired);"
2970,8,a44a251, Jonathan Helmus <jjhelmus@gmail.com>," Fri, 8 Feb 2013 10:14:35 -0600",ct: [PATCH 2/8] Syntax changes to percentile function.,2,40,33,numpy/lib/function_base.py,[u'23'],8,8," -2995,7 +2995,7 ; -3010,11 +3010,12 ; -3106,14 +3107,14 ; -3130,14 +3131,14 ;","def median(a, axis=None, out=None, overwrite_input=False);def percentile(a, q, limit=(), interpolation_method='fraction', axis=None;def percentile(a, q, limit=(), interpolation_method='fraction', axis=None;def _compute_qth_percentile(sorted, q, interpolation_method, axis, out);"
2970,8,a44a251, Jonathan Helmus <jjhelmus@gmail.com>," Fri, 8 Feb 2013 10:14:35 -0600",ct: [PATCH 2/8] Syntax changes to percentile function.,2,40,33,numpy/lib/tests/test_function_base.py,[u'50'],20,15," -1385,11 +1385,6 ; -1404,7 +1399,18 ; -1415,39 +1421,39 ; -1466,7 +1472,7 ;","def compare_results(res, desired);def test_2D(self);def test_fraction(self);def test_axis(self);"
2970,8,d627ba6, Jonathan Helmus <jjhelmus@gmail.com>," Fri, 15 Feb 2013 15:23:22 -0600",ct: [PATCH 3/8] fixed percentile docs,1,7,6,numpy/lib/function_base.py,[u'13'],7,6," -3015,10 +3015,11 ; -3138,8 +3139,8 ;","def percentile(a, q, limit=None, interpolation='linear', axis=None;def _compute_qth_percentile(sorted, q, interpolation, axis, out);"
2970,8,c55b583, Jonathan Helmus <jjhelmus@gmail.com>," Fri, 15 Feb 2013 15:32:10 -0600",ct: [PATCH 4/8] added midpoint interpolation to percentile,2,9,2,numpy/lib/function_base.py,[u'7'],5,2," -3012,7 +3012,7 ; -3020,6 +3020,7 ; -3136,11 +3137,13 ;","def percentile(a, q, limit=None, interpolation='linear', axis=None;def percentile(a, q, limit=None, interpolation='linear', axis=None;def _compute_qth_percentile(sorted, q, interpolation, axis, out);"
2970,8,c55b583, Jonathan Helmus <jjhelmus@gmail.com>," Fri, 15 Feb 2013 15:32:10 -0600",ct: [PATCH 4/8] added midpoint interpolation to percentile,2,9,2,numpy/lib/tests/test_function_base.py,[u'4'],4,0," -1455,6 +1455,10 ;",def test_lower_higher(self);
2970,8,83e1524, Jonathan Helmus <jjhelmus@gmail.com>," Tue, 19 Feb 2013 14:15:13 -0600",ct: [PATCH 5/8] q-vectorized percentile functionBased on seberg gist (https://gist.github.com/seberg/4966984),2,42,63,numpy/lib/function_base.py,[u'101'],14,20," -22,7 +22,7 ; -3020,7 +3020,6 ; -3039,7 +3038,7 ; -3087,16 +3086,11 ; -3108,60 +3102,49 ;",";def percentile(a, q, limit=None, interpolation='linear', axis=None;def percentile(a, q, limit=None, interpolation='linear', axis=None;def percentile(a, q, limit=None, interpolation='linear', axis=None;def percentile(a, q, limit=None, interpolation='linear', axis=None;"
2970,8,83e1524, Jonathan Helmus <jjhelmus@gmail.com>," Tue, 19 Feb 2013 14:15:13 -0600",ct: [PATCH 5/8] q-vectorized percentile functionBased on seberg gist (https://gist.github.com/seberg/4966984),2,42,63,numpy/lib/tests/test_function_base.py,[u'4'],0,2," -1455,10 +1455,6 ;",def test_lower_higher(self);
2970,8,152fba2, Jonathan Helmus <jjhelmus@gmail.com>," Tue, 16 Apr 2013 11:15:17 -0500",ct: [PATCH 6/8] removed extraneous np.where function,1,0,0,numpy/lib/function_base.py,[u'2'],1,1," -3138,7 +3138,7 ;","def percentile(a, q, limit=None, interpolation='linear', axis=None;"
2970,8,fc3dd2e, Jonathan Helmus <jjhelmus@gmail.com>," Tue, 16 Apr 2013 11:21:40 -0500",ct: [PATCH 7/8] added release not about array output of np.percentile,1,2,0,doc/release/1.8.0-notes.rst,[u'2'],2,0," -22,6 +22,8 ;",Compatibility note;
2970,8,1607c2f, Jonathan Helmus <jjhelmus@gmail.com>," Mon, 13 May 2013 15:36:12 -0500",ct: [PATCH 8/8] np.percentile now inserts new axis at axis parameter,2,53,51,numpy/lib/function_base.py,[u'96'],18,17," -15,14 +15,15 ; -3011,18 +3012,18 ; -3064,11 +3065,12 ; -3079,18 +3081,20 ; -3102,49 +3106,47 ;",";def percentile(a, q, limit=None, interpolation='linear', axis=None;def percentile(a, q, limit=None, interpolation='linear', axis=None;def percentile(a, q, limit=None, interpolation='linear', axis=None;def percentile(a, q, limit=None, interpolation='linear', axis=None;"
2970,8,1607c2f, Jonathan Helmus <jjhelmus@gmail.com>," Mon, 13 May 2013 15:36:12 -0500",ct: [PATCH 8/8] np.percentile now inserts new axis at axis parameter,2,53,51,numpy/lib/tests/test_function_base.py,[u'8'],1,2," -1397,10 +1397,10 ; -1467,7 +1467,7 ; -1493,7 +1493,7 ;",def test_2D(self);def test_axis(self);def test_percentile_out(self);
2968,2,5b52514, Frank B <frank.breitling@gmx.de>," Tue, 5 Feb 2013 13:13:36 +0100",ct: [PATCH 1/2] Added example for 2D-histogram with variable bin size.,1,21,2,numpy/lib/twodim_base.py,[u'23'],21,2," -547,7 +547,7 ; -584,12 +584,14 ; -599,6 +601,23 ;","def histogram2d(x, y, bins=10, range=None, normed=False, weights=None);def histogram2d(x, y, bins=10, range=None, normed=False, weights=None);def histogram2d(x, y, bins=10, range=None, normed=False, weights=None);"
2968,2,b3f37ed, Frank B <frank.breitling@gmx.de>," Tue, 5 Feb 2013 13:21:32 +0100",ct: [PATCH 2/2] Fixed two typos.,1,2,2,numpy/lib/twodim_base.py,[u'4'],2,2," -584,7 +584,7 ; -602,7 +602,7 ;","def histogram2d(x, y, bins=10, range=None, normed=False, weights=None);def histogram2d(x, y, bins=10, range=None, normed=False, weights=None);"
2967,3,637dbd8, Steve <steve@steve-Inspiron14z.(none)>," Mon, 4 Feb 2013 22:13:34 -0500","ct: [PATCH 1/3] DOC -- add another paragraph note to ndarray.view docsSince most numpy operations are not sensitive to underlying datastructure (C-ordered arrays vs fortran-ordered arrays, versus slices ortransposes of arrays, etc.), but structured-array views ARE sensitive tothat, it is worth saying it explicitly in the documentation.",2,12,0,numpy/add_newdocs.py,[u'6'],6,0," -4460,6 +4460,12 ;","def luf(lamdaexpr, *args, **kwargs);"
2967,3,637dbd8, Steve <steve@steve-Inspiron14z.(none)>," Mon, 4 Feb 2013 22:13:34 -0500","ct: [PATCH 1/3] DOC -- add another paragraph note to ndarray.view docsSince most numpy operations are not sensitive to underlying datastructure (C-ordered arrays vs fortran-ordered arrays, versus slices ortransposes of arrays, etc.), but structured-array views ARE sensitive tothat, it is worth saying it explicitly in the documentation.",2,12,0,numpy/ma/core.py,[u'6'],6,0," -2889,6 +2889,12 ;","def view(self, dtype=None, type=None, fill_value=None);"
2967,3,c714dad, Steve <steve@steve-Inspiron14z.(none)>," Tue, 5 Feb 2013 10:07:42 -0500",ct: [PATCH 2/3] DOC -- add another paragraph note to ndarray.view docs (cont'd)More detail: Views are only sensitive to under-the-hood storage whenthe dtype storage size has changed.,2,17,11,numpy/add_newdocs.py,[u'13'],8,5," -4460,11 +4460,14 ;","def luf(lamdaexpr, *args, **kwargs);"
2967,3,c714dad, Steve <steve@steve-Inspiron14z.(none)>," Tue, 5 Feb 2013 10:07:42 -0500",ct: [PATCH 2/3] DOC -- add another paragraph note to ndarray.view docs (cont'd)More detail: Views are only sensitive to under-the-hood storage whenthe dtype storage size has changed.,2,17,11,numpy/ma/core.py,[u'15'],9,6," -2889,12 +2889,15 ;","def view(self, dtype=None, type=None, fill_value=None);"
2967,3,83e3963, Steve <steve@steve-Inspiron14z.(none)>," Tue, 5 Feb 2013 20:12:29 -0500",ct: [PATCH 3/3] DOC: Add example showing how a view of a slice can misbehave,1,16,0,numpy/add_newdocs.py,[u'16'],16,0," -4510,6 +4510,22 ;","def luf(lamdaexpr, *args, **kwargs);"
2966,1,7f0f68f, Mark Wiebe <mwwiebe@gmail.com>," Thu, 17 Jan 2013 10:49:33 -0800",ct: [PATCH] BUG: Fix memory leak in ndarray construction from strings (gh-2927),1,5,0,numpy/core/src/multiarray/common.c,[u'6'],5,1," -485,9 +485,11 ; -500,17 +502,19 ;","PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;"
2965,3,e9dfb3b, Charles Harris <charlesr.harris@gmail.com>," Mon, 1 Apr 2013 19:04:22 -0600","ct: [PATCH 1/3] ENH: Add `raw`, `reduced`, `complete` modes to qr factorization.If K = min(M, N) where the matrix to be factored has dimensions MxN,then'reduced'  : returns q, r with dimensions (M, K), (K, N) (default)'complete' : returns q, r with dimensions (M, M), (M, N)'r'        : returns r only with dimensions (K, N)'raw'      : returns h, tau with dimensions (N, M), (K,)'full'     : alias of 'reduced', deprecated'economic' : returns h from 'raw', deprecated.The options 'reduced', 'complete, and 'raw' are new. The default is'reduced' and to maintain backward compatibility with earlier versionsof numpy both it and the old default 'full' can be omitted. Note thatarray `h` returned in 'raw' mode is transposed for calling Fortran. Boththe 'full' and 'economic' modes are deprecated. For backwardscompatibility the modes 'full', 'economic' may be passed using only thefirst letter but all others must be spelled out.",1,85,34,numpy/linalg/linalg.py,[u'119'],35,14," -16,6 +16,8 ; -539,7 +541,7 ; -548,24 +550,42 ; -580,8 +600,20 ; -626,6 +658,20 ; -653,26 +699,30 ; -684,20 +734,21 ;",";def cholesky(a);def qr(a, mode='full');def qr(a, mode='full');def qr(a, mode='full');def qr(a, mode='full');def qr(a, mode='full');"
2965,3,d0b6a7a, Charles Harris <charlesr.harris@gmail.com>," Mon, 1 Apr 2013 19:13:45 -0600","ct: [PATCH 2/3] TST: Add more tests for qr factorization.The new tests cover the new modes 'complete' and 'raw'. The testing ofthe 'reduced', aka 'full' mode is improved and tests are added for thedeprecation of the 'full' and 'economic' modes. A new file`numpy/linalg/tests/test_deprecations.py` was added for the deprecationtests.",2,128,0,numpy/linalg/tests/test_deprecations.py,[u'24'],8,0," -0,0 +1,24 ;",;
2965,3,d0b6a7a, Charles Harris <charlesr.harris@gmail.com>," Mon, 1 Apr 2013 19:13:45 -0600","ct: [PATCH 2/3] TST: Add more tests for qr factorization.The new tests cover the new modes 'complete' and 'raw'. The testing ofthe 'reduced', aka 'full' mode is improved and tests are added for thedeprecation of the 'full' and 'economic' modes. A new file`numpy/linalg/tests/test_deprecations.py` was added for the deprecationtests.",2,128,0,numpy/linalg/tests/test_linalg.py,[u'104'],32,0," -469,11 +469,115 ;",def test_reduced_rank();
2965,3,7394fa6, Charles Harris <charlesr.harris@gmail.com>," Mon, 1 Apr 2013 19:46:55 -0600",ct: [PATCH 3/3] DOC: Document the new qr modes in the 1.8 release notes.,1,22,2,doc/release/1.8.0-notes.rst,[u'24'],22,2," -2,7 +2,7 ; -39,7 +39,7 ; -47,8 +47,26 ; -65,6 +83,8 ;",;system by exporting the shell variable NPY_SEPARATE_COMPILATION=0;usage is deprecated. This does not effect the ``NpyIter_New`` o;The separate compilation mode is now enabled by default;
2964,1,13371fd, =?UTF-8?q?Ond=C5=99ej=20=C4=8Cert=C3=ADk?= <ondrej.certik@gmail.com>," Sun, 3 Feb 2013 21:11:28 -0800","ct: [PATCH] DOC: document the casting rules changesThis does the work necessary for 1.7.x proposed in issues gh-561, gh-2542 andgh-2685.",1,38,0,doc/release/1.7.0-notes.rst,[u'38'],38,0," -213,6 +213,44 ;",and so the collapsing process only continues so long as it encounters othe;
2963,2,a727761, =?UTF-8?q?Ond=C5=99ej=20=C4=8Cert=C3=ADk?= <ondrej.certik@gmail.com>," Sun, 3 Feb 2013 21:11:28 -0800",ct: [PATCH 1/2] DOC: document the casting rules changesFixes #561.,1,18,0,doc/release/1.7.0-notes.rst,[u'18'],18,0," -213,6 +213,24 ;",and so the collapsing process only continues so long as it encounters othe;
2963,2,35aa1c8, =?UTF-8?q?Ond=C5=99ej=20=C4=8Cert=C3=ADk?= <ondrej.certik@gmail.com>," Sun, 3 Feb 2013 21:41:17 -0800",ct: [PATCH 2/2] DOC: document the change in casting (#2685),1,5,0,doc/release/1.7.0-notes.rst,[u'6'],5,1," -226,7 +226,11 ;",NA-related work. In particular for combinations of scalar+scalar;
2962,1,a727761, =?UTF-8?q?Ond=C5=99ej=20=C4=8Cert=C3=ADk?= <ondrej.certik@gmail.com>," Sun, 3 Feb 2013 21:11:28 -0800",ct: [PATCH] DOC: document the casting rules changesFixes #561.,1,18,0,doc/release/1.7.0-notes.rst,[u'18'],18,0," -213,6 +213,24 ;",and so the collapsing process only continues so long as it encounters othe;
2960,1,9118887, Valentin Haenel <valentin.haenel@gmx.de>," Fri, 1 Feb 2013 23:55:32 +0100","ct: [PATCH] DOC/FIX: fix example in ctypeslib module documentationFix some inconsistencies in the example. The library is loaded as '_lib' not'lib' in the rest of the example. Also, the function is called 'foo_func' not'foo'",1,2,2,numpy/ctypeslib.py,[u'4'],2,2," -40,8 +40,8 ;",;
2957,1,c215470, Martin Teichmann <lkb.teichmann@gmail.com>," Fri, 1 Feb 2013 14:36:18 +0100",ct: [PATCH] Allow threads for FFT calculationsThis patch adds lines to release the Global Interpreter Lockwhile calculating an FFT with fftpack.,1,10,0,numpy/fft/fftpack_litemodule.c,[u'10'],10,0," -96,10 +96,12 ; -131,7 +133,9 ; -183,6 +187,7 ; -191,6 +196,7 ; -245,6 +251,7 ; -252,6 +259,7 ; -285,7 +293,9 ;","fftpack_cfftb(PyObject *NPY_UNUSED(self), PyObject *args;fftpack_cffti(PyObject *NPY_UNUSED(self), PyObject *args;fftpack_rfftf(PyObject *NPY_UNUSED(self), PyObject *args;fftpack_rfftf(PyObject *NPY_UNUSED(self), PyObject *args;fftpack_rfftb(PyObject *NPY_UNUSED(self), PyObject *args;fftpack_rfftb(PyObject *NPY_UNUSED(self), PyObject *args;fftpack_rffti(PyObject *NPY_UNUSED(self), PyObject *args;"
2954,76,1613e09, Mark Wiebe <mwwiebe@gmail.com>," Thu, 18 Oct 2012 23:10:56 -0700",ct: [PATCH 01/76] BUG: Fix generalized ufunc so repeating labels in one input/output is ok,1,120,46,numpy/core/src/umath/ufunc_object.c,[u'166'],26,10," -1643,7 +1643,7 ; -1651,11 +1651,12 ; -1673,7 +1674,9 ; -1719,7 +1722,11 ; -1727,8 +1734,18 ; -1736,9 +1753,64 ; -1760,22 +1832,27 ; -1886,7 +1963,7 ; -1906,37 +1983,34 ;",PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;
2954,76,be911e8, Mark Wiebe <mwwiebe@gmail.com>," Thu, 18 Oct 2012 23:46:59 -0700",ct: [PATCH 02/76] BUG: Missed case of broadcasting onto core dimensions in gufunc,1,32,16,numpy/core/src/umath/ufunc_object.c,[u'48'],24,13," -1756,39 +1756,51 ; -1997,12 +2009,16 ;",PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;
2954,76,9a70cfd, Mark Wiebe <mwwiebe@gmail.com>," Wed, 24 Oct 2012 09:59:12 -0700",ct: [PATCH 03/76] BUG: Make sure the nditer doesn't complain when 0 broadcast dims,1,3,0,numpy/core/src/umath/ufunc_object.c,[u'4'],3,1," -1975,7 +1975,9 ;",PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;
2954,76,b5c7733, Mark Wiebe <mwwiebe@gmail.com>," Wed, 7 Nov 2012 11:41:29 -0800",ct: [PATCH 04/76] TST: Add test for gufunc scalar case,1,2,0,numpy/core/tests/test_ufunc.py,[u'2'],2,0," -314,6 +314,8 ;",def test_forced_sig(self);
2954,76,12be5b7, Mark Wiebe <mwwiebe@gmail.com>," Wed, 7 Nov 2012 12:42:16 -0800",ct: [PATCH 05/76] BUG: Fix bug in gufunc scalar case,1,13,2,numpy/core/src/umath/ufunc_object.c,[u'15'],13,2," -1970,14 +1970,25 ;",PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;
2954,76,fa9dbef, Mark Wiebe <mwwiebe@gmail.com>," Mon, 7 Jan 2013 11:17:18 -0800","ct: [PATCH 06/76] TST: Test for a generalized ufunc bug, for zero-sized inputs",1,7,0,numpy/core/tests/test_ufunc.py,[u'7'],7,0," -425,6 +425,13 ;",def test_innerwt(self);
2954,76,cac3de5, Mark Wiebe <mwwiebe@gmail.com>," Mon, 7 Jan 2013 15:20:04 -0800",ct: [PATCH 07/76] BUG: Fix for generalized ufunc zero-sized input case,1,33,2,numpy/core/src/umath/ufunc_object.c,[u'35'],33,2," -1985,7 +1985,8 ; -2074,8 +2075,8 ; -2094,6 +2095,36 ;",PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;
2954,76,153e02e, ovillellas <oscar.villellas@continuum.io>," Mon, 21 Jan 2013 16:05:00 +0100",ct: [PATCH 08/76] created a new module to hold linalg ufuncs.,4,354,0,numpy/core/bento.info,[u'3'],1,0," -25,6 +25,9 ;",Library;
2954,76,153e02e, ovillellas <oscar.villellas@continuum.io>," Mon, 21 Jan 2013 16:05:00 +0100",ct: [PATCH 08/76] created a new module to hold linalg ufuncs.,4,354,0,numpy/core/bscript,[u'1'],1,0," -503,6 +503,7 ;",def pre_build(context);
2954,76,153e02e, ovillellas <oscar.villellas@continuum.io>," Mon, 21 Jan 2013 16:05:00 +0100",ct: [PATCH 08/76] created a new module to hold linalg ufuncs.,4,354,0,numpy/core/setup.py,[u'7'],1,0," -919,6 +919,13 ;","def get_dotblas_sources(ext, build_dir);"
2954,76,153e02e, ovillellas <oscar.villellas@continuum.io>," Mon, 21 Jan 2013 16:05:00 +0100",ct: [PATCH 08/76] created a new module to hold linalg ufuncs.,4,354,0,numpy/core/src/umath/umath_linalg.c.src,[u'343'],32,0," -0,0 +1,343 ;",;
2954,76,06613da, ovillellas <oscar.villellas@continuum.io>," Fri, 21 Sep 2012 17:11:12 -0500",ct: [PATCH 09/76] inner1d and mat_mult implemented using blas.,2,315,59,numpy/core/setup.py,[u'4'],1,1," -923,7 +923,9 ;","def get_dotblas_sources(ext, build_dir);"
2954,76,06613da, ovillellas <oscar.villellas@continuum.io>," Fri, 21 Sep 2012 17:11:12 -0500",ct: [PATCH 09/76] inner1d and mat_mult implemented using blas.,2,315,59,numpy/core/src/umath/umath_linalg.c.src,[u'370'],27,5," -15,6 +15,14 ; -55,20 +63,36 ; -76,7 +100,7 ; -86,16 +110,34 ; -124,12 +166,115 ; -137,46 +282,117 ; -200,15 +416,55 ; -242,8 +498,6 ;",";static const char* umath_linalg_module_name =  ""umath_linalg"";static voi;static voi;static voi;char *matrix_multiply_signature = ""(m,n),(n,p)->(m,p)"";defdict = ;addUfuncs(PyObject *dictionary) ;"
2954,76,0ab4a14, ovillellas <oscar.villellas@continuum.io>," Mon, 24 Sep 2012 18:34:43 -0500","ct: [PATCH 10/76] refactored some code, make it cleaner overall and ready to reuse some code from the matrix_multiply in other gufuncs",1,168,133,numpy/core/src/umath/umath_linalg.c.src,[u'301'],18,14," -21,10 +21,121 ; -166,72 +277,6 ; -242,29 +287,42 ; -299,41 +357,21 ; -346,29 +384,25 ; -377,12 +411,13 ;",;static voi;dump_gemm_params(const GEMM_PARAMS_t* params;static inline voi;static voi;static voi;
2954,76,e6d08ea, ovillellas <oscar.villellas@continuum.io>," Tue, 2 Oct 2012 18:21:46 -0500",ct: [PATCH 11/76] det and slogdet working,1,682,235,numpy/core/src/umath/umath_linalg.c.src,[u'917'],24,8," -19,10 +19,37 ; -32,14 +59,22 ; -71,33 +106,6 ; -111,16 +119,44 ; -129,12 +165,36 ; -159,6 +219,9 ; -170,6 +233,68 ; -182,11 +307,6 ; -221,7 +341,7 ; -243,6 +363,9 ; -255,7 +378,7 ; -279,54 +402,97 ; -335,17 +501,12 ; -353,180 +514,466 ; -566,7 +1013,7 ; -606,7 +1053,7 ; -622,7 +1069,7 ;",";;typedef struct linearize_data_struc;init_linearize_data(LINEARIZE_DATA_t *lin_data;dump_gemm_params(const GEMM_PARAMS_t* params;dump_gemm_params(const GEMM_PARAMS_t* params;dump_gemm_params(const GEMM_PARAMS_t* params;dump_gemm_params(const GEMM_PARAMS_t* params;static inline voi;static voi;static voi;static voi;delinearize_@TYPE@_matrix(@typ@ *dst, @typ@ *src,const LINEARIZE_DATA_t* data;static inline voi;UMath_Tests_test_signature(PyObject *NPY_UNUSED(dummy), PyObject *args;initumath_linalg(void;initumath_linalg(void;"
2954,76,a3baf1c, ovillellas <oscar.villellas@continuum.io>," Thu, 4 Oct 2012 17:07:54 -0500",ct: [PATCH 12/76] eigh and eigvalsh working,1,439,65,numpy/core/src/umath/umath_linalg.c.src,[u'504'],28,4," -43,7 +43,11 ; -119,8 +123,7 ; -143,58 +146,61 ; -230,6 +236,14 ; -255,9 +269,9 ; -277,9 +291,9 ; -406,16 +420,29 ; -453,11 +480,11 ; -568,7 +595,7 ; -626,7 +653,7 ; -677,13 +704,13 ; -709,8 +736,8 ; -720,9 +747,9 ; -734,7 +761,7 ; -746,7 +773,7 ; -757,9 +784,9 ; -774,7 +801,7 ; -785,12 +812,303 ; -830,6 +1148,10 ; -853,6 +1175,20 ; -876,6 +1212,16 ; -904,22 +1250,49 ; -947,7 +1320,7 ; -972,6 +1345,7 ;",";init_linearize_data(LINEARIZE_DATA_t *lin_data;dump_ufunc_object(PyUFuncObject* ufunc;dump_@type@_matrix(size_t rows, size_t columns, const @type@* ptr;linearize_@TYPE@_matrix(void *dst_in, void *src_in,const LINEARIZE_DATA_t* data;delinearize_@TYPE@_matrix(void *dst_in, void *src_in,const LINEARIZE_DATA_t* da;INTERNAL voi;init_gemm_params(GEMM_PARAMS_t *params;static inline @typ;static inline @typ;static inline @typ;static inline voi;INTERNAL voi;INTERNAL voi;INTERNAL voi;INTERNAL voi;INTERNAL voi;INTERNAL voi;GUFUNC_FUNC_ARRAY_REAL(innerwt);static char slogdet_types[] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;addUfuncs(PyObject *dictionary) ;"
2954,76,e53b3d3, ovillellas <oscar.villellas@continuum.io>," Fri, 5 Oct 2012 13:56:15 -0500",ct: [PATCH 13/76] solve gufunc working,1,135,45,numpy/core/src/umath/umath_linalg.c.src,[u'180'],24,8," -33,6 +33,8 ; -1085,7 +1087,11 ; -1110,7 +1116,119 ; -1152,6 +1270,7 ; -1290,13 +1409,22 ; -1345,55 +1473,17 ; -1437,7 +1527,7 ; -1446,7 +1536,7 ;",;static inline voi;static voi;GUFUNC_FUNC_ARRAY_REAL_COMPLEX(eighlo);GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;addUfuncs(PyObject *dictionary) ;initumath_linalg(void;initumath_linalg(void;
2954,76,6ad2738, ovillellas <oscar.villellas@continuum.io>," Fri, 5 Oct 2012 14:59:42 -0500",ct: [PATCH 14/76] solve1 and inv working,1,97,9,numpy/core/src/umath/umath_linalg.c.src,[u'106'],29,3," -253,7 +253,7 ; -305,9 +305,24 ; -1192,7 +1207,7 ; -1200,10 +1215,6 ; -1224,6 +1235,60 ; -1271,6 +1336,8 ; -1414,10 +1481,31 ;","update_pointers(uint8_t** bases, ptrdiff_t* offsets, size_t count;delinearize_@TYPE@_matrix(void *dst_in, void *src_in,const LINEARIZE_DATA_t* da;lapack_@lapack_func@(GESV_PARAMS_t *params;static voi;static voi;GUFUNC_FUNC_ARRAY_REAL_COMPLEX(eighup);GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;"
2954,76,1276782, ovillellas <oscar.villellas@continuum.io>," Sat, 6 Oct 2012 17:18:45 -0500",ct: [PATCH 15/76] fixed possible issues with BLAS _copy (0 is not a valid incx/incy value and the functions are not guaranteed to work with them). also got cholesky working.,1,198,49,numpy/core/src/umath/umath_linalg.c.src,[u'247'],25,7," -65,22 +65,34 ; -159,44 +171,44 ; -307,23 +319,62 ; -542,10 +593,11 ; -577,10 +629,10 ; -1131,8 +1183,9 ; -1160,8 +1213,8 ; -1171,7 +1224,7 ; -1216,9 +1269,7 ; -1245,10 +1296,7 ; -1274,8 +1322,7 ; -1293,6 +1340,98 ; -1338,6 +1477,7 ; -1506,6 +1646,16 ; -1546,7 +1696,6 ;","typedef __CLPK_doublecomplex fortran_doublecomplex;dump_linearize_data(const char* name, const LINEARIZE_DATA_t* params;delinearize_@TYPE@_matrix(void *dst_in, void *src_in,const LINEARIZE_DATA_t* da;release_gemm_params(GEMM_PARAMS_t * params;INTERNAL voi;static voi;typedef struct gesv_params_struc;init_@lapack_func@(GESV_PARAMS_t *params, fortran_int N, fortran_int NRHS;static voi;static voi;static voi;static voi;GUFUNC_FUNC_ARRAY_REAL_COMPLEX(eigvalshup);GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;addUfuncs(PyObject *dictionary) ;"
2954,76,ee4138d, ovillellas <oscar.villellas@continuum.io>," Tue, 9 Oct 2012 16:24:58 -0500",ct: [PATCH 16/76] working eig and eigvals priority 2 functions.,1,473,54,numpy/core/src/umath/umath_linalg.c.src,[u'527'],28,4," -971,17 +971,8 ; -1070,17 +1061,8 ; -1108,6 +1090,17 ; -1142,7 +1135,7 ; -1247,7 +1240,7 ; -1278,7 +1271,7 ; -1304,7 +1297,7 ; -1329,7 +1322,7 ; -1391,7 +1384,7 ; -1414,13 +1407,10 ; -1432,6 +1422,431 ; -1478,6 +1893,8 ; -1501,20 +1918,34 ; -1585,7 +2016,7 ; -1595,7 +2026,7 ; -1605,7 +2036,7 ; -1615,7 +2046,7 ; -1656,39 +2087,27 ;","init_@lapack_func@(char JOBZ, char UPLO;error;lapack_@lapack_func@(EIGH_PARAMS_t *params;static inline voi;release_@lapack_func@(GESV_PARAMS_t *params;static voi;static voi;static voi;release_@lapack_func@(POTR_PARAMS_t *params;static voi;static voi;GUFUNC_FUNC_ARRAY_REAL_COMPLEX(solve);static char slogdet_types[] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;"
2954,76,b1c3e09, ovillellas <oscar.villellas@continuum.io>," Thu, 11 Oct 2012 15:53:31 -0500",ct: [PATCH 17/76] svd implemented. Single output working. Multiple options not functional due to a bug in the harness.,1,456,10,numpy/core/src/umath/umath_linalg.c.src,[u'466'],31,1," -911,8 +911,8 ; -998,8 +998,8 ; -1115,7 +1115,7 ; -1550,7 +1550,6 ; -1558,10 +1557,6 ; -1846,6 +1841,390 ; -1893,6 +2272,9 ; -1946,6 +2328,20 ; -2089,6 +2485,54 ; -2129,7 +2573,9 ;",typedef struct eigh_params_struct ;call_@lapack_func@(EIGH_PARAMS_t *params;static inline voi;static inline fortran_in;call_@lapack_func@(GEEV_PARAMS_t* params;static voi;GUFUNC_FUNC_ARRAY_REAL_COMPLEX(solve);static char eigvals_types[] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;addUfuncs(PyObject *dictionary) ;
2954,76,c229ba0, ovillellas <oscar.villellas@continuum.io>," Fri, 12 Oct 2012 04:22:35 -0500","ct: [PATCH 18/76] modified the code so it just used external definitions of blas/lapack functions (as is made in linalg module). Changed some code so that it uses BLAS instead of cblas (the fortran functions) also in line with what it is done on linalg. Modified the matrix multiply code, made it simpler and adapted to use blas (it was using cblas with CblasRowMajor, that is not available in the fortran function.",1,320,140,numpy/core/src/umath/umath_linalg.c.src,[u'460'],22,10," -15,17 +15,6 ; -40,23 +29,197 ; -282,10 +445,13 ; -304,10 +470,13 ; -385,7 +554,7 ; -400,7 +569,7 ; -423,7 +592,7 ; -460,7 +629,7 ; -488,97 +657,92 ; -593,12 +757,12 ; -611,36 +775,52 ; -802,7 +982,7 ; -839,7 +1019,7 ; -2376,9 +2556,9 ;",";const char* umath_linalg_version_string = ""0.1.0"";linearize_@TYPE@_matrix(void *dst_in, void *src_in,const LINEARIZE_DATA_t* data;delinearize_@TYPE@_matrix(void *dst_in, void *src_in,const LINEARIZE_DATA_t* da;triu_@TYPE@_matrix(void *ptr, size_t n;static inline voi;static inline voi;INTERNAL voi;INTERNAL voi;release_gemm_params(GEMM_PARAMS_t * params;INTERNAL voi;static inline voi;INTERNAL voi;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;"
2954,76,4b5f777, ovillellas <oscar.villellas@continuum.io>," Wed, 17 Oct 2012 16:02:32 +0200",ct: [PATCH 19/76] lapack_lite for builds of umath_linalg without an optimized lapack in the system.,9,146761,3,numpy/core/setup.py,[u'26'],1,1," -922,9 +922,31 ;","def get_dotblas_sources(ext, build_dir);"
2954,76,4b5f777, ovillellas <oscar.villellas@continuum.io>," Wed, 17 Oct 2012 16:02:32 +0200",ct: [PATCH 19/76] lapack_lite for builds of umath_linalg without an optimized lapack in the system.,9,146761,3,numpy/core/src/umath/lapack_lite/blas_lite.c,[u'21131'],5,0," -0,0 +1,21131 ;",;
2954,76,4b5f777, ovillellas <oscar.villellas@continuum.io>," Wed, 17 Oct 2012 16:02:32 +0200",ct: [PATCH 19/76] lapack_lite for builds of umath_linalg without an optimized lapack in the system.,9,146761,3,numpy/core/src/umath/lapack_lite/dlamch.c,[u'951'],1,0," -0,0 +1,951 ;",;
2954,76,4b5f777, ovillellas <oscar.villellas@continuum.io>," Wed, 17 Oct 2012 16:02:32 +0200",ct: [PATCH 19/76] lapack_lite for builds of umath_linalg without an optimized lapack in the system.,9,146761,3,numpy/core/src/umath/lapack_lite/dlapack_lite.c,[u'97895'],21,0," -0,0 +1,97895 ;",;
2954,76,4b5f777, ovillellas <oscar.villellas@continuum.io>," Wed, 17 Oct 2012 16:02:32 +0200",ct: [PATCH 19/76] lapack_lite for builds of umath_linalg without an optimized lapack in the system.,9,146761,3,numpy/core/src/umath/lapack_lite/f2c.h,[u'217'],1,0," -0,0 +1,217 ;",;
2954,76,4b5f777, ovillellas <oscar.villellas@continuum.io>," Wed, 17 Oct 2012 16:02:32 +0200",ct: [PATCH 19/76] lapack_lite for builds of umath_linalg without an optimized lapack in the system.,9,146761,3,numpy/core/src/umath/lapack_lite/f2c_lite.c,[u'501'],1,0," -0,0 +1,501 ;",;
2954,76,4b5f777, ovillellas <oscar.villellas@continuum.io>," Wed, 17 Oct 2012 16:02:32 +0200",ct: [PATCH 19/76] lapack_lite for builds of umath_linalg without an optimized lapack in the system.,9,146761,3,numpy/core/src/umath/lapack_lite/python_xerbla.c,[u'37'],1,0," -0,0 +1,37 ;",;
2954,76,4b5f777, ovillellas <oscar.villellas@continuum.io>," Wed, 17 Oct 2012 16:02:32 +0200",ct: [PATCH 19/76] lapack_lite for builds of umath_linalg without an optimized lapack in the system.,9,146761,3,numpy/core/src/umath/lapack_lite/zlapack_lite.c,[u'26005'],6,0," -0,0 +1,26005 ;",;
2954,76,4b5f777, ovillellas <oscar.villellas@continuum.io>," Wed, 17 Oct 2012 16:02:32 +0200",ct: [PATCH 19/76] lapack_lite for builds of umath_linalg without an optimized lapack in the system.,9,146761,3,numpy/core/src/umath/umath_linalg.c.src,[u'1'],0,1," -19,7 +19,6 ;",;
2954,76,b29fa3c, ovillellas <oscar.villellas@continuum.io>," Wed, 17 Oct 2012 17:47:37 +0200",ct: [PATCH 20/76] added some single precision functions to f2c_lite.c that were missing and needed by out library. It seems to work now on Linux.,2,170,0,numpy/core/setup.py,[u'1'],0,1," -933,7 +933,6 ;","def get_lapack_lite_sources(ext, build_dir);"
2954,76,b29fa3c, ovillellas <oscar.villellas@continuum.io>," Wed, 17 Oct 2012 17:47:37 +0200",ct: [PATCH 20/76] added some single precision functions to f2c_lite.c that were missing and needed by out library. It seems to work now on Linux.,2,170,0,numpy/core/src/umath/lapack_lite/f2c_lite.c,[u'170'],28,0," -21,6 +21,34 ; -51,6 +79,16 ; -85,6 +123,18 ; -96,6 +146,16 ; -137,6 +197,40 ; -341,6 +435,17 ; -354,6 +459,42 ; -390,6 +531,35 ;","s_rnge(char *var, int index, char *routine, int lineno;return(temp);return(z->i);double d_lg10(doublereal *x;return(pow(*ap, *bp) );void s_copy(register char *a, register char *b, ftnlen la, ftnlen lb;return( f__cabs( z->r, z->i ) );els;"
2954,76,56d70ff, ovillellas <oscar.villellas@continuum.io>," Tue, 23 Oct 2012 18:40:52 +0200","ct: [PATCH 21/76] added plenty of simple functions (quadratic_form plus all the ""inspired from PDL"" ufuncs). Only missing from ""inspired from PDL"" is matrix_multiply3.",1,526,28,numpy/core/src/umath/umath_linalg.c.src,[u'554'],30,2," -161,20 +161,42 ; -212,8 +234,7 ; -221,6 +242,18 ; -332,6 +365,71 ; -401,6 +499,14 ; -410,6 +516,21 ; -421,6 +542,8 ; -581,7 +704,7 ; -835,11 +958,6 ; -982,15 +1100,20 ; -1118,6 +1241,7 ; -1129,7 +1253,7 ; -1210,7 +1334,9 ; -1370,6 +1496,7 ; -2385,19 +2512,28 ; -2405,7 +2541,276 ; -2456,6 +2861,15 ; -2471,6 +2885,27 ; -2542,7 +2977,6 ; -2552,7 +2986,6 ; -2562,7 +2995,6 ; -2573,7 +3005,6 ; -2730,7 +3161,74 ;","extern int FNAME(zungqr)(int *m, int *n, int *k, f2c_doublecomplex a[];FNAME(zgemm)(char *transa, char *transb;typedef f2c_doublecomplex fortran_doublecomplex;dump_linearize_data(const char* name, const LINEARIZE_DATA_t* params;dump_@TYPE@_matrix(const char* name, size_t rows, size_t columns, const @typ@* ;dump_@TYPE@_matrix(const char* name, size_t rows, size_t columns, const @typ@* ;update_pointers(uint8_t** bases, ptrdiff_t* offsets, size_t count;static inline voi;static voi;static inline voi;init_@lapack_func@(EIGH_PARAMS_t* params, char JOBZ, char UPLO;init_@lapack_func@(EIGH_PARAMS_t* params, char JOBZ, char UPLO;init_@lapack_func@(EIGH_PARAMS_t *params, char JOBZ, char UPLO;typedef struct gesv_params_struc;static inline voi;static voi;GUFUNC_FUNC_ARRAY_REAL_COMPLEX(svd_S);static char equal_3_types[] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;"
2954,76,3cde140, ovillellas <oscar.villellas@continuum.io>," Tue, 23 Oct 2012 19:38:42 +0200",ct: [PATCH 22/76] added information about the contents of umath-linalg module,1,135,0,numpy/core/src/umath/umath_linalg_content.txt,[u'135'],26,0," -0,0 +1,135 ;",;
2954,76,f26444d, ovillellas <oscar.villellas@continuum.io>," Wed, 24 Oct 2012 15:54:07 +0200",ct: [PATCH 23/76] fixed gufuncs so that they use the proper signature (mwiebe fix present),1,15,15,numpy/core/src/umath/umath_linalg.c.src,[u'30'],15,15," -1566,7 +1566,7 ; -2997,26 +2997,26 ; -3026,7 +3026,7 ; -3036,7 +3036,7 ; -3046,7 +3046,7 ; -3056,7 +3056,7 ; -3066,7 +3066,7 ; -3076,7 +3076,7 ; -3086,7 +3086,7 ; -3144,7 +3144,7 ; -3154,7 +3154,7 ;",static voi;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;
2954,76,839e597, ovillellas <oscar.villellas@continuum.io>," Mon, 29 Oct 2012 19:02:24 +0100","ct: [PATCH 24/76] fixed a warning in f2c_lite.c for umath/lapack_lite added chosolve and poinv, they need testing.",2,540,112,numpy/core/src/umath/lapack_lite/f2c_lite.c,[u'2'],1,1," -78,7 +78,7 ;",temp = real*sqrt(1.0 + temp*temp);  /*overflow!!*;
2954,76,839e597, ovillellas <oscar.villellas@continuum.io>," Mon, 29 Oct 2012 19:02:24 +0100","ct: [PATCH 24/76] fixed a warning in f2c_lite.c for umath/lapack_lite added chosolve and poinv, they need testing.",2,540,112,numpy/core/src/umath/umath_linalg.c.src,[u'650'],23,5," -22,7 +22,7 ; -39,112 +39,211 ; -157,7 +256,7 ; -544,6 +643,12 ; -2719,8 +2824,8 ; -2810,6 +2915,276 ; -2869,6 +3244,12 ; -3227,8 +3608,55 ;",";typedef struct { float r, i; } f2c_complex;extern int FNAME(dorgqr)(int *m, int *n, int *k, double a[], int *lda;update_pointers(uint8_t** bases, ptrdiff_t* offsets, size_t count;static inline @typ;static voi;GUFUNC_FUNC_ARRAY_REAL_COMPLEX(multiply_add);GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;"
2954,76,4f2a508, ovillellas <oscar.villellas@continuum.io>," Wed, 31 Oct 2012 13:02:22 +0100",ct: [PATCH 25/76] poinv and chosolve working. Rebuilt lapack_lite to support them. Used also a patched f2c to remove warnings.,4,8056,4063,numpy/core/src/umath/lapack_lite/blas_lite.c,[u'386'],1,1," -539,8 +539,8 ; -593,7 +593,7 ; -608,7 +608,7 ; -731,7 +731,7 ; -746,7 +746,7 ; -783,7 +783,7 ; -798,7 +798,7 ; -1149,8 +1149,8 ; -1186,7 +1186,7 ; -1244,7 +1244,7 ; -1271,7 +1271,7 ; -1507,7 +1507,7 ; -1525,7 +1525,7 ; -1554,7 +1554,7 ; -1698,7 +1698,7 ; -1716,7 +1716,7 ; -1745,7 +1745,7 ; -1916,8 +1916,8 ; -1942,7 +1942,7 ; -2322,7 +2322,7 ; -2331,7 +2331,7 ; -2361,8 +2361,8 ; -2417,8 +2417,8 ; -2484,8 +2484,8 ; -2540,8 +2540,8 ; -2806,8 +2806,8 ; -2923,8 +2923,8 ; -3007,8 +3007,8 ; -3431,7 +3431,7 ; -3543,7 +3543,7 ; -3606,7 +3606,7 ; -3783,7 +3783,7 ; -3846,7 +3846,7 ; -4181,7 +4181,7 ; -4219,7 +4219,7 ; -4402,7 +4402,7 ; -4450,7 +4450,7 ; -4485,7 +4485,7 ; -4531,7 +4531,7 ; -4550,7 +4550,7 ; -4596,7 +4596,7 ; -4795,7 +4795,7 ; -4828,7 +4828,7 ; -4864,7 +4864,7 ; -4897,7 +4897,7 ; -5372,7 +5372,7 ; -5386,7 +5386,7 ; -5415,7 +5415,7 ; -5430,7 +5430,7 ; -5577,7 +5577,7 ; -5592,7 +5592,7 ; -5628,7 +5628,7 ; -5643,7 +5643,7 ; -5710,7 +5710,7 ; -5734,7 +5734,7 ; -5774,7 +5774,7 ; -5798,7 +5798,7 ; -5999,7 +5999,7 ; -6026,7 +6026,7 ; -6058,7 +6058,7 ; -6087,7 +6087,7 ; -6809,7 +6809,8 ; -7110,7 +7111,7 ; -7373,7 +7374,7 ; -7461,7 +7462,7 ; -7592,7 +7593,7 ; -7873,7 +7874,7 ; -8159,7 +8160,7 ; -8168,7 +8169,7 ; -8196,7 +8197,7 ; -8211,7 +8212,7 ; -8237,7 +8238,7 ; -8252,7 +8253,7 ; -8470,7 +8471,7 ; -8549,7 +8550,8 ; -8582,7 +8584,8 ; -8825,7 +8828,7 ; -10241,7 +10244,7 ; -10303,7 +10306,7 ; -10384,7 +10387,7 ; -10462,7 +10465,7 ; -10532,7 +10535,7 ; -10602,7 +10605,7 ; -10702,7 +10705,7 ; -10716,23 +10719,23 ; -10874,7 +10877,7 ; -10940,7 +10943,7 ; -11372,7 +11375,8 ; -11673,7 +11677,7 ; -11935,7 +11939,7 ; -12023,7 +12027,7 ; -12153,7 +12157,7 ; -12434,7 +12438,7 ; -12719,7 +12723,7 ; -12728,7 +12732,7 ; -12756,7 +12760,7 ; -12771,7 +12775,7 ; -12797,7 +12801,7 ; -12812,7 +12816,7 ; -13030,7 +13034,7 ; -13109,8 +13113,8 ; -13143,8 +13147,8 ; -13387,7 +13391,7 ; -15158,7 +15162,7 ; -15405,8 +15409,8 ; -15459,7 +15463,7 ; -15474,7 +15478,7 ; -15597,7 +15601,7 ; -15612,7 +15616,7 ; -15649,7 +15653,7 ; -15664,7 +15668,7 ; -16016,8 +16020,8 ; -16053,7 +16057,7 ; -16111,7 +16115,7 ; -16138,7 +16142,7 ; -16375,7 +16379,7 ; -16393,7 +16397,7 ; -16422,7 +16426,7 ; -16567,7 +16571,7 ; -16585,7 +16589,7 ; -16614,7 +16618,7 ; -16785,8 +16789,8 ; -16811,7 +16815,7 ; -17192,7 +17196,7 ; -17201,7 +17205,7 ; -17231,8 +17235,8 ; -17287,8 +17291,8 ; -17354,8 +17358,8 ; -17410,8 +17414,8 ; -17676,8 +17680,8 ; -17793,8 +17797,8 ; -17877,8 +17881,8 ; -18301,7 +18305,7 ; -18413,7 +18417,7 ; -18476,7 +18480,7 ; -18653,7 +18657,7 ; -18986,7 +18990,7 ; -19024,7 +19028,7 ; -19207,7 +19211,7 ; -19255,7 +19259,7 ; -19290,7 +19294,7 ; -19336,7 +19340,7 ; -19355,7 +19359,7 ; -19401,7 +19405,7 ; -19600,7 +19604,7 ; -19633,7 +19637,7 ; -19669,7 +19673,7 ; -19702,7 +19706,7 ; -20178,7 +20182,7 ; -20192,7 +20196,7 ; -20221,7 +20225,7 ; -20236,7 +20240,7 ; -20383,7 +20387,7 ; -20398,7 +20402,7 ; -20434,7 +20438,7 ; -20449,7 +20453,7 ; -20516,7 +20520,7 ; -20540,7 +20544,7 ; -20580,7 +20584,7 ; -20604,7 +20608,7 ; -20806,7 +20810,7 ; -20833,7 +20837,7 ; -20865,7 +20869,7 ; -20894,7 +20898,7 ;","static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};static doublecomplex c_b1077 = {1.,0.};doublereal ddot_(integer *n, doublereal *dx, integer *incx, doublereal *dy;doublereal ddot_(integer *n, doublereal *dx, integer *incx, doublereal *dy;doublereal ddot_(integer *n, doublereal *dx, integer *incx, doublereal *dy;doublereal dnrm2_(integer *n, doublereal *x, integer *incx;doublereal dnrm2_(integer *n, doublereal *x, integer *incx;doublereal dnrm2_(integer *n, doublereal *x, integer *incx;doublereal dnrm2_(integer *n, doublereal *x, integer *incx;doublereal dnrm2_(integer *n, doublereal *x, integer *incx;doublereal dnrm2_(integer *n, doublereal *x, integer *incx;doublereal dnrm2_(integer *n, doublereal *x, integer *incx;doublereal dnrm2_(integer *n, doublereal *x, integer *incx;doublereal dnrm2_(integer *n, doublereal *x, integer *incx;doublereal dnrm2_(integer *n, doublereal *x, integer *incx;doublereal dnrm2_(integer *n, doublereal *x, integer *incx;doublereal dnrm2_(integer *n, doublereal *x, integer *incx;doublereal dnrm2_(integer *n, doublereal *x, integer *incx;doublereal dzasum_(integer *n, doublecomplex *zx, integer *incx;doublereal dznrm2_(integer *n, doublecomplex *x, integer *incx;integer icamax_(integer *n, complex *cx, integer *incx;integer idamax_(integer *n, doublereal *dx, integer *incx;integer isamax_(integer *n, real *sx, integer *incx;integer izamax_(integer *n, doublecomplex *zx, integer *incx;logical lsame_(char *ca, char *cb;logical lsame_(char *ca, char *cb;doublereal scasum_(integer *n, complex *cx, integer *incx;doublereal scnrm2_(integer *n, complex *x, integer *incx;doublereal sdot_(integer *n, real *sx, integer *incx, real *sy, integer *incy;doublereal sdot_(integer *n, real *sx, integer *incx, real *sy, integer *incy;doublereal sdot_(integer *n, real *sx, integer *incx, real *sy, integer *incy;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;doublereal snrm2_(integer *n, real *x, integer *incx;"
2954,76,4f2a508, ovillellas <oscar.villellas@continuum.io>," Wed, 31 Oct 2012 13:02:22 +0100",ct: [PATCH 25/76] poinv and chosolve working. Rebuilt lapack_lite to support them. Used also a patched f2c to remove warnings.,4,8056,4063,numpy/core/src/umath/lapack_lite/dlapack_lite.c,[u'6914'],16,7," -38,15 +38,15 ; -149,9 +149,9 ; -182,7 +182,7 ; -212,7 +212,7 ; -466,7 +466,7 ; -497,7 +497,7 ; -562,7 +562,7 ; -573,7 +573,8 ; -589,7 +590,8 ; -1476,9 +1478,9 ; -1496,12 +1498,12 ; -1516,12 +1518,12 ; -1540,10 +1542,10 ; -1706,7 +1708,7 ; -1945,9 +1947,9 ; -2147,9 +2149,9 ; -2227,7 +2229,7 ; -2928,23 +2930,24 ; -2958,17 +2961,17 ; -2978,33 +2981,34 ; -3026,7 +3030,7 ; -3182,9 +3186,10 ; -3196,10 +3201,10 ; -3957,14 +3962,14 ; -3972,11 +3977,11 ; -4007,9 +4012,9 ; -4024,22 +4029,22 ; -4051,17 +4056,17 ; -4078,38 +4083,38 ; -4117,23 +4122,23 ; -4142,17 +4147,17 ; -4160,23 +4165,23 ; -4198,9 +4203,9 ; -4214,22 +4219,22 ; -4241,17 +4246,17 ; -4268,38 +4273,38 ; -4307,23 +4312,23 ; -4332,17 +4337,17 ; -4350,23 +4355,23 ; -4390,7 +4395,7 ; -5335,8 +5340,8 ; -5646,8 +5651,8 ; -6432,7 +6437,7 ; -6445,7 +6450,7 ; -6588,7 +6593,7 ; -6596,7 +6601,7 ; -6784,7 +6789,7 ; -7015,7 +7020,7 ; -7027,10 +7032,10 ; -7041,9 +7046,9 ; -7367,7 +7372,7 ; -7446,7 +7451,7 ; -8043,7 +8048,7 ; -8055,13 +8060,13 ; -8191,7 +8196,7 ; -8294,7 +8299,7 ; -8681,7 +8686,7 ; -9368,7 +9373,7 ; -9658,7 +9663,7 ; -9686,7 +9691,7 ; -9708,7 +9713,7 ; -10034,7 +10039,7 ; -10103,7 +10108,8 ; -10327,7 +10333,7 ; -10477,10 +10483,10 ; -10807,7 +10813,7 ; -10827,7 +10833,7 ; -11621,13 +11627,13 ; -11667,9 +11673,10 ; -11698,40 +11705,41 ; -11746,7 +11754,7 ; -11758,9 +11766,10 ; -11771,9 +11780,9 ; -11810,22 +11819,23 ; -11834,10 +11844,10 ; -11850,7 +11860,7 ; -11862,9 +11872,10 ; -11875,9 +11886,9 ; -11924,9 +11935,9 ; -12164,7 +12175,7 ; -12239,7 +12250,7 ; -12252,8 +12263,9 ; -12265,8 +12277,8 ; -12293,7 +12305,7 ; -12306,8 +12318,9 ; -12319,8 +12332,8 ; -12363,7 +12376,7 ; -12376,7 +12389,7 ; -12412,7 +12425,7 ; -12425,7 +12438,7 ; -12483,7 +12496,7 ; -12496,9 +12509,9 ; -12510,8 +12523,8 ; -12538,7 +12551,7 ; -12551,9 +12564,9 ; -12565,8 +12578,8 ; -12789,7 +12802,7 ; -12802,7 +12815,7 ; -12837,7 +12850,7 ; -12847,7 +12860,7 ; -13031,12 +13044,12 ; -13048,7 +13061,7 ; -13066,7 +13079,7 ; -13439,8 +13452,8 ; -13482,7 +13495,8 ; -13639,7 +13653,8 ; -13687,7 +13702,8 ; -13842,8 +13858,8 ; -13889,7 +13905,8 ; -13998,7 +14015,7 ; -14152,7 +14169,7 ; -14169,7 +14186,7 ; -14316,7 +14333,7 ; -16588,7 +16605,7 ; -16599,8 +16616,8 ; -16632,7 +16649,7 ; -16647,8 +16664,8 ; -16691,7 +16708,7 ; -16699,7 +16716,7 ; -16710,8 +16727,8 ; -16722,8 +16739,8 ; -16765,7 +16782,7 ; -16773,7 +16790,7 ; -16788,8 +16805,8 ; -16800,8 +16817,8 ; -16854,7 +16871,7 ; -16862,7 +16879,7 ; -16881,8 +16898,8 ; -16893,8 +16910,8 ; -16958,7 +16975,7 ; -16966,7 +16983,7 ; -16989,8 +17006,8 ; -17001,8 +17018,8 ; -17077,7 +17094,7 ; -17085,7 +17102,7 ; -17101,7 +17118,7 ; -17112,8 +17129,8 ; -17124,8 +17141,8 ; -17148,8 +17165,8 ; -17211,7 +17228,7 ; -17219,7 +17236,7 ; -17235,7 +17252,7 ; -17250,8 +17267,8 ; -17262,8 +17279,8 ; -17286,8 +17303,8 ; -17360,7 +17377,7 ; -17368,7 +17385,7 ; -17384,7 +17401,7 ; -17403,8 +17420,8 ; -17415,8 +17432,8 ; -17439,8 +17456,8 ; -17594,23 +17611,25 ; -17624,7 +17643,7 ; -17770,7 +17789,7 ; -18070,13 +18089,13 ; -18092,7 +18111,7 ; -18105,7 +18124,7 ; -18135,7 +18154,7 ; -18168,7 +18187,7 ; -18198,7 +18217,7 ; -18231,7 +18250,7 ; -18261,7 +18280,7 ; -18299,7 +18318,7 ; -18329,7 +18348,7 ; -18362,7 +18381,7 ; -18392,7 +18411,7 ; -18425,7 +18444,7 ; -18455,7 +18474,7 ; -18695,7 +18714,7 ; -20312,6 +20331,363 ; -20639,7 +21015,7 ; -20746,6 +21122,248 ; -21029,7 +21647,7 ; -21040,7 +21658,7 ; -21056,13 +21674,13 ; -21070,7 +21688,7 ; -21445,7 +22063,7 ; -22089,8 +22707,8 ; -22123,9 +22741,9 ; -22405,6 +23023,387 ; -22488,9 +23487,9 ; -22693,8 +23692,8 ; -22726,7 +23725,7 ; -22782,8 +23781,8 ; -22837,8 +23836,8 ; -22944,9 +23943,9 ; -23132,7 +24131,7 ; -23320,7 +24319,7 ; -23580,9 +24579,9 ; -23876,7 +24875,7 ; -23891,11 +24890,11 ; -24091,7 +25090,7 ; -24106,11 +25105,11 ; -24362,7 +25361,8 ; -24427,7 +25427,7 ; -24491,9 +25491,9 ; -24644,7 +25644,7 ; -24659,11 +25659,11 ; -24896,7 +25896,7 ; -24935,7 +25935,7 ; -24961,7 +25961,7 ; -24971,7 +25971,7 ; -25202,7 +26202,7 ; -25241,7 +26241,7 ; -25267,7 +26267,7 ; -25277,7 +26277,7 ; -25498,7 +26498,7 ; -25537,7 +26537,7 ; -25563,7 +26563,7 ; -25573,7 +26573,7 ; -25862,7 +26862,7 ; -25880,8 +26880,8 ; -26124,9 +27124,9 ; -26144,10 +27144,10 ; -26169,7 +27169,7 ; -26177,7 +27177,7 ; -26203,17 +27203,17 ; -26223,8 +27223,8 ; -26233,8 +27233,8 ; -26248,11 +27248,11 ; -26273,7 +27273,7 ; -26300,10 +27300,10 ; -26335,7 +27335,7 ; -26605,11 +27605,12 ; -26626,7 +27627,7 ; -26682,7 +27683,7 ; -26844,7 +27845,7 ; -26867,9 +27868,9 ; -26904,8 +27905,9 ; -27095,7 +28097,7 ; -27155,7 +28157,7 ; -27225,7 +28227,7 ; -27394,9 +28396,9 ; -27427,7 +28429,7 ; -27457,7 +28459,7 ; -27799,7 +28801,7 ; -27810,7 +28812,8 ; -27826,7 +28829,8 ; -28426,14 +29430,14 ; -28675,9 +29679,9 ; -28694,9 +29698,9 ; -28714,7 +29718,7 ; -28722,11 +29726,11 ; -28741,14 +29745,14 ; -28904,7 +29908,7 ; -29148,9 +30152,9 ; -29344,9 +30348,9 ; -29430,7 +30434,7 ; -29465,9 +30469,9 ; -30129,8 +31133,8 ; -30142,8 +31146,8 ; -30154,17 +31158,17 ; -30174,7 +31178,7 ; -30182,7 +31186,7 ; -30224,7 +31228,7 ; -30260,8 +31264,8 ; -30290,7 +31294,7 ; -30332,7 +31336,7 ; -30376,9 +31380,10 ; -30390,10 +31395,10 ; -30415,7 +31420,7 ; -30457,7 +31462,7 ; -31125,14 +32130,14 ; -31140,11 +32145,11 ; -31165,7 +32170,7 ; -31175,9 +32180,9 ; -31194,9 +32199,9 ; -31209,8 +32214,8 ; -31222,9 +32227,9 ; -31250,9 +32255,9 ; -31330,7 +32335,7 ; -31340,9 +32345,9 ; -31359,9 +32364,9 ; -31374,8 +32379,8 ; -31387,9 +32392,9 ; -31415,9 +32420,9 ; -31505,7 +32510,7 ; -31565,7 +32570,7 ; -31624,7 +32629,7 ; -31692,8 +32697,8 ; -31729,7 +32734,7 ; -31787,8 +32792,8 ; -31828,7 +32833,7 ; -31876,8 +32881,8 ; -31924,7 +32929,7 ; -32000,8 +33005,8 ; -32018,7 +33023,7 ; -32045,7 +33050,7 ; -32054,7 +33059,7 ; -32107,8 +33112,8 ; -32172,7 +33177,7 ; -32234,8 +33239,8 ; -32272,7 +33277,7 ; -32329,8 +33334,8 ; -32371,8 +33376,8 ; -32418,8 +33423,8 ; -32465,7 +33470,7 ; -32540,8 +33545,8 ; -32557,7 +33562,7 ; -32584,7 +33589,7 ; -32593,7 +33598,7 ; -32853,7 +33858,7 ; -32892,7 +33897,7 ; -33006,7 +34011,7 ; -33014,7 +34019,7 ; -33070,7 +34075,7 ; -33079,8 +34084,8 ; -33201,7 +34206,7 ; -33217,12 +34222,12 ; -33232,12 +34237,12 ; -33437,7 +34442,7 ; -33448,13 +34453,13 ; -33470,7 +34475,7 ; -33531,7 +34536,7 ; -33641,7 +34646,7 ; -33702,7 +34707,7 ; -33713,7 +34718,7 ; -33726,7 +34731,7 ; -34077,7 +35082,7 ; -34092,13 +35097,13 ; -34116,30 +35121,30 ; -34147,13 +35152,13 ; -34170,26 +35175,26 ; -34207,13 +35212,13 ; -34231,28 +35236,28 ; -34261,12 +35266,12 ; -34283,27 +35288,27 ; -34767,7 +35772,7 ; -34805,7 +35810,7 ; -34833,7 +35838,7 ; -34856,7 +35861,7 ; -34900,9 +35905,9 ; -35167,7 +36172,7 ; -35433,7 +36438,7 ; -35453,7 +36458,7 ; -36053,18 +37058,18 ; -36382,7 +37387,7 ; -36467,7 +37472,7 ; -36659,7 +37664,7 ; -36762,7 +37767,7 ; -36947,7 +37952,7 ; -37682,7 +38687,7 ; -37690,7 +38695,7 ; -37761,9 +38766,9 ; -37776,8 +38781,8 ; -37993,7 +38998,7 ; -38001,7 +39006,7 ; -38023,7 +39028,7 ; -38159,10 +39164,10 ; -38377,9 +39382,9 ; -38438,7 +39443,7 ; -38706,16 +39711,16 ; -38745,14 +39750,14 ; -39197,7 +40202,7 ; -39626,8 +40631,8 ; -39653,8 +40658,8 ; -39667,8 +40672,8 ; -39677,7 +40682,7 ; -39699,17 +40704,17 ; -39979,8 +40984,8 ; -39990,11 +40995,11 ; -40006,13 +41011,13 ; -40057,9 +41062,9 ; -40140,9 +41145,10 ; -40152,8 +41158,8 ; -40163,13 +41169,13 ; -40217,13 +41223,13 ; -40247,13 +41253,13 ; -40266,8 +41272,10 ; -40506,13 +41514,13 ; -40552,9 +41560,10 ; -40576,55 +41585,56 ; -40651,22 +41661,23 ; -40675,15 +41686,15 ; -40721,9 +41732,9 ; -40960,7 +41971,7 ; -41026,10 +42037,10 ; -41054,7 +42065,7 ; -41067,7 +42078,7 ; -41103,7 +42114,7 ; -41116,7 +42127,7 ; -41165,11 +42176,11 ; -41365,7 +42376,7 ; -41378,7 +42389,7 ; -41390,10 +42401,10 ; -41413,7 +42424,7 ; -41423,7 +42434,7 ; -41439,12 +42450,12 ; -41454,7 +42465,7 ; -41464,25 +42475,25 ; -41499,12 +42510,12 ; -41512,7 +42523,7 ; -41530,7 +42541,7 ; -41579,7 +42590,7 ; -41633,11 +42644,11 ; -41656,8 +42667,8 ; -41675,9 +42686,9 ; -41904,8 +42915,8 ; -41947,7 +42958,8 ; -42072,8 +43084,8 ; -42119,7 +43131,8 ; -42236,8 +43249,8 ; -42257,7 +43270,8 ; -42408,7 +43422,8 ; -42454,7 +43469,8 ; -42577,7 +43593,7 ; -42591,7 +43607,7 ; -42628,7 +43644,7 ; -42656,7 +43672,7 ; -42913,8 +43929,8 ; -42930,8 +43946,8 ; -43068,7 +44084,7 ; -43109,21 +44125,21 ; -43133,14 +44149,14 ; -43175,7 +44191,7 ; -43183,14 +44199,14 ; -43200,14 +44216,14 ; -43252,21 +44268,21 ; -43276,14 +44292,14 ; -43320,7 +44336,7 ; -43328,13 +44344,13 ; -43344,14 +44360,14 ; -43399,21 +44415,21 ; -43423,15 +44439,15 ; -43465,22 +44481,22 ; -43491,15 +44507,15 ; -43543,7 +44559,7 ; -43551,14 +44567,14 ; -43568,15 +44584,15 ; -43611,7 +44627,7 ; -43619,14 +44635,14 ; -43637,14 +44653,14 ; -43981,7 +44997,7 ; -43992,7 +45008,7 ; -44035,7 +45051,7 ; -44052,7 +45068,7 ; -44188,8 +45204,8 ; -44503,8 +45519,8 ; -44533,9 +45549,9 ; -44551,10 +45567,10 ; -44573,12 +45589,12 ; -44598,13 +45614,13 ; -44627,13 +45643,13 ; -44659,14 +45675,14 ; -44695,18 +45711,18 ; -44734,19 +45750,19 ; -44777,19 +45793,19 ; -45217,23 +46233,25 ; -45247,7 +46265,7 ; -45375,7 +46393,7 ; -45529,7 +46547,7 ; -45641,7 +46659,7 ; -45851,7 +46869,7 ; -45898,7 +46916,7 ; -45922,7 +46940,7 ; -46482,7 +47500,7 ; -46733,7 +47751,7 ; -46801,7 +47819,7 ; -46872,31 +47890,31 ; -46917,17 +47935,17 ; -46946,8 +47964,8 ; -47572,7 +48590,7 ; -47688,7 +48706,7 ; -47886,7 +48904,7 ; -48395,13 +49413,13 ; -48444,7 +49462,7 ; -48466,12 +49484,13 ; -48696,13 +49715,13 ; -48876,9 +49895,9 ; -49126,7 +50145,7 ; -49146,7 +50165,7 ; -49187,12 +50206,12 ; -49266,7 +50285,7 ; -49524,13 +50543,13 ; -49609,7 +50628,7 ; -49618,8 +50637,8 ; -49646,7 +50665,7 ; -49655,8 +50674,8 ; -49680,7 +50699,7 ; -49693,7 +50712,7 ; -49927,7 +50946,7 ; -49937,11 +50956,12 ; -49955,7 +50975,7 ; -50214,7 +51234,7 ; -50505,14 +51525,14 ; -50674,7 +51694,7 ; -50710,7 +51730,7 ; -50734,14 +51754,14 ; -50750,11 +51770,11 ; -50763,7 +51783,7 ; -50775,11 +51795,11 ; -50788,10 +51808,10 ; -50808,9 +51828,9 ; -50822,38 +51842,38 ; -50868,7 +51888,7 ; -50887,7 +51907,7 ; -50901,13 +51921,13 ; -50934,7 +51954,7 ; -50965,16 +51985,16 ; -50993,7 +52013,7 ; -51024,7 +52044,7 ; -51040,13 +52060,13 ; -51176,21 +52196,21 ; -51198,8 +52218,8 ; -51222,8 +52242,8 ; -51231,11 +52251,12 ; -51251,23 +52272,25 ; -51278,9 +52301,9 ; -51305,12 +52328,12 ; -51473,12 +52496,12 ; -51528,7 +52551,7 ; -51545,7 +52568,7 ; -51556,7 +52579,7 ; -51579,11 +52602,11 ; -51593,7 +52616,7 ; -51604,7 +52627,7 ; -51649,8 +52672,8 ; -51708,8 +52731,8 ; -51835,7 +52858,7 ; -51846,8 +52869,8 ; -51859,8 +52882,8 ; -51877,8 +52900,8 ; -51886,7 +52909,7 ; -51897,8 +52920,8 ; -51913,8 +52936,8 ; -51934,8 +52957,8 ; -51947,7 +52970,7 ; -51960,7 +52983,7 ; -52043,14 +53066,14 ; -52073,8 +53096,8 ; -52102,8 +53125,8 ; -52123,7 +53146,7 ; -52142,7 +53165,7 ; -52274,13 +53297,13 ; -52296,7 +53319,7 ; -52309,7 +53332,7 ; -52326,7 +53349,7 ; -52346,7 +53369,7 ; -52363,7 +53386,7 ; -52383,7 +53406,7 ; -52400,7 +53423,7 ; -52425,7 +53448,7 ; -52442,7 +53465,7 ; -52462,7 +53485,7 ; -52479,7 +53502,7 ; -52499,7 +53522,7 ; -52516,7 +53539,7 ; -52633,8 +53656,8 ; -52739,18 +53762,18 ; -52777,18 +53800,18 ; -53098,7 +54121,7 ; -53127,19 +54150,19 ; -53235,7 +54258,7 ; -53472,13 +54495,13 ; -53496,30 +54519,30 ; -53544,13 +54567,13 ; -53570,29 +54593,29 ; -53614,6 +54637,344 ; -53696,9 +55057,9 ; -53893,8 +55254,8 ; -53926,7 +55287,7 ; -53977,8 +55338,8 ; -54027,8 +55388,8 ; -54135,9 +55496,9 ; -54310,7 +55671,7 ; -54483,7 +55844,7 ; -54739,9 +56100,9 ; -55029,7 +56390,7 ; -55044,11 +56405,11 ; -55230,7 +56591,7 ; -55245,11 +56606,11 ; -55491,7 +56852,8 ; -55557,7 +56919,7 ; -55621,9 +56983,9 ; -55769,7 +57131,7 ; -55784,11 +57146,11 ; -56002,7 +57364,7 ; -56041,7 +57403,7 ; -56067,7 +57429,7 ; -56077,7 +57439,7 ; -56307,7 +57669,7 ; -56346,7 +57708,7 ; -56372,7 +57734,7 ; -56382,7 +57744,7 ; -56602,7 +57964,7 ; -56641,7 +58003,7 ; -56667,7 +58029,7 ; -56677,7 +58039,7 ; -56967,7 +58329,7 ; -56985,8 +58347,8 ; -57145,8 +58507,8 ; -57178,8 +58540,8 ; -57314,7 +58676,7 ; -57340,8 +58702,8 ; -57353,12 +58715,12 ; -57381,8 +58743,8 ; -57394,11 +58756,11 ; -57417,6 +58779,249 ; -57592,7 +59197,7 ; -57603,7 +59208,7 ; -57617,12 +59222,12 ; -57630,7 +59235,7 ; -57715,7 +59320,7 ; -57765,11 +59370,11 ; -57788,7 +59393,7 ; -57804,8 +59409,8 ; -58022,7 +59627,7 ; -58061,7 +59666,7 ; -58211,7 +59816,7 ; -58337,7 +59942,7 ; -58722,7 +60327,7 ; -58824,7 +60429,7 ; -59085,7 +60690,7 ; -59098,17 +60703,17 ; -59168,7 +60773,7 ; -59183,7 +60788,7 ; -59205,7 +60810,7 ; -59417,7 +61022,7 ; -59431,7 +61036,7 ; -59470,7 +61075,7 ; -59488,7 +61093,7 ; -59776,8 +61381,8 ; -59821,8 +61426,8 ; -60086,8 +61691,8 ; -60102,9 +61707,9 ; -60130,7 +61735,7 ; -60196,7 +61801,7 ; -60280,9 +61885,9 ; -60315,9 +61920,9 ; -60377,7 +61982,7 ; -60442,8 +62047,8 ; -60484,9 +62089,9 ; -60576,11 +62181,11 ; -60721,9 +62326,9 ; -60772,9 +62377,9 ; -60822,7 +62427,7 ; -60917,8 +62522,8 ; -60984,8 +62589,8 ; -61052,11 +62657,11 ; -61108,6 +62713,370 ; -61404,7 +63373,7 ; -61419,24 +63388,24 ; -61453,9 +63422,9 ; -61487,10 +63456,10 ; -61545,41 +63514,45 ; -61645,10 +63618,10 ; -61689,41 +63662,45 ; -61737,10 +63714,10 ; -61769,23 +63746,25 ; -62088,9 +64067,9 ; -62133,7 +64112,7 ; -62141,7 +64120,7 ; -62212,11 +64191,11 ; -62237,7 +64216,7 ; -62568,11 +64547,12 ; -62589,7 +64569,7 ; -62646,7 +64626,7 ; -62808,7 +64788,7 ; -62831,9 +64811,9 ; -62868,8 +64848,9 ; -63356,9 +65337,9 ; -63389,7 +65370,7 ; -63419,7 +65400,7 ; -63759,7 +65740,7 ; -63770,7 +65751,8 ; -63786,7 +65768,8 ; -64626,9 +66609,9 ; -64645,9 +66628,9 ; -64665,7 +66648,7 ; -64673,11 +66656,11 ; -64692,14 +66675,14 ; -64855,7 +66838,7 ; -65098,9 +67081,9 ; -65291,9 +67274,9 ; -65377,7 +67360,7 ; -66074,8 +68057,8 ; -66087,8 +68070,8 ; -66099,17 +68082,17 ; -66119,7 +68102,7 ; -66127,7 +68110,7 ; -66169,7 +68152,7 ; -66321,9 +68304,10 ; -66335,10 +68319,10 ; -67072,14 +69056,14 ; -67087,11 +69071,11 ; -67112,7 +69096,7 ; -67122,9 +69106,9 ; -67141,9 +69125,9 ; -67156,8 +69140,8 ; -67169,9 +69153,9 ; -67197,9 +69181,9 ; -67277,7 +69261,7 ; -67287,9 +69271,9 ; -67306,9 +69290,9 ; -67321,8 +69305,8 ; -67334,9 +69318,9 ; -67362,9 +69346,9 ; -67452,7 +69436,7 ; -68054,8 +70038,8 ; -68318,8 +70302,8 ; -68798,7 +70782,7 ; -68949,7 +70933,7 ; -68957,7 +70941,7 ; -69143,7 +71127,7 ; -69373,7 +71357,7 ; -69384,13 +71368,13 ; -69467,7 +71451,7 ; -69577,7 +71561,7 ; -70011,7 +71995,7 ; -70695,7 +72679,7 ; -70733,7 +72717,7 ; -70761,7 +72745,7 ; -70784,7 +72768,7 ; -71092,7 +73076,7 ; -71356,7 +73340,7 ; -72301,7 +74285,7 ; -72386,7 +74370,7 ; -72578,7 +74562,7 ; -72681,7 +74665,7 ; -72866,7 +74850,7 ; -73603,7 +75587,7 ; -73611,7 +75595,7 ; -73682,9 +75666,9 ; -73914,7 +75898,7 ; -73922,7 +75906,7 ; -74080,10 +76064,10 ; -74296,9 +76280,9 ; -74357,7 +76341,7 ; -74622,16 +76606,16 ; -75108,7 +77092,7 ; -75887,8 +77871,8 ; -75898,11 +77882,11 ; -75914,13 +77898,13 ; -75965,9 +77949,9 ; -76049,10 +78033,10 ; -76062,8 +78046,8 ; -76073,13 +78057,13 ; -76127,13 +78111,13 ; -76157,13 +78141,13 ; -76176,8 +78160,10 ; -76413,13 +78399,13 ; -76459,9 +78445,10 ; -76490,40 +78477,41 ; -76558,22 +78546,23 ; -76582,10 +78571,10 ; -76628,9 +78617,9 ; -76865,7 +78854,7 ; -76959,7 +78948,7 ; -76972,7 +78961,7 ; -77008,7 +78997,7 ; -77021,7 +79010,7 ; -77263,7 +79252,7 ; -77276,7 +79265,7 ; -77311,7 +79300,7 ; -77321,7 +79310,7 ; -77396,12 +79385,12 ; -77409,7 +79398,7 ; -77427,7 +79416,7 ; -77976,7 +79965,7 ; -78192,7 +80181,7 ; -78205,7 +80194,7 ; -78451,7 +80440,7 ; -78471,9 +80460,9 ; -78775,8 +80764,8 ; -78818,7 +80807,8 ; -78942,8 +80932,8 ; -78989,7 +80979,8 ; -79106,8 +81097,8 ; -79127,7 +81118,8 ; -79278,7 +81270,8 ; -79324,7 +81317,8 ; -79933,7 +81927,7 ; -81392,9 +83386,9 ; -81410,10 +83404,10 ; -81432,12 +83426,12 ; -81457,13 +83451,13 ; -81486,13 +83480,13 ; -81518,14 +83512,14 ; -81554,18 +83548,18 ; -81593,19 +83587,19 ; -81636,19 +83630,19 ; -82076,23 +84070,25 ; -82106,7 +84102,7 ; -82234,7 +84230,7 ; -82385,7 +84381,7 ; -82497,7 +84493,7 ; -82705,7 +84701,7 ; -83584,7 +85580,7 ; -83728,8 +85724,8 ; -84422,7 +86418,7 ; -84538,7 +86534,7 ; -84736,7 +86732,7 ; -85242,13 +87238,13 ; -85313,7 +87309,8 ; -85541,13 +87538,13 ; -85721,9 +87718,9 ; -85968,7 +87965,7 ; -85988,7 +87985,7 ; -86108,7 +88105,7 ; -86362,13 +88359,13 ; -86518,7 +88515,7 ; -86531,7 +88528,7 ; -86764,7 +88761,7 ; -86774,11 +88771,12 ; -86792,7 +88790,7 ; -87051,7 +89049,7 ; -87339,14 +89337,14 ; -87507,7 +89505,7 ; -87543,7 +89541,7 ; -87567,14 +89565,14 ; -87583,11 +89581,11 ; -87596,7 +89594,7 ; -87608,11 +89606,11 ; -87621,10 +89619,10 ; -87641,9 +89639,9 ; -87655,38 +89653,38 ; -87701,7 +89699,7 ; -87720,7 +89718,7 ; -87734,13 +89732,13 ; -87767,7 +89765,7 ; -87798,16 +89796,16 ; -87826,7 +89824,7 ; -87857,7 +89855,7 ; -87873,13 +89871,13 ; -88005,21 +90003,21 ; -88027,8 +90025,8 ; -88051,8 +90049,8 ; -88060,11 +90058,12 ; -88080,23 +90079,25 ; -88107,9 +90108,9 ; -88134,12 +90135,12 ; -88301,12 +90302,12 ; -88356,7 +90357,7 ; -88373,7 +90374,7 ; -88384,7 +90385,7 ; -88407,11 +90408,11 ; -88421,7 +90422,7 ; -88432,7 +90433,7 ; -88477,8 +90478,8 ; -88536,8 +90537,8 ; -88662,7 +90663,7 ; -88673,8 +90674,8 ; -88686,8 +90687,8 ; -88704,8 +90705,8 ; -88713,7 +90714,7 ; -88724,8 +90725,8 ; -88740,8 +90741,8 ; -88761,8 +90762,8 ; -88774,7 +90775,7 ; -88787,7 +90788,7 ; -88870,14 +90871,14 ; -88900,8 +90901,8 ; -88929,8 +90930,8 ; -88950,7 +90951,7 ; -88969,7 +90970,7 ; -89100,13 +91101,13 ; -89122,7 +91123,7 ; -89135,7 +91136,7 ; -89152,7 +91153,7 ; -89172,7 +91173,7 ; -89189,7 +91190,7 ; -89209,7 +91210,7 ; -89226,7 +91227,7 ; -89251,7 +91252,7 ; -89268,7 +91269,7 ; -89288,7 +91289,7 ; -89305,7 +91306,7 ; -89325,7 +91326,7 ; -89342,7 +91343,7 ; -89458,8 +91459,8 ; -89564,18 +91565,18 ; -89602,18 +91603,18 ; -89922,7 +91923,7 ; -90059,7 +92060,7 ; -90433,6 +92434,339 ; -90515,9 +92849,9 ; -90712,8 +93046,8 ; -90745,7 +93079,7 ; -90796,8 +93130,8 ; -90846,8 +93180,8 ; -90952,9 +93286,9 ; -91127,7 +93461,7 ; -91299,7 +93633,7 ; -91554,9 +93888,9 ; -91843,7 +94177,7 ; -91858,11 +94192,11 ; -92043,7 +94377,7 ; -92058,11 +94392,11 ; -92302,7 +94636,8 ; -92368,7 +94703,7 ; -92432,9 +94767,9 ; -92579,7 +94914,7 ; -92594,11 +94929,11 ; -92812,7 +95147,7 ; -92851,7 +95186,7 ; -92877,7 +95212,7 ; -92887,7 +95222,7 ; -93117,7 +95452,7 ; -93156,7 +95491,7 ; -93182,7 +95517,7 ; -93192,7 +95527,7 ; -93412,7 +95747,7 ; -93451,7 +95786,7 ; -93477,7 +95812,7 ; -93487,7 +95822,7 ; -93777,7 +96112,7 ; -93795,8 +96130,8 ; -94119,7 +96454,7 ; -94222,6 +96557,246 ; -94394,7 +96969,7 ; -94405,7 +96980,7 ; -94419,12 +96994,12 ; -94432,7 +97007,7 ; -94820,7 +97395,7 ; -95879,7 +98454,7 ; -95892,17 +98467,17 ; -95977,7 +98552,7 ; -95999,7 +98574,7 ; -96870,8 +99445,8 ; -96886,9 +99461,9 ; -96914,7 +99489,7 ; -96980,7 +99555,7 ; -97893,3 +100468,366 ;","static integer c__15 = 15;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;static real c_b9393 = 2.f;doublereal clange_(char *norm, integer *m, integer *n, complex *a, integer ;doublereal clange_(char *norm, integer *m, integer *n, complex *a, integer ;doublereal clanhe_(char *norm, char *uplo, integer *n, complex *a, integer ;doublereal clanhe_(char *norm, char *uplo, integer *n, complex *a, integer ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal clanhs_(char *norm, integer *n, complex *a, integer *lda, real ;doublereal dlange_(char *norm, integer *m, integer *n, doublereal *a, intege;doublereal dlange_(char *norm, integer *m, integer *n, doublereal *a, intege;doublereal dlanhs_(char *norm, integer *n, doublereal *a, integer *lda;doublereal dlanhs_(char *norm, integer *n, doublereal *a, integer *lda;doublereal dlanst_(char *norm, integer *n, doublereal *d__, doublereal *e;doublereal dlanst_(char *norm, integer *n, doublereal *d__, doublereal *e;doublereal dlansy_(char *norm, char *uplo, integer *n, doublereal *a, intege;doublereal dlansy_(char *norm, char *uplo, integer *n, doublereal *a, intege;doublereal dlansy_(char *norm, char *uplo, integer *n, doublereal *a, intege;doublereal dlansy_(char *norm, char *uplo, integer *n, doublereal *a, intege;doublereal dlansy_(char *norm, char *uplo, integer *n, doublereal *a, intege;doublereal dlansy_(char *norm, char *uplo, integer *n, doublereal *a, intege;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;doublereal dlapy3_(doublereal *x, doublereal *y, doublereal *z__;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;integer ilaenv_(integer *ispec, char *name__, char *opts, integer *n1;doublereal slamch_(char *cmach;doublereal slamch_(char *cmach;doublereal slamch_(char *cmach;doublereal slamc3_(real *a, real *b;doublereal slamc3_(real *a, real *b;doublereal slange_(char *norm, integer *m, integer *n, real *a, integer *lda;doublereal slange_(char *norm, integer *m, integer *n, real *a, integer *lda;doublereal slanhs_(char *norm, integer *n, real *a, integer *lda, real *work;doublereal slanhs_(char *norm, integer *n, real *a, integer *lda, real *work;doublereal slanst_(char *norm, integer *n, real *d__, real *e;doublereal slanst_(char *norm, integer *n, real *d__, real *e;doublereal slansy_(char *norm, char *uplo, integer *n, real *a, integer *lda;doublereal slansy_(char *norm, char *uplo, integer *n, real *a, integer *lda;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;doublereal slapy3_(real *x, real *y, real *z__;"
2954,76,4f2a508, ovillellas <oscar.villellas@continuum.io>," Wed, 31 Oct 2012 13:02:22 +0100",ct: [PATCH 25/76] poinv and chosolve working. Rebuilt lapack_lite to support them. Used also a patched f2c to remove warnings.,4,8056,4063,numpy/core/src/umath/lapack_lite/zlapack_lite.c,[u'4731'],10,6," -233,9 +233,9 ; -266,7 +266,7 ; -296,7 +296,7 ; -550,7 +550,7 ; -581,7 +581,7 ; -646,7 +646,7 ; -657,7 +657,8 ; -673,7 +674,8 ; -1567,9 +1569,9 ; -1587,12 +1589,12 ; -1607,12 +1609,12 ; -1631,10 +1633,10 ; -1797,7 +1799,7 ; -2037,9 +2039,9 ; -2240,9 +2242,9 ; -2320,7 +2322,7 ; -3032,23 +3034,24 ; -3062,17 +3065,17 ; -3082,33 +3085,34 ; -3130,7 +3134,7 ; -3286,9 +3290,10 ; -3300,10 +3305,10 ; -4079,14 +4084,14 ; -4094,11 +4099,11 ; -4129,9 +4134,9 ; -4146,22 +4151,22 ; -4173,17 +4178,17 ; -4200,38 +4205,38 ; -4239,23 +4244,23 ; -4264,17 +4269,17 ; -4282,23 +4287,23 ; -4320,9 +4325,9 ; -4336,22 +4341,22 ; -4363,17 +4368,17 ; -4390,38 +4395,38 ; -4429,23 +4434,23 ; -4454,17 +4459,17 ; -4472,23 +4477,23 ; -4512,7 +4517,7 ; -5457,8 +5462,8 ; -5768,8 +5773,8 ; -6557,7 +6562,7 ; -6570,7 +6575,7 ; -6712,7 +6717,7 ; -6720,7 +6725,7 ; -6909,7 +6914,7 ; -7145,7 +7150,7 ; -7157,10 +7162,10 ; -7171,9 +7176,9 ; -7500,7 +7505,7 ; -7579,7 +7584,7 ; -8183,7 +8188,7 ; -8195,13 +8200,13 ; -8331,7 +8336,7 ; -8434,7 +8439,7 ; -8823,7 +8828,7 ; -9511,7 +9516,7 ; -9801,7 +9806,7 ; -9829,7 +9834,7 ; -9851,7 +9856,7 ; -10179,7 +10184,7 ; -10248,7 +10253,8 ; -10472,7 +10478,7 ; -10622,10 +10628,10 ; -10956,7 +10962,7 ; -10976,7 +10982,7 ; -11778,13 +11784,13 ; -11824,9 +11830,10 ; -11855,40 +11862,41 ; -11903,7 +11911,7 ; -11915,9 +11923,10 ; -11928,9 +11937,9 ; -11967,22 +11976,23 ; -11991,10 +12001,10 ; -12007,7 +12017,7 ; -12019,9 +12029,10 ; -12032,9 +12043,9 ; -12081,9 +12092,9 ; -12322,7 +12333,7 ; -12397,7 +12408,7 ; -12410,8 +12421,9 ; -12423,8 +12435,8 ; -12451,7 +12463,7 ; -12464,8 +12476,9 ; -12477,8 +12490,8 ; -12521,7 +12534,7 ; -12534,7 +12547,7 ; -12570,7 +12583,7 ; -12583,7 +12596,7 ; -12641,7 +12654,7 ; -12654,9 +12667,9 ; -12668,8 +12681,8 ; -12696,7 +12709,7 ; -12709,9 +12722,9 ; -12723,8 +12736,8 ; -12948,7 +12961,7 ; -12961,7 +12974,7 ; -12996,7 +13009,7 ; -13006,7 +13019,7 ; -13191,12 +13204,12 ; -13208,7 +13221,7 ; -13226,7 +13239,7 ; -13599,8 +13612,8 ; -13642,7 +13655,8 ; -13799,7 +13813,8 ; -13847,7 +13862,8 ; -14002,8 +14018,8 ; -14049,7 +14065,8 ; -14159,7 +14176,7 ; -14314,7 +14331,7 ; -14331,7 +14348,7 ; -14478,7 +14495,7 ; -16754,7 +16771,7 ; -16765,8 +16782,8 ; -16798,7 +16815,7 ; -16813,8 +16830,8 ; -16857,7 +16874,7 ; -16865,7 +16882,7 ; -16876,8 +16893,8 ; -16888,8 +16905,8 ; -16931,7 +16948,7 ; -16939,7 +16956,7 ; -16954,8 +16971,8 ; -16966,8 +16983,8 ; -17020,7 +17037,7 ; -17028,7 +17045,7 ; -17047,8 +17064,8 ; -17059,8 +17076,8 ; -17124,7 +17141,7 ; -17132,7 +17149,7 ; -17155,8 +17172,8 ; -17167,8 +17184,8 ; -17243,7 +17260,7 ; -17251,7 +17268,7 ; -17267,7 +17284,7 ; -17278,8 +17295,8 ; -17290,8 +17307,8 ; -17314,8 +17331,8 ; -17377,7 +17394,7 ; -17385,7 +17402,7 ; -17401,7 +17418,7 ; -17416,8 +17433,8 ; -17428,8 +17445,8 ; -17452,8 +17469,8 ; -17526,7 +17543,7 ; -17534,7 +17551,7 ; -17550,7 +17567,7 ; -17569,8 +17586,8 ; -17581,8 +17598,8 ; -17605,8 +17622,8 ; -17760,23 +17777,25 ; -17790,7 +17809,7 ; -17936,7 +17955,7 ; -18238,13 +18257,13 ; -18260,7 +18279,7 ; -18273,7 +18292,7 ; -18303,7 +18322,7 ; -18336,7 +18355,7 ; -18366,7 +18385,7 ; -18399,7 +18418,7 ; -18429,7 +18448,7 ; -18467,7 +18486,7 ; -18497,7 +18516,7 ; -18530,7 +18549,7 ; -18560,7 +18579,7 ; -18593,7 +18612,7 ; -18623,7 +18642,7 ; -18863,7 +18882,7 ; -20485,20 +20504,17 ; -20512,7 +20528,7 ; -20521,39 +20537,35 ; -20561,9 +20573,6 ; -20588,7 +20597,7 ; -20600,113 +20609,81 ; -20715,16 +20692,16 ; -20733,47 +20710,42 ; -20798,7 +20770,7 ; -20810,285 +20782,164 ; -21097,79 +20948,23 ; -21178,322 +20973,183 ; -21502,35 +21158,23 ; -21540,484 +21184,410 ; -22030,461 +21600,1891 ; -22570,9 +23570,9 ; -22776,8 +23776,8 ; -22809,7 +23809,7 ; -22865,8 +23865,8 ; -22920,8 +23920,8 ; -23028,9 +24028,9 ; -23216,7 +24216,7 ; -23407,7 +24407,7 ; -23670,9 +24670,9 ; -23966,7 +24966,7 ; -23981,11 +24981,11 ; -24181,7 +25181,7 ; -24196,11 +25196,11 ; -24450,7 +25450,8 ; -24515,7 +25516,7 ; -24579,9 +25580,9 ; -24731,7 +25732,7 ; -24746,11 +25747,11 ; -24986,7 +25987,7 ; -25025,7 +26026,7 ; -25051,7 +26052,7 ; -25061,7 +26062,7 ; -25296,7 +26297,7 ; -25335,7 +26336,7 ; -25361,7 +26362,7 ; -25371,7 +26372,7 ; -25596,7 +26597,7 ; -25635,7 +26636,7 ; -25661,7 +26662,7 ; -25671,7 +26672,7 ; -25961,7 +26962,7 ; -25979,8 +26980,8 ;","static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;static doublereal c_b2210 = .5;doublereal zlange_(char *norm, integer *m, integer *n, doublecomplex *a;doublereal zlange_(char *norm, integer *m, integer *n, doublecomplex *a;doublereal zlanhe_(char *norm, char *uplo, integer *n, doublecomplex *a;doublereal zlanhe_(char *norm, char *uplo, integer *n, doublecomplex *a;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;doublereal zlanhs_(char *norm, integer *n, doublecomplex *a, integer *lda;"
2954,76,4f2a508, ovillellas <oscar.villellas@continuum.io>," Wed, 31 Oct 2012 13:02:22 +0100",ct: [PATCH 25/76] poinv and chosolve working. Rebuilt lapack_lite to support them. Used also a patched f2c to remove warnings.,4,8056,4063,numpy/core/src/umath/umath_linalg.c.src,[u'88'],1,1," -661,7 +661,7 ; -676,9 +676,9 ; -701,9 +701,9 ; -713,6 +713,45 ; -2930,6 +2969,7 ; -2982,6 +3022,10 ; -3082,12 +3126,13 ; -3115,7 +3160,7 ; -3123,10 +3168,14 ; -3142,22 +3191,23 ;","update_pointers(uint8_t** bases, ptrdiff_t* offsets, size_t count;linearize_@TYPE@_matrix(void *dst_in, void *src_in,const LINEARIZE_DATA_t* data;delinearize_@TYPE@_matrix(void *dst_in, void *src_in,const LINEARIZE_DATA_t* da;delinearize_@TYPE@_matrix(void *dst_in, void *src_in,const LINEARIZE_DATA_t* da;typedef struct potrs_params_struct ;static inline in;typedef struct potri_params_struct ;init_@lapack_func@(POTRI_PARAMS_t *params;release_@lapack_func@(POTRI_PARAMS_t *params;static inline voi;"
2954,76,b7d0f7b, ovillellas <oscar.villellas@continuum.io>," Wed, 31 Oct 2012 13:32:56 +0100",ct: [PATCH 26/76] updated umath_linalg_content.txt,1,27,25,numpy/core/src/umath/umath_linalg_content.txt,[u'52'],14,13," -71,6 +71,24 ; -106,30 +124,14 ;",The following functions are already implemented;if compute_uv;
2954,76,6100e8a, ovillellas <oscar.villellas@continuum.io>," Fri, 2 Nov 2012 15:25:37 +0100",ct: [PATCH 27/76] wrote a wrapper module for umath_linalg. Named gufuncs_linalg (in python).,3,139,0,numpy/core/setup.py,[u'1'],1,0," -936,6 +936,7 ;","def get_lapack_lite_sources(ext, build_dir);"
2954,76,6100e8a, ovillellas <oscar.villellas@continuum.io>," Fri, 2 Nov 2012 15:25:37 +0100",ct: [PATCH 27/76] wrote a wrapper module for umath_linalg. Named gufuncs_linalg (in python).,3,139,0,numpy/core/src/umath/gufuncs_linalg.py,[u'100'],32,0," -0,0 +1,100 ;",;
2954,76,6100e8a, ovillellas <oscar.villellas@continuum.io>," Fri, 2 Nov 2012 15:25:37 +0100",ct: [PATCH 27/76] wrote a wrapper module for umath_linalg. Named gufuncs_linalg (in python).,3,139,0,numpy/core/src/umath/umath_linalg.c.src,[u'39'],12,1," -3231,6 +3231,26 ; -3300,7 +3320,8 ; -3706,6 +3727,22 ;",static voi;GUFUNC_FUNC_ARRAY_REAL_COMPLEX(chosolve1_up);GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;
2954,76,fdeafbd, ovillellas <oscar.villellas@continuum.io>," Fri, 9 Nov 2012 15:19:15 +0100",ct: [PATCH 28/76] first iteration with tests. Incomplete and some failing. Just a start. Some bugs already fixed.,3,248,15,numpy/core/src/umath/gufuncs_linalg.py,[u'18'],1,2," -48,7 +48,7 ; -57,6 +57,8 ; -77,24 +79,24 ;","def solve(A,B,**kw_args);def solve(A,B,**kw_args);def svd(a, full_matrices=1, compute_uv=1 ,**kw_args);"
2954,76,fdeafbd, ovillellas <oscar.villellas@continuum.io>," Fri, 9 Nov 2012 15:19:15 +0100",ct: [PATCH 28/76] first iteration with tests. Incomplete and some failing. Just a start. Some bugs already fixed.,3,248,15,numpy/core/src/umath/umath_linalg.c.src,[u'15'],2,1," -867,7 +867,6 ; -2151,6 +2150,7 ; -2247,7 +2247,6 ; -2261,7 +2260,6 ; -2400,7 +2398,7 ; -2442,6 +2440,7 ; -2508,7 +2507,7 ; -2549,6 +2548,7 ; -2605,6 +2605,7 ; -3427,7 +3428,7 ; -3436,7 +3437,7 ;","static voi;init_@lapack_func@(GEEV_PARAMS_t* params, char jobvl, char jobvr, fortran_int n;static inline voi;static inline voi;init_@lapack_func@(GESDD_PARAMS_t *params, char jobz, fortran_int m, fortran_in;init_@lapack_func@(GESDD_PARAMS_t *params, char jobz, fortran_int m, fortran_in;init_@lapack_func@(GESDD_PARAMS_t *params, char jobz, fortran_int m, fortran_in;init_@lapack_func@(GESDD_PARAMS_t *params, char jobz, fortran_int m, fortran_in;static inline voi;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;"
2954,76,fdeafbd, ovillellas <oscar.villellas@continuum.io>," Fri, 9 Nov 2012 15:19:15 +0100",ct: [PATCH 28/76] first iteration with tests. Incomplete and some failing. Just a start. Some bugs already fixed.,3,248,15,numpy/core/tests/test_gufuncs_linalg.py,[u'230'],32,0," -0,0 +1,230 ;",;
2954,76,3bfb914, ovillellas <oscar.villellas@continuum.io>," Tue, 13 Nov 2012 16:41:08 +0100",ct: [PATCH 29/76] work on tests and related fixes. Getting things in shape to commit to de-shaw patch,3,300,124,numpy/core/src/umath/gufuncs_linalg.py,[u'20'],2,1," -4,9 +4,9 ; -19,6 +19,20 ;",;;
2954,76,3bfb914, ovillellas <oscar.villellas@continuum.io>," Tue, 13 Nov 2012 16:41:08 +0100",ct: [PATCH 29/76] work on tests and related fixes. Getting things in shape to commit to de-shaw patch,3,300,124,numpy/core/src/umath/umath_linalg.c.src,[u'113'],8,5," -18,6 +18,7 ; -237,27 +238,6 ; -374,19 +354,23 ; -660,8 +644,9 ; -715,6 +700,23 ; -982,11 +984,25 ; -1052,7 +1068,6 ; -1154,7 +1169,7 ; -2293,7 +2308,7 ; -2605,7 +2620,6 ; -3176,10 +3190,14 ; -3202,10 +3220,15 ; -3440,7 +3463,7 ;",";FNAME(zpotri)(char *uplo, int *n;typedef union ;update_pointers(uint8_t** bases, ptrdiff_t* offsets, size_t count;delinearize_@TYPE@_matrix(void *dst_in, void *src_in,const LINEARIZE_DATA_t* da;init_gemm_params(GEMM_PARAMS_t *params;static voi;static inline @typ;static voi;static inline voi;call_@potri@(POTRI_PARAMS_t *params;static inline voi;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;"
2954,76,3bfb914, ovillellas <oscar.villellas@continuum.io>," Tue, 13 Nov 2012 16:41:08 +0100",ct: [PATCH 29/76] work on tests and related fixes. Getting things in shape to commit to de-shaw patch,3,300,124,numpy/core/tests/test_gufuncs_linalg.py,[u'291'],23,9," -3,6 +3,13 ; -47,7 +54,7 ; -60,6 +67,7 ; -68,110 +76,226 ; -181,6 +305,9 ; -188,35 +315,47 ;",";;;def assert_almost_equal(a, b, **kw);def do(self, a, b);def do(self, a, b);"
2954,76,c4a2cff, ovillellas <oscar.villellas@continuum.io>," Tue, 13 Nov 2012 17:07:04 +0100","ct: [PATCH 30/76] removed some wrappers that weren't needed with the harness fix, just changed to assignment",1,2,16,numpy/core/src/umath/gufuncs_linalg.py,[u'18'],2,16," -5,8 +5,8 ; -19,20 +19,6 ;",;;
2954,76,23a6380, ovillellas <oscar.villellas@continuum.io>," Tue, 13 Nov 2012 17:25:16 +0100",ct: [PATCH 31/76] modified umath_linalg_content.txt to reflect changes.,1,25,0,numpy/core/src/umath/umath_linalg_content.txt,[u'25'],25,0," -1,3 +1,15 ; -8,6 +20,15 ; -101,6 +122,8 ; -124,6 +147,8 ;",";there are various problems to solve;name, so for eigh we have the functions eigh_lo and eigh_up (for 'L' and 'U');if compute_uv;"
2954,76,0735c95, ovillellas <oscar.villellas@continuum.io>," Mon, 21 Jan 2013 16:58:22 +0100",ct: [PATCH 32/76] updated the umath_linalg_content.txt adding a mention to the wrapper code.,1,37,38,numpy/core/src/umath/umath_linalg_content.txt,[u'75'],13,14," -1,33 +1,26 ; -122,8 +115,6 ; -147,16 +138,24 ;",";name, so for eigh we have the functions eigh_lo and eigh_up (for 'L' and 'U');if compute_uv;"
2954,76,6e0ea34, ovillellas <oscar.villellas@continuum.io>," Thu, 15 Nov 2012 13:16:17 +0100",ct: [PATCH 33/76] fixed bug in matrix_multiply when using cdoubles,3,121,129,numpy/core/src/umath/umath_linalg.c.src,[u'217'],14,12," -20,10 +20,35 ; -310,7 +335,7 ; -418,23 +443,23 ; -442,10 +467,10 ; -516,24 +541,24 ; -545,15 +570,15 ; -942,16 +967,16 ; -984,25 +1009,25 ; -1039,8 +1064,8 ; -1057,13 +1082,13 ; -1077,26 +1102,19 ; -1912,20 +1930,20 ; -2331,18 +2349,17 ; -2455,7 +2472,7 ; -2563,7 +2580,7 ;",";FNAME(zgemm)(char *transa, char *transb;init_linearize_data(LINEARIZE_DATA_t *lin_data;dump_ufunc_object(PyUFuncObject* ufunc;CDOUBLE_mul(DOUBLECOMPLEX_t op1, DOUBLECOMPLEX_t op2;dump_@TYPE@_matrix(const char* name, size_t rows, size_t columns, const @typ@* ;typedef struct gemm_params_struc;init_gemm_params(GEMM_PARAMS_t *params;release_gemm_params(GEMM_PARAMS_t * params;static voi;static voi;typedef struct geev_params_struct ;typedef struct gessd_params_struc;init_@lapack_func@(GESDD_PARAMS_t *params, char jobz, fortran_int m, fortran_in;init_@lapack_func@(GESDD_PARAMS_t *params, char jobz, fortran_int m, fortran_in;"
2954,76,6e0ea34, ovillellas <oscar.villellas@continuum.io>," Thu, 15 Nov 2012 13:16:17 +0100",ct: [PATCH 33/76] fixed bug in matrix_multiply when using cdoubles,3,121,129,numpy/core/src/umath/umath_linalg_content.txt,[u'2'],1,0," -140,6 +140,8 ;",if compute_uv;
2954,76,6e0ea34, ovillellas <oscar.villellas@continuum.io>," Thu, 15 Nov 2012 13:16:17 +0100",ct: [PATCH 33/76] fixed bug in matrix_multiply when using cdoubles,3,121,129,numpy/core/tests/test_gufuncs_linalg.py,[u'31'],1,3," -6,10 +6,11 ; -214,13 +215,6 ; -229,13 +223,6 ; -245,13 +232,6 ; -325,13 +305,6 ;",";def test_vector_cdouble(self);def do(self, a, b);def do(self, a, b);def do(self, a, b);"
2954,76,250786b, ovillellas <oscar.villellas@continuum.io>," Thu, 15 Nov 2012 18:08:37 +0100",ct: [PATCH 34/76] fixed the problem in eigvals (apparently),3,29,22,numpy/core/src/umath/umath_linalg.c.src,[u'38'],17,10," -2140,10 +2140,10 ; -2159,7 +2159,6 ; -2170,9 +2169,10 ; -2287,18 +2287,28 ; -2870,7 +2880,7 ;","init_@lapack_func@(GEEV_PARAMS_t* params, char jobvl, char jobvr, fortran_int n;init_@lapack_func@(GEEV_PARAMS_t* params, char jobvl, char jobvr, fortran_int n;init_@lapack_func@(GEEV_PARAMS_t* params, char jobvl, char jobvr, fortran_int n;static inline voi;static voi;"
2954,76,250786b, ovillellas <oscar.villellas@continuum.io>," Thu, 15 Nov 2012 18:08:37 +0100",ct: [PATCH 34/76] fixed the problem in eigvals (apparently),3,29,22,numpy/core/src/umath/umath_linalg_content.txt,[u'7'],2,3," -15,8 +15,8 ; -141,7 +141,8 ;",privatel;if compute_uv;
2954,76,250786b, ovillellas <oscar.villellas@continuum.io>," Thu, 15 Nov 2012 18:08:37 +0100",ct: [PATCH 34/76] fixed the problem in eigvals (apparently),3,29,22,numpy/core/tests/test_gufuncs_linalg.py,[u'6'],1,4," -6,8 +6,7 ; -285,9 +284,6 ;",";def do(self, a, b);"
2954,76,8565a63, ovillellas <oscar.villellas@continuum.io>," Fri, 16 Nov 2012 18:36:14 +0100",ct: [PATCH 35/76] work in progress: proper tests for eig.,2,6,5,numpy/core/src/umath/umath_linalg.c.src,[u'1'],1,0," -2302,6 +2302,7 ;",static inline voi;
2954,76,8565a63, ovillellas <oscar.villellas@continuum.io>," Fri, 16 Nov 2012 18:36:14 +0100",ct: [PATCH 35/76] work in progress: proper tests for eig.,2,6,5,numpy/core/tests/test_gufuncs_linalg.py,[u'10'],5,5," -70,9 +70,9 ; -245,9 +245,9 ;",";def do(self, a, b);"
2954,76,f9372ab, ovillellas <oscar.villellas@continuum.io>," Mon, 19 Nov 2012 15:39:29 +0100","ct: [PATCH 36/76] added tests for ufuncs in gufuncs_linalg (the ones based on pdl). Added multiply4 in the wrapper, as it was missing",2,83,0,numpy/core/src/umath/gufuncs_linalg.py,[u'1'],1,0," -15,6 +15,7 ;",;
2954,76,f9372ab, ovillellas <oscar.villellas@continuum.io>," Mon, 19 Nov 2012 15:39:29 +0100","ct: [PATCH 36/76] added tests for ufuncs in gufuncs_linalg (the ones based on pdl). Added multiply4 in the wrapper, as it was missing",2,83,0,numpy/core/tests/test_gufuncs_linalg.py,[u'82'],33,0," -334,5 +334,87 ;","def do(self, a, b);"
2954,76,d8ed21d, ovillellas <oscar.villellas@continuum.io>," Tue, 20 Nov 2012 17:59:50 +0100",ct: [PATCH 37/76] reverted matrix_dot in umath_gufuncs to matrix_multiply. added some type-tests on test_gufuncs_linalg.py,3,20,9,numpy/core/src/umath/gufuncs_linalg.py,[u'2'],1,1," -4,7 +4,7 ;",;
2954,76,d8ed21d, ovillellas <oscar.villellas@continuum.io>," Tue, 20 Nov 2012 17:59:50 +0100",ct: [PATCH 37/76] reverted matrix_dot in umath_gufuncs to matrix_multiply. added some type-tests on test_gufuncs_linalg.py,3,20,9,numpy/core/src/umath/umath_linalg.c.src,[u'2'],1,1," -3491,7 +3491,7 ;",GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;
2954,76,d8ed21d, ovillellas <oscar.villellas@continuum.io>," Tue, 20 Nov 2012 17:59:50 +0100",ct: [PATCH 37/76] reverted matrix_dot in umath_gufuncs to matrix_multiply. added some type-tests on test_gufuncs_linalg.py,3,20,9,numpy/core/tests/test_gufuncs_linalg.py,[u'25'],18,7," -40,13 +40,13 ; -258,11 +258,22 ;",;def test_zero(self);
2954,76,a5e5833, ovillellas <oscar.villellas@continuum.io>," Mon, 14 Jan 2013 16:30:07 +0100",ct: [PATCH 38/76] updated documentation,2,942,110,numpy/core/src/umath/gufuncs_linalg.py,[u'844'],31,1," -1,26 +1,830 ;",;
2954,76,a5e5833, ovillellas <oscar.villellas@continuum.io>," Mon, 14 Jan 2013 16:30:07 +0100",ct: [PATCH 38/76] updated documentation,2,942,110,numpy/core/src/umath/umath_linalg.c.src,[u'208'],4,4," -1833,7 +1833,7 ; -1847,7 +1847,7 ; -1876,15 +1876,14 ; -1899,6 +1898,20 ; -1948,6 +1961,7 ; -2205,7 +2219,9 ; -2214,6 +2230,8 ; -2264,7 +2282,7 ; -2302,7 +2320,6 ; -3352,7 +3369,8 ; -3589,13 +3607,23 ; -3668,133 +3696,133 ;","typedef struct potr_params_struc;init_@lapack_func@(POTR_PARAMS_t *params, fortran_int N;call_@lapack_func@(POTR_PARAMS_t *params;static voi;dump_geev_params(const char *name, GEEV_PARAMS_t* params;static inline fortran_in;call_@lapack_func@(GEEV_PARAMS_t* params;static inline voi;static inline voi;GUFUNC_FUNC_ARRAY_REAL_COMPLEX(eigvalshup);GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;"
2954,76,f2c81b4, ovillellas <oscar.villellas@continuum.io>," Mon, 21 Jan 2013 17:52:30 +0100",ct: [PATCH 39/76] compile fix on linux/mac,1,8,2,numpy/core/src/umath/ufunc_object.c,[u'10'],8,2," -71,6 +71,12 ; -2567,13 +2573,13 ;",";reduce_type_resolver(PyUFuncObject *ufunc, PyArrayObject *arr;"
2954,76,a4f540d, ovillellas <oscar.villellas@continuum.io>," Wed, 23 Jan 2013 17:12:21 +0100",ct: [PATCH 40/76] BLD: Windows build fixes + some tabs removed,1,964,735,numpy/core/src/umath/umath_linalg.c.src,[u'1699'],18,13," -65,271 +65,266 ; -344,6 +339,8 ; -353,7 +350,7 ; -376,27 +373,68 ; -407,10 +445,11 ; -428,10 +467,10 ; -455,7 +494,8 ; -566,7 +606,9 ; -590,59 +632,75 ; -651,8 +709,7 ; -667,14 +724,15 ; -683,15 +741,16 ; -699,7 +758,9 ; -708,12 +769,13 ; -732,22 +794,23 ; -756,27 +819,27 ; -792,7 +855,8 ; -837,6 +901,7 ; -844,15 +909,15 ; -866,8 +931,10 ; -890,9 +957,9 ; -906,14 +973,11 ; -922,7 +986,10 ; -987,7 +1054,7 ; -1002,7 +1069,7 ; -1015,14 +1082,14 ; -1060,7 +1127,6 ; -1069,12 +1135,12 ; -1084,7 +1150,7 ; -1099,7 +1165,7 ; -1108,7 +1174,7 ; -1127,7 +1193,6 ; -1168,8 +1233,8 ; -1196,7 +1261,7 ; -1229,14 +1294,14 ; -1246,17 +1311,17 ; -1265,30 +1330,33 ; -1296,21 +1364,23 ; -1318,23 +1388,28 ; -1342,7 +1417,9 ; -1359,6 +1436,7 ; -1367,7 +1445,7 ; -1377,7 +1455,6 ; -1392,23 +1469,23 ; -1438,7 +1515,7 ; -1455,7 +1532,7 ; -1463,8 +1540,8 ; -1477,27 +1554,29 ; -1510,9 +1589,9 ; -1530,7 +1609,7 ; -1547,7 +1626,7 ; -1556,14 +1635,14 ; -1583,7 +1662,11 ; -1596,7 +1679,10 ; -1617,12 +1703,16 ; -1630,29 +1720,42 ; -1661,12 +1764,12 ; -1674,27 +1777,28 ; -1809,7 +1913,7 ; -1828,15 +1932,16 ; -1869,7 +1974,7 ; -1921,7 +2026,7 ; -1944,19 +2049,46 ; -1970,9 +2102,9 ; -1987,7 +2119,7 ; -2001,9 +2133,9 ; -2029,7 +2161,7 ; -2046,7 +2178,7 ; -2068,7 +2200,10 ; -2078,7 +2213,9 ; -2099,7 +2236,10 ; -2141,6 +2281,8 ; -2149,11 +2291,14 ; -2174,8 +2319,8 ; -2188,7 +2333,7 ; -2202,10 +2347,10 ; -2219,10 +2364,8 ; -2230,8 +2373,6 ; -2244,7 +2385,6 ; -2261,7 +2401,11 ; -2277,12 +2421,13 ; -2293,7 +2438,7 ; -2303,7 +2448,7 ; -2313,12 +2458,18 ; -2327,7 +2478,7 ; -2335,15 +2486,19 ; -2375,22 +2530,49 ; -2419,6 +2601,7 ; -2426,11 +2609,14 ; -2464,8 +2650,8 ; -2513,7 +2699,7 ; -2534,28 +2720,36 ; -2564,7 +2758,7 ; -2573,8 +2767,8 ; -2633,6 +2827,7 ; -2647,9 +2842,11 ; -2662,7 +2859,10 ; -2686,7 +2886,7 ; -2703,7 +2903,7 ; -2711,33 +2911,34 ; -2745,7 +2946,7 ; -2754,145 +2955,145 ; -2904,8 +3105,8 ; -2913,31 +3114,32 ; -2946,9 +3148,9 ; -2959,62 +3161,64 ; -3035,13 +3239,13 ; -3083,13 +3287,13 ; -3100,10 +3304,10 ; -3115,13 +3319,13 ; -3136,36 +3340,36 ; -3173,7 +3377,7 ; -3190,12 +3394,12 ; -3232,26 +3436,26 ; -3265,15 +3469,15 ; -3282,18 +3486,18 ; -3324,7 +3528,7 ; -3350,7 +3554,8 ; -3404,7 +3609,7 ; -3433,14 +3638,14 ; -3493,7 +3698,7 ; -3502,7 +3707,8 ; -3511,7 +3717,7 ; -3520,8 +3726,9 ; -3530,7 +3737,7 ; -3539,8 +3746,10 ; -3549,8 +3758,10 ; -3559,8 +3770,10 ; -3569,8 +3782,10 ; -3579,8 +3794,9 ; -3589,8 +3805,9 ; -3599,8 +3816,9 ; -3609,8 +3827,8 ; -3619,8 +3837,8 ; -3678,7 +3896,8 ; -3697,8 +3916,10 ; -3723,7 +3944,8 ; -3739,7 +3961,8 ; -3763,7 +3986,8 ; -3771,7 +3995,8 ; -3782,7 +4007,7 ; -3795,7 +4020,8 ; -3803,7 +4029,8 ; -3830,10 +4057,11 ; -3848,7 +4076,7 ; -3888,6 +4116,7 ; -3907,7 +4136,7 ;","typedef struct { float r, i; } f2c_complex;typedef double            fortran_doublereal;typedef f2c_doublecomplex fortran_doublecomplex;typedef union ;static const DOUBLECOMPLEX_t z_nan       = { { NAN, NAN } };typedef struct linearize_data_struc;dump_ufunc_object(PyUFuncObject* ufunc;print_CDOUBLE(npy_cdouble z;dump_@TYPE@_matrix(const char* name, size_t rows, size_t columns, const @typ@* ;update_pointers(uint8_t** bases, ptrdiff_t* offsets, size_t count;update_pointers(uint8_t** bases, ptrdiff_t* offsets, size_t count;linearize_@TYPE@_matrix(void *dst_in, void *src_in,const LINEARIZE_DATA_t* data;linearize_@TYPE@_matrix(void *dst_in, void *src_in,const LINEARIZE_DATA_t* data;delinearize_@TYPE@_matrix(void *dst_in, void *src_in,const LINEARIZE_DATA_t* da;nan_@TYPE@_matrix(void *dst_in, const LINEARIZE_DATA_t* data;make_symmetric_@TYPE@_matrix(char UPLO;identity_@TYPE@_matrix(void *ptr, size_t n;triu_@TYPE@_matrix(void *ptr, size_t n;triu_@TYPE@_matrix(void *ptr, size_t n;static inline voi;static voi;static voi;static voi;init_gemm_params(GEMM_PARAMS_t *params;init_gemm_params(GEMM_PARAMS_t *params;init_gemm_params(GEMM_PARAMS_t *params;release_gemm_params(GEMM_PARAMS_t * params;release_gemm_params(GEMM_PARAMS_t * params;static voi;static voi;static voi;static voi;static inline @typ;static inline @typ;static inline @typ;static inline @typ;static inline voi;static voi;static voi;static voi;static voi;typedef struct eigh_params_struct ;typedef struct eigh_params_struct ;static inline in;init_@lapack_func@(EIGH_PARAMS_t* params, char JOBZ, char UPLO;call_@lapack_func@(EIGH_PARAMS_t *params;call_@lapack_func@(EIGH_PARAMS_t *params;call_@lapack_func@(EIGH_PARAMS_t *params;init_@lapack_func@(EIGH_PARAMS_t *params, char JOBZ, char UPLO;init_@lapack_func@(EIGH_PARAMS_t *params, char JOBZ, char UPLO;call_@lapack_func@(EIGH_PARAMS_t *params;call_@lapack_func@(EIGH_PARAMS_t *params;release_@lapack_func@(EIGH_PARAMS_t *params;static inline voi;static inline voi;static inline voi;static voi;typedef struct gesv_params_struc;static voi;typedef struct potr_params_struc;static inline fortran_in;static voi;static inline voi;dump_geev_params(const char *name, GEEV_PARAMS_t* params;init_@lapack_func@(GEEV_PARAMS_t *params, char jobvl, char jobvr, fortran_int n;init_@lapack_func@(GEEV_PARAMS_t *params, char jobvl, char jobvr, fortran_int n;init_@lapack_func@(GEEV_PARAMS_t *params, char jobvl, char jobvr, fortran_int n;static inline fortran_in;mk_@TYPE@_complex_array_from_real(@complextyp@ *c, const @typ@ *re, size_t n;mk_@TYPE@_complex_array(@complextyp@ *c, const @typ@ *re, const @typ@ *im, size;mk_@TYPE@_complex_array_conjugate_pair(@complextyp@ *c, const @typ@ *r, size_t ;process_@lapack_func@_results(GEEV_PARAMS_t *params;process_@lapack_func@_results(GEEV_PARAMS_t *params;init_@lapack_func@(GEEV_PARAMS_t* params, char jobvl, char jobvr, fortran_int n;init_@lapack_func@(GEEV_PARAMS_t* params, char jobvl, char jobvr, fortran_int n;init_@lapack_func@(GEEV_PARAMS_t* params, char jobvl, char jobvr, fortran_int n;static inline fortran_in;call_@lapack_func@(GEEV_PARAMS_t* params;process_@lapack_func@_results(GEEV_PARAMS_t *NPY_UNUSED(params);release_@lapack_func@(GEEV_PARAMS_t *params;static inline voi;static inline voi;static inline voi;static inline voi;static inline voi;static inline voi;typedef struct gessd_params_struc;compute_urows_vtcolumns(char jobz;compute_urows_vtcolumns(char jobz;init_@lapack_func@(GESDD_PARAMS_t *params, char jobz, fortran_int m, fortran_in;call_@lapack_func@(GESDD_PARAMS_t *params;call_@lapack_func@(GESDD_PARAMS_t *params;init_@lapack_func@(GESDD_PARAMS_t *params, char jobz, fortran_int m, fortran_in;init_@lapack_func@(GESDD_PARAMS_t *params, char jobz, fortran_int m, fortran_in;call_@lapack_func@(GESDD_PARAMS_t *params;release_@lapack_func@(GESDD_PARAMS_t* params;static inline voi;static inline voi;static inline voi;static inline voi;static voi;static voi;static voi;static inline @typ;static inline @typ;static voi;typedef struct potrs_params_struct ;call_@lapack_func@(POTRS_PARAMS_t *params;call_@lapack_func@(POTRS_PARAMS_t *params;static voi;static voi;static voi;typedef struct potri_params_struct ;call_@potri@(POTRI_PARAMS_t *params;static inline voi;static inline voi;static inline voi;static void *array_of_nulls[] = ;static char equal_3_types[] = ;static char slogdet_types[] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;static voi;addUfuncs(PyObject *dictionary) ;initumath_linalg(void;initumath_linalg(void;"
2954,76,6a09b5c, ovillellas <oscar.villellas@continuum.io>," Thu, 24 Jan 2013 17:59:08 +0100",ct: [PATCH 41/76] STY: made sure that split strings had \ at the end,1,107,96,numpy/core/src/umath/umath_linalg.c.src,[u'203'],17,15," -31,7 +31,15 ; -247,9 +255,9 ; -330,8 +338,12 ; -340,7 +352,6 ; -507,8 +518,8 ; -808,10 +819,10 ; -1694,7 +1705,7 ; -2050,23 +2061,23 ; -2524,7 +2535,7 ; -2533,22 +2544,22 ; -3698,7 +3709,7 ; -3707,8 +3718,8 ; -3717,7 +3728,7 ; -3726,9 +3737,9 ; -3737,7 +3748,7 ; -3746,10 +3757,10 ; -3758,10 +3769,10 ; -3770,10 +3781,10 ; -3782,10 +3793,10 ; -3794,9 +3805,9 ; -3805,9 +3816,9 ; -3816,9 +3827,9 ; -3827,8 +3838,8 ; -3837,8 +3848,8 ; -3896,8 +3907,8 ; -3916,10 +3927,10 ; -3944,7 +3955,7 ; -3961,8 +3972,8 ; -3983,10 +3994,10 ; -3995,7 +4006,7 ; -4020,7 +4031,7 ; -4029,7 +4040,7 ;","const char* umath_linalg_version_string = ""0.1.2"";FNAME(zpotrs)(char *uplo, int *n, int *nrhs;FNAME(zgemm)(char *transa, char *transb;typedef f2c_complex       fortran_complex;dump_ufunc_object(PyUFuncObject* ufunc;make_symmetric_@TYPE@_matrix(char UPLO;static inline voi;dump_geev_params(const char *name, GEEV_PARAMS_t* params;typedef struct gessd_params_struc;static inline voi;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;"
2954,76,e7b6a2b, ovillellas <oscar.villellas@continuum.io>," Mon, 28 Jan 2013 13:21:52 +0100","ct: [PATCH 42/76] updated api version, as one merge changed it.",2,3,0,numpy/core/code_generators/cversions.txt,[u'2'],2,0," -13,3 +13,5 ;",;
2954,76,e7b6a2b, ovillellas <oscar.villellas@continuum.io>," Mon, 28 Jan 2013 13:21:52 +0100","ct: [PATCH 42/76] updated api version, as one merge changed it.",2,3,0,numpy/core/setup_common.py,[u'2'],1,1," -29,7 +29,7 ;",;
2954,76,05d0146, ovillellas <oscar.villellas@continuum.io>," Mon, 28 Jan 2013 13:23:07 +0100",ct: [PATCH 43/76] fixed testdet test. It failed due to eigvails failing in single precision and notifying the failure as nans.,1,9,0,numpy/core/tests/test_gufuncs_linalg.py,[u'10'],9,1," -67,6 +67,12 ; -245,7 +251,9 ;",";def do(self, a, b);"
2954,76,32b0617, ovillellas <oscar.villellas@continuum.io>," Mon, 28 Jan 2013 19:44:58 +0100",ct: [PATCH 44/76] TST: fixed test for gufuncs_linalg Det,1,10,10,numpy/core/tests/test_gufuncs_linalg.py,[u'20'],10,10," -67,13 +67,6 ; -253,9 +246,16 ;",";def do(self, a, b);"
2954,76,22b163c, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 11:19:34 +0100",ct: [PATCH 45/76] ENH: cholesky handling of _potrf failures (set result to nan),1,12,4,numpy/core/src/umath/umath_linalg.c.src,[u'16'],12,4," -720,7 +720,7 ; -1349,6 +1349,9 ; -2005,10 +2008,15 ;","update_pointers(npy_uint8** bases, ptrdiff_t* offsets, size_t count;static inline voi;static voi;"
2954,76,6e1b48c, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 11:28:17 +0100","ct: [PATCH 46/76] ENH: eigh, eigvalsh set result to nan on LAPACK error (_ssyevd, _heevd)",1,19,9,numpy/core/src/umath/umath_linalg.c.src,[u'28'],19,9," -1714,17 +1714,27 ;",static inline voi;
2954,76,69f6464, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 11:48:13 +0100",ct: [PATCH 47/76] ENH: solve sets result to nan on LAPACK error (_gesv),1,14,4,numpy/core/src/umath/umath_linalg.c.src,[u'18'],14,4," -1879,10 +1879,15 ; -1905,10 +1910,15 ;",static voi;static voi;
2954,76,48c4ab4, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 11:51:50 +0100",ct: [PATCH 48/76] ENH: inv sets result to nan on LAPACK error (_gesv),1,7,2,numpy/core/src/umath/umath_linalg.c.src,[u'9'],7,2," -1940,10 +1940,15 ;",static voi;
2954,76,a5a1b83, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 12:02:43 +0100",ct: [PATCH 49/76] ENH: svd sets results to nan on LAPACK error (_gesdd),1,17,7,numpy/core/src/umath/umath_linalg.c.src,[u'24'],17,7," -2936,16 +2936,26 ;",static inline voi;
2954,76,40d3746, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 12:08:55 +0100","ct: [PATCH 50/76] ENH: chosolve sets result to nan on LAPACK error (_potrf, _potrs)",1,10,2,numpy/core/src/umath/umath_linalg.c.src,[u'12'],10,2," -3344,6 +3344,9 ; -3382,10 +3385,15 ;",call_@lapack_func@(POTRS_PARAMS_t *params;static voi;
2954,76,01186ca, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 13:04:08 +0100",ct: [PATCH 51/76] DOC: Added docstring for eigh,1,70,26,numpy/core/src/umath/gufuncs_linalg.py,[u'96'],25,9," -1,4 +1,4 ; -6,7 +6,7 ; -18,29 +18,6 ; -827,7 +804,48 ; -905,3 +923,29 ;",";;;def multiply4_add(a, b, c, d, e, **kwargs);def poinv(A, UPLO='L', **kw_args);"
2954,76,d7b2a58, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 13:20:07 +0100",ct: [PATCH 52/76] DOC: Added docstring to eigvalsh,1,37,2,numpy/core/src/umath/gufuncs_linalg.py,[u'39'],32,2," -804,7 +804,7 ; -857,7 +857,42 ;","def multiply4_add(a, b, c, d, e, **kwargs);def eigh(A, UPLO='L', **kw_args);"
2954,76,a6c51c6, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 14:59:13 +0100",ct: [PATCH 53/76] DOC: added docstring to solve,1,35,2,numpy/core/src/umath/gufuncs_linalg.py,[u'37'],32,2," -904,7 +904,40 ; -963,7 +996,7 ;","def eigvalsh(A, UPLO='L', **kw_args);def poinv(A, UPLO='L', **kw_args);"
2954,76,89083d4, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 16:08:33 +0100",ct: [PATCH 54/76] DOC: added docstring for svd,1,91,41,numpy/core/src/umath/gufuncs_linalg.py,[u'132'],23,10," -2,16 +2,23 ; -98,7 +105,7 ; -135,14 +142,14 ; -192,7 +199,7 ; -301,7 +308,7 ; -348,8 +355,8 ; -361,13 +368,13 ; -382,7 +389,7 ; -412,7 +419,7 ; -443,9 +450,9 ; -459,10 +466,10 ; -495,7 +502,7 ; -506,7 +513,7 ; -516,7 +523,7 ; -544,7 +551,7 ; -559,7 +566,7 ; -580,7 +587,7 ; -595,7 +602,7 ; -617,7 +624,7 ; -635,7 +642,7 ; -657,7 +664,7 ; -672,7 +679,7 ; -694,7 +701,7 ; -709,7 +716,7 ; -731,7 +738,7 ; -746,7 +753,7 ; -768,7 +775,7 ; -783,7 +790,7 ; -904,7 +911,7 ; -925,7 +932,7 ; -948,6 +955,49 ;",";def innerwt(a, b, c, **kwargs);def matrix_multiply(a,b,**kwargs);def slogdet(a, **kwargs);def cholesky(a, UPLO='L', **kwargs);def cholesky(a, UPLO='L', **kwargs);def eig(a, **kwargs);def eig(a, **kwargs);def eig(a, **kwargs);def eigvals(a, **kwargs);def eigvals(a, **kwargs);def eigvals(a, **kwargs);def quadratic_form(u,Q,v, **kwargs);def quadratic_form(u,Q,v, **kwargs);def quadratic_form(u,Q,v, **kwargs);def add3(a, b, c, **kwargs);def add3(a, b, c, **kwargs);def multiply3(a, b, c, **kwargs);def multiply3_add(a, b, c, d, **kwargs);def multiply3_add(a, b, c, d, **kwargs);def multiply3_add(a, b, c, d, **kwargs);def multiply_add(a, b, c, **kwargs);def multiply_add(a, b, c, **kwargs);def multiply_add2(a, b, c, d, **kwargs);def multiply_add2(a, b, c, d, **kwargs);def multiply4(a, b, c, d, **kwargs);def multiply4(a, b, c, d, **kwargs);def multiply4_add(a, b, c, d, e, **kwargs);def eigvalsh(A, UPLO='L', **kw_args);def solve(A,B,**kw_args);def solve(A,B,**kw_args);"
2954,76,e538255, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 16:20:51 +0100",ct: [PATCH 55/76] DOC: Added docstring to chosolve,1,47,0,numpy/core/src/umath/gufuncs_linalg.py,[u'47'],34,0," -285,6 +285,11 ; -1020,6 +1025,48 ;","def inv(a, **kwargs);def svd(a, full_matrices=1, compute_uv=1 ,**kw_args);"
2954,76,f008fdb, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 16:33:43 +0100",ct: [PATCH 56/76] DOC: added docstring for poinv,1,35,0,numpy/core/src/umath/gufuncs_linalg.py,[u'35'],34,0," -1082,6 +1082,41 ;","def chosolve(A, B, UPLO='L', **kw_args);"
2954,76,fa1c5f8, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 16:52:34 +0100",ct: [PATCH 57/76] DOC: Added notes on error handling.,1,35,0,numpy/core/src/umath/gufuncs_linalg.py,[u'36'],33,1," -13,6 +13,11 ; -283,7 +288,7 ; -328,6 +333,7 ; -336,6 +342,10 ; -404,6 +414,9 ; -481,6 +494,9 ; -846,6 +862,9 ; -893,6 +912,9 ; -939,6 +961,9 ; -996,6 +1021,9 ; -1055,6 +1083,9 ; -1106,6 +1137,9 ;",";def inv(a, **kwargs);def cholesky(a, UPLO='L', **kwargs);def cholesky(a, UPLO='L', **kwargs);def eig(a, **kwargs);def eigvals(a, **kwargs);def eigh(A, UPLO='L', **kw_args);def eigvalsh(A, UPLO='L', **kw_args);def solve(A,B,**kw_args);def svd(a, full_matrices=1, compute_uv=1 ,**kw_args);def chosolve(A, B, UPLO='L', **kw_args);def poinv(A, UPLO='L', **kw_args);"
2954,76,3a970dc, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 18:34:55 +0100",ct: [PATCH 58/76] MAINT: renamed umath_linalg module to _umath_linalg as it is internal.,3,12,11,numpy/core/setup.py,[u'13'],7,6," -933,17 +933,18 ;","def get_lapack_lite_sources(ext, build_dir);"
2954,76,3a970dc, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 18:34:55 +0100",ct: [PATCH 58/76] MAINT: renamed umath_linalg module to _umath_linalg as it is internal.,3,12,11,numpy/core/src/umath/gufuncs_linalg.py,[u'2'],1,1," -27,7 +27,7 ;",;
2954,76,3a970dc, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 18:34:55 +0100",ct: [PATCH 58/76] MAINT: renamed umath_linalg module to _umath_linalg as it is internal.,3,12,11,numpy/core/src/umath/umath_linalg.c.src,[u'8'],4,4," -370,7 +370,7 ; -4167,11 +4167,11 ; -4201,7 +4201,7 ;","offset_ptr(void* ptr, ptrdiff_t offset;static struct PyModuleDef moduledef = ;initumath_linalg(void;"
2954,76,6cf6586, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 18:44:43 +0100",ct: [PATCH 59/76] MAINT: renamed the file describing the gufuncs_linalg module,2,164,164,numpy/core/src/umath/gufuncs_linalg_contents.rst,[u'164'],23,0," -0,0 +1,164 ;",;
2954,76,6cf6586, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 18:44:43 +0100",ct: [PATCH 59/76] MAINT: renamed the file describing the gufuncs_linalg module,2,164,164,numpy/core/src/umath/umath_linalg_content.txt,[u'164'],0,23," -1,164 +0,0 ;",;
2954,76,b686a76, ovillellas <oscar.villellas@continuum.io>," Wed, 30 Jan 2013 19:39:50 +0100",ct: [PATCH 60/76] MAINT: Rewrote the gufuncs_linalg_contents as a rst file and updated it.,1,103,163,numpy/core/src/umath/gufuncs_linalg_contents.rst,[u'266'],9,14," -1,164 +1,104 ;",;
2954,76,2b334c6, ovillellas <oscar.villellas@continuum.io>," Fri, 8 Feb 2013 17:40:30 +0100",ct: [PATCH 61/76] STY: PEP8,1,32,27,numpy/core/src/umath/gufuncs_linalg.py,[u'59'],18,16," -30,6 +30,7 ; -65,6 +66,7 ; -103,6 +105,7 ; -146,8 +149,8 ; -191,6 +194,7 ; -260,6 +264,7 ; -303,6 +308,7 ; -359,6 +365,7 ; -452,6 +459,7 ; -520,6 +528,7 ; -566,9 +575,11 ; -602,9 +613,11 ; -638,9 +651,11 ; -679,9 +694,11 ; -716,9 +733,11 ; -753,9 +772,11 ; -790,9 +811,11 ; -827,9 +850,11 ; -877,6 +902,7 ; -927,6 +953,7 ; -975,6 +1002,7 ; -1030,6 +1058,7 ; -1097,6 +1126,7 ; -1150,6 +1180,7 ; -1157,29 +1188,3 ;",";def inner1d(a, b, **kwargs);def innerwt(a, b, c, **kwargs);def matrix_multiply(a,b,**kwargs);def det(a, **kwargs);def slogdet(a, **kwargs);def inv(a, **kwargs);def cholesky(a, UPLO='L', **kwargs);def eig(a, **kwargs);def eigvals(a, **kwargs);def quadratic_form(u,Q,v, **kwargs);def add3(a, b, c, **kwargs);def multiply3(a, b, c, **kwargs);def multiply3_add(a, b, c, d, **kwargs);def multiply_add(a, b, c, **kwargs);def multiply_add2(a, b, c, d, **kwargs);def multiply4(a, b, c, d, **kwargs);def multiply4_add(a, b, c, d, e, **kwargs);def eigh(A, UPLO='L', **kw_args);def eigvalsh(A, UPLO='L', **kw_args);def solve(A,B,**kw_args);def svd(a, full_matrices=1, compute_uv=1 ,**kw_args);def chosolve(A, B, UPLO='L', **kw_args);def poinv(A, UPLO='L', **kw_args);def poinv(A, UPLO='L', **kw_args);"
2954,76,7ad0b50, ovillellas <oscar.villellas@continuum.io>," Fri, 8 Feb 2013 17:41:34 +0100",ct: [PATCH 62/76] DOC: corrected documentation - arrays of functions -> arrays of matrices,1,0,0,numpy/core/src/umath/gufuncs_linalg.py,[u'2'],1,1," -13,7 +13,7 ;",;
2954,76,19240e0, ovillellas <oscar.villellas@continuum.io>," Fri, 8 Feb 2013 19:27:08 +0100",ct: [PATCH 63/76] ENH: Added np.seterr handling of errors,2,9,4,numpy/core/src/umath/gufuncs_linalg.py,[u'9'],5,4," -13,10 +13,11 ;",;
2954,76,19240e0, ovillellas <oscar.villellas@continuum.io>," Fri, 8 Feb 2013 19:27:08 +0100",ct: [PATCH 63/76] ENH: Added np.seterr handling of errors,2,9,4,numpy/core/src/umath/umath_linalg.c.src,[u'4'],4,0," -812,6 +812,10 ;","nan_@TYPE@_matrix(void *dst_in, const LINEARIZE_DATA_t* data;"
2954,76,38c2de2, ovillellas <oscar.villellas@continuum.io>," Mon, 11 Feb 2013 15:39:48 +0100",ct: [PATCH 64/76] BLD: python 3.x compile fix,1,4,4,numpy/core/src/umath/umath_linalg.c.src,[u'8'],4,4," -21,7 +21,7 ; -370,7 +370,7 ; -4158,7 +4158,7 ; -4186,7 +4186,7 ;",";offset_ptr(void* ptr, ptrdiff_t offset;static PyMethodDef UMath_LinAlgMethods[] = ;init_umath_linalg(void;"
2954,76,7d8396e, ovillellas <oscar.villellas@continuum.io>," Mon, 11 Feb 2013 16:19:19 +0100",ct: [PATCH 65/76] BLD: Python3 build problem fixed,1,0,0,numpy/core/src/umath/umath_linalg.c.src,[u'2'],1,1," -4161,7 +4161,7 ;",static struct PyModuleDef moduledef = ;
2954,76,1fc7a3a, ovillellas <oscar.villellas@continuum.io>," Tue, 12 Feb 2013 13:13:54 +0100",ct: [PATCH 66/76] DOC: Added doctests to docstring for fused operations,1,34,9,numpy/core/src/umath/gufuncs_linalg.py,[u'43'],27,7," -443,7 +443,7 ; -453,7 +453,7 ; -613,7 +613,9 ; -651,7 +653,10 ; -694,7 +699,10 ; -733,7 +741,10 ; -772,7 +783,10 ; -811,7 +825,10 ; -850,7 +867,10 ; -1189,3 +1209,8 ;","def eig(a, **kwargs);def eig(a, **kwargs);def add3(a, b, c, **kwargs);def multiply3(a, b, c, **kwargs);def multiply3_add(a, b, c, d, **kwargs);def multiply_add(a, b, c, **kwargs);def multiply_add2(a, b, c, d, **kwargs);def multiply4(a, b, c, d, **kwargs);def multiply4_add(a, b, c, d, e, **kwargs);def poinv(A, UPLO='L', **kw_args);"
2954,76,3e15fa8, ovillellas <oscar.villellas@continuum.io>," Thu, 14 Feb 2013 19:15:29 +0100",ct: [PATCH 67/76] DOC: added more doctests,1,90,6,numpy/core/src/umath/gufuncs_linalg.py,[u'96'],31,3," -914,6 +914,10 ; -922,7 +926,27 ; -965,6 +989,10 ; -973,7 +1001,16 ; -1022,7 +1059,18 ; -1078,7 +1126,26 ; -1146,7 +1213,19 ; -1200,7 +1279,12 ;","def eigh(A, UPLO='L', **kw_args);def eigh(A, UPLO='L', **kw_args);def eigvalsh(A, UPLO='L', **kw_args);def eigvalsh(A, UPLO='L', **kw_args);def solve(A,B,**kw_args);def svd(a, full_matrices=1, compute_uv=1 ,**kw_args);def chosolve(A, B, UPLO='L', **kw_args);def poinv(A, UPLO='L', **kw_args);"
2954,76,adcad92, ovillellas <oscar.villellas@continuum.io>," Wed, 20 Feb 2013 15:18:06 +0100",ct: [PATCH 68/76] DOC: changed doctests for eig and eigh to be more robust,1,36,33,numpy/core/src/umath/gufuncs_linalg.py,[u'69'],18,16," -427,35 +427,40 ; -926,26 +931,24 ;","def eig(a, **kwargs);def eigh(A, UPLO='L', **kw_args);"
2954,76,3fe3ea3, ovillellas <oscar.villellas@continuum.io>," Wed, 20 Feb 2013 15:54:57 +0100",ct: [PATCH 69/76] DOC: fixed doctest in poinv so that the example matrix is positive-definite.,1,9,9,numpy/core/src/umath/gufuncs_linalg.py,[u'18'],9,9," -1179,12 +1179,12 ; -1247,17 +1247,17 ; -1282,7 +1282,7 ;","def chosolve(A, B, UPLO='L', **kw_args);def chosolve(A, B, UPLO='L', **kw_args);def poinv(A, UPLO='L', **kw_args);"
2954,76,5efdd41, ovillellas <oscar.villellas@continuum.io>," Wed, 20 Feb 2013 19:00:59 +0100",ct: [PATCH 70/76] BUG: fixed a bug in eig for complex numbers. Eigenvector results are computed properly now.,1,2,2,numpy/core/src/umath/umath_linalg.c.src,[u'4'],2,2," -2349,8 +2349,8 ;",init_@lapack_func@(GEEV_PARAMS_t* params;
2954,76,41b51bd, ovillellas <oscar.villellas@continuum.io>," Fri, 1 Mar 2013 16:42:44 +0100",ct: [PATCH 71/76] FIX: problems with eig and eigvals. Enhanced tests.,2,167,128,numpy/core/src/umath/umath_linalg.c.src,[u'183'],15,17," -21,14 +21,13 ; -50,7 +49,7 ; -603,13 +602,13 ; -626,12 +625,13 ; -2308,6 +2308,7 ; -2338,6 +2339,7 ; -2356,8 +2358,9 ; -2421,10 +2424,10 ; -2461,6 +2464,7 ; -3570,27 +3574,6 ; -3618,14 +3601,34 ; -3645,8 +3648,8 ; -3661,8 +3664,6 ; -3717,21 +3718,19 ; -3767,7 +3766,7 ; -3777,7 +3776,7 ; -3786,7 +3785,7 ; -3797,7 +3796,7 ; -3806,7 +3805,7 ; -3818,7 +3817,7 ; -3830,7 +3829,7 ; -3842,7 +3841,7 ; -3854,7 +3853,7 ; -3865,7 +3864,7 ; -3876,7 +3875,7 ; -3887,7 +3886,7 ; -3897,7 +3896,7 ; -3907,7 +3906,7 ; -3915,7 +3914,7 ; -3923,7 +3922,7 ; -3931,7 +3930,7 ; -3939,7 +3938,7 ; -3947,7 +3946,7 ; -3955,7 +3954,7 ; -3965,8 +3964,8 ; -3975,8 +3974,8 ; -3988,7 +3987,7 ; -3996,7 +3995,7 ; -4004,7 +4003,7 ; -4013,7 +4012,7 ; -4021,7 +4020,7 ; -4030,7 +4029,7 ; -4038,7 +4037,7 ; -4046,7 +4045,7 ; -4055,7 +4054,7 ; -4064,7 +4063,7 ; -4072,7 +4071,7 ; -4080,7 +4079,7 ; -4089,7 +4088,7 ; -4098,25 +4097,9 ;",;dbg_stack_trace(;static inline voi;dump_@TYPE@_matrix(const char* name;mk_@lapack_func@_complex_eigenvectors(@complextyp@ *c;process_@lapack_func@_results(GEEV_PARAMS_t *params;init_@lapack_func@(GEEV_PARAMS_t* params;call_@lapack_func@(GEEV_PARAMS_t* params;static inline voi;static voi;static void *array_of_nulls[] = ;GUFUNC_FUNC_ARRAY_REAL_COMPLEX(cholesky_lo);GUFUNC_FUNC_ARRAY_REAL_COMPLEX(chosolve1_up);static char eigh_types[] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;
2954,76,41b51bd, ovillellas <oscar.villellas@continuum.io>," Fri, 1 Mar 2013 16:42:44 +0100",ct: [PATCH 71/76] FIX: problems with eig and eigvals. Enhanced tests.,2,167,128,numpy/core/tests/test_gufuncs_linalg.py,[u'112'],14,5," -4,11 +4,6 ; -75,6 +70,61 ; -128,6 +178,7 ; -211,6 +262,7 ; -219,6 +271,7 ; -244,15 +297,13 ; -286,42 +337,38 ; -340,6 +387,7 ; -405,35 +453,43 ;",";def assert_almost_equal(a, b, **kw);def complex_hermitian_matrices_vector(self);def test_vector_cdouble(self);def do(self, a, b);def do(self, a, b);def test_types(self);def do(self, a, b);def do(self, a);"
2954,76,b6f6d85, ovillellas <oscar.villellas@continuum.io>," Fri, 22 Mar 2013 11:06:39 +0100",ct: [PATCH 72/76] ENH: added complex version for inner1d. Also added dotc1d,2,187,65,numpy/core/src/umath/gufuncs_linalg.py,[u'89'],14,3," -1,7 +1,8 ; -10,22 +11,23 ; -34,7 +36,8 ; -46,16 +49,22 ; -72,9 +81,58 ; -90,11 +148,13 ; -1300,4 +1360,5 ;",";;;def inner1d(a, b, **kwargs);def inner1d(a, b, **kwargs);def innerwt(a, b, c, **kwargs);def poinv(A, UPLO='L', **kw_args);"
2954,76,b6f6d85, ovillellas <oscar.villellas@continuum.io>," Fri, 22 Mar 2013 11:06:39 +0100",ct: [PATCH 72/76] ENH: added complex version for inner1d. Also added dotc1d,2,187,65,numpy/core/src/umath/umath_linalg.c.src,[u'163'],22,10," -302,6 +302,14 ; -341,6 +349,9 ; -568,6 +579,7 ; -588,6 +600,38 ; -924,54 +968,20 ; -979,20 +989,60 ; -1012,9 +1062,10 ; -3631,8 +3682,9 ; -3765,11 +3817,20 ;","extern f2c_doublecomple;FNAME(zgemm)(char *transa, char *transb;DOUBLE_mul(double op1, double op2;CDOUBLE_mul(DOUBLECOMPLEX_t op1, DOUBLECOMPLEX_t op2;triu_@TYPE@_matrix(void *ptr, size_t n;static voi;static voi;static void *array_of_nulls[] = ;GUFUNC_DESCRIPTOR_t gufunc_descriptors [] = ;"
2954,76,0e23dbb, ovillellas <oscar.villellas@continuum.io>," Fri, 22 Mar 2013 17:46:51 +0100",ct: [PATCH 73/76] FIX: matrix_multiply now works when given a column matrix,2,82,39,numpy/core/src/umath/umath_linalg.c.src,[u'116'],21,11," -1112,63 +1112,101 ;","dump_gemm_params(const char* name, const GEMM_PARAMS_t* params;"
2954,76,0e23dbb, ovillellas <oscar.villellas@continuum.io>," Fri, 22 Mar 2013 17:46:51 +0100",ct: [PATCH 73/76] FIX: matrix_multiply now works when given a column matrix,2,82,39,numpy/core/tests/test_gufuncs_linalg.py,[u'5'],2,0," -271,6 +271,11 ;","def do(self, a, b);"
2954,76,d31d830, ovillellas <oscar.villellas@continuum.io>," Fri, 5 Apr 2013 12:19:03 +0200",ct: [PATCH 74/76] =?UTF-8?q?DOC:=20changed=20<NDIMS>=20to=20=E2=80=A6?= =?UTF-8?q?=20in=20shape=20descriptions=20in=20docstrings?=MIME-Version: 1.0Content-Type: text/plain; charset=UTF-8Content-Transfer-Encoding: 8bit,1,66,65,numpy/core/src/umath/gufuncs_linalg.py,[u'131'],17,16," -41,14 +41,14 ; -88,14 +88,14 ; -136,12 +136,12 ; -177,16 +177,15 ; -272,17 +271,17 ; -339,12 +338,12 ; -388,14 +387,15 ; -443,20 +443,20 ; -535,12 +535,12 ; -601,18 +601,18 ; -652,12 +652,12 ; -692,12 +692,12 ; -734,15 +734,15 ; -779,12 +779,12 ; -821,12 +821,12 ; -863,12 +863,12 ; -905,12 +905,12 ; -949,7 +949,7 ; -959,9 +959,9 ; -1027,7 +1027,7 ; -1037,7 +1037,7 ; -1093,15 +1093,15 ; -1154,7 +1154,7 ; -1166,12 +1166,12 ; -1243,9 +1243,9 ; -1254,8 +1254,9 ; -1316,12 +1317,12 ;","def inner1d(a, b, **kwargs);def dotc1d(a, b, **kwargs);def innerwt(a, b, c, **kwargs);def matrix_multiply(a,b,**kwargs);def slogdet(a, **kwargs);def inv(a, **kwargs);def cholesky(a, UPLO='L', **kwargs);def eig(a, **kwargs);def eigvals(a, **kwargs);def quadratic_form(u,Q,v, **kwargs);def add3(a, b, c, **kwargs);def multiply3(a, b, c, **kwargs);def multiply3_add(a, b, c, d, **kwargs);def multiply_add(a, b, c, **kwargs);def multiply_add2(a, b, c, d, **kwargs);def multiply4(a, b, c, d, **kwargs);def multiply4_add(a, b, c, d, e, **kwargs);def eigh(A, UPLO='L', **kw_args);def eigh(A, UPLO='L', **kw_args);def eigvalsh(A, UPLO='L', **kw_args);def eigvalsh(A, UPLO='L', **kw_args);def solve(A,B,**kw_args);def svd(a, full_matrices=1, compute_uv=1 ,**kw_args);def svd(a, full_matrices=1, compute_uv=1 ,**kw_args);def chosolve(A, B, UPLO='L', **kw_args);def chosolve(A, B, UPLO='L', **kw_args);def poinv(A, UPLO='L', **kw_args);"
2954,76,83556f6, ovillellas <oscar.villellas@continuum.io>," Fri, 5 Apr 2013 12:43:59 +0200",ct: [PATCH 75/76] MAINT: added from __future__ as suggested by charris,1,3,0,numpy/core/src/umath/gufuncs_linalg.py,[u'3'],3,0," -23,6 +23,9 ;",;
2954,76,a344d47, ovillellas <oscar.villellas@continuum.io>," Fri, 5 Apr 2013 13:05:35 +0200",ct: [PATCH 76/76] BLD: reverted api version back to 8,2,0,3,numpy/core/code_generators/cversions.txt,[u'2'],0,2," -13,5 +13,3 ;",;
2954,76,a344d47, ovillellas <oscar.villellas@continuum.io>," Fri, 5 Apr 2013 13:05:35 +0200",ct: [PATCH 76/76] BLD: reverted api version back to 8,2,0,3,numpy/core/setup_common.py,[u'2'],1,1," -29,7 +29,7 ;",;
2953,8,1613e09, Mark Wiebe <mwwiebe@gmail.com>," Thu, 18 Oct 2012 23:10:56 -0700",ct: [PATCH 1/8] BUG: Fix generalized ufunc so repeating labels in one input/output is ok,1,120,46,numpy/core/src/umath/ufunc_object.c,[u'166'],26,10," -1643,7 +1643,7 ; -1651,11 +1651,12 ; -1673,7 +1674,9 ; -1719,7 +1722,11 ; -1727,8 +1734,18 ; -1736,9 +1753,64 ; -1760,22 +1832,27 ; -1886,7 +1963,7 ; -1906,37 +1983,34 ;",PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;
2953,8,be911e8, Mark Wiebe <mwwiebe@gmail.com>," Thu, 18 Oct 2012 23:46:59 -0700",ct: [PATCH 2/8] BUG: Missed case of broadcasting onto core dimensions in gufunc,1,32,16,numpy/core/src/umath/ufunc_object.c,[u'48'],24,13," -1756,39 +1756,51 ; -1997,12 +2009,16 ;",PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;
2953,8,9a70cfd, Mark Wiebe <mwwiebe@gmail.com>," Wed, 24 Oct 2012 09:59:12 -0700",ct: [PATCH 3/8] BUG: Make sure the nditer doesn't complain when 0 broadcast dims,1,3,0,numpy/core/src/umath/ufunc_object.c,[u'4'],3,1," -1975,7 +1975,9 ;",PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;
2953,8,b5c7733, Mark Wiebe <mwwiebe@gmail.com>," Wed, 7 Nov 2012 11:41:29 -0800",ct: [PATCH 4/8] TST: Add test for gufunc scalar case,1,2,0,numpy/core/tests/test_ufunc.py,[u'2'],2,0," -314,6 +314,8 ;",def test_forced_sig(self);
2953,8,12be5b7, Mark Wiebe <mwwiebe@gmail.com>," Wed, 7 Nov 2012 12:42:16 -0800",ct: [PATCH 5/8] BUG: Fix bug in gufunc scalar case,1,13,2,numpy/core/src/umath/ufunc_object.c,[u'15'],13,2," -1970,14 +1970,25 ;",PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;
2953,8,fa9dbef, Mark Wiebe <mwwiebe@gmail.com>," Mon, 7 Jan 2013 11:17:18 -0800","ct: [PATCH 6/8] TST: Test for a generalized ufunc bug, for zero-sized inputs",1,7,0,numpy/core/tests/test_ufunc.py,[u'7'],7,0," -425,6 +425,13 ;",def test_innerwt(self);
2953,8,cac3de5, Mark Wiebe <mwwiebe@gmail.com>," Mon, 7 Jan 2013 15:20:04 -0800",ct: [PATCH 7/8] BUG: Fix for generalized ufunc zero-sized input case,1,33,2,numpy/core/src/umath/ufunc_object.c,[u'35'],33,2," -1985,7 +1985,8 ; -2074,8 +2075,8 ; -2094,6 +2095,36 ;",PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;PyUFunc_GeneralizedFunction(PyUFuncObject *ufunc;
2953,8,f2c81b4, ovillellas <oscar.villellas@continuum.io>," Mon, 21 Jan 2013 17:52:30 +0100",ct: [PATCH 8/8] compile fix on linux/mac,1,8,2,numpy/core/src/umath/ufunc_object.c,[u'10'],8,2," -71,6 +71,12 ; -2567,13 +2573,13 ;",";reduce_type_resolver(PyUFuncObject *ufunc, PyArrayObject *arr;"
2950,1,49bf204, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 24 Jan 2013 22:54:47 +0100","ct: [PATCH] BUG: Fix strides of trailing 1s when reshapingWhen adding ones to the shape for non contiguous arrays reshapes(i.e. either the first array is not contiguous or the the reshapeorder does not match it). The strides of trailing ones were notset. For example reshape of (6,) to (6,1,1). Previously this occuredrarely because of removed special handleing when only ones wereadded or removed.",2,37,3,numpy/core/src/multiarray/shape.c,[u'31'],28,3," -355,10 +355,14 ; -390,27 +394,31 ; -427,6 +435,7 ; -445,6 +454,22 ;","_attempt_nocopy_reshape(PyArrayObject *self, int newnd, npy_intp* newdims;_attempt_nocopy_reshape(PyArrayObject *self, int newnd, npy_intp* newdims;_attempt_nocopy_reshape(PyArrayObject *self, int newnd, npy_intp* newdims;_attempt_nocopy_reshape(PyArrayObject *self, int newnd, npy_intp* newdims;"
2950,1,49bf204, Sebastian Berg <sebastian@sipsolutions.net>," Thu, 24 Jan 2013 22:54:47 +0100","ct: [PATCH] BUG: Fix strides of trailing 1s when reshapingWhen adding ones to the shape for non contiguous arrays reshapes(i.e. either the first array is not contiguous or the the reshapeorder does not match it). The strides of trailing ones were notset. For example reshape of (6,) to (6,1,1). Previously this occuredrarely because of removed special handleing when only ones wereadded or removed.",2,37,3,numpy/core/tests/test_regression.py,[u'9'],9,0," -545,6 +545,15 ;","def test_reshape_zero_size(self, level=rlevel);"
2947,3,855b66f, Charles Harris <charlesr.harris@gmail.com>," Wed, 23 Jan 2013 20:04:05 -0700","ct: [PATCH 1/3] BUG: gh-2790, fix column scaling in polynomial package least squares.The columns should be scaled using their 2-norm, but in the complex casethat was being incorrectly computed as the square root of the sum of thesquared elements rather than as the square root of the  sum of their squaredreal and imaginary parts.",6,48,12,numpy/polynomial/chebyshev.py,[u'10'],8,2," -1742,8 +1742,14 ;","def chebfit(x, y, deg, rcond=None, full=False, w=None);"
2947,3,855b66f, Charles Harris <charlesr.harris@gmail.com>," Wed, 23 Jan 2013 20:04:05 -0700","ct: [PATCH 1/3] BUG: gh-2790, fix column scaling in polynomial package least squares.The columns should be scaled using their 2-norm, but in the complex casethat was being incorrectly computed as the square root of the sum of thesquared elements rather than as the square root of the  sum of their squaredreal and imaginary parts.",6,48,12,numpy/polynomial/hermite.py,[u'10'],8,2," -1519,8 +1519,14 ;","def hermfit(x, y, deg, rcond=None, full=False, w=None);"
2947,3,855b66f, Charles Harris <charlesr.harris@gmail.com>," Wed, 23 Jan 2013 20:04:05 -0700","ct: [PATCH 1/3] BUG: gh-2790, fix column scaling in polynomial package least squares.The columns should be scaled using their 2-norm, but in the complex casethat was being incorrectly computed as the square root of the sum of thesquared elements rather than as the square root of the  sum of their squaredreal and imaginary parts.",6,48,12,numpy/polynomial/hermite_e.py,[u'10'],8,2," -1515,8 +1515,14 ;","def hermefit(x, y, deg, rcond=None, full=False, w=None);"
2947,3,855b66f, Charles Harris <charlesr.harris@gmail.com>," Wed, 23 Jan 2013 20:04:05 -0700","ct: [PATCH 1/3] BUG: gh-2790, fix column scaling in polynomial package least squares.The columns should be scaled using their 2-norm, but in the complex casethat was being incorrectly computed as the square root of the sum of thesquared elements rather than as the square root of the  sum of their squaredreal and imaginary parts.",6,48,12,numpy/polynomial/laguerre.py,[u'10'],8,2," -1518,8 +1518,14 ;","def lagfit(x, y, deg, rcond=None, full=False, w=None);"
2947,3,855b66f, Charles Harris <charlesr.harris@gmail.com>," Wed, 23 Jan 2013 20:04:05 -0700","ct: [PATCH 1/3] BUG: gh-2790, fix column scaling in polynomial package least squares.The columns should be scaled using their 2-norm, but in the complex casethat was being incorrectly computed as the square root of the sum of thesquared elements rather than as the square root of the  sum of their squaredreal and imaginary parts.",6,48,12,numpy/polynomial/legendre.py,[u'10'],8,2," -1543,8 +1543,14 ;","def legfit(x, y, deg, rcond=None, full=False, w=None);"
2947,3,855b66f, Charles Harris <charlesr.harris@gmail.com>," Wed, 23 Jan 2013 20:04:05 -0700","ct: [PATCH 1/3] BUG: gh-2790, fix column scaling in polynomial package least squares.The columns should be scaled using their 2-norm, but in the complex casethat was being incorrectly computed as the square root of the sum of thesquared elements rather than as the square root of the  sum of their squaredreal and imaginary parts.",6,48,12,numpy/polynomial/polynomial.py,[u'10'],8,2," -1365,8 +1365,14 ;","def polyfit(x, y, deg, rcond=None, full=False, w=None);"
2947,3,ccbbfd5, Charles Harris <charlesr.harris@gmail.com>," Wed, 23 Jan 2013 20:07:49 -0700","ct: [PATCH 2/3] TST: Add Test for column scaling in the polynomial package fits.The test uses the complex set of sample points [1, 1j, -1, -1j] whosesquared sum is exactly zero. This would fail before the column scalingwas fixed.",6,25,0,numpy/polynomial/tests/test_chebyshev.py,[u'4'],4,0," -435,6 +435,10 ;",def f(x) ;
2947,3,ccbbfd5, Charles Harris <charlesr.harris@gmail.com>," Wed, 23 Jan 2013 20:07:49 -0700","ct: [PATCH 2/3] TST: Add Test for column scaling in the polynomial package fits.The test uses the complex set of sample points [1, 1j, -1, -1j] whosesquared sum is exactly zero. This would fail before the column scalingwas fixed.",6,25,0,numpy/polynomial/tests/test_hermite.py,[u'4'],4,0," -425,6 +425,10 ;",def f(x) ;
2947,3,ccbbfd5, Charles Harris <charlesr.harris@gmail.com>," Wed, 23 Jan 2013 20:07:49 -0700","ct: [PATCH 2/3] TST: Add Test for column scaling in the polynomial package fits.The test uses the complex set of sample points [1, 1j, -1, -1j] whosesquared sum is exactly zero. This would fail before the column scalingwas fixed.",6,25,0,numpy/polynomial/tests/test_hermite_e.py,[u'4'],4,0," -422,6 +422,10 ;",def f(x) ;
2947,3,ccbbfd5, Charles Harris <charlesr.harris@gmail.com>," Wed, 23 Jan 2013 20:07:49 -0700","ct: [PATCH 2/3] TST: Add Test for column scaling in the polynomial package fits.The test uses the complex set of sample points [1, 1j, -1, -1j] whosesquared sum is exactly zero. This would fail before the column scalingwas fixed.",6,25,0,numpy/polynomial/tests/test_laguerre.py,[u'4'],4,0," -420,6 +420,10 ;",def f(x) ;
2947,3,ccbbfd5, Charles Harris <charlesr.harris@gmail.com>," Wed, 23 Jan 2013 20:07:49 -0700","ct: [PATCH 2/3] TST: Add Test for column scaling in the polynomial package fits.The test uses the complex set of sample points [1, 1j, -1, -1j] whosesquared sum is exactly zero. This would fail before the column scalingwas fixed.",6,25,0,numpy/polynomial/tests/test_legendre.py,[u'4'],4,0," -423,6 +423,10 ;",def f(x) ;
2947,3,ccbbfd5, Charles Harris <charlesr.harris@gmail.com>," Wed, 23 Jan 2013 20:07:49 -0700","ct: [PATCH 2/3] TST: Add Test for column scaling in the polynomial package fits.The test uses the complex set of sample points [1, 1j, -1, -1j] whosesquared sum is exactly zero. This would fail before the column scalingwas fixed.",6,25,0,numpy/polynomial/tests/test_polynomial.py,[u'5'],5,0," -440,6 +440,11 ;",def f(x) ;
2947,3,7c1435c, Charles Harris <charlesr.harris@gmail.com>," Thu, 24 Jan 2013 09:13:40 -0700","ct: [PATCH 3/3] MAINT: Use a better method to detect complex arrays.Instead of    if lhs.dtype.char in np.typecodes['Complex']:use    if issubclass(lhs.dtype.type, np.complexfloating):",6,6,6,numpy/polynomial/chebyshev.py,[u'2'],1,1," -1743,7 +1743,7 ;","def chebfit(x, y, deg, rcond=None, full=False, w=None);"
2947,3,7c1435c, Charles Harris <charlesr.harris@gmail.com>," Thu, 24 Jan 2013 09:13:40 -0700","ct: [PATCH 3/3] MAINT: Use a better method to detect complex arrays.Instead of    if lhs.dtype.char in np.typecodes['Complex']:use    if issubclass(lhs.dtype.type, np.complexfloating):",6,6,6,numpy/polynomial/hermite.py,[u'2'],1,1," -1520,7 +1520,7 ;","def hermfit(x, y, deg, rcond=None, full=False, w=None);"
2947,3,7c1435c, Charles Harris <charlesr.harris@gmail.com>," Thu, 24 Jan 2013 09:13:40 -0700","ct: [PATCH 3/3] MAINT: Use a better method to detect complex arrays.Instead of    if lhs.dtype.char in np.typecodes['Complex']:use    if issubclass(lhs.dtype.type, np.complexfloating):",6,6,6,numpy/polynomial/hermite_e.py,[u'2'],1,1," -1516,7 +1516,7 ;","def hermefit(x, y, deg, rcond=None, full=False, w=None);"
2947,3,7c1435c, Charles Harris <charlesr.harris@gmail.com>," Thu, 24 Jan 2013 09:13:40 -0700","ct: [PATCH 3/3] MAINT: Use a better method to detect complex arrays.Instead of    if lhs.dtype.char in np.typecodes['Complex']:use    if issubclass(lhs.dtype.type, np.complexfloating):",6,6,6,numpy/polynomial/laguerre.py,[u'2'],1,1," -1519,7 +1519,7 ;","def lagfit(x, y, deg, rcond=None, full=False, w=None);"
2947,3,7c1435c, Charles Harris <charlesr.harris@gmail.com>," Thu, 24 Jan 2013 09:13:40 -0700","ct: [PATCH 3/3] MAINT: Use a better method to detect complex arrays.Instead of    if lhs.dtype.char in np.typecodes['Complex']:use    if issubclass(lhs.dtype.type, np.complexfloating):",6,6,6,numpy/polynomial/legendre.py,[u'2'],1,1," -1544,7 +1544,7 ;","def legfit(x, y, deg, rcond=None, full=False, w=None);"
2947,3,7c1435c, Charles Harris <charlesr.harris@gmail.com>," Thu, 24 Jan 2013 09:13:40 -0700","ct: [PATCH 3/3] MAINT: Use a better method to detect complex arrays.Instead of    if lhs.dtype.char in np.typecodes['Complex']:use    if issubclass(lhs.dtype.type, np.complexfloating):",6,6,6,numpy/polynomial/polynomial.py,[u'2'],1,1," -1366,7 +1366,7 ;","def polyfit(x, y, deg, rcond=None, full=False, w=None);"
2945,2,6870ed3, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 23 Jan 2013 23:15:42 +0100","ct: [PATCH 1/2] BUG: preserve datatype in linspace corner-casesThe linspace corner cases always returned float, but the rest of thefunction did support complex or high precision floating point numbers.",2,9,3,numpy/core/function_base.py,[u'6'],4,2," -73,10 +73,12 ;","def linspace(start, stop, num=50, endpoint=True, retstep=False);"
2945,2,6870ed3, Sebastian Berg <sebastian@sipsolutions.net>," Wed, 23 Jan 2013 23:15:42 +0100","ct: [PATCH 1/2] BUG: preserve datatype in linspace corner-casesThe linspace corner cases always returned float, but the rest of thefunction did support complex or high precision floating point numbers.",2,9,3,numpy/core/tests/test_function_base.py,[u'6'],5,1," -1,6 +1,6 ; -27,6 +27,10 ;",;def test_corner(self);
2945,2,c012ea2, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 17 Feb 2013 13:29:36 +0100","ct: [PATCH 2/2] ENH: Add safe step argument to linspaceThis adds a step argument to linspace, however the step argument is onlyused to determine the integer number of steps. It must be possible to safelydetermine the number of steps (given floating point accuracy), otherwisean error raised. This means it cannot be used when start, stop or step areinaccurate due to previous calculations.This was requested in gh-630.",2,50,2,numpy/core/function_base.py,[u'44'],32,2," -3,7 +3,7 ; -30,6 +30,14 ; -54,6 +62,8 ; -71,7 +81,37 ;",";def linspace(start, stop, num=50, endpoint=True, retstep=False);def linspace(start, stop, num=50, endpoint=True, retstep=False);def linspace(start, stop, num=50, endpoint=True, retstep=False);"
2945,2,c012ea2, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 17 Feb 2013 13:29:36 +0100","ct: [PATCH 2/2] ENH: Add safe step argument to linspaceThis adds a step argument to linspace, however the step argument is onlyused to determine the integer number of steps. It must be possible to safelydetermine the number of steps (given floating point accuracy), otherwisean error raised. This means it cannot be used when start, stop or step areinaccurate due to previous calculations.This was requested in gh-630.",2,50,2,numpy/core/tests/test_function_base.py,[u'8'],7,0," -39,3 +39,11 ;",def test_type(self);
2943,1,af4b113, Ralf Gommers <ralf.gommers@googlemail.com>," Tue, 22 Jan 2013 22:16:37 +0100",ct: [PATCH] BUG: npy-pkg-config ini files were missing after Bento build.,1,24,0,numpy/core/bscript,[u'24'],24,0," -94,6 +94,19 ; -302,6 +315,8 ; -361,6 +376,7 ; -406,6 +422,14 ;",def write_numpy_config(conf);def post_configure(context);def process_multiarray_api_generator(self);from os.path import join as pjoi;
2942,3,cfae014, Bartosz Telenczuk <muchatel@poczta.fm>," Tue, 22 Jan 2013 13:45:37 +0100",ct: [PATCH 1/3] BUG: fix loading large npz files (fixes #2922),2,25,6,numpy/lib/npyio.py,[u'12'],7,5," -244,12 +244,14 ;","def __getitem__(self, key);"
2942,3,cfae014, Bartosz Telenczuk <muchatel@poczta.fm>," Tue, 22 Jan 2013 13:45:37 +0100",ct: [PATCH 1/3] BUG: fix loading large npz files (fixes #2922),2,25,6,numpy/lib/tests/test_io.py,[u'19'],18,1," -4,10 +4,10 ; -44,6 +44,9 ; -139,6 +142,20 ;",";def writelines(self, lines);def roundtrip(self, *args, **kwargs);"
2942,3,b69c48d, Alex Ford <fordas@uw.edu>," Wed, 30 Jan 2013 19:44:14 -0800",ct: [PATCH 2/3] Chunk reads in format.read_array.Maximum data size limitations in the crc32 module cause errors whenreading more than 2 ** 32 bytes from gzip streams. Work around thisissue when reading large arrays from npz files by chunking reads to256mb.This appears to resolve bug #2922.,1,14,3,numpy/lib/format.py,[u'17'],14,3," -457,9 +457,20 ;",def read_array(fp);
2942,3,7c4e9e1, Bartosz Telenczuk <muchatel@poczta.fm>," Thu, 31 Jan 2013 15:21:14 +0100",ct: [PATCH 3/3] adjust the optimal IO buffer size for npz files,4,24,15,doc/release/1.8.0-notes.rst,[u'10'],10,0," -80,6 +80,11 ; -136,6 +141,11 ;","fact, it never was true in some corner cases). Instead, us;A simple test runner script ``runtests.py`` was added. It also builds Numpy vi;"
2942,3,7c4e9e1, Bartosz Telenczuk <muchatel@poczta.fm>," Thu, 31 Jan 2013 15:21:14 +0100",ct: [PATCH 3/3] adjust the optimal IO buffer size for npz files,4,24,15,numpy/lib/format.py,[u'19'],11,8," -148,6 +148,7 ; -457,20 +458,22 ;",;def read_array(fp);
2942,3,7c4e9e1, Bartosz Telenczuk <muchatel@poczta.fm>," Thu, 31 Jan 2013 15:21:14 +0100",ct: [PATCH 3/3] adjust the optimal IO buffer size for npz files,4,24,15,numpy/lib/npyio.py,[u'2'],0,2," -25,8 +25,6 ;",;
2942,3,7c4e9e1, Bartosz Telenczuk <muchatel@poczta.fm>," Thu, 31 Jan 2013 15:21:14 +0100",ct: [PATCH 3/3] adjust the optimal IO buffer size for npz files,4,24,15,numpy/lib/tests/test_io.py,[u'8'],3,5," -43,9 +43,8 ; -142,11 +141,10 ;","def writelines(self, lines);def roundtrip(self, *args, **kwargs);"
2941,2,cc70e5a, Raul Cota <rcota@hotmail.com>," Tue, 22 Jan 2013 11:32:26 -0700","ct: [PATCH 1/2] Avoid conversion to NumPy ScalarAfter profiling I noticed that a bottleneck for NumPy scalar operationsoccurs when trying to extract the underlying C value from a Python floatbecause it first converts the Python scalar into its matching NumPyscalar (e.g. PyFloat -> float64) and then it extracts the C value fromthe NumPy scalar.For some types, it is a lot faster to just extract the value directlyfrom the Python scalar.I only did for PyFloat in this modified code but the code is laid outsuch that it can be easily extended to other types such as Integers. Idid not do them because I was unsure if there was a special scenario tohandle across OS and/or between 32 and 64 bit platforms. The ratio ofspeed to do different operations are listed below (Old time / New timewith modifications). In other words, the bigger the number, the biggerthe speed up we get.Tested in Python 2.6 WindowsRATIO  TEST1.1  Array * Array1.1  PyFloat * Array1.1  Float64 * Array1.0  PyFloat + Array1.3  Float64 + Array1.1  PyFloat * PyFloat1.0  Float64 * Float644.0  PyFloat * Float642.9  PyFloat * vector1[1]3.9  PyFloat + Float649.8  PyFloat < Float649.9  PyFloat < Float641.0  Create array from list1.0  Assign PyFloat to all1.0  Assign Float64 to all4.2  Float64 * pyFloat * pyFloat * pyFloat * pyFloat1.0  pyFloat * pyFloat * pyFloat * pyFloat * pyFloat1.0  Float64 * Float64 * Float64 * Float64 * Float641.0  Float64 ** 21.0  pyFloat ** 2",1,61,4,numpy/core/src/scalarmathmodule.c.src,[u'65'],32,3," -654,19 +654,19 ; -711,6 +711,63 ;","static voi;_@name@_convert_to_ctype(PyObject *a, @type@ *arg1;"
2941,2,dde7ea5, Raul Cota <rcota@hotmail.com>," Tue, 22 Jan 2013 15:10:16 -0700",ct: [PATCH 2/2] Fix indentation,1,4,4,numpy/core/src/scalarmathmodule.c.src,[u'8'],4,4," -727,10 +727,10 ;","_@name@_convert_to_ctype(PyObject *a, @type@ *arg1;"
2940,2,ce5506f," ""Travis E. Oliphant"" <teoliphant@gmail.com>"," Mon, 21 Jan 2013 20:40:59 -0600",ct: [PATCH 1/2] Fix-up logic for checking for zero-d arrays.,1,3,0,numpy/lib/index_tricks.py,[u'4'],3,1," -535,7 +535,9 ;",class ndindex(object);
2940,2,4c489f6," ""Travis E. Oliphant"" <teoliphant@gmail.com>"," Mon, 21 Jan 2013 20:50:15 -0600",ct: [PATCH 2/2] TST: Add a test for ndindex call.,1,4,0,numpy/lib/tests/test_index_tricks.py,[u'4'],4,0," -245,6 +245,10 ;",def test_ndindex();
2938,3,d92cc23, Raul Cota <rcota@hotmail.com>," Mon, 21 Jan 2013 16:18:02 -0700","ct: [PATCH 1/3] Avoid calls that result on Python exceptions.After profiling numpy I found out bottlenecks when doing calls thatresult in Python internally raising an errore.g.PyObject_GetAttrString(obj, ""__array_priority__"")when __array_priority__ is not an attribute of objThe changes are in general,- avoid calls to PyObject_GetAttrString when I know the type isList, None, Tuple, Float, Int, String or Unicode- avoid calls to PyObject_GetBuffer when I know the type isList, None or Tuple",4,244,184,numpy/core/include/numpy/arrayobject.h,[u'9'],2,0," -8,4 +8,13 ;",;
2938,3,d92cc23, Raul Cota <rcota@hotmail.com>," Mon, 21 Jan 2013 16:18:02 -0700","ct: [PATCH 1/3] Avoid calls that result on Python exceptions.After profiling numpy I found out bottlenecks when doing calls thatresult in Python internally raising an errore.g.PyObject_GetAttrString(obj, ""__array_priority__"")when __array_priority__ is not an attribute of objThe changes are in general,- avoid calls to PyObject_GetAttrString when I know the type isList, None, Tuple, Float, Int, String or Unicode- avoid calls to PyObject_GetBuffer when I know the type isList, None or Tuple",4,244,184,numpy/core/src/multiarray/common.c,[u'199'],13,12," -312,89 +312,101 ; -410,19 +422,24 ;","PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;"
2938,3,d92cc23, Raul Cota <rcota@hotmail.com>," Mon, 21 Jan 2013 16:18:02 -0700","ct: [PATCH 1/3] Avoid calls that result on Python exceptions.After profiling numpy I found out bottlenecks when doing calls thatresult in Python internally raising an errore.g.PyObject_GetAttrString(obj, ""__array_priority__"")when __array_priority__ is not an attribute of objThe changes are in general,- avoid calls to PyObject_GetAttrString when I know the type isList, None, Tuple, Float, Int, String or Unicode- avoid calls to PyObject_GetBuffer when I know the type isList, None or Tuple",4,244,184,numpy/core/src/multiarray/ctors.c,[u'208'],15,12," -630,89 +630,99 ; -1917,11 +1927,18 ; -1991,12 +2008,18 ; -2209,11 +2232,18 ;","discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;PyArray_FromStructInterface(PyObject *input;PyArray_FromInterface(PyObject *origin;PyArray_FromArrayAttr(PyObject *op, PyArray_Descr *typecode, PyObject *context;"
2938,3,d92cc23, Raul Cota <rcota@hotmail.com>," Mon, 21 Jan 2013 16:18:02 -0700","ct: [PATCH 1/3] Avoid calls that result on Python exceptions.After profiling numpy I found out bottlenecks when doing calls thatresult in Python internally raising an errore.g.PyObject_GetAttrString(obj, ""__array_priority__"")when __array_priority__ is not an attribute of objThe changes are in general,- avoid calls to PyObject_GetAttrString when I know the type isList, None, Tuple, Float, Int, String or Unicode- avoid calls to PyObject_GetBuffer when I know the type isList, None or Tuple",4,244,184,numpy/core/src/multiarray/multiarraymodule.c,[u'12'],1,1," -66,10 +66,14 ;","PyArray_GetPriority(PyObject *obj, double default_;"
2938,3,f319520, Raul Cota <rcota@hotmail.com>," Tue, 22 Jan 2013 13:29:33 -0700",ct: [PATCH 2/3] Fixed comments and indents,4,205,202,numpy/core/include/numpy/arrayobject.h,[u'15'],2,1," -8,13 +8,16 ;",;
2938,3,f319520, Raul Cota <rcota@hotmail.com>," Tue, 22 Jan 2013 13:29:33 -0700",ct: [PATCH 2/3] Fixed comments and indents,4,205,202,numpy/core/src/multiarray/common.c,[u'194'],13,14," -316,96 +316,96 ; -423,23 +423,23 ;","PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;"
2938,3,f319520, Raul Cota <rcota@hotmail.com>," Tue, 22 Jan 2013 13:29:33 -0700",ct: [PATCH 2/3] Fixed comments and indents,4,205,202,numpy/core/src/multiarray/ctors.c,[u'190'],13,13," -634,27 +634,27 ; -663,66 +663,66 ; -1932,11 +1932,11 ; -2013,11 +2013,11 ; -2237,11 +2237,11 ;","discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;discover_dimensions(PyObject *obj, int *maxndim, npy_intp *d, int check_it;PyArray_FromStructInterface(PyObject *input;PyArray_FromInterface(PyObject *origin;PyArray_FromArrayAttr(PyObject *op, PyArray_Descr *typecode, PyObject *context;"
2938,3,f319520, Raul Cota <rcota@hotmail.com>," Tue, 22 Jan 2013 13:29:33 -0700",ct: [PATCH 2/3] Fixed comments and indents,4,205,202,numpy/core/src/multiarray/multiarraymodule.c,[u'8'],1,1," -70,10 +70,10 ;","PyArray_GetPriority(PyObject *obj, double default_;"
2938,3,0a34401, Raul Cota <rcota@hotmail.com>," Tue, 22 Jan 2013 14:33:03 -0700",ct: [PATCH 3/3] Fix for Python 3Take into account that PyInt_CheckExact  does not exits in Python 3,2,21,0,_configtest.exe.manifest,[u'15'],15,0," -0,0 +1,15 ;",;
2938,3,0a34401, Raul Cota <rcota@hotmail.com>," Tue, 22 Jan 2013 14:33:03 -0700",ct: [PATCH 3/3] Fix for Python 3Take into account that PyInt_CheckExact  does not exits in Python 3,2,21,0,numpy/core/include/numpy/arrayobject.h,[u'7'],6,1," -1,6 +1,7 ; -13,8 +14,12 ;",;;
2937,4,56ec435, David Cournapeau <cournape@gmail.com>," Mon, 21 Jan 2013 19:33:11 +0000",ct: [PATCH 1/4] REF: make the separate compilation env handling a tad simpler.,2,2,10,numpy/core/bscript,[u'6'],1,5," -30,11 +30,7 ;",from setup_common ;
2937,4,56ec435, David Cournapeau <cournape@gmail.com>," Mon, 21 Jan 2013 19:33:11 +0000",ct: [PATCH 1/4] REF: make the separate compilation env handling a tad simpler.,2,2,10,numpy/core/setup.py,[u'6'],1,5," -12,11 +12,7 ;",;
2937,4,e8dcd4d, David Cournapeau <cournape@gmail.com>," Mon, 21 Jan 2013 19:37:50 +0000",ct: [PATCH 2/4] FEAT: use separate build by default.,3,4,4,.travis.yml,[u'4'],2,2," -9,9 +9,9 ;",python;
2937,4,e8dcd4d, David Cournapeau <cournape@gmail.com>," Mon, 21 Jan 2013 19:37:50 +0000",ct: [PATCH 2/4] FEAT: use separate build by default.,3,4,4,numpy/core/bscript,[u'2'],1,1," -30,7 +30,7 ;",from setup_common ;
2937,4,e8dcd4d, David Cournapeau <cournape@gmail.com>," Mon, 21 Jan 2013 19:37:50 +0000",ct: [PATCH 2/4] FEAT: use separate build by default.,3,4,4,numpy/core/setup.py,[u'2'],1,1," -12,7 +12,7 ;",;
2937,4,8a28fd0, David Cournapeau <cournape@gmail.com>," Mon, 21 Jan 2013 19:41:06 +0000",ct: [PATCH 3/4] DOC: mention the change of default for separate compilation.,1,4,0,doc/release/1.8.0-notes.rst,[u'4'],4,0," -29,6 +29,9 ; -42,6 +45,7 ;","pointer to the data was hashed as an integer.  Now, the hash function use;Change;"
2937,4,e0e3a87, David Cournapeau <cournape@gmail.com>," Mon, 21 Jan 2013 22:22:22 +0000",ct: [PATCH 4/4] DOC: tweak the release notes for separate compilation.,1,6,0,doc/release/1.8.0-notes.rst,[u'7'],6,1," -29,7 +29,12 ;","pointer to the data was hashed as an integer.  Now, the hash function use;"
2936,2,e5f4f82, Charles Harris <charlesr.harris@gmail.com>," Sun, 20 Jan 2013 13:06:55 -0700","ct: [PATCH 1/2] BUG: gh-2935, fix printing of scalar float -0.0.The issue was that the string value of scalar floating types equal to -0.0lacked a trailing "".0"".    >>> print np.float64(-0.0)    -0The problem resulted from using val < 0 to check for a leading negativesign. That expression evaluates false when val = -0.0, and the need toappend "".0"" was not detected.",1,0,0,numpy/core/src/multiarray/scalartypes.c.src,[u'2'],1,1," -468,7 +468,7 ;","format_@name@(char *buf, size_t buflen, @type@ val, unsigned int prec;"
2936,2,d55b5aa, Charles Harris <charlesr.harris@gmail.com>," Sun, 20 Jan 2013 13:16:51 -0700",ct: [PATCH 2/2] TST: Add test for printing of scalar values.,1,29,0,numpy/core/tests/test_scalarprint.py,[u'29'],29,0," -0,0 +1,29 ;",;
2933,1,51495ff, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 19 Jan 2013 23:33:16 +0100","ct: [PATCH] BUG: Fix segfault in np.result_type for None input.Makes behavior identical to np.dtype(None), which fits to howthe function works.",2,2,0,numpy/core/src/multiarray/multiarraymodule.c,[u'2'],1,1," -2875,7 +2875,7 ;","array_result_type(PyObject *NPY_UNUSED(dummy), PyObject *args;"
2933,1,51495ff, Sebastian Berg <sebastian@sipsolutions.net>," Sat, 19 Jan 2013 23:33:16 +0100","ct: [PATCH] BUG: Fix segfault in np.result_type for None input.Makes behavior identical to np.dtype(None), which fits to howthe function works.",2,2,0,numpy/core/tests/test_numeric.py,[u'1'],1,0," -465,6 +465,7 ;","def res_type(a, b);"
2932,2,d86c8bd, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 18 Jan 2013 23:27:42 +0100","ct: [PATCH 1/2] ENH: Make memmaps return arrays in ufuncs and fancy indexingThis makes memmeps return an array instead of a memmap instancefor fancy indexing or ufuncs, etc. that use __array_wrap__ and__array_prepare__. The type is preserved for subclasses however.Also copy is one example that still returns a memmap even if itdoes not point to the same memory.",2,37,0,numpy/core/memmap.py,[u'21'],21,0," -282,6 +282,27 ;","def __array_finalize__(self, obj);"
2932,2,d86c8bd, Sebastian Berg <sebastian@sipsolutions.net>," Fri, 18 Jan 2013 23:27:42 +0100","ct: [PATCH 1/2] ENH: Make memmaps return arrays in ufuncs and fancy indexingThis makes memmeps return an array instead of a memmap instancefor fancy indexing or ufuncs, etc. that use __array_wrap__ and__array_prepare__. The type is preserved for subclasses however.Also copy is one example that still returns a memmap even if itdoes not point to the same memory.",2,37,0,numpy/core/tests/test_memmap.py,[u'17'],16,1," -3,7 +3,7 ; -115,5 +115,20 ;",;def test_view(self);
2932,2,e33b664, Sebastian Berg <sebastian@sipsolutions.net>," Tue, 22 Jan 2013 16:39:13 +0100","ct: [PATCH 2/2] BUG: Tweak memmap __array_*__ calls to avoid possible regressionsNeed to call the underlying __array_*__ function to look exactlythe same to a class subclassing memmap. To make sure that multiplyinheritence would keep working exactly the same, need to do thetry/excepts. However __array_finalize__ does not really supportmultiple inheritences well in any case.",2,24,13,numpy/core/memmap.py,[u'30'],18,12," -283,24 +283,30 ;","def __array_finalize__(self, obj);"
2932,2,e33b664, Sebastian Berg <sebastian@sipsolutions.net>," Tue, 22 Jan 2013 16:39:13 +0100","ct: [PATCH 2/2] BUG: Tweak memmap __array_*__ calls to avoid possible regressionsNeed to call the underlying __array_*__ function to look exactlythe same to a class subclassing memmap. To make sure that multiplyinheritence would keep working exactly the same, need to do thetry/excepts. However __array_finalize__ does not really supportmultiple inheritences well in any case.",2,24,13,numpy/core/tests/test_memmap.py,[u'7'],6,1," -116,7 +116,11 ; -128,6 +132,7 ;",def test_view(self);class MMSubclass(memmap);
2931,6,dc887a5, Saulius Lukauskas <luksaulius@gmail.com>," Sun, 30 Dec 2012 23:02:45 +0200",ct: [PATCH 1/6] TST: Issue #2806 added test forfromfile/tofile with large arrays,2,24,0,numpy/core/tests/test_multiarray.py,[u'15'],15,0," -2407,6 +2407,21 ;",def test_roundtrip_file(self);
2931,6,dc887a5, Saulius Lukauskas <luksaulius@gmail.com>," Sun, 30 Dec 2012 23:02:45 +0200",ct: [PATCH 1/6] TST: Issue #2806 added test forfromfile/tofile with large arrays,2,24,0,numpy/lib/tests/test_io.py,[u'9'],9,0," -164,6 +164,15 ;",def test_record(self);
2931,6,2fd33d5, Saulius Lukauskas <luksaulius@gmail.com>," Mon, 31 Dec 2012 01:36:17 +0200",ct: [PATCH 2/6] FIX: fixing handling tofile/fromfile for large arrays Issue #2806,1,25,0,numpy/core/src/multiarray/ctors.c,[u'25'],25,0," -3171,7 +3171,32 ;","array_fromfile_binary(FILE *fp, PyArray_Descr *dtype, npy_intp num, size_t *nre;"
2931,6,70d5a7c, Saulius Lukauskas <luksaulius@gmail.com>," Sun, 10 Feb 2013 19:17:05 +0000",ct: [PATCH 3/6] implemented NumPyOS_fread that would standardise all fread calls as well as NumPyOS_fwrite to unify the fwrites.Also made multiarray/ctors.c and multiarray/convert.c to use these newfunctions.see discussion in issue #2806,3,57,54,numpy/core/include/numpy/npy_os.h,[u'49'],37,0," -1,3 +1,5 ; -28,3 +30,50 ;",;;
2931,6,70d5a7c, Saulius Lukauskas <luksaulius@gmail.com>," Sun, 10 Feb 2013 19:17:05 +0000",ct: [PATCH 3/6] implemented NumPyOS_fread that would standardise all fread calls as well as NumPyOS_fwrite to unify the fwrites.Also made multiarray/ctors.c and multiarray/convert.c to use these newfunctions.see discussion in issue #2806,3,57,54,numpy/core/src/multiarray/convert.c,[u'34'],5,20," -6,7 +6,7 ; -98,32 +98,10 ; -138,7 +116,7 ; -211,7 +189,7 ; -226,7 +204,7 ;",";PyArray_ToFile(PyArrayObject *self, FILE *fp, char *sep, char *format;PyArray_ToFile(PyArrayObject *self, FILE *fp, char *sep, char *format;PyArray_ToFile(PyArrayObject *self, FILE *fp, char *sep, char *format;PyArray_ToFile(PyArrayObject *self, FILE *fp, char *sep, char *format;"
2931,6,70d5a7c, Saulius Lukauskas <luksaulius@gmail.com>," Sun, 10 Feb 2013 19:17:05 +0000",ct: [PATCH 3/6] implemented NumPyOS_fread that would standardise all fread calls as well as NumPyOS_fwrite to unify the fwrites.Also made multiarray/ctors.c and multiarray/convert.c to use these newfunctions.see discussion in issue #2806,3,57,54,numpy/core/src/multiarray/ctors.c,[u'28'],2,19," -8,6 +8,7 ; -3171,32 +3172,7 ;",";array_fromfile_binary(FILE *fp, PyArray_Descr *dtype, npy_intp num, size_t *nre;"
2931,6,cdff800, Saulius Lukauskas <luksaulius@gmail.com>," Sun, 10 Feb 2013 21:50:10 +0000",ct: [PATCH 4/6] Unified fread/fwrite limits for NumPyOS_fread and NumPyOS_fwrite,1,10,2,numpy/core/include/numpy/npy_os.h,[u'12'],10,2," -31,10 +31,18 ; -58,7 +66,7 ;",";static NPY_INLINE size_t NumPyOS_fread( void * ptr, size_t size, size_t count, ;"
2931,6,927eb3c, Saulius Lukauskas <luksaulius@gmail.com>," Wed, 13 Feb 2013 22:39:13 +0000","ct: [PATCH 5/6] BLD: Moved NumPyOS_fread and NumPyOS_fwrite to numpyos.c rather than npy_os.h. This is where it was meant to go in the first place, I just misunderstood @pv.",5,66,58,numpy/core/include/numpy/npy_os.h,[u'55'],0,34," -30,58 +30,3 ;",;
2931,6,927eb3c, Saulius Lukauskas <luksaulius@gmail.com>," Wed, 13 Feb 2013 22:39:13 +0000","ct: [PATCH 5/6] BLD: Moved NumPyOS_fread and NumPyOS_fwrite to numpyos.c rather than npy_os.h. This is where it was meant to go in the first place, I just misunderstood @pv.",5,66,58,numpy/core/src/multiarray/convert.c,[u'2'],1,1," -6,12 +6,12 ;",;
2931,6,927eb3c, Saulius Lukauskas <luksaulius@gmail.com>," Wed, 13 Feb 2013 22:39:13 +0000","ct: [PATCH 5/6] BLD: Moved NumPyOS_fread and NumPyOS_fwrite to numpyos.c rather than npy_os.h. This is where it was meant to go in the first place, I just misunderstood @pv.",5,66,58,numpy/core/src/multiarray/ctors.c,[u'2'],1,1," -8,13 +8,13 ;",;
2931,6,927eb3c, Saulius Lukauskas <luksaulius@gmail.com>," Wed, 13 Feb 2013 22:39:13 +0000","ct: [PATCH 5/6] BLD: Moved NumPyOS_fread and NumPyOS_fwrite to numpyos.c rather than npy_os.h. This is where it was meant to go in the first place, I just misunderstood @pv.",5,66,58,numpy/core/src/multiarray/numpyos.c,[u'59'],36,1," -539,7 +539,6 ; -681,3 +680,61 ;","NumPyOS_ascii_strtod(const char *s, char** endptr;NumPyOS_ascii_ftolf(FILE *fp, double *value;"
2931,6,927eb3c, Saulius Lukauskas <luksaulius@gmail.com>," Wed, 13 Feb 2013 22:39:13 +0000","ct: [PATCH 5/6] BLD: Moved NumPyOS_fread and NumPyOS_fwrite to numpyos.c rather than npy_os.h. This is where it was meant to go in the first place, I just misunderstood @pv.",5,66,58,numpy/core/src/multiarray/numpyos.h,[u'6'],4,0," -25,4 +25,10 ;","NumPyOS_ascii_ftolf(FILE *fp, double *value);"
2931,6,258e4a9, Saulius Lukauskas <luksaulius@gmail.com>," Thu, 14 Feb 2013 23:28:48 +0000",ct: [PATCH 6/6] FIX: Fix incorrect calculation of bytes read/written in NumPyOS_fread/NumPyOs_fwrite as pointed out by @sebergAlso changed the comment style to be consistent with the rest of numpy.,1,8,8,numpy/core/src/multiarray/numpyos.c,[u'16'],8,8," -682,14 +682,14 ; -704,10 +704,10 ; -727,10 +727,10 ;","NumPyOS_ascii_ftolf(FILE *fp, double *value;NPY_NO_EXPORT size_t NumPyOS_fread( void * ptr, size_t size, size_t count, FIL;NPY_NO_EXPORT size_t NumPyOS_fwrite( const void * ptr, size_t size, size_t coun;"
2928,1,1539b71, Mark Wiebe <mwwiebe@gmail.com>," Thu, 17 Jan 2013 10:49:33 -0800",ct: [PATCH] BUG: Fix memory leak in ndarray construction from strings (gh-2927),1,5,0,numpy/core/src/multiarray/common.c,[u'6'],5,1," -485,9 +485,11 ; -500,17 +502,19 ;","PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;PyArray_DTypeFromObjectHelper(PyObject *obj, int maxdims;"
2924,2,dea4fab, =?UTF-8?q?Ond=C5=99ej=20=C4=8Cert=C3=ADk?= <ondrej.certik@gmail.com>," Wed, 16 Jan 2013 19:54:46 -0800",ct: [PATCH 1/2] Backport of #2897 (ndindex failing)This backports all relevant changes from:https://github.com/numpy/numpy/pull/2897I squashed them into just one commit.,3,17,5,numpy/core/src/multiarray/ctors.c,[u'5'],0,5," -2079,11 +2079,6 ;",PyArray_FromInterface(PyObject *origin;
2924,2,dea4fab, =?UTF-8?q?Ond=C5=99ej=20=C4=8Cert=C3=ADk?= <ondrej.certik@gmail.com>," Wed, 16 Jan 2013 19:54:46 -0800",ct: [PATCH 1/2] Backport of #2897 (ndindex failing)This backports all relevant changes from:https://github.com/numpy/numpy/pull/2897I squashed them into just one commit.,3,17,5,numpy/core/tests/test_multiarray.py,[u'7'],7,0," -2835,6 +2835,13 ;",def __array_interface__(self);
2924,2,dea4fab, =?UTF-8?q?Ond=C5=99ej=20=C4=8Cert=C3=ADk?= <ondrej.certik@gmail.com>," Wed, 16 Jan 2013 19:54:46 -0800",ct: [PATCH 1/2] Backport of #2897 (ndindex failing)This backports all relevant changes from:https://github.com/numpy/numpy/pull/2897I squashed them into just one commit.,3,17,5,numpy/lib/tests/test_index_tricks.py,[u'10'],10,0," -236,6 +236,16 ;",def test_diag_indices_from();
2924,2,0d053ba, =?UTF-8?q?Ond=C5=99ej=20=C4=8Cert=C3=ADk?= <ondrej.certik@gmail.com>," Wed, 16 Jan 2013 20:11:15 -0800","ct: [PATCH 2/2] Add a missing part of the testThis was already committed in master, but not in the 1.7 branch.",1,5,0,numpy/lib/tests/test_index_tricks.py,[u'5'],5,0," -236,6 +236,11 ;",def test_diag_indices_from();
2923,1,18bcac0, Martin Baeuml <baeuml@gmail.com>," Wed, 16 Jan 2013 21:57:50 +0100",ct: [PATCH] fix numpy.i for python 3PyFile_Check and PyInstance_Check have been removed from the C APIfor python 3.  This removes calls to those two functions fromnumpy.i for PY_MAJOR_VERSION >= 3 so that it builds with apython 3 Python.h.,1,3,0,doc/swig/numpy.i,[u'4'],3,1," -50,9 +50,11 ;",;
2920,2,02e3a81, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 13 Jan 2013 01:19:13 +0100","ct: [PATCH 1/2] BUG: Convert non-array rhs for boolean assignment with correct dtypeEnforcing the left hand side datatype for a non-array right hand sideargument in index assignments was the behavior before 1.7. and is thegeneral behaviour here. (note this means a non-array right hand sidechecks for NaN, etc. if the left hand side is integer, but an arrayright hand side does not)",2,21,3,numpy/core/src/multiarray/mapping.c,[u'14'],11,3," -1282,9 +1282,17 ;","array_ass_sub(PyArrayObject *self, PyObject *ind, PyObject *op;"
2920,2,02e3a81, Sebastian Berg <sebastian@sipsolutions.net>," Sun, 13 Jan 2013 01:19:13 +0100","ct: [PATCH 1/2] BUG: Convert non-array rhs for boolean assignment with correct dtypeEnforcing the left hand side datatype for a non-array right hand sideargument in index assignments was the behavior before 1.7. and is thegeneral behaviour here. (note this means a non-array right hand sidechecks for NaN, etc. if the left hand side is integer, but an arrayright hand side does not)",2,21,3,numpy/core/tests/test_regression.py,[u'10'],10,0," -288,6 +288,16 ;","def bfb(): x[:] = np.arange(3,dtype=float;"
2920,2,3087fd5, =?UTF-8?q?Ond=C5=99ej=20=C4=8Cert=C3=ADk?= <ondrej.certik@gmail.com>," Sun, 3 Feb 2013 21:49:12 -0800",ct: [PATCH 2/2] TST: Mark the test as knownfail for Python < 2.6,1,2,0,numpy/core/tests/test_regression.py,[u'2'],2,0," -288,6 +288,8 ;","def bfb(): x[:] = np.arange(3,dtype=float;"
2919,3,f1c9f79, Jaakko Luttinen <jaakko.luttinen@iki.fi>," Mon, 14 Jan 2013 11:47:30 +0200",ct: [PATCH 1/3] Use 2to3 in setup.py of numpydoc,1,7,0,doc/sphinxext/setup.py,[u'7'],7,0," -1,5 +1,11 ; -20,4 +26,5 ;",;;
2919,3,e9f81b6, Jaakko Luttinen <jaakko.luttinen@iki.fi>," Tue, 15 Jan 2013 16:01:26 +0200","ct: [PATCH 2/3] In numpydoc, make docscrape.py Python 3 compatible by using inspect.getfullargspec",1,10,0,doc/sphinxext/docscrape.py,[u'11'],10,1," -9,6 +9,14 ; -424,7 +432,8 ;",";def __init__(self, func, role='func', doc=None, config={});"
2919,3,5eb0df5, Jaakko Luttinen <jaakko.luttinen@iki.fi>," Tue, 15 Jan 2013 17:09:22 +0200","ct: [PATCH 3/3] In numpydoc, make unicode test in test_docscrape Python 3 compatible",1,8,2,doc/sphinxext/tests/test_docscrape.py,[u'10'],8,2," -165,7 +165,7 ; -556,7 +556,13 ;",def test_examples();def test_unicode();
